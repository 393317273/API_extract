{
    "0": {
        "Package": "java.applet",
        "Interface": "AppletContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAudioClip": {
                "Parameter": {
                    "url": "URL"
                },
                "Throw": []
            },
            "getImage": {
                "Parameter": {
                    "url": "URL"
                },
                "Throw": []
            },
            "getApplet": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            },
            "getApplets": {
                "Parameter": {},
                "Throw": []
            },
            "showDocument": {
                "Parameter": {
                    "url": "URL",
                    "target": "String"
                },
                "Throw": []
            },
            "showStatus": {
                "Parameter": {
                    "status": "String"
                },
                "Throw": []
            },
            "setStream": {
                "Parameter": {
                    "key": "String",
                    "stream": "InputStream"
                },
                "Throw": "java.io.IOException"
            },
            "getStream": {
                "Parameter": {
                    "key": "String"
                },
                "Throw": []
            },
            "getStreamKeys": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1": {
        "Package": "java.applet",
        "Interface": "AppletStub",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "isActive": {
                "Parameter": {},
                "Throw": []
            },
            "getDocumentBase": {
                "Parameter": {},
                "Throw": []
            },
            "getCodeBase": {
                "Parameter": {},
                "Throw": []
            },
            "getParameter": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            },
            "getAppletContext": {
                "Parameter": {},
                "Throw": []
            },
            "appletResize": {
                "Parameter": {
                    "width": "int",
                    "height": "int"
                },
                "Throw": []
            }
        }
    },
    "2": {
        "Package": "java.applet",
        "Interface": "AudioClip",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "play": {
                "Parameter": {},
                "Throw": []
            },
            "loop": {
                "Parameter": {},
                "Throw": []
            },
            "stop": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "3": {
        "Package": "java.awt",
        "Interface": "ActiveEvent",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.event.InvocationEvent"
        ],
        "Method": {
            "dispatch": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "4": {
        "Package": "java.awt",
        "Interface": "Adjustable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JScrollBar",
            "javax.swing.JScrollPane.ScrollBar",
            "java.awt.Scrollbar",
            "java.awt.ScrollPaneAdjustable"
        ],
        "Method": {
            "getOrientation": {
                "Parameter": {},
                "Throw": []
            },
            "setMinimum": {
                "Parameter": {
                    "min": "int"
                },
                "Throw": []
            },
            "getMinimum": {
                "Parameter": {},
                "Throw": []
            },
            "setMaximum": {
                "Parameter": {
                    "max": "int"
                },
                "Throw": []
            },
            "getMaximum": {
                "Parameter": {},
                "Throw": []
            },
            "setUnitIncrement": {
                "Parameter": {
                    "u": "int"
                },
                "Throw": []
            },
            "getUnitIncrement": {
                "Parameter": {},
                "Throw": []
            },
            "setBlockIncrement": {
                "Parameter": {
                    "b": "int"
                },
                "Throw": []
            },
            "getBlockIncrement": {
                "Parameter": {},
                "Throw": []
            },
            "setVisibleAmount": {
                "Parameter": {
                    "v": "int"
                },
                "Throw": []
            },
            "getVisibleAmount": {
                "Parameter": {},
                "Throw": []
            },
            "setValue": {
                "Parameter": {
                    "v": "int"
                },
                "Throw": []
            },
            "getValue": {
                "Parameter": {},
                "Throw": []
            },
            "addAdjustmentListener": {
                "Parameter": {
                    "l": "AdjustmentListener"
                },
                "Throw": []
            },
            "removeAdjustmentListener": {
                "Parameter": {
                    "l": "AdjustmentListener"
                },
                "Throw": []
            }
        }
    },
    "5": {
        "Package": "java.awt",
        "Interface": "Composite",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AlphaComposite"
        ],
        "Method": {
            "createContext": {
                "Parameter": {
                    "srcColorModel": "ColorModel",
                    "dstColorModel": "ColorModel",
                    "hints": "RenderingHints"
                },
                "Throw": []
            }
        }
    },
    "6": {
        "Package": "java.awt",
        "Interface": "CompositeContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "dispose": {
                "Parameter": {},
                "Throw": []
            },
            "compose": {
                "Parameter": {
                    "src": "Raster",
                    "dstIn": "Raster",
                    "dstOut": "WritableRaster"
                },
                "Throw": []
            }
        }
    },
    "7": {
        "Package": "java.awt",
        "Interface": "ItemSelectable",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.ButtonModel"
        ],
        "Subinterface": [
            "javax.swing.AbstractButton",
            "javax.swing.plaf.basic.BasicArrowButton",
            "java.awt.Checkbox",
            "java.awt.CheckboxMenuItem",
            "java.awt.Choice",
            "javax.swing.DefaultButtonModel",
            "javax.swing.JButton",
            "javax.swing.JCheckBox",
            "javax.swing.JCheckBoxMenuItem",
            "javax.swing.JComboBox",
            "javax.swing.JMenu",
            "javax.swing.JMenuItem",
            "javax.swing.JRadioButton",
            "javax.swing.JRadioButtonMenuItem",
            "javax.swing.JToggleButton",
            "javax.swing.JToggleButton.ToggleButtonModel",
            "java.awt.List",
            "javax.swing.plaf.metal.MetalComboBoxButton",
            "javax.swing.plaf.metal.MetalScrollButton"
        ],
        "Method": {
            "getSelectedObjects": {
                "Parameter": {},
                "Throw": []
            },
            "addItemListener": {
                "Parameter": {
                    "l": "ItemListener"
                },
                "Throw": []
            },
            "removeItemListener": {
                "Parameter": {
                    "l": "ItemListener"
                },
                "Throw": []
            }
        }
    },
    "8": {
        "Package": "java.awt",
        "Interface": "KeyEventDispatcher",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultFocusManager",
            "java.awt.DefaultKeyboardFocusManager",
            "javax.swing.FocusManager",
            "java.awt.KeyboardFocusManager"
        ],
        "Method": {
            "dispatchKeyEvent": {
                "Parameter": {
                    "e": "KeyEvent"
                },
                "Throw": []
            }
        }
    },
    "9": {
        "Package": "java.awt",
        "Interface": "KeyEventPostProcessor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultFocusManager",
            "java.awt.DefaultKeyboardFocusManager",
            "javax.swing.FocusManager",
            "java.awt.KeyboardFocusManager"
        ],
        "Method": {
            "postProcessKeyEvent": {
                "Parameter": {
                    "e": "KeyEvent"
                },
                "Throw": []
            }
        }
    },
    "10": {
        "Package": "java.awt",
        "Interface": "LayoutManager",
        "Superinterface": null,
        "Implementing Class": [
            "java.awt.LayoutManager2"
        ],
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboBoxUI.ComboBoxLayoutManager",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.TitlePaneLayout",
            "javax.swing.plaf.basic.BasicInternalFrameUI.InternalFrameLayout",
            "javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout",
            "javax.swing.plaf.basic.BasicScrollBarUI",
            "javax.swing.plaf.basic.BasicSplitPaneDivider.DividerLayout",
            "javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager",
            "javax.swing.plaf.basic.BasicSplitPaneUI.BasicVerticalLayoutManager",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout",
            "java.awt.BorderLayout",
            "javax.swing.BoxLayout",
            "java.awt.CardLayout",
            "javax.swing.plaf.basic.DefaultMenuLayout",
            "java.awt.FlowLayout",
            "java.awt.GridBagLayout",
            "java.awt.GridLayout",
            "javax.swing.GroupLayout",
            "javax.swing.JRootPane.RootLayout",
            "javax.swing.JSpinner.DateEditor",
            "javax.swing.JSpinner.DefaultEditor",
            "javax.swing.JSpinner.ListEditor",
            "javax.swing.JSpinner.NumberEditor",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalComboBoxLayoutManager",
            "javax.swing.plaf.metal.MetalScrollBarUI",
            "javax.swing.plaf.metal.MetalTabbedPaneUI.TabbedPaneLayout",
            "javax.swing.OverlayLayout",
            "javax.swing.ScrollPaneLayout",
            "javax.swing.ScrollPaneLayout.UIResource",
            "javax.swing.SpringLayout",
            "javax.swing.plaf.synth.SynthScrollBarUI",
            "javax.swing.ViewportLayout"
        ],
        "Method": {
            "addLayoutComponent": {
                "Parameter": {
                    "name": "String",
                    "comp": "Component"
                },
                "Throw": []
            },
            "removeLayoutComponent": {
                "Parameter": {
                    "comp": "Component"
                },
                "Throw": []
            },
            "preferredLayoutSize": {
                "Parameter": {
                    "parent": "Container"
                },
                "Throw": []
            },
            "minimumLayoutSize": {
                "Parameter": {
                    "parent": "Container"
                },
                "Throw": []
            },
            "layoutContainer": {
                "Parameter": {
                    "parent": "Container"
                },
                "Throw": []
            }
        }
    },
    "11": {
        "Package": "java.awt",
        "Interface": "LayoutManager2",
        "Superinterface": [
            "java.awt.LayoutManager"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager",
            "javax.swing.plaf.basic.BasicSplitPaneUI.BasicVerticalLayoutManager",
            "java.awt.BorderLayout",
            "javax.swing.BoxLayout",
            "java.awt.CardLayout",
            "javax.swing.plaf.basic.DefaultMenuLayout",
            "java.awt.GridBagLayout",
            "javax.swing.GroupLayout",
            "javax.swing.JRootPane.RootLayout",
            "javax.swing.OverlayLayout",
            "javax.swing.SpringLayout"
        ],
        "Method": {
            "addLayoutComponent": {
                "Parameter": {
                    "comp": "Component",
                    "constraints": "Object"
                },
                "Throw": []
            },
            "maximumLayoutSize": {
                "Parameter": {
                    "target": "Container"
                },
                "Throw": []
            },
            "getLayoutAlignmentX": {
                "Parameter": {
                    "target": "Container"
                },
                "Throw": []
            },
            "getLayoutAlignmentY": {
                "Parameter": {
                    "target": "Container"
                },
                "Throw": []
            },
            "invalidateLayout": {
                "Parameter": {
                    "target": "Container"
                },
                "Throw": []
            }
        }
    },
    "12": {
        "Package": "java.awt",
        "Interface": "MenuContainer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractButton",
            "javax.swing.colorchooser.AbstractColorChooserPanel",
            "java.applet.Applet",
            "javax.swing.plaf.basic.BasicArrowButton",
            "javax.swing.plaf.basic.BasicComboBoxRenderer",
            "javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource",
            "javax.swing.plaf.basic.BasicComboPopup",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.SystemMenuBar",
            "javax.swing.plaf.basic.BasicSplitPaneDivider",
            "javax.swing.plaf.basic.BasicToolBarUI.DragWindow",
            "javax.swing.Box",
            "javax.swing.Box.Filler",
            "java.awt.Button",
            "java.awt.Canvas",
            "javax.swing.CellRendererPane",
            "java.awt.Checkbox",
            "java.awt.Choice",
            "java.awt.Component",
            "java.awt.Container",
            "javax.swing.DefaultListCellRenderer",
            "javax.swing.DefaultListCellRenderer.UIResource",
            "javax.swing.table.DefaultTableCellRenderer",
            "javax.swing.table.DefaultTableCellRenderer.UIResource",
            "javax.swing.tree.DefaultTreeCellEditor.DefaultTextField",
            "javax.swing.tree.DefaultTreeCellEditor.EditorContainer",
            "javax.swing.tree.DefaultTreeCellRenderer",
            "java.awt.Dialog",
            "java.awt.FileDialog",
            "java.awt.Frame",
            "javax.swing.JApplet",
            "javax.swing.JButton",
            "javax.swing.JCheckBox",
            "javax.swing.JCheckBoxMenuItem",
            "javax.swing.JColorChooser",
            "javax.swing.JComboBox",
            "javax.swing.JComponent",
            "javax.swing.JDesktopPane",
            "javax.swing.JDialog",
            "javax.swing.JEditorPane",
            "javax.swing.JFileChooser",
            "javax.swing.JFormattedTextField",
            "javax.swing.JFrame",
            "javax.swing.JInternalFrame",
            "javax.swing.JInternalFrame.JDesktopIcon",
            "javax.swing.JLabel",
            "javax.swing.JLayer",
            "javax.swing.JLayeredPane",
            "javax.swing.JList",
            "javax.swing.JMenu",
            "javax.swing.JMenuBar",
            "javax.swing.JMenuItem",
            "javax.swing.JOptionPane",
            "javax.swing.JPanel",
            "javax.swing.JPasswordField",
            "javax.swing.JPopupMenu",
            "javax.swing.JPopupMenu.Separator",
            "javax.swing.JProgressBar",
            "javax.swing.JRadioButton",
            "javax.swing.JRadioButtonMenuItem",
            "javax.swing.JRootPane",
            "javax.swing.JScrollBar",
            "javax.swing.JScrollPane",
            "javax.swing.JScrollPane.ScrollBar",
            "javax.swing.JSeparator",
            "javax.swing.JSlider",
            "javax.swing.JSpinner",
            "javax.swing.JSpinner.DateEditor",
            "javax.swing.JSpinner.DefaultEditor",
            "javax.swing.JSpinner.ListEditor",
            "javax.swing.JSpinner.NumberEditor",
            "javax.swing.JSplitPane",
            "javax.swing.JTabbedPane",
            "javax.swing.JTable",
            "javax.swing.table.JTableHeader",
            "javax.swing.JTextArea",
            "javax.swing.text.JTextComponent",
            "javax.swing.JTextField",
            "javax.swing.JTextPane",
            "javax.swing.JToggleButton",
            "javax.swing.JToolBar",
            "javax.swing.JToolBar.Separator",
            "javax.swing.JToolTip",
            "javax.swing.JTree",
            "javax.swing.JViewport",
            "javax.swing.JWindow",
            "java.awt.Label",
            "java.awt.List",
            "java.awt.Menu",
            "java.awt.MenuBar",
            "javax.swing.plaf.metal.MetalComboBoxButton",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalComboPopup",
            "javax.swing.plaf.metal.MetalFileChooserUI.FileRenderer",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxRenderer",
            "javax.swing.plaf.metal.MetalInternalFrameTitlePane",
            "javax.swing.plaf.metal.MetalScrollButton",
            "java.awt.Panel",
            "java.awt.PopupMenu",
            "java.awt.Scrollbar",
            "java.awt.ScrollPane",
            "java.awt.TextArea",
            "java.awt.TextComponent",
            "java.awt.TextField",
            "java.awt.Window"
        ],
        "Method": {
            "getFont": {
                "Parameter": {},
                "Throw": []
            },
            "remove": {
                "Parameter": {
                    "comp": "MenuComponent"
                },
                "Throw": []
            },
            "postEvent": {
                "Parameter": {
                    "evt": "Event"
                },
                "Throw": []
            }
        }
    },
    "13": {
        "Package": "java.awt",
        "Interface": "Paint",
        "Superinterface": [
            "java.awt.Transparency"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.Color",
            "javax.swing.plaf.ColorUIResource",
            "java.awt.GradientPaint",
            "java.awt.LinearGradientPaint",
            "java.awt.MultipleGradientPaint",
            "java.awt.RadialGradientPaint",
            "java.awt.SystemColor",
            "java.awt.TexturePaint"
        ],
        "Method": {
            "createContext": {
                "Parameter": {
                    "cm": "ColorModel",
                    "deviceBounds": "Rectangle",
                    "userBounds": "Rectangle2D",
                    "xform": "AffineTransform",
                    "hints": "RenderingHints"
                },
                "Throw": []
            }
        }
    },
    "14": {
        "Package": "java.awt",
        "Interface": "PaintContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "dispose": {
                "Parameter": {},
                "Throw": []
            },
            "getColorModel": {
                "Parameter": {},
                "Throw": []
            },
            "getRaster": {
                "Parameter": {
                    "x": "int",
                    "y": "int",
                    "w": "int",
                    "h": "int"
                },
                "Throw": []
            }
        }
    },
    "15": {
        "Package": "java.awt",
        "Interface": "PrintGraphics",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPrintJob": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "16": {
        "Package": "java.awt",
        "Interface": "SecondaryLoop",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "enter": {
                "Parameter": {},
                "Throw": []
            },
            "exit": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "17": {
        "Package": "java.awt",
        "Interface": "Shape",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.geom.Arc2D",
            "java.awt.geom.Arc2D.Double",
            "java.awt.geom.Arc2D.Float",
            "java.awt.geom.Area",
            "javax.swing.plaf.basic.BasicTextUI.BasicCaret",
            "java.awt.geom.CubicCurve2D",
            "java.awt.geom.CubicCurve2D.Double",
            "java.awt.geom.CubicCurve2D.Float",
            "javax.swing.text.DefaultCaret",
            "java.awt.geom.Ellipse2D",
            "java.awt.geom.Ellipse2D.Double",
            "java.awt.geom.Ellipse2D.Float",
            "java.awt.geom.GeneralPath",
            "java.awt.geom.Line2D",
            "java.awt.geom.Line2D.Double",
            "java.awt.geom.Line2D.Float",
            "java.awt.geom.Path2D",
            "java.awt.geom.Path2D.Double",
            "java.awt.geom.Path2D.Float",
            "java.awt.Polygon",
            "java.awt.geom.QuadCurve2D",
            "java.awt.geom.QuadCurve2D.Double",
            "java.awt.geom.QuadCurve2D.Float",
            "java.awt.Rectangle",
            "java.awt.geom.Rectangle2D",
            "java.awt.geom.Rectangle2D.Double",
            "java.awt.geom.Rectangle2D.Float",
            "java.awt.geom.RectangularShape",
            "java.awt.geom.RoundRectangle2D",
            "java.awt.geom.RoundRectangle2D.Double",
            "java.awt.geom.RoundRectangle2D.Float"
        ],
        "Method": {
            "getBounds": {
                "Parameter": {},
                "Throw": []
            },
            "getBounds2D": {
                "Parameter": {},
                "Throw": []
            },
            "contains": {
                "Parameter": {
                    "r": "Rectangle2D"
                },
                "Throw": []
            },
            "intersects": {
                "Parameter": {
                    "r": "Rectangle2D"
                },
                "Throw": []
            },
            "getPathIterator": {
                "Parameter": {
                    "at": "AffineTransform",
                    "flatness": "double"
                },
                "Throw": []
            }
        }
    },
    "18": {
        "Package": "java.awt",
        "Interface": "Stroke",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.BasicStroke"
        ],
        "Method": {
            "createStrokedShape": {
                "Parameter": {
                    "p": "Shape"
                },
                "Throw": []
            }
        }
    },
    "19": {
        "Package": "java.awt",
        "Interface": "Transparency",
        "Superinterface": null,
        "Implementing Class": [
            "java.awt.Paint"
        ],
        "Subinterface": [
            "java.awt.image.BufferedImage",
            "java.awt.Color",
            "java.awt.image.ColorModel",
            "javax.swing.plaf.ColorUIResource",
            "java.awt.image.ComponentColorModel",
            "java.awt.image.DirectColorModel",
            "java.awt.GradientPaint",
            "java.awt.image.IndexColorModel",
            "java.awt.LinearGradientPaint",
            "java.awt.MultipleGradientPaint",
            "java.awt.image.PackedColorModel",
            "java.awt.RadialGradientPaint",
            "java.awt.SystemColor",
            "java.awt.TexturePaint",
            "java.awt.image.VolatileImage"
        ],
        "Method": {
            "getTransparency": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "20": {
        "Package": "java.awt.datatransfer",
        "Interface": "ClipboardOwner",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.datatransfer.StringSelection"
        ],
        "Method": {
            "lostOwnership": {
                "Parameter": {
                    "clipboard": "Clipboard",
                    "contents": "Transferable"
                },
                "Throw": []
            }
        }
    },
    "21": {
        "Package": "java.awt.datatransfer",
        "Interface": "FlavorListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "flavorsChanged": {
                "Parameter": {
                    "e": "FlavorEvent"
                },
                "Throw": []
            }
        }
    },
    "22": {
        "Package": "java.awt.datatransfer",
        "Interface": "FlavorMap",
        "Superinterface": null,
        "Implementing Class": [
            "java.awt.datatransfer.FlavorTable"
        ],
        "Subinterface": [
            "java.awt.datatransfer.SystemFlavorMap"
        ],
        "Method": {
            "getNativesForFlavors": {
                "Parameter": {
                    "flavors": "DataFlavor"
                },
                "Throw": []
            },
            "getFlavorsForNatives": {
                "Parameter": {
                    "natives": "String"
                },
                "Throw": []
            }
        }
    },
    "23": {
        "Package": "java.awt.datatransfer",
        "Interface": "FlavorTable",
        "Superinterface": [
            "java.awt.datatransfer.FlavorMap"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.datatransfer.SystemFlavorMap"
        ],
        "Method": {
            "getNativesForFlavor": {
                "Parameter": {
                    "flav": "DataFlavor"
                },
                "Throw": []
            },
            "getFlavorsForNative": {
                "Parameter": {
                    "nat": "String"
                },
                "Throw": []
            }
        }
    },
    "24": {
        "Package": "java.awt.datatransfer",
        "Interface": "Transferable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.activation.DataHandler",
            "java.awt.dnd.DropTargetContext.TransferableProxy",
            "java.awt.datatransfer.StringSelection"
        ],
        "Method": {
            "getTransferDataFlavors": {
                "Parameter": {},
                "Throw": []
            },
            "isDataFlavorSupported": {
                "Parameter": {
                    "flavor": "DataFlavor"
                },
                "Throw": []
            },
            "getTransferData": {
                "Parameter": {
                    "flavor": "DataFlavor"
                },
                "Throw": "java.awt.datatransfer.UnsupportedFlavorException"
            }
        }
    },
    "25": {
        "Package": "java.awt.dnd",
        "Interface": "Autoscroll",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAutoscrollInsets": {
                "Parameter": {},
                "Throw": []
            },
            "autoscroll": {
                "Parameter": {
                    "cursorLocn": "Point"
                },
                "Throw": []
            }
        }
    },
    "26": {
        "Package": "java.awt.dnd",
        "Interface": "DragGestureListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "dragGestureRecognized": {
                "Parameter": {
                    "dge": "DragGestureEvent"
                },
                "Throw": []
            }
        }
    },
    "27": {
        "Package": "java.awt.dnd",
        "Interface": "DragSourceListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.dnd.DragSourceAdapter",
            "java.awt.dnd.DragSourceContext"
        ],
        "Method": {
            "dragEnter": {
                "Parameter": {
                    "dsde": "DragSourceDragEvent"
                },
                "Throw": []
            },
            "dragOver": {
                "Parameter": {
                    "dsde": "DragSourceDragEvent"
                },
                "Throw": []
            },
            "dropActionChanged": {
                "Parameter": {
                    "dsde": "DragSourceDragEvent"
                },
                "Throw": []
            },
            "dragExit": {
                "Parameter": {
                    "dse": "DragSourceEvent"
                },
                "Throw": []
            },
            "dragDropEnd": {
                "Parameter": {
                    "dsde": "DragSourceDropEvent"
                },
                "Throw": []
            }
        }
    },
    "28": {
        "Package": "java.awt.dnd",
        "Interface": "DragSourceMotionListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.dnd.DragSourceAdapter",
            "java.awt.dnd.DragSourceContext"
        ],
        "Method": {
            "dragMouseMoved": {
                "Parameter": {
                    "dsde": "DragSourceDragEvent"
                },
                "Throw": []
            }
        }
    },
    "29": {
        "Package": "java.awt.dnd",
        "Interface": "DropTargetListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.dnd.DropTarget",
            "java.awt.dnd.DropTargetAdapter"
        ],
        "Method": {
            "dragEnter": {
                "Parameter": {
                    "dtde": "DropTargetDragEvent"
                },
                "Throw": []
            },
            "dragOver": {
                "Parameter": {
                    "dtde": "DropTargetDragEvent"
                },
                "Throw": []
            },
            "dropActionChanged": {
                "Parameter": {
                    "dtde": "DropTargetDragEvent"
                },
                "Throw": []
            },
            "dragExit": {
                "Parameter": {
                    "dte": "DropTargetEvent"
                },
                "Throw": []
            },
            "drop": {
                "Parameter": {
                    "dtde": "DropTargetDropEvent"
                },
                "Throw": []
            }
        }
    },
    "30": {
        "Package": "java.awt.event",
        "Interface": "ActionListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": [
            "javax.swing.Action"
        ],
        "Subinterface": [
            "javax.swing.AbstractAction",
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.CloseAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.MaximizeAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.MinimizeAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.NavigateAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.OpenAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.ApproveSelectionAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.CancelSelectionAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.ChangeToParentDirectoryAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.GoHomeAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.NewFolderAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.UpdateAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.CloseAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.IconifyAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.MoveAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.RestoreAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.SizeAction",
            "javax.swing.plaf.basic.BasicOptionPaneUI.ButtonActionListener",
            "javax.swing.plaf.basic.BasicScrollBarUI.ScrollListener",
            "javax.swing.plaf.basic.BasicSliderUI.ActionScroller",
            "javax.swing.plaf.basic.BasicSliderUI.ScrollListener",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardDownRightHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardEndHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardHomeHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardResizeToggleHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardUpLeftHandler",
            "javax.swing.plaf.basic.BasicTreeUI.ComponentHandler",
            "javax.swing.plaf.basic.BasicTreeUI.TreeCancelEditingAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeHomeAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeIncrementAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreePageAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeToggleAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction",
            "javax.swing.DefaultCellEditor.EditorDelegate",
            "javax.swing.text.DefaultEditorKit.BeepAction",
            "javax.swing.text.DefaultEditorKit.CopyAction",
            "javax.swing.text.DefaultEditorKit.CutAction",
            "javax.swing.text.DefaultEditorKit.DefaultKeyTypedAction",
            "javax.swing.text.DefaultEditorKit.InsertBreakAction",
            "javax.swing.text.DefaultEditorKit.InsertContentAction",
            "javax.swing.text.DefaultEditorKit.InsertTabAction",
            "javax.swing.text.DefaultEditorKit.PasteAction",
            "javax.swing.tree.DefaultTreeCellEditor",
            "java.awt.dnd.DropTarget.DropTargetAutoScroller",
            "javax.swing.text.html.FormView",
            "javax.swing.text.html.HTMLEditorKit.HTMLTextAction",
            "javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction",
            "javax.swing.JComboBox",
            "java.awt.List.AccessibleAWTList",
            "javax.swing.plaf.metal.MetalFileChooserUI.DirectoryComboBoxAction",
            "javax.swing.text.StyledEditorKit.AlignmentAction",
            "javax.swing.text.StyledEditorKit.BoldAction",
            "javax.swing.text.StyledEditorKit.FontFamilyAction",
            "javax.swing.text.StyledEditorKit.FontSizeAction",
            "javax.swing.text.StyledEditorKit.ForegroundAction",
            "javax.swing.text.StyledEditorKit.ItalicAction",
            "javax.swing.text.StyledEditorKit.StyledTextAction",
            "javax.swing.text.StyledEditorKit.UnderlineAction",
            "javax.swing.text.TextAction",
            "javax.swing.ToolTipManager.insideTimerAction",
            "javax.swing.ToolTipManager.outsideTimerAction",
            "javax.swing.ToolTipManager.stillInsideTimerAction"
        ],
        "Method": {
            "actionPerformed": {
                "Parameter": {
                    "e": "ActionEvent"
                },
                "Throw": []
            }
        }
    },
    "31": {
        "Package": "java.awt.event",
        "Interface": "AdjustmentListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster"
        ],
        "Method": {
            "adjustmentValueChanged": {
                "Parameter": {
                    "e": "AdjustmentEvent"
                },
                "Throw": []
            }
        }
    },
    "32": {
        "Package": "java.awt.event",
        "Interface": "AWTEventListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.event.AWTEventListenerProxy"
        ],
        "Method": {
            "eventDispatched": {
                "Parameter": {
                    "event": "AWTEvent"
                },
                "Throw": []
            }
        }
    },
    "33": {
        "Package": "java.awt.event",
        "Interface": "ComponentListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicInternalFrameUI.ComponentHandler",
            "javax.swing.plaf.basic.BasicSliderUI.ComponentHandler",
            "javax.swing.plaf.basic.BasicTreeUI.ComponentHandler",
            "java.awt.Component.AccessibleAWTComponent.AccessibleAWTComponentHandler",
            "java.awt.event.ComponentAdapter",
            "javax.swing.JViewport.ViewListener"
        ],
        "Method": {
            "componentResized": {
                "Parameter": {
                    "e": "ComponentEvent"
                },
                "Throw": []
            },
            "componentMoved": {
                "Parameter": {
                    "e": "ComponentEvent"
                },
                "Throw": []
            },
            "componentShown": {
                "Parameter": {
                    "e": "ComponentEvent"
                },
                "Throw": []
            },
            "componentHidden": {
                "Parameter": {
                    "e": "ComponentEvent"
                },
                "Throw": []
            }
        }
    },
    "34": {
        "Package": "java.awt.event",
        "Interface": "ContainerListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicToolBarUI.ToolBarContListener",
            "java.awt.Container.AccessibleAWTContainer.AccessibleContainerHandler",
            "java.awt.event.ContainerAdapter",
            "javax.swing.JComponent.AccessibleJComponent.AccessibleContainerHandler",
            "javax.swing.plaf.metal.MetalToolBarUI.MetalContainerListener"
        ],
        "Method": {
            "componentAdded": {
                "Parameter": {
                    "e": "ContainerEvent"
                },
                "Throw": []
            },
            "componentRemoved": {
                "Parameter": {
                    "e": "ContainerEvent"
                },
                "Throw": []
            }
        }
    },
    "35": {
        "Package": "java.awt.event",
        "Interface": "FocusListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicButtonListener",
            "javax.swing.plaf.basic.BasicComboBoxEditor",
            "javax.swing.plaf.basic.BasicComboBoxEditor.UIResource",
            "javax.swing.plaf.basic.BasicComboBoxUI.FocusHandler",
            "javax.swing.plaf.basic.BasicListUI.FocusHandler",
            "javax.swing.plaf.basic.BasicSliderUI.FocusHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.FocusHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.FocusHandler",
            "javax.swing.plaf.basic.BasicTableUI.FocusHandler",
            "javax.swing.plaf.basic.BasicTextUI.BasicCaret",
            "javax.swing.plaf.basic.BasicToolBarUI.ToolBarFocusListener",
            "javax.swing.plaf.basic.BasicTreeUI.FocusHandler",
            "java.awt.Component.AccessibleAWTComponent.AccessibleAWTFocusHandler",
            "javax.swing.text.DefaultCaret",
            "java.awt.event.FocusAdapter",
            "javax.swing.JComponent.AccessibleJComponent.AccessibleFocusHandler",
            "javax.swing.plaf.metal.MetalComboBoxEditor",
            "javax.swing.plaf.metal.MetalComboBoxEditor.UIResource"
        ],
        "Method": {
            "focusGained": {
                "Parameter": {
                    "e": "FocusEvent"
                },
                "Throw": []
            },
            "focusLost": {
                "Parameter": {
                    "e": "FocusEvent"
                },
                "Throw": []
            }
        }
    },
    "36": {
        "Package": "java.awt.event",
        "Interface": "HierarchyBoundsListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "java.awt.event.HierarchyBoundsAdapter"
        ],
        "Method": {
            "ancestorMoved": {
                "Parameter": {
                    "e": "HierarchyEvent"
                },
                "Throw": []
            },
            "ancestorResized": {
                "Parameter": {
                    "e": "HierarchyEvent"
                },
                "Throw": []
            }
        }
    },
    "37": {
        "Package": "java.awt.event",
        "Interface": "HierarchyListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster"
        ],
        "Method": {
            "hierarchyChanged": {
                "Parameter": {
                    "e": "HierarchyEvent"
                },
                "Throw": []
            }
        }
    },
    "38": {
        "Package": "java.awt.event",
        "Interface": "InputMethodListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster"
        ],
        "Method": {
            "inputMethodTextChanged": {
                "Parameter": {
                    "event": "InputMethodEvent"
                },
                "Throw": []
            },
            "caretPositionChanged": {
                "Parameter": {
                    "event": "InputMethodEvent"
                },
                "Throw": []
            }
        }
    },
    "39": {
        "Package": "java.awt.event",
        "Interface": "ItemListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicComboBoxUI.ItemHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ItemHandler",
            "java.awt.Checkbox.AccessibleAWTCheckbox",
            "javax.swing.DefaultCellEditor.EditorDelegate",
            "javax.swing.JCheckBox.AccessibleJCheckBox",
            "javax.swing.JRadioButton.AccessibleJRadioButton",
            "javax.swing.JToggleButton.AccessibleJToggleButton",
            "java.awt.List.AccessibleAWTList"
        ],
        "Method": {
            "itemStateChanged": {
                "Parameter": {
                    "e": "ItemEvent"
                },
                "Throw": []
            }
        }
    },
    "40": {
        "Package": "java.awt.event",
        "Interface": "KeyListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicComboBoxUI.KeyHandler",
            "javax.swing.plaf.basic.BasicComboPopup.InvocationKeyHandler",
            "javax.swing.plaf.basic.BasicTableUI.KeyHandler",
            "javax.swing.plaf.basic.BasicTreeUI.KeyHandler",
            "java.awt.event.KeyAdapter"
        ],
        "Method": {
            "keyTyped": {
                "Parameter": {
                    "e": "KeyEvent"
                },
                "Throw": []
            },
            "keyPressed": {
                "Parameter": {
                    "e": "KeyEvent"
                },
                "Throw": []
            },
            "keyReleased": {
                "Parameter": {
                    "e": "KeyEvent"
                },
                "Throw": []
            }
        }
    },
    "41": {
        "Package": "java.awt.event",
        "Interface": "MouseListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": [
            "javax.swing.event.MouseInputListener"
        ],
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicButtonListener",
            "javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListMouseHandler",
            "javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicFileChooserUI.DoubleClickListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.GlassPaneDispatcher",
            "javax.swing.plaf.basic.BasicListUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicMenuItemUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicMenuUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicScrollBarUI.ArrowButtonListener",
            "javax.swing.plaf.basic.BasicScrollBarUI.TrackListener",
            "javax.swing.plaf.basic.BasicSliderUI.TrackListener",
            "javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.MouseHandler",
            "javax.swing.plaf.basic.BasicTableHeaderUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicTableUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicTextUI.BasicCaret",
            "javax.swing.plaf.basic.BasicToolBarUI.DockingListener",
            "javax.swing.plaf.basic.BasicTreeUI.MouseHandler",
            "javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler",
            "javax.swing.text.DefaultCaret",
            "javax.swing.text.html.FormView.MouseEventListener",
            "javax.swing.text.html.HTMLEditorKit.LinkController",
            "javax.swing.plaf.metal.MetalFileChooserUI.SingleClickListener",
            "javax.swing.plaf.metal.MetalToolBarUI.MetalDockingListener",
            "java.awt.event.MouseAdapter",
            "java.awt.dnd.MouseDragGestureRecognizer",
            "javax.swing.event.MouseInputAdapter",
            "javax.swing.ToolTipManager"
        ],
        "Method": {
            "mouseClicked": {
                "Parameter": {
                    "e": "MouseEvent"
                },
                "Throw": []
            },
            "mousePressed": {
                "Parameter": {
                    "e": "MouseEvent"
                },
                "Throw": []
            },
            "mouseReleased": {
                "Parameter": {
                    "e": "MouseEvent"
                },
                "Throw": []
            },
            "mouseEntered": {
                "Parameter": {
                    "e": "MouseEvent"
                },
                "Throw": []
            },
            "mouseExited": {
                "Parameter": {
                    "e": "MouseEvent"
                },
                "Throw": []
            }
        }
    },
    "42": {
        "Package": "java.awt.event",
        "Interface": "MouseMotionListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": [
            "javax.swing.event.MouseInputListener"
        ],
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicButtonListener",
            "javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler",
            "javax.swing.plaf.basic.BasicComboPopup.InvocationMouseMotionHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListMouseHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListMouseMotionHandler",
            "javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicFileChooserUI.DoubleClickListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.GlassPaneDispatcher",
            "javax.swing.plaf.basic.BasicListUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicMenuItemUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicMenuUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicScrollBarUI.ArrowButtonListener",
            "javax.swing.plaf.basic.BasicScrollBarUI.TrackListener",
            "javax.swing.plaf.basic.BasicSliderUI.TrackListener",
            "javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.MouseHandler",
            "javax.swing.plaf.basic.BasicTableHeaderUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicTableUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicTextUI.BasicCaret",
            "javax.swing.plaf.basic.BasicToolBarUI.DockingListener",
            "javax.swing.plaf.basic.BasicTreeUI.MouseHandler",
            "javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler",
            "javax.swing.text.DefaultCaret",
            "javax.swing.text.html.FormView.MouseEventListener",
            "javax.swing.text.html.HTMLEditorKit.LinkController",
            "javax.swing.plaf.metal.MetalFileChooserUI.SingleClickListener",
            "javax.swing.plaf.metal.MetalToolBarUI.MetalDockingListener",
            "java.awt.event.MouseAdapter",
            "java.awt.dnd.MouseDragGestureRecognizer",
            "javax.swing.event.MouseInputAdapter",
            "java.awt.event.MouseMotionAdapter",
            "javax.swing.ToolTipManager"
        ],
        "Method": {
            "mouseDragged": {
                "Parameter": {
                    "e": "MouseEvent"
                },
                "Throw": []
            },
            "mouseMoved": {
                "Parameter": {
                    "e": "MouseEvent"
                },
                "Throw": []
            }
        }
    },
    "43": {
        "Package": "java.awt.event",
        "Interface": "MouseWheelListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListMouseHandler",
            "javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicFileChooserUI.DoubleClickListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener",
            "javax.swing.plaf.basic.BasicScrollBarUI.ArrowButtonListener",
            "javax.swing.plaf.basic.BasicScrollBarUI.TrackListener",
            "javax.swing.plaf.basic.BasicScrollPaneUI.MouseWheelHandler",
            "javax.swing.plaf.basic.BasicSliderUI.TrackListener",
            "javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.MouseHandler",
            "javax.swing.plaf.basic.BasicTreeUI.MouseHandler",
            "javax.swing.text.html.FormView.MouseEventListener",
            "javax.swing.text.html.HTMLEditorKit.LinkController",
            "javax.swing.plaf.metal.MetalFileChooserUI.SingleClickListener",
            "java.awt.event.MouseAdapter",
            "javax.swing.event.MouseInputAdapter",
            "javax.swing.ToolTipManager"
        ],
        "Method": {
            "mouseWheelMoved": {
                "Parameter": {
                    "e": "MouseWheelEvent"
                },
                "Throw": []
            }
        }
    },
    "44": {
        "Package": "java.awt.event",
        "Interface": "TextListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "java.awt.TextArea.AccessibleAWTTextArea",
            "java.awt.TextComponent.AccessibleAWTTextComponent",
            "java.awt.TextField.AccessibleAWTTextField"
        ],
        "Method": {
            "textValueChanged": {
                "Parameter": {
                    "e": "TextEvent"
                },
                "Throw": []
            }
        }
    },
    "45": {
        "Package": "java.awt.event",
        "Interface": "WindowFocusListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicToolBarUI.FrameListener",
            "javax.swing.JMenu.WinListener",
            "java.awt.event.WindowAdapter"
        ],
        "Method": {
            "windowGainedFocus": {
                "Parameter": {
                    "e": "WindowEvent"
                },
                "Throw": []
            },
            "windowLostFocus": {
                "Parameter": {
                    "e": "WindowEvent"
                },
                "Throw": []
            }
        }
    },
    "46": {
        "Package": "java.awt.event",
        "Interface": "WindowListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicToolBarUI.FrameListener",
            "javax.swing.JMenu.WinListener",
            "java.awt.event.WindowAdapter"
        ],
        "Method": {
            "windowOpened": {
                "Parameter": {
                    "e": "WindowEvent"
                },
                "Throw": []
            },
            "windowClosing": {
                "Parameter": {
                    "e": "WindowEvent"
                },
                "Throw": []
            },
            "windowClosed": {
                "Parameter": {
                    "e": "WindowEvent"
                },
                "Throw": []
            },
            "windowIconified": {
                "Parameter": {
                    "e": "WindowEvent"
                },
                "Throw": []
            },
            "windowDeiconified": {
                "Parameter": {
                    "e": "WindowEvent"
                },
                "Throw": []
            },
            "windowActivated": {
                "Parameter": {
                    "e": "WindowEvent"
                },
                "Throw": []
            },
            "windowDeactivated": {
                "Parameter": {
                    "e": "WindowEvent"
                },
                "Throw": []
            }
        }
    },
    "47": {
        "Package": "java.awt.event",
        "Interface": "WindowStateListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicToolBarUI.FrameListener",
            "javax.swing.JMenu.WinListener",
            "java.awt.event.WindowAdapter"
        ],
        "Method": {
            "windowStateChanged": {
                "Parameter": {
                    "e": "WindowEvent"
                },
                "Throw": []
            }
        }
    },
    "48": {
        "Package": "java.awt.font",
        "Interface": "MultipleMaster",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getNumDesignAxes": {
                "Parameter": {},
                "Throw": []
            },
            "getDesignAxisRanges": {
                "Parameter": {},
                "Throw": []
            },
            "getDesignAxisDefaults": {
                "Parameter": {},
                "Throw": []
            },
            "getDesignAxisNames": {
                "Parameter": {},
                "Throw": []
            },
            "deriveMMFont": {
                "Parameter": {
                    "glyphWidths": "float",
                    "avgStemWidth": "float",
                    "typicalCapHeight": "float",
                    "typicalXHeight": "float",
                    "italicAngle": "float"
                },
                "Throw": []
            }
        }
    },
    "49": {
        "Package": "java.awt.font",
        "Interface": "OpenType",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getVersion": {
                "Parameter": {},
                "Throw": []
            },
            "getFontTable": {
                "Parameter": {
                    "strSfntTag": "String",
                    "offset": "int",
                    "count": "int"
                },
                "Throw": []
            },
            "getFontTableSize": {
                "Parameter": {
                    "strSfntTag": "String"
                },
                "Throw": []
            }
        }
    },
    "50": {
        "Package": "java.awt.geom",
        "Interface": "PathIterator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.geom.FlatteningPathIterator"
        ],
        "Method": {
            "getWindingRule": {
                "Parameter": {},
                "Throw": []
            },
            "isDone": {
                "Parameter": {},
                "Throw": []
            },
            "next": {
                "Parameter": {},
                "Throw": []
            },
            "currentSegment": {
                "Parameter": {
                    "coords": "double"
                },
                "Throw": []
            }
        }
    },
    "51": {
        "Package": "java.awt.im",
        "Interface": "InputMethodRequests",
        "Superinterface": null,
        "Implementing Class": [
            "java.awt.im.spi.InputMethodContext"
        ],
        "Subinterface": null,
        "Method": {
            "getTextLocation": {
                "Parameter": {
                    "offset": "TextHitInfo"
                },
                "Throw": []
            },
            "getLocationOffset": {
                "Parameter": {
                    "x": "int",
                    "y": "int"
                },
                "Throw": []
            },
            "getInsertPositionOffset": {
                "Parameter": {},
                "Throw": []
            },
            "getCommittedText": {
                "Parameter": {
                    "beginIndex": "int",
                    "endIndex": "int",
                    "attributes": "AttributedCharacterIterator.Attribute"
                },
                "Throw": []
            },
            "getCommittedTextLength": {
                "Parameter": {},
                "Throw": []
            },
            "cancelLatestCommittedText": {
                "Parameter": {
                    "attributes": "AttributedCharacterIterator.Attribute"
                },
                "Throw": []
            },
            "getSelectedText": {
                "Parameter": {
                    "attributes": "AttributedCharacterIterator.Attribute"
                },
                "Throw": []
            }
        }
    },
    "52": {
        "Package": "java.awt.im.spi",
        "Interface": "InputMethod",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setInputMethodContext": {
                "Parameter": {
                    "context": "InputMethodContext"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "setLocale": {
                "Parameter": {
                    "locale": "Locale"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getLocale": {
                "Parameter": {},
                "Throw": []
            },
            "setCharacterSubsets": {
                "Parameter": {
                    "subsets": "Character.Subset"
                },
                "Throw": []
            },
            "setCompositionEnabled": {
                "Parameter": {
                    "enable": "boolean"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "isCompositionEnabled": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "reconvert": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "dispatchEvent": {
                "Parameter": {
                    "event": "AWTEvent"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "notifyClientWindowChange": {
                "Parameter": {
                    "bounds": "Rectangle"
                },
                "Throw": []
            },
            "activate": {
                "Parameter": {},
                "Throw": []
            },
            "deactivate": {
                "Parameter": {
                    "isTemporary": "boolean"
                },
                "Throw": []
            },
            "hideWindows": {
                "Parameter": {},
                "Throw": []
            },
            "removeNotify": {
                "Parameter": {},
                "Throw": []
            },
            "endComposition": {
                "Parameter": {},
                "Throw": []
            },
            "dispose": {
                "Parameter": {},
                "Throw": []
            },
            "getControlObject": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "53": {
        "Package": "java.awt.im.spi",
        "Interface": "InputMethodContext",
        "Superinterface": [
            "java.awt.im.InputMethodRequests"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "dispatchInputMethodEvent": {
                "Parameter": {
                    "id": "int",
                    "text": "AttributedCharacterIterator",
                    "committedCharacterCount": "int",
                    "caret": "TextHitInfo",
                    "visiblePosition": "TextHitInfo"
                },
                "Throw": []
            },
            "createInputMethodWindow": {
                "Parameter": {
                    "title": "String",
                    "attachToInputContext": "boolean"
                },
                "Throw": "java.awt.HeadlessException"
            },
            "createInputMethodJFrame": {
                "Parameter": {
                    "title": "String",
                    "attachToInputContext": "boolean"
                },
                "Throw": "java.awt.HeadlessException"
            },
            "enableClientWindowNotification": {
                "Parameter": {
                    "inputMethod": "InputMethod",
                    "enable": "boolean"
                },
                "Throw": []
            }
        }
    },
    "54": {
        "Package": "java.awt.im.spi",
        "Interface": "InputMethodDescriptor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAvailableLocales": {
                "Parameter": {},
                "Throw": "java.awt.AWTException"
            },
            "hasDynamicLocaleList": {
                "Parameter": {},
                "Throw": []
            },
            "getInputMethodDisplayName": {
                "Parameter": {
                    "inputLocale": "Locale",
                    "displayLanguage": "Locale"
                },
                "Throw": []
            },
            "getInputMethodIcon": {
                "Parameter": {
                    "inputLocale": "Locale"
                },
                "Throw": []
            },
            "createInputMethod": {
                "Parameter": {},
                "Throw": "java.lang.Exception"
            }
        }
    },
    "55": {
        "Package": "java.awt.image",
        "Interface": "BufferedImageOp",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.image.AffineTransformOp",
            "java.awt.image.ColorConvertOp",
            "java.awt.image.ConvolveOp",
            "java.awt.image.LookupOp",
            "java.awt.image.RescaleOp"
        ],
        "Method": {
            "filter": {
                "Parameter": {
                    "src": "BufferedImage",
                    "dest": "BufferedImage"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getBounds2D": {
                "Parameter": {
                    "src": "BufferedImage"
                },
                "Throw": []
            },
            "createCompatibleDestImage": {
                "Parameter": {
                    "src": "BufferedImage",
                    "destCM": "ColorModel"
                },
                "Throw": []
            },
            "getPoint2D": {
                "Parameter": {
                    "srcPt": "Point2D",
                    "dstPt": "Point2D"
                },
                "Throw": []
            },
            "getRenderingHints": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "56": {
        "Package": "java.awt.image",
        "Interface": "ImageConsumer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.image.AreaAveragingScaleFilter",
            "java.awt.image.BufferedImageFilter",
            "java.awt.image.CropImageFilter",
            "javax.swing.GrayFilter",
            "java.awt.image.ImageFilter",
            "java.awt.image.PixelGrabber",
            "java.awt.image.ReplicateScaleFilter",
            "java.awt.image.RGBImageFilter"
        ],
        "Method": {
            "setDimensions": {
                "Parameter": {
                    "width": "int",
                    "height": "int"
                },
                "Throw": []
            },
            "setProperties": {
                "Parameter": {
                    "": "Hashtable"
                },
                "Throw": []
            },
            "setColorModel": {
                "Parameter": {
                    "model": "ColorModel"
                },
                "Throw": []
            },
            "setHints": {
                "Parameter": {
                    "hintflags": "int"
                },
                "Throw": []
            },
            "setPixels": {
                "Parameter": {
                    "x": "int",
                    "y": "int",
                    "w": "int",
                    "h": "int",
                    "model": "ColorModel",
                    "pixels": "int",
                    "off": "int",
                    "scansize": "int"
                },
                "Throw": []
            },
            "imageComplete": {
                "Parameter": {
                    "status": "int"
                },
                "Throw": []
            }
        }
    },
    "57": {
        "Package": "java.awt.image",
        "Interface": "ImageObserver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractButton",
            "javax.swing.colorchooser.AbstractColorChooserPanel",
            "java.applet.Applet",
            "javax.swing.plaf.basic.BasicArrowButton",
            "javax.swing.plaf.basic.BasicComboBoxRenderer",
            "javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource",
            "javax.swing.plaf.basic.BasicComboPopup",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.SystemMenuBar",
            "javax.swing.plaf.basic.BasicSplitPaneDivider",
            "javax.swing.plaf.basic.BasicToolBarUI.DragWindow",
            "javax.swing.Box",
            "javax.swing.Box.Filler",
            "java.awt.Button",
            "java.awt.Canvas",
            "javax.swing.CellRendererPane",
            "java.awt.Checkbox",
            "java.awt.Choice",
            "java.awt.Component",
            "java.awt.Container",
            "javax.swing.DefaultListCellRenderer",
            "javax.swing.DefaultListCellRenderer.UIResource",
            "javax.swing.table.DefaultTableCellRenderer",
            "javax.swing.table.DefaultTableCellRenderer.UIResource",
            "javax.swing.tree.DefaultTreeCellEditor.DefaultTextField",
            "javax.swing.tree.DefaultTreeCellEditor.EditorContainer",
            "javax.swing.tree.DefaultTreeCellRenderer",
            "java.awt.Dialog",
            "java.awt.FileDialog",
            "java.awt.Frame",
            "javax.swing.JApplet",
            "javax.swing.JButton",
            "javax.swing.JCheckBox",
            "javax.swing.JCheckBoxMenuItem",
            "javax.swing.JColorChooser",
            "javax.swing.JComboBox",
            "javax.swing.JComponent",
            "javax.swing.JDesktopPane",
            "javax.swing.JDialog",
            "javax.swing.JEditorPane",
            "javax.swing.JFileChooser",
            "javax.swing.JFormattedTextField",
            "javax.swing.JFrame",
            "javax.swing.JInternalFrame",
            "javax.swing.JInternalFrame.JDesktopIcon",
            "javax.swing.JLabel",
            "javax.swing.JLayer",
            "javax.swing.JLayeredPane",
            "javax.swing.JList",
            "javax.swing.JMenu",
            "javax.swing.JMenuBar",
            "javax.swing.JMenuItem",
            "javax.swing.JOptionPane",
            "javax.swing.JPanel",
            "javax.swing.JPasswordField",
            "javax.swing.JPopupMenu",
            "javax.swing.JPopupMenu.Separator",
            "javax.swing.JProgressBar",
            "javax.swing.JRadioButton",
            "javax.swing.JRadioButtonMenuItem",
            "javax.swing.JRootPane",
            "javax.swing.JScrollBar",
            "javax.swing.JScrollPane",
            "javax.swing.JScrollPane.ScrollBar",
            "javax.swing.JSeparator",
            "javax.swing.JSlider",
            "javax.swing.JSpinner",
            "javax.swing.JSpinner.DateEditor",
            "javax.swing.JSpinner.DefaultEditor",
            "javax.swing.JSpinner.ListEditor",
            "javax.swing.JSpinner.NumberEditor",
            "javax.swing.JSplitPane",
            "javax.swing.JTabbedPane",
            "javax.swing.JTable",
            "javax.swing.table.JTableHeader",
            "javax.swing.JTextArea",
            "javax.swing.text.JTextComponent",
            "javax.swing.JTextField",
            "javax.swing.JTextPane",
            "javax.swing.JToggleButton",
            "javax.swing.JToolBar",
            "javax.swing.JToolBar.Separator",
            "javax.swing.JToolTip",
            "javax.swing.JTree",
            "javax.swing.JViewport",
            "javax.swing.JWindow",
            "java.awt.Label",
            "java.awt.List",
            "javax.swing.plaf.metal.MetalComboBoxButton",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalComboPopup",
            "javax.swing.plaf.metal.MetalFileChooserUI.FileRenderer",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxRenderer",
            "javax.swing.plaf.metal.MetalInternalFrameTitlePane",
            "javax.swing.plaf.metal.MetalScrollButton",
            "java.awt.Panel",
            "java.awt.Scrollbar",
            "java.awt.ScrollPane",
            "java.awt.TextArea",
            "java.awt.TextComponent",
            "java.awt.TextField",
            "java.awt.Window"
        ],
        "Method": {
            "imageUpdate": {
                "Parameter": {
                    "img": "Image",
                    "infoflags": "int",
                    "x": "int",
                    "y": "int",
                    "width": "int",
                    "height": "int"
                },
                "Throw": []
            }
        }
    },
    "58": {
        "Package": "java.awt.image",
        "Interface": "ImageProducer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.image.FilteredImageSource",
            "java.awt.image.MemoryImageSource",
            "java.awt.image.renderable.RenderableImageProducer"
        ],
        "Method": {
            "addConsumer": {
                "Parameter": {
                    "ic": "ImageConsumer"
                },
                "Throw": []
            },
            "isConsumer": {
                "Parameter": {
                    "ic": "ImageConsumer"
                },
                "Throw": []
            },
            "removeConsumer": {
                "Parameter": {
                    "ic": "ImageConsumer"
                },
                "Throw": []
            },
            "startProduction": {
                "Parameter": {
                    "ic": "ImageConsumer"
                },
                "Throw": []
            },
            "requestTopDownLeftRightResend": {
                "Parameter": {
                    "ic": "ImageConsumer"
                },
                "Throw": []
            }
        }
    },
    "59": {
        "Package": "java.awt.image",
        "Interface": "RasterOp",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.image.AffineTransformOp",
            "java.awt.image.BandCombineOp",
            "java.awt.image.ColorConvertOp",
            "java.awt.image.ConvolveOp",
            "java.awt.image.LookupOp",
            "java.awt.image.RescaleOp"
        ],
        "Method": {
            "filter": {
                "Parameter": {
                    "src": "Raster",
                    "dest": "WritableRaster"
                },
                "Throw": []
            },
            "getBounds2D": {
                "Parameter": {
                    "src": "Raster"
                },
                "Throw": []
            },
            "createCompatibleDestRaster": {
                "Parameter": {
                    "src": "Raster"
                },
                "Throw": []
            },
            "getPoint2D": {
                "Parameter": {
                    "srcPt": "Point2D",
                    "dstPt": "Point2D"
                },
                "Throw": []
            },
            "getRenderingHints": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "60": {
        "Package": "java.awt.image",
        "Interface": "RenderedImage",
        "Superinterface": null,
        "Implementing Class": [
            "java.awt.image.WritableRenderedImage"
        ],
        "Subinterface": [
            "java.awt.image.BufferedImage"
        ],
        "Method": {
            "getSources": {
                "Parameter": {},
                "Throw": []
            },
            "getProperty": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            },
            "getPropertyNames": {
                "Parameter": {},
                "Throw": []
            },
            "getColorModel": {
                "Parameter": {},
                "Throw": []
            },
            "getSampleModel": {
                "Parameter": {},
                "Throw": []
            },
            "getWidth": {
                "Parameter": {},
                "Throw": []
            },
            "getHeight": {
                "Parameter": {},
                "Throw": []
            },
            "getMinX": {
                "Parameter": {},
                "Throw": []
            },
            "getMinY": {
                "Parameter": {},
                "Throw": []
            },
            "getNumXTiles": {
                "Parameter": {},
                "Throw": []
            },
            "getNumYTiles": {
                "Parameter": {},
                "Throw": []
            },
            "getMinTileX": {
                "Parameter": {},
                "Throw": []
            },
            "getMinTileY": {
                "Parameter": {},
                "Throw": []
            },
            "getTileWidth": {
                "Parameter": {},
                "Throw": []
            },
            "getTileHeight": {
                "Parameter": {},
                "Throw": []
            },
            "getTileGridXOffset": {
                "Parameter": {},
                "Throw": []
            },
            "getTileGridYOffset": {
                "Parameter": {},
                "Throw": []
            },
            "getTile": {
                "Parameter": {
                    "tileX": "int",
                    "tileY": "int"
                },
                "Throw": []
            },
            "getData": {
                "Parameter": {
                    "rect": "Rectangle"
                },
                "Throw": []
            },
            "copyData": {
                "Parameter": {
                    "raster": "WritableRaster"
                },
                "Throw": []
            }
        }
    },
    "61": {
        "Package": "java.awt.image",
        "Interface": "TileObserver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "tileUpdate": {
                "Parameter": {
                    "source": "WritableRenderedImage",
                    "tileX": "int",
                    "tileY": "int",
                    "willBeWritable": "boolean"
                },
                "Throw": []
            }
        }
    },
    "62": {
        "Package": "java.awt.image",
        "Interface": "WritableRenderedImage",
        "Superinterface": [
            "java.awt.image.RenderedImage"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.image.BufferedImage"
        ],
        "Method": {
            "addTileObserver": {
                "Parameter": {
                    "to": "TileObserver"
                },
                "Throw": []
            },
            "removeTileObserver": {
                "Parameter": {
                    "to": "TileObserver"
                },
                "Throw": []
            },
            "getWritableTile": {
                "Parameter": {
                    "tileX": "int",
                    "tileY": "int"
                },
                "Throw": []
            },
            "releaseWritableTile": {
                "Parameter": {
                    "tileX": "int",
                    "tileY": "int"
                },
                "Throw": []
            },
            "isTileWritable": {
                "Parameter": {
                    "tileX": "int",
                    "tileY": "int"
                },
                "Throw": []
            },
            "getWritableTileIndices": {
                "Parameter": {},
                "Throw": []
            },
            "hasTileWriters": {
                "Parameter": {},
                "Throw": []
            },
            "setData": {
                "Parameter": {
                    "r": "Raster"
                },
                "Throw": []
            }
        }
    },
    "63": {
        "Package": "java.awt.image.renderable",
        "Interface": "ContextualRenderedImageFactory",
        "Superinterface": [
            "java.awt.image.renderable.RenderedImageFactory"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "mapRenderContext": {
                "Parameter": {
                    "i": "int",
                    "renderContext": "RenderContext",
                    "paramBlock": "ParameterBlock",
                    "image": "RenderableImage"
                },
                "Throw": []
            },
            "create": {
                "Parameter": {
                    "renderContext": "RenderContext",
                    "paramBlock": "ParameterBlock"
                },
                "Throw": []
            },
            "getBounds2D": {
                "Parameter": {
                    "paramBlock": "ParameterBlock"
                },
                "Throw": []
            },
            "getProperty": {
                "Parameter": {
                    "paramBlock": "ParameterBlock",
                    "name": "String"
                },
                "Throw": []
            },
            "getPropertyNames": {
                "Parameter": {},
                "Throw": []
            },
            "isDynamic": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "64": {
        "Package": "java.awt.image.renderable",
        "Interface": "RenderableImage",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.image.renderable.RenderableImageOp"
        ],
        "Method": {
            "getSources": {
                "Parameter": {},
                "Throw": []
            },
            "getProperty": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            },
            "getPropertyNames": {
                "Parameter": {},
                "Throw": []
            },
            "isDynamic": {
                "Parameter": {},
                "Throw": []
            },
            "getWidth": {
                "Parameter": {},
                "Throw": []
            },
            "getHeight": {
                "Parameter": {},
                "Throw": []
            },
            "getMinX": {
                "Parameter": {},
                "Throw": []
            },
            "getMinY": {
                "Parameter": {},
                "Throw": []
            },
            "createScaledRendering": {
                "Parameter": {
                    "w": "int",
                    "h": "int",
                    "hints": "RenderingHints"
                },
                "Throw": []
            },
            "createDefaultRendering": {
                "Parameter": {},
                "Throw": []
            },
            "createRendering": {
                "Parameter": {
                    "renderContext": "RenderContext"
                },
                "Throw": []
            }
        }
    },
    "65": {
        "Package": "java.awt.image.renderable",
        "Interface": "RenderedImageFactory",
        "Superinterface": null,
        "Implementing Class": [
            "java.awt.image.renderable.ContextualRenderedImageFactory"
        ],
        "Subinterface": null,
        "Method": {
            "create": {
                "Parameter": {
                    "paramBlock": "ParameterBlock",
                    "hints": "RenderingHints"
                },
                "Throw": []
            }
        }
    },
    "66": {
        "Package": "java.awt.print",
        "Interface": "Pageable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.print.Book"
        ],
        "Method": {
            "getNumberOfPages": {
                "Parameter": {},
                "Throw": []
            },
            "getPageFormat": {
                "Parameter": {
                    "pageIndex": "int"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "getPrintable": {
                "Parameter": {
                    "pageIndex": "int"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            }
        }
    },
    "67": {
        "Package": "java.awt.print",
        "Interface": "Printable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "print": {
                "Parameter": {
                    "graphics": "Graphics",
                    "pageFormat": "PageFormat",
                    "pageIndex": "int"
                },
                "Throw": "java.awt.print.PrinterException"
            }
        }
    },
    "68": {
        "Package": "java.awt.print",
        "Interface": "PrinterGraphics",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPrinterJob": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "69": {
        "Package": "java.beans",
        "Interface": "AppletInitializer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "initialize": {
                "Parameter": {
                    "newAppletBean": "Applet",
                    "bCtxt": "BeanContext"
                },
                "Throw": []
            },
            "activate": {
                "Parameter": {
                    "newApplet": "Applet"
                },
                "Throw": []
            }
        }
    },
    "70": {
        "Package": "java.beans",
        "Interface": "BeanInfo",
        "Superinterface": null,
        "Implementing Class": [
            "java.beans.beancontext.BeanContextServiceProviderBeanInfo"
        ],
        "Subinterface": [
            "java.beans.SimpleBeanInfo"
        ],
        "Method": {
            "getBeanDescriptor": {
                "Parameter": {},
                "Throw": []
            },
            "getEventSetDescriptors": {
                "Parameter": {},
                "Throw": []
            },
            "getDefaultEventIndex": {
                "Parameter": {},
                "Throw": []
            },
            "getPropertyDescriptors": {
                "Parameter": {},
                "Throw": []
            },
            "getDefaultPropertyIndex": {
                "Parameter": {},
                "Throw": []
            },
            "getMethodDescriptors": {
                "Parameter": {},
                "Throw": []
            },
            "getAdditionalBeanInfo": {
                "Parameter": {},
                "Throw": []
            },
            "getIcon": {
                "Parameter": {
                    "iconKind": "int"
                },
                "Throw": []
            }
        }
    },
    "71": {
        "Package": "java.beans",
        "Interface": "Customizer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setObject": {
                "Parameter": {
                    "bean": "Object"
                },
                "Throw": []
            },
            "addPropertyChangeListener": {
                "Parameter": {
                    "listener": "PropertyChangeListener"
                },
                "Throw": []
            },
            "removePropertyChangeListener": {
                "Parameter": {
                    "listener": "PropertyChangeListener"
                },
                "Throw": []
            }
        }
    },
    "72": {
        "Package": "java.beans",
        "Interface": "DesignMode",
        "Superinterface": null,
        "Implementing Class": [
            "java.beans.beancontext.BeanContext",
            "java.beans.beancontext.BeanContextServices"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport"
        ],
        "Method": {
            "setDesignTime": {
                "Parameter": {
                    "designTime": "boolean"
                },
                "Throw": []
            },
            "isDesignTime": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "73": {
        "Package": "java.beans",
        "Interface": "ExceptionListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "exceptionThrown": {
                "Parameter": {
                    "e": "Exception"
                },
                "Throw": []
            }
        }
    },
    "74": {
        "Package": "java.beans",
        "Interface": "PropertyChangeListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicButtonListener",
            "javax.swing.plaf.basic.BasicColorChooserUI.PropertyHandler",
            "javax.swing.plaf.basic.BasicComboBoxUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicComboPopup.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicDirectoryModel",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicInternalFrameUI.InternalFramePropertyChangeListener",
            "javax.swing.plaf.basic.BasicLabelUI",
            "javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicOptionPaneUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicRootPaneUI",
            "javax.swing.plaf.basic.BasicScrollBarUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicScrollPaneUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicSliderUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicSplitPaneDivider",
            "javax.swing.plaf.basic.BasicSplitPaneUI.PropertyHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicToolBarUI.PropertyListener",
            "javax.swing.plaf.basic.BasicTreeUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicTreeUI.SelectionModelPropertyChangeHandler",
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport",
            "javax.swing.table.DefaultTableColumnModel",
            "javax.swing.JLayer",
            "javax.swing.JList.AccessibleJList",
            "javax.swing.JPopupMenu.AccessibleJPopupMenu",
            "javax.swing.JScrollPane.AccessibleJScrollPane",
            "javax.swing.JSpinner.DateEditor",
            "javax.swing.JSpinner.DefaultEditor",
            "javax.swing.JSpinner.ListEditor",
            "javax.swing.JSpinner.NumberEditor",
            "javax.swing.JTable.AccessibleJTable",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalPropertyChangeListener",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxModel",
            "javax.swing.plaf.metal.MetalLabelUI",
            "javax.swing.plaf.metal.MetalRootPaneUI",
            "javax.swing.plaf.metal.MetalSliderUI.MetalPropertyListener",
            "javax.swing.plaf.metal.MetalToolBarUI.MetalRolloverListener",
            "javax.swing.ProgressMonitor.AccessibleProgressMonitor",
            "java.beans.PropertyChangeListenerProxy",
            "javax.swing.plaf.synth.SynthButtonUI",
            "javax.swing.plaf.synth.SynthCheckBoxMenuItemUI",
            "javax.swing.plaf.synth.SynthCheckBoxUI",
            "javax.swing.plaf.synth.SynthColorChooserUI",
            "javax.swing.plaf.synth.SynthComboBoxUI",
            "javax.swing.plaf.synth.SynthDesktopIconUI",
            "javax.swing.plaf.synth.SynthDesktopPaneUI",
            "javax.swing.plaf.synth.SynthInternalFrameUI",
            "javax.swing.plaf.synth.SynthLabelUI",
            "javax.swing.plaf.synth.SynthListUI",
            "javax.swing.plaf.synth.SynthMenuBarUI",
            "javax.swing.plaf.synth.SynthMenuItemUI",
            "javax.swing.plaf.synth.SynthMenuUI",
            "javax.swing.plaf.synth.SynthOptionPaneUI",
            "javax.swing.plaf.synth.SynthPanelUI",
            "javax.swing.plaf.synth.SynthPopupMenuUI",
            "javax.swing.plaf.synth.SynthProgressBarUI",
            "javax.swing.plaf.synth.SynthRadioButtonMenuItemUI",
            "javax.swing.plaf.synth.SynthRadioButtonUI",
            "javax.swing.plaf.synth.SynthRootPaneUI",
            "javax.swing.plaf.synth.SynthScrollBarUI",
            "javax.swing.plaf.synth.SynthScrollPaneUI",
            "javax.swing.plaf.synth.SynthSeparatorUI",
            "javax.swing.plaf.synth.SynthSliderUI",
            "javax.swing.plaf.synth.SynthSpinnerUI",
            "javax.swing.plaf.synth.SynthSplitPaneUI",
            "javax.swing.plaf.synth.SynthTabbedPaneUI",
            "javax.swing.plaf.synth.SynthTableHeaderUI",
            "javax.swing.plaf.synth.SynthTableUI",
            "javax.swing.plaf.synth.SynthToggleButtonUI",
            "javax.swing.plaf.synth.SynthToolBarUI",
            "javax.swing.plaf.synth.SynthToolTipUI",
            "javax.swing.plaf.synth.SynthTreeUI",
            "javax.swing.plaf.synth.SynthViewportUI"
        ],
        "Method": {
            "propertyChange": {
                "Parameter": {
                    "evt": "PropertyChangeEvent"
                },
                "Throw": []
            }
        }
    },
    "75": {
        "Package": "java.beans",
        "Interface": "PropertyEditor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.beans.PropertyEditorSupport"
        ],
        "Method": {
            "setValue": {
                "Parameter": {
                    "value": "Object"
                },
                "Throw": []
            },
            "getValue": {
                "Parameter": {},
                "Throw": []
            },
            "isPaintable": {
                "Parameter": {},
                "Throw": []
            },
            "paintValue": {
                "Parameter": {
                    "gfx": "Graphics",
                    "box": "Rectangle"
                },
                "Throw": []
            },
            "getJavaInitializationString": {
                "Parameter": {},
                "Throw": []
            },
            "getAsText": {
                "Parameter": {},
                "Throw": []
            },
            "setAsText": {
                "Parameter": {
                    "text": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getTags": {
                "Parameter": {},
                "Throw": []
            },
            "getCustomEditor": {
                "Parameter": {},
                "Throw": []
            },
            "supportsCustomEditor": {
                "Parameter": {},
                "Throw": []
            },
            "addPropertyChangeListener": {
                "Parameter": {
                    "listener": "PropertyChangeListener"
                },
                "Throw": []
            },
            "removePropertyChangeListener": {
                "Parameter": {
                    "listener": "PropertyChangeListener"
                },
                "Throw": []
            }
        }
    },
    "76": {
        "Package": "java.beans",
        "Interface": "VetoableChangeListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport",
            "java.beans.VetoableChangeListenerProxy"
        ],
        "Method": {
            "vetoableChange": {
                "Parameter": {
                    "evt": "PropertyChangeEvent"
                },
                "Throw": "java.beans.PropertyVetoException"
            }
        }
    },
    "77": {
        "Package": "java.beans",
        "Interface": "Visibility",
        "Superinterface": null,
        "Implementing Class": [
            "java.beans.beancontext.BeanContext",
            "java.beans.beancontext.BeanContextServices"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport"
        ],
        "Method": {
            "needsGui": {
                "Parameter": {},
                "Throw": []
            },
            "dontUseGui": {
                "Parameter": {},
                "Throw": []
            },
            "okToUseGui": {
                "Parameter": {},
                "Throw": []
            },
            "avoidingGui": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "78": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContext",
        "Superinterface": [
            "java.beans.beancontext.BeanContextChild",
            "java.util.Collection",
            "java.beans.DesignMode",
            "java.lang.Iterable",
            "java.beans.Visibility"
        ],
        "Implementing Class": [
            "java.beans.beancontext.BeanContextServices"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport"
        ],
        "Method": {
            "instantiateChild": {
                "Parameter": {
                    "beanName": "String"
                },
                "Throw": "java.lang.ClassNotFoundException"
            },
            "getResourceAsStream": {
                "Parameter": {
                    "name": "String",
                    "bcc": "BeanContextChild"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getResource": {
                "Parameter": {
                    "name": "String",
                    "bcc": "BeanContextChild"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "addBeanContextMembershipListener": {
                "Parameter": {
                    "bcml": "BeanContextMembershipListener"
                },
                "Throw": []
            },
            "removeBeanContextMembershipListener": {
                "Parameter": {
                    "bcml": "BeanContextMembershipListener"
                },
                "Throw": []
            }
        }
    },
    "79": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextChild",
        "Superinterface": null,
        "Implementing Class": [
            "java.beans.beancontext.BeanContext",
            "java.beans.beancontext.BeanContextServices"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextChildSupport",
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport"
        ],
        "Method": {
            "setBeanContext": {
                "Parameter": {
                    "bc": "BeanContext"
                },
                "Throw": "java.beans.PropertyVetoException"
            },
            "getBeanContext": {
                "Parameter": {},
                "Throw": []
            },
            "addPropertyChangeListener": {
                "Parameter": {
                    "name": "String",
                    "pcl": "PropertyChangeListener"
                },
                "Throw": []
            },
            "removePropertyChangeListener": {
                "Parameter": {
                    "name": "String",
                    "pcl": "PropertyChangeListener"
                },
                "Throw": []
            },
            "addVetoableChangeListener": {
                "Parameter": {
                    "name": "String",
                    "vcl": "VetoableChangeListener"
                },
                "Throw": []
            },
            "removeVetoableChangeListener": {
                "Parameter": {
                    "name": "String",
                    "vcl": "VetoableChangeListener"
                },
                "Throw": []
            }
        }
    },
    "80": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextChildComponentProxy",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getComponent": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "81": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextContainerProxy",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getContainer": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "82": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextMembershipListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "childrenAdded": {
                "Parameter": {
                    "bcme": "BeanContextMembershipEvent"
                },
                "Throw": []
            },
            "childrenRemoved": {
                "Parameter": {
                    "bcme": "BeanContextMembershipEvent"
                },
                "Throw": []
            }
        }
    },
    "83": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextProxy",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getBeanContextProxy": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "84": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextServiceProvider",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.beans.beancontext.BeanContextServicesSupport.BCSSProxyServiceProvider"
        ],
        "Method": {
            "getService": {
                "Parameter": {
                    "bcs": "BeanContextServices",
                    "requestor": "Object",
                    "serviceClass": "Class",
                    "serviceSelector": "Object"
                },
                "Throw": []
            },
            "releaseService": {
                "Parameter": {
                    "bcs": "BeanContextServices",
                    "requestor": "Object",
                    "service": "Object"
                },
                "Throw": []
            },
            "getCurrentServiceSelectors": {
                "Parameter": {
                    "bcs": "BeanContextServices",
                    "serviceClass": "Class"
                },
                "Throw": []
            }
        }
    },
    "85": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextServiceProviderBeanInfo",
        "Superinterface": [
            "java.beans.BeanInfo"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getServicesBeanInfo": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "86": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextServiceRevokedListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": [
            "java.beans.beancontext.BeanContextServices",
            "java.beans.beancontext.BeanContextServicesListener"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextChildSupport",
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextServicesSupport.BCSSProxyServiceProvider",
            "java.beans.beancontext.BeanContextSupport"
        ],
        "Method": {
            "serviceRevoked": {
                "Parameter": {
                    "bcsre": "BeanContextServiceRevokedEvent"
                },
                "Throw": []
            }
        }
    },
    "87": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextServices",
        "Superinterface": [
            "java.beans.beancontext.BeanContext",
            "java.beans.beancontext.BeanContextChild",
            "java.beans.beancontext.BeanContextServiceRevokedListener",
            "java.beans.beancontext.BeanContextServicesListener",
            "java.util.Collection",
            "java.beans.DesignMode",
            "java.util.EventListener",
            "java.lang.Iterable",
            "java.beans.Visibility"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.beans.beancontext.BeanContextServicesSupport"
        ],
        "Method": {
            "addService": {
                "Parameter": {
                    "serviceClass": "Class",
                    "serviceProvider": "BeanContextServiceProvider"
                },
                "Throw": []
            },
            "revokeService": {
                "Parameter": {
                    "serviceClass": "Class",
                    "serviceProvider": "BeanContextServiceProvider",
                    "revokeCurrentServicesNow": "boolean"
                },
                "Throw": []
            },
            "hasService": {
                "Parameter": {
                    "serviceClass": "Class"
                },
                "Throw": []
            },
            "getService": {
                "Parameter": {
                    "child": "BeanContextChild",
                    "requestor": "Object",
                    "serviceClass": "Class",
                    "serviceSelector": "Object",
                    "bcsrl": "BeanContextServiceRevokedListener"
                },
                "Throw": "java.util.TooManyListenersException"
            },
            "releaseService": {
                "Parameter": {
                    "child": "BeanContextChild",
                    "requestor": "Object",
                    "service": "Object"
                },
                "Throw": []
            },
            "getCurrentServiceClasses": {
                "Parameter": {},
                "Throw": []
            },
            "getCurrentServiceSelectors": {
                "Parameter": {
                    "serviceClass": "Class"
                },
                "Throw": []
            },
            "addBeanContextServicesListener": {
                "Parameter": {
                    "bcsl": "BeanContextServicesListener"
                },
                "Throw": []
            },
            "removeBeanContextServicesListener": {
                "Parameter": {
                    "bcsl": "BeanContextServicesListener"
                },
                "Throw": []
            }
        }
    },
    "88": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextServicesListener",
        "Superinterface": [
            "java.beans.beancontext.BeanContextServiceRevokedListener",
            "java.util.EventListener"
        ],
        "Implementing Class": [
            "java.beans.beancontext.BeanContextServices"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextChildSupport",
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport"
        ],
        "Method": {
            "serviceAvailable": {
                "Parameter": {
                    "bcsae": "BeanContextServiceAvailableEvent"
                },
                "Throw": []
            }
        }
    },
    "89": {
        "Package": "java.io",
        "Interface": "Closeable",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": [
            "java.nio.channels.AsynchronousByteChannel",
            "java.nio.channels.AsynchronousChannel",
            "java.nio.channels.ByteChannel",
            "java.nio.channels.Channel",
            "java.nio.file.DirectoryStream",
            "java.nio.channels.GatheringByteChannel",
            "javax.imageio.stream.ImageInputStream",
            "javax.imageio.stream.ImageOutputStream",
            "java.nio.channels.InterruptibleChannel",
            "javax.tools.JavaFileManager",
            "javax.management.remote.JMXConnector",
            "java.nio.channels.MulticastChannel",
            "java.nio.channels.NetworkChannel",
            "java.nio.channels.ReadableByteChannel",
            "javax.management.remote.rmi.RMIConnection",
            "java.nio.channels.ScatteringByteChannel",
            "java.nio.file.SecureDirectoryStream",
            "java.nio.channels.SeekableByteChannel",
            "javax.tools.StandardJavaFileManager",
            "java.nio.file.WatchService",
            "java.nio.channels.WritableByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.spi.AbstractInterruptibleChannel",
            "java.nio.channels.spi.AbstractSelectableChannel",
            "java.nio.channels.spi.AbstractSelector",
            "java.nio.channels.AsynchronousFileChannel",
            "java.nio.channels.AsynchronousServerSocketChannel",
            "java.nio.channels.AsynchronousSocketChannel",
            "javax.sound.sampled.AudioInputStream",
            "java.io.BufferedInputStream",
            "java.io.BufferedOutputStream",
            "java.io.BufferedReader",
            "java.io.BufferedWriter",
            "java.io.ByteArrayInputStream",
            "java.io.ByteArrayOutputStream",
            "java.io.CharArrayReader",
            "java.io.CharArrayWriter",
            "java.util.zip.CheckedInputStream",
            "java.util.zip.CheckedOutputStream",
            "javax.crypto.CipherInputStream",
            "javax.crypto.CipherOutputStream",
            "java.nio.channels.DatagramChannel",
            "java.net.DatagramSocket",
            "java.io.DataInputStream",
            "java.io.DataOutputStream",
            "java.util.zip.DeflaterInputStream",
            "java.util.zip.DeflaterOutputStream",
            "java.security.DigestInputStream",
            "java.security.DigestOutputStream",
            "javax.imageio.stream.FileCacheImageInputStream",
            "javax.imageio.stream.FileCacheImageOutputStream",
            "java.nio.channels.FileChannel",
            "javax.imageio.stream.FileImageInputStream",
            "javax.imageio.stream.FileImageOutputStream",
            "java.io.FileInputStream",
            "java.io.FileOutputStream",
            "java.io.FileReader",
            "java.nio.file.FileSystem",
            "java.io.FileWriter",
            "java.io.FilterInputStream",
            "java.io.FilterOutputStream",
            "java.io.FilterReader",
            "java.io.FilterWriter",
            "java.util.Formatter",
            "javax.tools.ForwardingJavaFileManager",
            "java.util.zip.GZIPInputStream",
            "java.util.zip.GZIPOutputStream",
            "javax.imageio.stream.ImageInputStreamImpl",
            "javax.imageio.stream.ImageOutputStreamImpl",
            "java.util.zip.InflaterInputStream",
            "java.util.zip.InflaterOutputStream",
            "java.io.InputStream",
            "org.omg.CORBA.portable.InputStream",
            "org.omg.CORBA_2_3.portable.InputStream",
            "java.io.InputStreamReader",
            "java.util.jar.JarFile",
            "java.util.jar.JarInputStream",
            "java.util.jar.JarOutputStream",
            "java.io.LineNumberInputStream",
            "java.io.LineNumberReader",
            "java.rmi.server.LogStream",
            "javax.imageio.stream.MemoryCacheImageInputStream",
            "javax.imageio.stream.MemoryCacheImageOutputStream",
            "javax.management.loading.MLet",
            "java.net.MulticastSocket",
            "java.io.ObjectInputStream",
            "java.io.ObjectOutputStream",
            "java.io.OutputStream",
            "org.omg.CORBA.portable.OutputStream",
            "org.omg.CORBA_2_3.portable.OutputStream",
            "java.io.OutputStreamWriter",
            "java.nio.channels.Pipe.SinkChannel",
            "java.nio.channels.Pipe.SourceChannel",
            "java.io.PipedInputStream",
            "java.io.PipedOutputStream",
            "java.io.PipedReader",
            "java.io.PipedWriter",
            "java.io.PrintStream",
            "java.io.PrintWriter",
            "javax.management.loading.PrivateMLet",
            "javax.swing.ProgressMonitorInputStream",
            "java.io.PushbackInputStream",
            "java.io.PushbackReader",
            "java.io.RandomAccessFile",
            "java.io.Reader",
            "javax.management.remote.rmi.RMIConnectionImpl",
            "javax.management.remote.rmi.RMIConnectionImpl_Stub",
            "javax.management.remote.rmi.RMIConnector",
            "javax.management.remote.rmi.RMIIIOPServerImpl",
            "javax.management.remote.rmi.RMIJRMPServerImpl",
            "javax.management.remote.rmi.RMIServerImpl",
            "java.util.Scanner",
            "java.nio.channels.SelectableChannel",
            "java.nio.channels.Selector",
            "java.io.SequenceInputStream",
            "java.net.ServerSocket",
            "java.nio.channels.ServerSocketChannel",
            "java.net.Socket",
            "java.nio.channels.SocketChannel",
            "javax.net.ssl.SSLServerSocket",
            "javax.net.ssl.SSLSocket",
            "java.io.StringBufferInputStream",
            "java.io.StringReader",
            "java.io.StringWriter",
            "java.net.URLClassLoader",
            "java.io.Writer",
            "java.util.zip.ZipFile",
            "java.util.zip.ZipInputStream",
            "java.util.zip.ZipOutputStream"
        ],
        "Method": {
            "close": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            }
        }
    },
    "90": {
        "Package": "java.io",
        "Interface": "DataInput",
        "Superinterface": null,
        "Implementing Class": [
            "javax.imageio.stream.ImageInputStream",
            "javax.imageio.stream.ImageOutputStream",
            "java.io.ObjectInput"
        ],
        "Subinterface": [
            "java.io.DataInputStream",
            "javax.imageio.stream.FileCacheImageInputStream",
            "javax.imageio.stream.FileCacheImageOutputStream",
            "javax.imageio.stream.FileImageInputStream",
            "javax.imageio.stream.FileImageOutputStream",
            "javax.imageio.stream.ImageInputStreamImpl",
            "javax.imageio.stream.ImageOutputStreamImpl",
            "javax.imageio.stream.MemoryCacheImageInputStream",
            "javax.imageio.stream.MemoryCacheImageOutputStream",
            "java.io.ObjectInputStream",
            "java.io.RandomAccessFile"
        ],
        "Method": {
            "readFully": {
                "Parameter": {
                    "b": "byte",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "skipBytes": {
                "Parameter": {
                    "n": "int"
                },
                "Throw": "java.io.IOException"
            },
            "readBoolean": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readByte": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readUnsignedByte": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readShort": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readUnsignedShort": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readChar": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readInt": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readLong": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readFloat": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readDouble": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readLine": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readUTF": {
                "Parameter": {},
                "Throw": "java.io.UTFDataFormatException"
            }
        }
    },
    "91": {
        "Package": "java.io",
        "Interface": "DataOutput",
        "Superinterface": null,
        "Implementing Class": [
            "javax.imageio.stream.ImageOutputStream",
            "java.io.ObjectOutput"
        ],
        "Subinterface": [
            "java.io.DataOutputStream",
            "javax.imageio.stream.FileCacheImageOutputStream",
            "javax.imageio.stream.FileImageOutputStream",
            "javax.imageio.stream.ImageOutputStreamImpl",
            "javax.imageio.stream.MemoryCacheImageOutputStream",
            "java.io.ObjectOutputStream",
            "java.io.RandomAccessFile"
        ],
        "Method": {
            "write": {
                "Parameter": {
                    "b": "byte",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeBoolean": {
                "Parameter": {
                    "v": "boolean"
                },
                "Throw": "java.io.IOException"
            },
            "writeByte": {
                "Parameter": {
                    "v": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeShort": {
                "Parameter": {
                    "v": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeChar": {
                "Parameter": {
                    "v": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeInt": {
                "Parameter": {
                    "v": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeLong": {
                "Parameter": {
                    "v": "long"
                },
                "Throw": "java.io.IOException"
            },
            "writeFloat": {
                "Parameter": {
                    "v": "float"
                },
                "Throw": "java.io.IOException"
            },
            "writeDouble": {
                "Parameter": {
                    "v": "double"
                },
                "Throw": "java.io.IOException"
            },
            "writeBytes": {
                "Parameter": {
                    "s": "String"
                },
                "Throw": "java.io.IOException"
            },
            "writeChars": {
                "Parameter": {
                    "s": "String"
                },
                "Throw": "java.io.IOException"
            },
            "writeUTF": {
                "Parameter": {
                    "s": "String"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "92": {
        "Package": "java.io",
        "Interface": "Externalizable",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "java.rmi.server.RemoteRef",
            "java.rmi.server.ServerRef"
        ],
        "Subinterface": [
            "javax.activation.ActivationDataFlavor",
            "java.awt.datatransfer.DataFlavor",
            "javax.activation.MimeType",
            "javax.management.loading.MLet",
            "javax.management.loading.PrivateMLet"
        ],
        "Method": {
            "writeExternal": {
                "Parameter": {
                    "out": "ObjectOutput"
                },
                "Throw": "java.io.IOException"
            },
            "readExternal": {
                "Parameter": {
                    "in": "ObjectInput"
                },
                "Throw": "java.lang.ClassNotFoundException"
            }
        }
    },
    "93": {
        "Package": "java.io",
        "Interface": "FileFilter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "pathname": "File"
                },
                "Throw": []
            }
        }
    },
    "94": {
        "Package": "java.io",
        "Interface": "FilenameFilter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "dir": "File",
                    "name": "String"
                },
                "Throw": []
            }
        }
    },
    "95": {
        "Package": "java.io",
        "Interface": "Flushable",
        "Superinterface": null,
        "Implementing Class": [
            "javax.tools.JavaFileManager",
            "javax.tools.StandardJavaFileManager"
        ],
        "Subinterface": [
            "java.io.BufferedOutputStream",
            "java.io.BufferedWriter",
            "java.io.ByteArrayOutputStream",
            "java.io.CharArrayWriter",
            "java.util.zip.CheckedOutputStream",
            "javax.crypto.CipherOutputStream",
            "java.io.Console",
            "java.io.DataOutputStream",
            "java.util.zip.DeflaterOutputStream",
            "java.security.DigestOutputStream",
            "java.io.FileOutputStream",
            "java.io.FileWriter",
            "java.io.FilterOutputStream",
            "java.io.FilterWriter",
            "java.util.Formatter",
            "javax.tools.ForwardingJavaFileManager",
            "java.util.zip.GZIPOutputStream",
            "java.util.zip.InflaterOutputStream",
            "java.util.jar.JarOutputStream",
            "java.rmi.server.LogStream",
            "java.io.ObjectOutputStream",
            "java.io.OutputStream",
            "org.omg.CORBA.portable.OutputStream",
            "org.omg.CORBA_2_3.portable.OutputStream",
            "java.io.OutputStreamWriter",
            "java.io.PipedOutputStream",
            "java.io.PipedWriter",
            "java.io.PrintStream",
            "java.io.PrintWriter",
            "java.io.StringWriter",
            "java.io.Writer",
            "java.util.zip.ZipOutputStream"
        ],
        "Method": {
            "flush": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            }
        }
    },
    "96": {
        "Package": "java.io",
        "Interface": "ObjectInput",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.DataInput"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.io.ObjectInputStream"
        ],
        "Method": {
            "readObject": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "read": {
                "Parameter": {
                    "b": "byte",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "skip": {
                "Parameter": {
                    "n": "long"
                },
                "Throw": "java.io.IOException"
            },
            "available": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "close": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            }
        }
    },
    "97": {
        "Package": "java.io",
        "Interface": "ObjectInputValidation",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "validateObject": {
                "Parameter": {},
                "Throw": "java.io.InvalidObjectException"
            }
        }
    },
    "98": {
        "Package": "java.io",
        "Interface": "ObjectOutput",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.DataOutput"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.io.ObjectOutputStream"
        ],
        "Method": {
            "writeObject": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": "java.io.IOException"
            },
            "write": {
                "Parameter": {
                    "b": "byte",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "flush": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "close": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            }
        }
    },
    "99": {
        "Package": "java.io",
        "Interface": "ObjectStreamConstants",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.io.ObjectInputStream",
            "java.io.ObjectOutputStream"
        ],
        "Method": {}
    },
    "100": {
        "Package": "java.io",
        "Interface": "Serializable",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.PortableServer.AdapterActivator",
            "javax.naming.directory.Attribute",
            "javax.print.attribute.Attribute",
            "javax.naming.directory.Attributes",
            "org.omg.CosNaming.BindingIterator",
            "java.security.cert.CertPathValidatorException.Reason",
            "org.omg.PortableInterceptor.ClientRequestInfo",
            "org.omg.PortableInterceptor.ClientRequestInterceptor",
            "org.omg.IOP.Codec",
            "org.omg.IOP.CodecFactory",
            "javax.naming.ldap.Control",
            "org.omg.CORBA.Current",
            "org.omg.PortableServer.Current",
            "org.omg.PortableInterceptor.Current",
            "org.omg.CORBA.portable.CustomValue",
            "org.omg.CORBA.DataInputStream",
            "org.omg.CORBA.DataOutputStream",
            "javax.management.Descriptor",
            "javax.crypto.interfaces.DHPrivateKey",
            "javax.crypto.interfaces.DHPublicKey",
            "javax.print.attribute.DocAttribute",
            "org.omg.CORBA.DomainManager",
            "java.security.interfaces.DSAPrivateKey",
            "java.security.interfaces.DSAPublicKey",
            "org.omg.DynamicAny.DynAny",
            "org.omg.DynamicAny.DynAnyFactory",
            "org.omg.DynamicAny.DynArray",
            "org.omg.DynamicAny.DynEnum",
            "org.omg.DynamicAny.DynFixed",
            "org.omg.DynamicAny.DynSequence",
            "org.omg.DynamicAny.DynStruct",
            "org.omg.DynamicAny.DynUnion",
            "org.omg.DynamicAny.DynValue",
            "org.omg.DynamicAny.DynValueBox",
            "org.omg.DynamicAny.DynValueCommon",
            "java.security.interfaces.ECPrivateKey",
            "java.security.interfaces.ECPublicKey",
            "javax.naming.ldap.ExtendedRequest",
            "javax.naming.ldap.ExtendedResponse",
            "java.io.Externalizable",
            "org.omg.PortableServer.IdAssignmentPolicy",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.IDLType",
            "org.omg.PortableServer.IdUniquenessPolicy",
            "org.omg.PortableServer.ImplicitActivationPolicy",
            "org.omg.PortableInterceptor.Interceptor",
            "org.omg.PortableInterceptor.IORInfo",
            "org.omg.PortableInterceptor.IORInterceptor",
            "org.omg.PortableInterceptor.IORInterceptor_3_0",
            "org.omg.CORBA.IRObject",
            "java.security.Key",
            "org.omg.PortableServer.LifespanPolicy",
            "javax.naming.Name",
            "org.omg.CosNaming.NamingContext",
            "org.omg.CosNaming.NamingContextExt",
            "javax.management.NotificationFilter",
            "org.omg.PortableInterceptor.ObjectReferenceFactory",
            "org.omg.PortableInterceptor.ObjectReferenceTemplate",
            "org.omg.PortableInterceptor.ORBInitializer",
            "org.omg.PortableInterceptor.ORBInitInfo",
            "javax.crypto.interfaces.PBEKey",
            "org.omg.PortableServer.POA",
            "org.omg.PortableServer.POAManager",
            "org.omg.CORBA.Policy",
            "org.omg.PortableInterceptor.PolicyFactory",
            "javax.print.attribute.PrintJobAttribute",
            "javax.print.attribute.PrintRequestAttribute",
            "javax.print.attribute.PrintServiceAttribute",
            "java.security.PrivateKey",
            "java.security.PublicKey",
            "javax.management.QueryExp",
            "javax.management.relation.RelationType",
            "java.rmi.server.RemoteRef",
            "org.omg.PortableInterceptor.RequestInfo",
            "org.omg.PortableServer.RequestProcessingPolicy",
            "java.security.interfaces.RSAMultiPrimePrivateCrtKey",
            "java.security.interfaces.RSAPrivateCrtKey",
            "java.security.interfaces.RSAPrivateKey",
            "java.security.interfaces.RSAPublicKey",
            "org.omg.SendingContext.RunTime",
            "javax.crypto.SecretKey",
            "org.omg.PortableServer.ServantActivator",
            "org.omg.PortableServer.ServantLocator",
            "org.omg.PortableServer.ServantManager",
            "org.omg.PortableServer.ServantRetentionPolicy",
            "java.rmi.server.ServerRef",
            "org.omg.PortableInterceptor.ServerRequestInfo",
            "org.omg.PortableInterceptor.ServerRequestInterceptor",
            "org.omg.CORBA.portable.StreamableValue",
            "javax.print.attribute.SupportedValuesAttribute",
            "org.omg.PortableServer.ThreadPolicy",
            "javax.naming.ldap.UnsolicitedNotification",
            "org.omg.CORBA.portable.ValueBase",
            "javax.management.ValueExp"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "101": {
        "Package": "java.lang",
        "Interface": "Appendable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.io.BufferedWriter",
            "java.io.CharArrayWriter",
            "java.nio.CharBuffer",
            "java.io.FileWriter",
            "java.io.FilterWriter",
            "java.rmi.server.LogStream",
            "java.io.OutputStreamWriter",
            "java.io.PipedWriter",
            "java.io.PrintStream",
            "java.io.PrintWriter",
            "java.lang.StringBuffer",
            "java.lang.StringBuilder",
            "java.io.StringWriter",
            "java.io.Writer"
        ],
        "Method": {
            "append": {
                "Parameter": {
                    "c": "char"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "102": {
        "Package": "java.lang",
        "Interface": "AutoCloseable",
        "Superinterface": null,
        "Implementing Class": [
            "java.nio.channels.AsynchronousByteChannel",
            "java.nio.channels.AsynchronousChannel",
            "java.util.stream.BaseStream",
            "java.nio.channels.ByteChannel",
            "javax.sql.rowset.CachedRowSet",
            "java.sql.CallableStatement",
            "java.nio.channels.Channel",
            "javax.sound.sampled.Clip",
            "java.io.Closeable",
            "java.sql.Connection",
            "javax.sound.sampled.DataLine",
            "java.nio.file.DirectoryStream",
            "java.util.stream.DoubleStream",
            "javax.sql.rowset.FilteredRowSet",
            "java.nio.channels.GatheringByteChannel",
            "javax.imageio.stream.ImageInputStream",
            "javax.imageio.stream.ImageOutputStream",
            "java.nio.channels.InterruptibleChannel",
            "java.util.stream.IntStream",
            "javax.tools.JavaFileManager",
            "javax.sql.rowset.JdbcRowSet",
            "javax.management.remote.JMXConnector",
            "javax.sql.rowset.JoinRowSet",
            "javax.sound.sampled.Line",
            "java.util.stream.LongStream",
            "javax.sound.midi.MidiDevice",
            "javax.sound.midi.MidiDeviceReceiver",
            "javax.sound.midi.MidiDeviceTransmitter",
            "javax.sound.sampled.Mixer",
            "java.nio.channels.MulticastChannel",
            "java.nio.channels.NetworkChannel",
            "java.io.ObjectInput",
            "java.io.ObjectOutput",
            "javax.sound.sampled.Port",
            "java.sql.PreparedStatement",
            "java.nio.channels.ReadableByteChannel",
            "javax.sound.midi.Receiver",
            "java.sql.ResultSet",
            "javax.management.remote.rmi.RMIConnection",
            "javax.sql.RowSet",
            "java.nio.channels.ScatteringByteChannel",
            "java.nio.file.SecureDirectoryStream",
            "java.nio.channels.SeekableByteChannel",
            "javax.sound.midi.Sequencer",
            "javax.sound.sampled.SourceDataLine",
            "javax.tools.StandardJavaFileManager",
            "java.sql.Statement",
            "java.util.stream.Stream",
            "javax.sql.rowset.spi.SyncResolver",
            "javax.sound.midi.Synthesizer",
            "javax.sound.sampled.TargetDataLine",
            "javax.sound.midi.Transmitter",
            "java.nio.file.WatchService",
            "javax.sql.rowset.WebRowSet",
            "java.nio.channels.WritableByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.spi.AbstractInterruptibleChannel",
            "java.nio.channels.spi.AbstractSelectableChannel",
            "java.nio.channels.spi.AbstractSelector",
            "java.nio.channels.AsynchronousFileChannel",
            "java.nio.channels.AsynchronousServerSocketChannel",
            "java.nio.channels.AsynchronousSocketChannel",
            "javax.sound.sampled.AudioInputStream",
            "java.io.BufferedInputStream",
            "java.io.BufferedOutputStream",
            "java.io.BufferedReader",
            "java.io.BufferedWriter",
            "java.io.ByteArrayInputStream",
            "java.io.ByteArrayOutputStream",
            "java.io.CharArrayReader",
            "java.io.CharArrayWriter",
            "java.util.zip.CheckedInputStream",
            "java.util.zip.CheckedOutputStream",
            "javax.crypto.CipherInputStream",
            "javax.crypto.CipherOutputStream",
            "java.nio.channels.DatagramChannel",
            "java.net.DatagramSocket",
            "java.io.DataInputStream",
            "java.io.DataOutputStream",
            "java.util.zip.DeflaterInputStream",
            "java.util.zip.DeflaterOutputStream",
            "java.security.DigestInputStream",
            "java.security.DigestOutputStream",
            "javax.imageio.stream.FileCacheImageInputStream",
            "javax.imageio.stream.FileCacheImageOutputStream",
            "java.nio.channels.FileChannel",
            "javax.imageio.stream.FileImageInputStream",
            "javax.imageio.stream.FileImageOutputStream",
            "java.io.FileInputStream",
            "java.nio.channels.FileLock",
            "java.io.FileOutputStream",
            "java.io.FileReader",
            "java.nio.file.FileSystem",
            "java.io.FileWriter",
            "java.io.FilterInputStream",
            "java.io.FilterOutputStream",
            "java.io.FilterReader",
            "java.io.FilterWriter",
            "java.util.Formatter",
            "javax.tools.ForwardingJavaFileManager",
            "java.util.zip.GZIPInputStream",
            "java.util.zip.GZIPOutputStream",
            "javax.imageio.stream.ImageInputStreamImpl",
            "javax.imageio.stream.ImageOutputStreamImpl",
            "java.util.zip.InflaterInputStream",
            "java.util.zip.InflaterOutputStream",
            "java.io.InputStream",
            "org.omg.CORBA.portable.InputStream",
            "org.omg.CORBA_2_3.portable.InputStream",
            "java.io.InputStreamReader",
            "java.util.jar.JarFile",
            "java.util.jar.JarInputStream",
            "java.util.jar.JarOutputStream",
            "java.io.LineNumberInputStream",
            "java.io.LineNumberReader",
            "java.rmi.server.LogStream",
            "javax.imageio.stream.MemoryCacheImageInputStream",
            "javax.imageio.stream.MemoryCacheImageOutputStream",
            "javax.management.loading.MLet",
            "java.net.MulticastSocket",
            "java.io.ObjectInputStream",
            "java.io.ObjectOutputStream",
            "java.io.OutputStream",
            "org.omg.CORBA.portable.OutputStream",
            "org.omg.CORBA_2_3.portable.OutputStream",
            "java.io.OutputStreamWriter",
            "java.nio.channels.Pipe.SinkChannel",
            "java.nio.channels.Pipe.SourceChannel",
            "java.io.PipedInputStream",
            "java.io.PipedOutputStream",
            "java.io.PipedReader",
            "java.io.PipedWriter",
            "java.io.PrintStream",
            "java.io.PrintWriter",
            "javax.management.loading.PrivateMLet",
            "javax.swing.ProgressMonitorInputStream",
            "java.io.PushbackInputStream",
            "java.io.PushbackReader",
            "java.io.RandomAccessFile",
            "java.io.Reader",
            "javax.management.remote.rmi.RMIConnectionImpl",
            "javax.management.remote.rmi.RMIConnectionImpl_Stub",
            "javax.management.remote.rmi.RMIConnector",
            "javax.management.remote.rmi.RMIIIOPServerImpl",
            "javax.management.remote.rmi.RMIJRMPServerImpl",
            "javax.management.remote.rmi.RMIServerImpl",
            "java.util.Scanner",
            "java.nio.channels.SelectableChannel",
            "java.nio.channels.Selector",
            "java.io.SequenceInputStream",
            "java.net.ServerSocket",
            "java.nio.channels.ServerSocketChannel",
            "java.net.Socket",
            "java.nio.channels.SocketChannel",
            "javax.net.ssl.SSLServerSocket",
            "javax.net.ssl.SSLSocket",
            "java.io.StringBufferInputStream",
            "java.io.StringReader",
            "java.io.StringWriter",
            "java.net.URLClassLoader",
            "java.io.Writer",
            "java.beans.XMLDecoder",
            "java.beans.XMLEncoder",
            "java.util.zip.ZipFile",
            "java.util.zip.ZipInputStream",
            "java.util.zip.ZipOutputStream"
        ],
        "Method": {
            "close": {
                "Parameter": {},
                "Throw": "java.lang.Exception"
            }
        }
    },
    "103": {
        "Package": "java.lang",
        "Interface": "CharSequence",
        "Superinterface": null,
        "Implementing Class": [
            "javax.lang.model.element.Name"
        ],
        "Subinterface": [
            "java.nio.CharBuffer",
            "javax.swing.text.Segment",
            "java.lang.String",
            "java.lang.StringBuffer",
            "java.lang.StringBuilder"
        ],
        "Method": {
            "length": {
                "Parameter": {},
                "Throw": []
            },
            "charAt": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "subSequence": {
                "Parameter": {
                    "start": "int",
                    "end": "int"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            },
            "chars": {
                "Parameter": {},
                "Throw": []
            },
            "codePoints": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "104": {
        "Package": "java.lang",
        "Interface": "Cloneable",
        "Superinterface": null,
        "Implementing Class": [
            "java.security.acl.AclEntry",
            "javax.naming.directory.Attribute",
            "java.text.AttributedCharacterIterator",
            "javax.naming.directory.Attributes",
            "java.security.cert.CertPathBuilderResult",
            "java.security.cert.CertPathParameters",
            "java.security.cert.CertPathValidatorResult",
            "java.security.cert.CertSelector",
            "java.security.cert.CertStoreParameters",
            "java.text.CharacterIterator",
            "java.security.cert.CRLSelector",
            "javax.management.Descriptor",
            "org.ietf.jgss.GSSCredential",
            "javax.naming.Name"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "105": {
        "Package": "java.lang",
        "Interface": "Comparable",
        "Superinterface": null,
        "Implementing Class": [
            "java.time.chrono.ChronoLocalDate",
            "java.time.chrono.ChronoLocalDateTime",
            "java.time.chrono.Chronology",
            "java.time.chrono.ChronoZonedDateTime",
            "java.util.concurrent.Delayed",
            "javax.naming.Name",
            "java.nio.file.Path",
            "java.util.concurrent.RunnableScheduledFuture",
            "java.util.concurrent.ScheduledFuture"
        ],
        "Subinterface": [
            "java.time.chrono.AbstractChronology",
            "java.math.AbstractRegionPainter.PaintContext.CacheMode",
            "java.math.AccessMode",
            "java.lang.AclEntryFlag",
            "java.lang.AclEntryPermission",
            "java.nio.AclEntryType",
            "java.util.AddressingFeature.Responses",
            "java.lang.Authenticator.RequestorType",
            "java.nio.BigDecimal",
            "java.nio.charset.BigInteger",
            "java.text.Boolean",
            "javax.naming.Byte",
            "javax.naming.ByteBuffer",
            "java.util.Calendar",
            "java.sql.CertPathValidatorException.BasicReason",
            "java.lang.Character",
            "java.nio.Character.UnicodeScript",
            "java.time.CharBuffer",
            "java.lang.Charset",
            "java.io.ChronoField",
            "java.nio.file.attribute.ChronoUnit",
            "java.lang.ClientInfoStatus",
            "java.nio.CollationKey",
            "java.util.Collector.Characteristics",
            "java.time.chrono.Component.BaselineResizeBehavior",
            "java.time.chrono.CompositeName",
            "java.time.CompoundName",
            "java.nio.CRLReason",
            "java.lang.CryptoPrimitive",
            "java.time.chrono.Date",
            "java.time.chrono.Date",
            "java.time.chrono.DayOfWeek",
            "javax.naming.ldap.Desktop.Action",
            "java.time.Diagnostic.Kind",
            "java.time.Dialog.ModalExclusionType",
            "java.time.Dialog.ModalityType",
            "java.lang.DocumentationTool.Location",
            "java.nio.Double",
            "java.nio.DoubleBuffer",
            "java.time.chrono.DropMode",
            "java.time.chrono.Duration",
            "java.time.ElementKind",
            "javax.management.ElementType",
            "java.io.Enum",
            "java.time.File",
            "java.time.FileTime",
            "javax.naming.ldap.FileVisitOption",
            "java.lang.FileVisitResult",
            "java.nio.Float",
            "java.lang.FloatBuffer",
            "java.time.chrono.FormatStyle",
            "java.time.chrono.Formatter.BigDecimalLayoutForm",
            "java.sql.FormSubmitEvent.MethodType",
            "java.sql.GraphicsDevice.WindowTranslucency",
            "java.net.GregorianCalendar",
            "java.util.GroupLayout.Alignment",
            "java.time.HijrahChronology",
            "java.time.HijrahDate",
            "java.time.HijrahEra",
            "java.time.Instant",
            "java.time.zone.IntBuffer"
        ],
        "Method": {
            "compareTo": {
                "Parameter": {
                    "o": "T"
                },
                "Throw": "java.lang.ClassCastException"
            }
        }
    },
    "106": {
        "Package": "java.lang",
        "Interface": "Iterable",
        "Superinterface": null,
        "Implementing Class": [
            "java.beans.beancontext.BeanContext",
            "java.beans.beancontext.BeanContextServices",
            "java.util.concurrent.BlockingDeque",
            "java.util.concurrent.BlockingQueue",
            "java.util.Collection",
            "java.util.Deque",
            "java.nio.file.DirectoryStream",
            "java.util.List",
            "java.util.NavigableSet",
            "java.nio.file.Path",
            "java.util.Queue",
            "java.nio.file.SecureDirectoryStream",
            "java.util.Set",
            "java.util.SortedSet",
            "java.util.concurrent.TransferQueue"
        ],
        "Subinterface": [
            "java.util.AbstractCollection",
            "java.util.AbstractList",
            "java.util.AbstractQueue",
            "java.util.AbstractSequentialList",
            "java.util.AbstractSet",
            "java.util.concurrent.ArrayBlockingQueue",
            "java.util.ArrayDeque",
            "java.util.ArrayList",
            "javax.management.AttributeList",
            "java.sql.BatchUpdateException",
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport",
            "java.util.concurrent.ConcurrentHashMap.KeySetView",
            "java.util.concurrent.ConcurrentLinkedDeque",
            "java.util.concurrent.ConcurrentLinkedQueue",
            "java.util.concurrent.ConcurrentSkipListSet",
            "java.util.concurrent.CopyOnWriteArrayList",
            "java.util.concurrent.CopyOnWriteArraySet",
            "java.sql.DataTruncation",
            "java.util.concurrent.DelayQueue",
            "java.util.EnumSet",
            "java.util.HashSet",
            "javax.print.attribute.standard.JobStateReasons",
            "java.util.concurrent.LinkedBlockingDeque",
            "java.util.concurrent.LinkedBlockingQueue",
            "java.util.LinkedHashSet",
            "java.util.LinkedList",
            "java.util.concurrent.LinkedTransferQueue",
            "java.util.concurrent.PriorityBlockingQueue",
            "java.util.PriorityQueue",
            "javax.management.relation.RoleList",
            "javax.management.relation.RoleUnresolvedList",
            "javax.sql.rowset.RowSetWarning",
            "javax.sql.rowset.serial.SerialException",
            "java.util.ServiceLoader",
            "java.sql.SQLClientInfoException",
            "java.sql.SQLDataException",
            "java.sql.SQLException",
            "java.sql.SQLFeatureNotSupportedException",
            "java.sql.SQLIntegrityConstraintViolationException",
            "java.sql.SQLInvalidAuthorizationSpecException",
            "java.sql.SQLNonTransientConnectionException",
            "java.sql.SQLNonTransientException",
            "java.sql.SQLRecoverableException",
            "java.sql.SQLSyntaxErrorException",
            "java.sql.SQLTimeoutException",
            "java.sql.SQLTransactionRollbackException",
            "java.sql.SQLTransientConnectionException",
            "java.sql.SQLTransientException",
            "java.sql.SQLWarning",
            "java.util.Stack",
            "javax.sql.rowset.spi.SyncFactoryException",
            "java.util.concurrent.SynchronousQueue",
            "javax.sql.rowset.spi.SyncProviderException",
            "java.util.TreeSet",
            "java.util.Vector"
        ],
        "Method": {
            "iterator": {
                "Parameter": {},
                "Throw": []
            },
            "forEach": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "spliterator": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "107": {
        "Package": "java.lang",
        "Interface": "Readable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.io.BufferedReader",
            "java.io.CharArrayReader",
            "java.nio.CharBuffer",
            "java.io.FileReader",
            "java.io.FilterReader",
            "java.io.InputStreamReader",
            "java.io.LineNumberReader",
            "java.io.PipedReader",
            "java.io.PushbackReader",
            "java.io.Reader",
            "java.io.StringReader"
        ],
        "Method": {
            "read": {
                "Parameter": {
                    "cb": "CharBuffer"
                },
                "Throw": "java.nio.ReadOnlyBufferException"
            }
        }
    },
    "108": {
        "Package": "java.lang",
        "Interface": "Runnable",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.concurrent.RunnableFuture",
            "java.util.concurrent.RunnableScheduledFuture"
        ],
        "Subinterface": [
            "javax.swing.text.AsyncBoxView.ChildState",
            "java.util.concurrent.ForkJoinWorkerThread",
            "java.util.concurrent.FutureTask",
            "java.awt.image.renderable.RenderableImageProducer",
            "javax.swing.SwingWorker",
            "java.lang.Thread",
            "java.util.TimerTask"
        ],
        "Method": {
            "run": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "109": {
        "Package": "java.lang",
        "Interface": "Thread.UncaughtExceptionHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.lang.ThreadGroup"
        ],
        "Method": {
            "uncaughtException": {
                "Parameter": {
                    "t": "Thread",
                    "e": "Throwable"
                },
                "Throw": []
            }
        }
    },
    "110": {
        "Package": "java.lang.annotation",
        "Interface": "Annotation",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            },
            "annotationType": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "111": {
        "Package": "java.lang.instrument",
        "Interface": "ClassFileTransformer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "transform": {
                "Parameter": {
                    "loader": "ClassLoader",
                    "className": "String",
                    "": "Class",
                    "protectionDomain": "ProtectionDomain",
                    "classfileBuffer": "byte"
                },
                "Throw": []
            }
        }
    },
    "112": {
        "Package": "java.lang.instrument",
        "Interface": "Instrumentation",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "addTransformer": {
                "Parameter": {
                    "transformer": "ClassFileTransformer"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "removeTransformer": {
                "Parameter": {
                    "transformer": "ClassFileTransformer"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "isRetransformClassesSupported": {
                "Parameter": {},
                "Throw": []
            },
            "retransformClasses": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": []
            },
            "isRedefineClassesSupported": {
                "Parameter": {},
                "Throw": []
            },
            "redefineClasses": {
                "Parameter": {
                    "definitions": "ClassDefinition"
                },
                "Throw": "java.lang.ClassNotFoundException"
            },
            "isModifiableClass": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getAllLoadedClasses": {
                "Parameter": {},
                "Throw": []
            },
            "getInitiatedClasses": {
                "Parameter": {
                    "loader": "ClassLoader"
                },
                "Throw": []
            },
            "getObjectSize": {
                "Parameter": {
                    "objectToSize": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "appendToBootstrapClassLoaderSearch": {
                "Parameter": {
                    "jarfile": "JarFile"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "appendToSystemClassLoaderSearch": {
                "Parameter": {
                    "jarfile": "JarFile"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "isNativeMethodPrefixSupported": {
                "Parameter": {},
                "Throw": []
            },
            "setNativeMethodPrefix": {
                "Parameter": {
                    "transformer": "ClassFileTransformer",
                    "prefix": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "113": {
        "Package": "java.lang.invoke",
        "Interface": "MethodHandleInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getReferenceKind": {
                "Parameter": {},
                "Throw": []
            },
            "getDeclaringClass": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getMethodType": {
                "Parameter": {},
                "Throw": []
            },
            "reflectAs": {
                "Parameter": {
                    "": "Class",
                    "lookup": "MethodHandles.Lookup"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getModifiers": {
                "Parameter": {},
                "Throw": []
            },
            "isVarArgs": {
                "Parameter": {},
                "Throw": []
            },
            "referenceKindToString": {
                "Parameter": {
                    "referenceKind": "int"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "toString": {
                "Parameter": {
                    "kind": "int",
                    "": "Class",
                    "name": "String",
                    "type": "MethodType"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "114": {
        "Package": "java.lang.management",
        "Interface": "BufferPoolMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getCount": {
                "Parameter": {},
                "Throw": []
            },
            "getTotalCapacity": {
                "Parameter": {},
                "Throw": []
            },
            "getMemoryUsed": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "115": {
        "Package": "java.lang.management",
        "Interface": "ClassLoadingMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getTotalLoadedClassCount": {
                "Parameter": {},
                "Throw": []
            },
            "getLoadedClassCount": {
                "Parameter": {},
                "Throw": []
            },
            "getUnloadedClassCount": {
                "Parameter": {},
                "Throw": []
            },
            "isVerbose": {
                "Parameter": {},
                "Throw": []
            },
            "setVerbose": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": "java.lang.SecurityException"
            }
        }
    },
    "116": {
        "Package": "java.lang.management",
        "Interface": "CompilationMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "isCompilationTimeMonitoringSupported": {
                "Parameter": {},
                "Throw": []
            },
            "getTotalCompilationTime": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            }
        }
    },
    "117": {
        "Package": "java.lang.management",
        "Interface": "GarbageCollectorMXBean",
        "Superinterface": [
            "java.lang.management.MemoryManagerMXBean",
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getCollectionCount": {
                "Parameter": {},
                "Throw": []
            },
            "getCollectionTime": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "118": {
        "Package": "java.lang.management",
        "Interface": "MemoryManagerMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": [
            "java.lang.management.GarbageCollectorMXBean"
        ],
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "isValid": {
                "Parameter": {},
                "Throw": []
            },
            "getMemoryPoolNames": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "119": {
        "Package": "java.lang.management",
        "Interface": "MemoryMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getObjectPendingFinalizationCount": {
                "Parameter": {},
                "Throw": []
            },
            "getHeapMemoryUsage": {
                "Parameter": {},
                "Throw": []
            },
            "getNonHeapMemoryUsage": {
                "Parameter": {},
                "Throw": []
            },
            "isVerbose": {
                "Parameter": {},
                "Throw": []
            },
            "setVerbose": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": "java.lang.SecurityException"
            },
            "gc": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "120": {
        "Package": "java.lang.management",
        "Interface": "MemoryPoolMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getType": {
                "Parameter": {},
                "Throw": []
            },
            "getUsage": {
                "Parameter": {},
                "Throw": []
            },
            "getPeakUsage": {
                "Parameter": {},
                "Throw": []
            },
            "resetPeakUsage": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "isValid": {
                "Parameter": {},
                "Throw": []
            },
            "getMemoryManagerNames": {
                "Parameter": {},
                "Throw": []
            },
            "getUsageThreshold": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "setUsageThreshold": {
                "Parameter": {
                    "threshold": "long"
                },
                "Throw": "java.lang.SecurityException"
            },
            "isUsageThresholdExceeded": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getUsageThresholdCount": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "isUsageThresholdSupported": {
                "Parameter": {},
                "Throw": []
            },
            "getCollectionUsageThreshold": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "setCollectionUsageThreshold": {
                "Parameter": {
                    "threshold": "long"
                },
                "Throw": "java.lang.SecurityException"
            },
            "isCollectionUsageThresholdExceeded": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getCollectionUsageThresholdCount": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getCollectionUsage": {
                "Parameter": {},
                "Throw": []
            },
            "isCollectionUsageThresholdSupported": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "121": {
        "Package": "java.lang.management",
        "Interface": "OperatingSystemMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getArch": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getVersion": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getAvailableProcessors": {
                "Parameter": {},
                "Throw": []
            },
            "getSystemLoadAverage": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "122": {
        "Package": "java.lang.management",
        "Interface": "PlatformLoggingMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getLoggerNames": {
                "Parameter": {},
                "Throw": []
            },
            "getLoggerLevel": {
                "Parameter": {
                    "loggerName": "String"
                },
                "Throw": []
            },
            "setLoggerLevel": {
                "Parameter": {
                    "loggerName": "String",
                    "levelName": "String"
                },
                "Throw": "java.lang.SecurityException"
            },
            "getParentLoggerName": {
                "Parameter": {
                    "loggerName": "String"
                },
                "Throw": []
            }
        }
    },
    "123": {
        "Package": "java.lang.management",
        "Interface": "PlatformManagedObject",
        "Superinterface": null,
        "Implementing Class": [
            "java.lang.management.BufferPoolMXBean",
            "java.lang.management.ClassLoadingMXBean",
            "java.lang.management.CompilationMXBean",
            "java.lang.management.GarbageCollectorMXBean",
            "java.lang.management.MemoryManagerMXBean",
            "java.lang.management.MemoryMXBean",
            "java.lang.management.MemoryPoolMXBean",
            "java.lang.management.OperatingSystemMXBean",
            "java.lang.management.PlatformLoggingMXBean",
            "java.lang.management.RuntimeMXBean",
            "java.lang.management.ThreadMXBean"
        ],
        "Subinterface": null,
        "Method": {
            "getObjectName": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "124": {
        "Package": "java.lang.management",
        "Interface": "RuntimeMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getVmName": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getVmVendor": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getVmVersion": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getSpecName": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getSpecVendor": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getSpecVersion": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getManagementSpecVersion": {
                "Parameter": {},
                "Throw": []
            },
            "getClassPath": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getLibraryPath": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "isBootClassPathSupported": {
                "Parameter": {},
                "Throw": []
            },
            "getBootClassPath": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getInputArguments": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getUptime": {
                "Parameter": {},
                "Throw": []
            },
            "getStartTime": {
                "Parameter": {},
                "Throw": []
            },
            "getSystemProperties": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            }
        }
    },
    "125": {
        "Package": "java.lang.management",
        "Interface": "ThreadMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getThreadCount": {
                "Parameter": {},
                "Throw": []
            },
            "getPeakThreadCount": {
                "Parameter": {},
                "Throw": []
            },
            "getTotalStartedThreadCount": {
                "Parameter": {},
                "Throw": []
            },
            "getDaemonThreadCount": {
                "Parameter": {},
                "Throw": []
            },
            "getAllThreadIds": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getThreadInfo": {
                "Parameter": {
                    "ids": "long",
                    "lockedMonitors": "boolean",
                    "lockedSynchronizers": "boolean"
                },
                "Throw": []
            },
            "isThreadContentionMonitoringSupported": {
                "Parameter": {},
                "Throw": []
            },
            "isThreadContentionMonitoringEnabled": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "setThreadContentionMonitoringEnabled": {
                "Parameter": {
                    "enable": "boolean"
                },
                "Throw": "java.lang.SecurityException"
            },
            "getCurrentThreadCpuTime": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getCurrentThreadUserTime": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getThreadCpuTime": {
                "Parameter": {
                    "id": "long"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getThreadUserTime": {
                "Parameter": {
                    "id": "long"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "isThreadCpuTimeSupported": {
                "Parameter": {},
                "Throw": []
            },
            "isCurrentThreadCpuTimeSupported": {
                "Parameter": {},
                "Throw": []
            },
            "isThreadCpuTimeEnabled": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "setThreadCpuTimeEnabled": {
                "Parameter": {
                    "enable": "boolean"
                },
                "Throw": "java.lang.SecurityException"
            },
            "findMonitorDeadlockedThreads": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "resetPeakThreadCount": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "findDeadlockedThreads": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "isObjectMonitorUsageSupported": {
                "Parameter": {},
                "Throw": []
            },
            "isSynchronizerUsageSupported": {
                "Parameter": {},
                "Throw": []
            },
            "dumpAllThreads": {
                "Parameter": {
                    "lockedMonitors": "boolean",
                    "lockedSynchronizers": "boolean"
                },
                "Throw": []
            }
        }
    },
    "126": {
        "Package": "java.lang.reflect",
        "Interface": "AnnotatedArrayType",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement",
            "java.lang.reflect.AnnotatedType"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAnnotatedGenericComponentType": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "127": {
        "Package": "java.lang.reflect",
        "Interface": "AnnotatedElement",
        "Superinterface": null,
        "Implementing Class": [
            "java.lang.reflect.AnnotatedArrayType",
            "java.lang.reflect.AnnotatedParameterizedType",
            "java.lang.reflect.AnnotatedType",
            "java.lang.reflect.AnnotatedTypeVariable",
            "java.lang.reflect.AnnotatedWildcardType",
            "java.lang.reflect.GenericDeclaration",
            "java.lang.reflect.TypeVariable"
        ],
        "Subinterface": [
            "java.lang.reflect.AccessibleObject",
            "java.lang.Class",
            "java.lang.reflect.Constructor",
            "java.lang.reflect.Executable",
            "java.lang.reflect.Field",
            "java.lang.reflect.Method",
            "java.lang.Package",
            "java.lang.reflect.Parameter"
        ],
        "Method": {
            "isAnnotationPresent": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getAnnotation": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getAnnotations": {
                "Parameter": {},
                "Throw": []
            },
            "getAnnotationsByType": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getDeclaredAnnotation": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getDeclaredAnnotationsByType": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getDeclaredAnnotations": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "128": {
        "Package": "java.lang.reflect",
        "Interface": "AnnotatedParameterizedType",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement",
            "java.lang.reflect.AnnotatedType"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAnnotatedActualTypeArguments": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "129": {
        "Package": "java.lang.reflect",
        "Interface": "AnnotatedType",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement"
        ],
        "Implementing Class": [
            "java.lang.reflect.AnnotatedArrayType",
            "java.lang.reflect.AnnotatedParameterizedType",
            "java.lang.reflect.AnnotatedTypeVariable",
            "java.lang.reflect.AnnotatedWildcardType"
        ],
        "Subinterface": null,
        "Method": {
            "getType": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "130": {
        "Package": "java.lang.reflect",
        "Interface": "AnnotatedTypeVariable",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement",
            "java.lang.reflect.AnnotatedType"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAnnotatedBounds": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "131": {
        "Package": "java.lang.reflect",
        "Interface": "AnnotatedWildcardType",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement",
            "java.lang.reflect.AnnotatedType"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAnnotatedLowerBounds": {
                "Parameter": {},
                "Throw": []
            },
            "getAnnotatedUpperBounds": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "132": {
        "Package": "java.lang.reflect",
        "Interface": "GenericArrayType",
        "Superinterface": [
            "java.lang.reflect.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getGenericComponentType": {
                "Parameter": {},
                "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
            }
        }
    },
    "133": {
        "Package": "java.lang.reflect",
        "Interface": "GenericDeclaration",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.lang.Class",
            "java.lang.reflect.Constructor",
            "java.lang.reflect.Executable",
            "java.lang.reflect.Method"
        ],
        "Method": {
            "getTypeParameters": {
                "Parameter": {},
                "Throw": "java.lang.reflect.GenericSignatureFormatError"
            }
        }
    },
    "134": {
        "Package": "java.lang.reflect",
        "Interface": "InvocationHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.CompositeDataInvocationHandler",
            "java.beans.EventHandler",
            "javax.management.MBeanServerInvocationHandler",
            "java.rmi.server.RemoteObjectInvocationHandler"
        ],
        "Method": {
            "invoke": {
                "Parameter": {
                    "proxy": "Object",
                    "method": "Method",
                    "args": "Object"
                },
                "Throw": "java.lang.Throwable"
            }
        }
    },
    "135": {
        "Package": "java.lang.reflect",
        "Interface": "Member",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.lang.reflect.Constructor",
            "java.lang.reflect.Executable",
            "java.lang.reflect.Field",
            "java.lang.reflect.Method"
        ],
        "Method": {
            "getDeclaringClass": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getModifiers": {
                "Parameter": {},
                "Throw": []
            },
            "isSynthetic": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "136": {
        "Package": "java.lang.reflect",
        "Interface": "ParameterizedType",
        "Superinterface": [
            "java.lang.reflect.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getActualTypeArguments": {
                "Parameter": {},
                "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
            },
            "getRawType": {
                "Parameter": {},
                "Throw": []
            },
            "getOwnerType": {
                "Parameter": {},
                "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
            }
        }
    },
    "137": {
        "Package": "java.lang.reflect",
        "Interface": "Type",
        "Superinterface": null,
        "Implementing Class": [
            "java.lang.reflect.GenericArrayType",
            "java.lang.reflect.ParameterizedType",
            "java.lang.reflect.TypeVariable",
            "java.lang.reflect.WildcardType"
        ],
        "Subinterface": [
            "java.lang.Class"
        ],
        "Method": {
            "getTypeName": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "138": {
        "Package": "java.lang.reflect",
        "Interface": "TypeVariable",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement",
            "java.lang.reflect.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getBounds": {
                "Parameter": {},
                "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
            },
            "getGenericDeclaration": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getAnnotatedBounds": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "139": {
        "Package": "java.lang.reflect",
        "Interface": "WildcardType",
        "Superinterface": [
            "java.lang.reflect.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getUpperBounds": {
                "Parameter": {},
                "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
            },
            "getLowerBounds": {
                "Parameter": {},
                "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
            }
        }
    },
    "140": {
        "Package": "java.net",
        "Interface": "ContentHandlerFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createContentHandler": {
                "Parameter": {
                    "mimetype": "String"
                },
                "Throw": []
            }
        }
    },
    "141": {
        "Package": "java.net",
        "Interface": "CookiePolicy",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "shouldAccept": {
                "Parameter": {
                    "uri": "URI",
                    "cookie": "HttpCookie"
                },
                "Throw": []
            }
        }
    },
    "142": {
        "Package": "java.net",
        "Interface": "CookieStore",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "add": {
                "Parameter": {
                    "uri": "URI",
                    "cookie": "HttpCookie"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "get": {
                "Parameter": {
                    "uri": "URI"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getCookies": {
                "Parameter": {},
                "Throw": []
            },
            "getURIs": {
                "Parameter": {},
                "Throw": []
            },
            "remove": {
                "Parameter": {
                    "uri": "URI",
                    "cookie": "HttpCookie"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "removeAll": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "143": {
        "Package": "java.net",
        "Interface": "DatagramSocketImplFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createDatagramSocketImpl": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "144": {
        "Package": "java.net",
        "Interface": "FileNameMap",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getContentTypeFor": {
                "Parameter": {
                    "fileName": "String"
                },
                "Throw": []
            }
        }
    },
    "145": {
        "Package": "java.net",
        "Interface": "ProtocolFamily",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "name": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "146": {
        "Package": "java.net",
        "Interface": "SocketImplFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createSocketImpl": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "147": {
        "Package": "java.net",
        "Interface": "SocketOption",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "name": {
                "Parameter": {},
                "Throw": []
            },
            "type": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "148": {
        "Package": "java.net",
        "Interface": "SocketOptions",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.net.DatagramSocketImpl",
            "java.net.SocketImpl"
        ],
        "Method": {
            "setOption": {
                "Parameter": {
                    "optID": "int",
                    "value": "Object"
                },
                "Throw": "java.net.SocketException"
            },
            "getOption": {
                "Parameter": {
                    "optID": "int"
                },
                "Throw": "java.net.SocketException"
            }
        }
    },
    "149": {
        "Package": "java.net",
        "Interface": "URLStreamHandlerFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createURLStreamHandler": {
                "Parameter": {
                    "protocol": "String"
                },
                "Throw": []
            }
        }
    },
    "150": {
        "Package": "java.nio.channels",
        "Interface": "AsynchronousByteChannel",
        "Superinterface": [
            "java.nio.channels.AsynchronousChannel",
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.channels.AsynchronousSocketChannel"
        ],
        "Method": {
            "read": {
                "Parameter": {
                    "dst": "ByteBuffer"
                },
                "Throw": "java.nio.channels.ReadPendingException"
            },
            "write": {
                "Parameter": {
                    "src": "ByteBuffer"
                },
                "Throw": "java.nio.channels.WritePendingException"
            }
        }
    },
    "151": {
        "Package": "java.nio.channels",
        "Interface": "AsynchronousChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable"
        ],
        "Implementing Class": [
            "java.nio.channels.AsynchronousByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.AsynchronousFileChannel",
            "java.nio.channels.AsynchronousServerSocketChannel",
            "java.nio.channels.AsynchronousSocketChannel"
        ],
        "Method": {
            "close": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            }
        }
    },
    "152": {
        "Package": "java.nio.channels",
        "Interface": "ByteChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable",
            "java.nio.channels.ReadableByteChannel",
            "java.nio.channels.WritableByteChannel"
        ],
        "Implementing Class": [
            "java.nio.channels.SeekableByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": {}
    },
    "153": {
        "Package": "java.nio.channels",
        "Interface": "Channel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable"
        ],
        "Implementing Class": [
            "java.nio.channels.AsynchronousByteChannel",
            "java.nio.channels.AsynchronousChannel",
            "java.nio.channels.ByteChannel",
            "java.nio.channels.GatheringByteChannel",
            "java.nio.channels.InterruptibleChannel",
            "java.nio.channels.MulticastChannel",
            "java.nio.channels.NetworkChannel",
            "java.nio.channels.ReadableByteChannel",
            "java.nio.channels.ScatteringByteChannel",
            "java.nio.channels.SeekableByteChannel",
            "java.nio.channels.WritableByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.spi.AbstractInterruptibleChannel",
            "java.nio.channels.spi.AbstractSelectableChannel",
            "java.nio.channels.AsynchronousFileChannel",
            "java.nio.channels.AsynchronousServerSocketChannel",
            "java.nio.channels.AsynchronousSocketChannel",
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.Pipe.SinkChannel",
            "java.nio.channels.Pipe.SourceChannel",
            "java.nio.channels.SelectableChannel",
            "java.nio.channels.ServerSocketChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": {
            "isOpen": {
                "Parameter": {},
                "Throw": []
            },
            "close": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            }
        }
    },
    "154": {
        "Package": "java.nio.channels",
        "Interface": "CompletionHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "completed": {
                "Parameter": {
                    "result": "V",
                    "attachment": "A"
                },
                "Throw": []
            },
            "failed": {
                "Parameter": {
                    "exc": "Throwable",
                    "attachment": "A"
                },
                "Throw": []
            }
        }
    },
    "155": {
        "Package": "java.nio.channels",
        "Interface": "GatheringByteChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable",
            "java.nio.channels.WritableByteChannel"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.Pipe.SinkChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": {
            "write": {
                "Parameter": {
                    "srcs": "ByteBuffer"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "156": {
        "Package": "java.nio.channels",
        "Interface": "InterruptibleChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.channels.spi.AbstractInterruptibleChannel",
            "java.nio.channels.spi.AbstractSelectableChannel",
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.Pipe.SinkChannel",
            "java.nio.channels.Pipe.SourceChannel",
            "java.nio.channels.SelectableChannel",
            "java.nio.channels.ServerSocketChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": {
            "close": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            }
        }
    },
    "157": {
        "Package": "java.nio.channels",
        "Interface": "MulticastChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable",
            "java.nio.channels.NetworkChannel"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.channels.DatagramChannel"
        ],
        "Method": {
            "close": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "join": {
                "Parameter": {
                    "group": "InetAddress",
                    "interf": "NetworkInterface",
                    "source": "InetAddress"
                },
                "Throw": "java.lang.SecurityException"
            }
        }
    },
    "158": {
        "Package": "java.nio.channels",
        "Interface": "NetworkChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable"
        ],
        "Implementing Class": [
            "java.nio.channels.MulticastChannel"
        ],
        "Subinterface": [
            "java.nio.channels.AsynchronousServerSocketChannel",
            "java.nio.channels.AsynchronousSocketChannel",
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.ServerSocketChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": {
            "bind": {
                "Parameter": {
                    "local": "SocketAddress"
                },
                "Throw": "java.lang.SecurityException"
            },
            "getLocalAddress": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "setOption": {
                "Parameter": {
                    "": "SocketOption",
                    "value": "T"
                },
                "Throw": "java.io.IOException"
            },
            "getOption": {
                "Parameter": {
                    "": "SocketOption"
                },
                "Throw": "java.io.IOException"
            },
            "supportedOptions": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "159": {
        "Package": "java.nio.channels",
        "Interface": "ReadableByteChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable"
        ],
        "Implementing Class": [
            "java.nio.channels.ByteChannel",
            "java.nio.channels.ScatteringByteChannel",
            "java.nio.channels.SeekableByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.Pipe.SourceChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": {
            "read": {
                "Parameter": {
                    "dst": "ByteBuffer"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "160": {
        "Package": "java.nio.channels",
        "Interface": "ScatteringByteChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable",
            "java.nio.channels.ReadableByteChannel"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.Pipe.SourceChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": {
            "read": {
                "Parameter": {
                    "dsts": "ByteBuffer"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "161": {
        "Package": "java.nio.channels",
        "Interface": "SeekableByteChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.ByteChannel",
            "java.nio.channels.Channel",
            "java.io.Closeable",
            "java.nio.channels.ReadableByteChannel",
            "java.nio.channels.WritableByteChannel"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.channels.FileChannel"
        ],
        "Method": {
            "read": {
                "Parameter": {
                    "dst": "ByteBuffer"
                },
                "Throw": "java.io.IOException"
            },
            "write": {
                "Parameter": {
                    "src": "ByteBuffer"
                },
                "Throw": "java.io.IOException"
            },
            "position": {
                "Parameter": {
                    "newPosition": "long"
                },
                "Throw": "java.io.IOException"
            },
            "size": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "truncate": {
                "Parameter": {
                    "size": "long"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "162": {
        "Package": "java.nio.channels",
        "Interface": "WritableByteChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable"
        ],
        "Implementing Class": [
            "java.nio.channels.ByteChannel",
            "java.nio.channels.GatheringByteChannel",
            "java.nio.channels.SeekableByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.Pipe.SinkChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": {
            "write": {
                "Parameter": {
                    "src": "ByteBuffer"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "163": {
        "Package": "java.nio.file",
        "Interface": "CopyOption",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "164": {
        "Package": "java.nio.file",
        "Interface": "DirectoryStream.Filter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "entry": "T"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "165": {
        "Package": "java.nio.file",
        "Interface": "DirectoryStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.lang.Iterable"
        ],
        "Implementing Class": [
            "java.nio.file.SecureDirectoryStream"
        ],
        "Subinterface": null,
        "Method": {
            "iterator": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            }
        }
    },
    "166": {
        "Package": "java.nio.file",
        "Interface": "FileVisitor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.file.SimpleFileVisitor"
        ],
        "Method": {
            "preVisitDirectory": {
                "Parameter": {
                    "dir": "T",
                    "attrs": "BasicFileAttributes"
                },
                "Throw": "java.io.IOException"
            },
            "visitFile": {
                "Parameter": {
                    "file": "T",
                    "attrs": "BasicFileAttributes"
                },
                "Throw": "java.io.IOException"
            },
            "visitFileFailed": {
                "Parameter": {
                    "file": "T",
                    "exc": "IOException"
                },
                "Throw": "java.io.IOException"
            },
            "postVisitDirectory": {
                "Parameter": {
                    "dir": "T",
                    "exc": "IOException"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "167": {
        "Package": "java.nio.file",
        "Interface": "OpenOption",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "168": {
        "Package": "java.nio.file",
        "Interface": "Path",
        "Superinterface": [
            "java.lang.Comparable",
            "java.nio.file.Path",
            "java.lang.Iterable",
            "java.nio.file.Path",
            "java.nio.file.Watchable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getFileSystem": {
                "Parameter": {},
                "Throw": []
            },
            "isAbsolute": {
                "Parameter": {},
                "Throw": []
            },
            "getRoot": {
                "Parameter": {},
                "Throw": []
            },
            "getFileName": {
                "Parameter": {},
                "Throw": []
            },
            "getParent": {
                "Parameter": {},
                "Throw": []
            },
            "getNameCount": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "subpath": {
                "Parameter": {
                    "beginIndex": "int",
                    "endIndex": "int"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "startsWith": {
                "Parameter": {
                    "other": "String"
                },
                "Throw": "java.nio.file.InvalidPathException"
            },
            "endsWith": {
                "Parameter": {
                    "other": "String"
                },
                "Throw": "java.nio.file.InvalidPathException"
            },
            "normalize": {
                "Parameter": {},
                "Throw": []
            },
            "resolve": {
                "Parameter": {
                    "other": "String"
                },
                "Throw": "java.nio.file.InvalidPathException"
            },
            "resolveSibling": {
                "Parameter": {
                    "other": "String"
                },
                "Throw": "java.nio.file.InvalidPathException"
            },
            "relativize": {
                "Parameter": {
                    "other": "Path"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "toUri": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "toAbsolutePath": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "toRealPath": {
                "Parameter": {
                    "options": "LinkOption"
                },
                "Throw": "java.lang.SecurityException"
            },
            "toFile": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "register": {
                "Parameter": {
                    "watcher": "WatchService",
                    "": "WatchEvent.Kind"
                },
                "Throw": "java.lang.SecurityException"
            },
            "iterator": {
                "Parameter": {},
                "Throw": []
            },
            "compareTo": {
                "Parameter": {
                    "other": "Path"
                },
                "Throw": "java.lang.ClassCastException"
            },
            "equals": {
                "Parameter": {
                    "other": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "169": {
        "Package": "java.nio.file",
        "Interface": "PathMatcher",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "matches": {
                "Parameter": {
                    "path": "Path"
                },
                "Throw": []
            }
        }
    },
    "170": {
        "Package": "java.nio.file",
        "Interface": "SecureDirectoryStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.nio.file.DirectoryStream",
            "java.lang.Iterable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "newDirectoryStream": {
                "Parameter": {
                    "path": "T",
                    "options": "LinkOption"
                },
                "Throw": "java.lang.SecurityException"
            },
            "newByteChannel": {
                "Parameter": {
                    "path": "T",
                    "": "FileAttribute"
                },
                "Throw": "java.lang.SecurityException"
            },
            "deleteFile": {
                "Parameter": {
                    "path": "T"
                },
                "Throw": "java.lang.SecurityException"
            },
            "deleteDirectory": {
                "Parameter": {
                    "path": "T"
                },
                "Throw": "java.lang.SecurityException"
            },
            "move": {
                "Parameter": {
                    "srcpath": "T",
                    "": "SecureDirectoryStream",
                    "targetpath": "T"
                },
                "Throw": "java.lang.SecurityException"
            },
            "getFileAttributeView": {
                "Parameter": {
                    "path": "T",
                    "": "Class",
                    "options": "LinkOption"
                },
                "Throw": []
            }
        }
    },
    "171": {
        "Package": "java.nio.file",
        "Interface": "Watchable",
        "Superinterface": null,
        "Implementing Class": [
            "java.nio.file.Path"
        ],
        "Subinterface": null,
        "Method": {
            "register": {
                "Parameter": {
                    "watcher": "WatchService",
                    "": "WatchEvent.Kind"
                },
                "Throw": "java.lang.SecurityException"
            }
        }
    },
    "172": {
        "Package": "java.nio.file",
        "Interface": "WatchEvent",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "kind": {
                "Parameter": {},
                "Throw": []
            },
            "count": {
                "Parameter": {},
                "Throw": []
            },
            "context": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "173": {
        "Package": "java.nio.file",
        "Interface": "WatchEvent.Kind",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "name": {
                "Parameter": {},
                "Throw": []
            },
            "type": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "174": {
        "Package": "java.nio.file",
        "Interface": "WatchEvent.Modifier",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "name": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "175": {
        "Package": "java.nio.file",
        "Interface": "WatchKey",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "isValid": {
                "Parameter": {},
                "Throw": []
            },
            "pollEvents": {
                "Parameter": {},
                "Throw": []
            },
            "reset": {
                "Parameter": {},
                "Throw": []
            },
            "cancel": {
                "Parameter": {},
                "Throw": []
            },
            "watchable": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "176": {
        "Package": "java.nio.file",
        "Interface": "WatchService",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "close": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "poll": {
                "Parameter": {
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.InterruptedException"
            },
            "take": {
                "Parameter": {},
                "Throw": "java.lang.InterruptedException"
            }
        }
    },
    "177": {
        "Package": "java.nio.file.attribute",
        "Interface": "AclFileAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView",
            "java.nio.file.attribute.FileAttributeView",
            "java.nio.file.attribute.FileOwnerAttributeView"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "name": {
                "Parameter": {},
                "Throw": []
            },
            "getAcl": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "setAcl": {
                "Parameter": {
                    "": "List"
                },
                "Throw": "java.lang.SecurityException"
            }
        }
    },
    "178": {
        "Package": "java.nio.file.attribute",
        "Interface": "AttributeView",
        "Superinterface": null,
        "Implementing Class": [
            "java.nio.file.attribute.AclFileAttributeView",
            "java.nio.file.attribute.BasicFileAttributeView",
            "java.nio.file.attribute.DosFileAttributeView",
            "java.nio.file.attribute.FileAttributeView",
            "java.nio.file.attribute.FileOwnerAttributeView",
            "java.nio.file.attribute.FileStoreAttributeView",
            "java.nio.file.attribute.PosixFileAttributeView",
            "java.nio.file.attribute.UserDefinedFileAttributeView"
        ],
        "Subinterface": null,
        "Method": {
            "name": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "179": {
        "Package": "java.nio.file.attribute",
        "Interface": "BasicFileAttributes",
        "Superinterface": null,
        "Implementing Class": [
            "java.nio.file.attribute.DosFileAttributes",
            "java.nio.file.attribute.PosixFileAttributes"
        ],
        "Subinterface": null,
        "Method": {
            "lastModifiedTime": {
                "Parameter": {},
                "Throw": []
            },
            "lastAccessTime": {
                "Parameter": {},
                "Throw": []
            },
            "creationTime": {
                "Parameter": {},
                "Throw": []
            },
            "isRegularFile": {
                "Parameter": {},
                "Throw": []
            },
            "isDirectory": {
                "Parameter": {},
                "Throw": []
            },
            "isSymbolicLink": {
                "Parameter": {},
                "Throw": []
            },
            "isOther": {
                "Parameter": {},
                "Throw": []
            },
            "size": {
                "Parameter": {},
                "Throw": []
            },
            "fileKey": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "180": {
        "Package": "java.nio.file.attribute",
        "Interface": "BasicFileAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView",
            "java.nio.file.attribute.FileAttributeView"
        ],
        "Implementing Class": [
            "java.nio.file.attribute.DosFileAttributeView",
            "java.nio.file.attribute.PosixFileAttributeView"
        ],
        "Subinterface": null,
        "Method": {
            "name": {
                "Parameter": {},
                "Throw": []
            },
            "readAttributes": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "setTimes": {
                "Parameter": {
                    "lastModifiedTime": "FileTime",
                    "lastAccessTime": "FileTime",
                    "createTime": "FileTime"
                },
                "Throw": "java.lang.SecurityException"
            }
        }
    },
    "181": {
        "Package": "java.nio.file.attribute",
        "Interface": "DosFileAttributes",
        "Superinterface": [
            "java.nio.file.attribute.BasicFileAttributes"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "isReadOnly": {
                "Parameter": {},
                "Throw": []
            },
            "isHidden": {
                "Parameter": {},
                "Throw": []
            },
            "isArchive": {
                "Parameter": {},
                "Throw": []
            },
            "isSystem": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "182": {
        "Package": "java.nio.file.attribute",
        "Interface": "DosFileAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView",
            "java.nio.file.attribute.BasicFileAttributeView",
            "java.nio.file.attribute.FileAttributeView"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "name": {
                "Parameter": {},
                "Throw": []
            },
            "readAttributes": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "setReadOnly": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": "java.lang.SecurityException"
            },
            "setHidden": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": "java.lang.SecurityException"
            },
            "setSystem": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": "java.lang.SecurityException"
            },
            "setArchive": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": "java.lang.SecurityException"
            }
        }
    },
    "183": {
        "Package": "java.nio.file.attribute",
        "Interface": "FileAttribute",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "name": {
                "Parameter": {},
                "Throw": []
            },
            "value": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "184": {
        "Package": "java.nio.file.attribute",
        "Interface": "FileAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView"
        ],
        "Implementing Class": [
            "java.nio.file.attribute.AclFileAttributeView",
            "java.nio.file.attribute.BasicFileAttributeView",
            "java.nio.file.attribute.DosFileAttributeView",
            "java.nio.file.attribute.FileOwnerAttributeView",
            "java.nio.file.attribute.PosixFileAttributeView",
            "java.nio.file.attribute.UserDefinedFileAttributeView"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "185": {
        "Package": "java.nio.file.attribute",
        "Interface": "FileOwnerAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView",
            "java.nio.file.attribute.FileAttributeView"
        ],
        "Implementing Class": [
            "java.nio.file.attribute.AclFileAttributeView",
            "java.nio.file.attribute.PosixFileAttributeView"
        ],
        "Subinterface": null,
        "Method": {
            "name": {
                "Parameter": {},
                "Throw": []
            },
            "getOwner": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "setOwner": {
                "Parameter": {
                    "owner": "UserPrincipal"
                },
                "Throw": "java.lang.SecurityException"
            }
        }
    },
    "186": {
        "Package": "java.nio.file.attribute",
        "Interface": "FileStoreAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "187": {
        "Package": "java.nio.file.attribute",
        "Interface": "GroupPrincipal",
        "Superinterface": [
            "java.security.Principal",
            "java.nio.file.attribute.UserPrincipal"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "188": {
        "Package": "java.nio.file.attribute",
        "Interface": "PosixFileAttributes",
        "Superinterface": [
            "java.nio.file.attribute.BasicFileAttributes"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "owner": {
                "Parameter": {},
                "Throw": []
            },
            "group": {
                "Parameter": {},
                "Throw": []
            },
            "permissions": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "189": {
        "Package": "java.nio.file.attribute",
        "Interface": "PosixFileAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView",
            "java.nio.file.attribute.BasicFileAttributeView",
            "java.nio.file.attribute.FileAttributeView",
            "java.nio.file.attribute.FileOwnerAttributeView"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "name": {
                "Parameter": {},
                "Throw": []
            },
            "readAttributes": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "setPermissions": {
                "Parameter": {
                    "": "Set"
                },
                "Throw": "java.lang.SecurityException"
            },
            "setGroup": {
                "Parameter": {
                    "group": "GroupPrincipal"
                },
                "Throw": "java.lang.SecurityException"
            }
        }
    },
    "190": {
        "Package": "java.nio.file.attribute",
        "Interface": "UserDefinedFileAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView",
            "java.nio.file.attribute.FileAttributeView"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "name": {
                "Parameter": {},
                "Throw": []
            },
            "list": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "size": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.SecurityException"
            },
            "read": {
                "Parameter": {
                    "name": "String",
                    "dst": "ByteBuffer"
                },
                "Throw": "java.lang.SecurityException"
            },
            "write": {
                "Parameter": {
                    "name": "String",
                    "src": "ByteBuffer"
                },
                "Throw": "java.lang.SecurityException"
            },
            "delete": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.SecurityException"
            }
        }
    },
    "191": {
        "Package": "java.nio.file.attribute",
        "Interface": "UserPrincipal",
        "Superinterface": [
            "java.security.Principal"
        ],
        "Implementing Class": [
            "java.nio.file.attribute.GroupPrincipal"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "192": {
        "Package": "java.rmi",
        "Interface": "Remote",
        "Superinterface": null,
        "Implementing Class": [
            "java.rmi.activation.ActivationInstantiator",
            "java.rmi.activation.ActivationMonitor",
            "java.rmi.activation.ActivationSystem",
            "java.rmi.activation.Activator",
            "java.rmi.dgc.DGC",
            "java.rmi.registry.Registry",
            "javax.management.remote.rmi.RMIConnection",
            "javax.management.remote.rmi.RMIServer"
        ],
        "Subinterface": [
            "org.omg.stub.java.rmi._Remote_Stub",
            "java.rmi.activation.Activatable",
            "java.rmi.activation.ActivationGroup",
            "java.rmi.activation.ActivationGroup_Stub",
            "java.rmi.server.RemoteObject",
            "java.rmi.server.RemoteObjectInvocationHandler",
            "java.rmi.server.RemoteServer",
            "java.rmi.server.RemoteStub",
            "javax.management.remote.rmi.RMIConnectionImpl",
            "javax.management.remote.rmi.RMIConnectionImpl_Stub",
            "javax.management.remote.rmi.RMIIIOPServerImpl",
            "javax.management.remote.rmi.RMIJRMPServerImpl",
            "javax.management.remote.rmi.RMIServerImpl",
            "javax.management.remote.rmi.RMIServerImpl_Stub",
            "java.rmi.server.UnicastRemoteObject"
        ],
        "Method": {}
    },
    "193": {
        "Package": "java.rmi.activation",
        "Interface": "ActivationInstantiator",
        "Superinterface": [
            "java.rmi.Remote"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.rmi.activation.ActivationGroup",
            "java.rmi.activation.ActivationGroup_Stub"
        ],
        "Method": {
            "newInstance": {
                "Parameter": {
                    "id": "ActivationID",
                    "desc": "ActivationDesc"
                },
                "Throw": "java.rmi.RemoteException"
            }
        }
    },
    "194": {
        "Package": "java.rmi.activation",
        "Interface": "ActivationMonitor",
        "Superinterface": [
            "java.rmi.Remote"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "inactiveObject": {
                "Parameter": {
                    "id": "ActivationID"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "activeObject": {
                "Parameter": {
                    "id": "ActivationID",
                    "": "MarshalledObject"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "inactiveGroup": {
                "Parameter": {
                    "id": "ActivationGroupID",
                    "incarnation": "long"
                },
                "Throw": "java.rmi.RemoteException"
            }
        }
    },
    "195": {
        "Package": "java.rmi.activation",
        "Interface": "ActivationSystem",
        "Superinterface": [
            "java.rmi.Remote"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "registerObject": {
                "Parameter": {
                    "desc": "ActivationDesc"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "unregisterObject": {
                "Parameter": {
                    "id": "ActivationID"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "registerGroup": {
                "Parameter": {
                    "desc": "ActivationGroupDesc"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "activeGroup": {
                "Parameter": {
                    "id": "ActivationGroupID",
                    "group": "ActivationInstantiator",
                    "incarnation": "long"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "unregisterGroup": {
                "Parameter": {
                    "id": "ActivationGroupID"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "shutdown": {
                "Parameter": {},
                "Throw": "java.rmi.RemoteException"
            },
            "setActivationDesc": {
                "Parameter": {
                    "id": "ActivationID",
                    "desc": "ActivationDesc"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "setActivationGroupDesc": {
                "Parameter": {
                    "id": "ActivationGroupID",
                    "desc": "ActivationGroupDesc"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "getActivationDesc": {
                "Parameter": {
                    "id": "ActivationID"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "getActivationGroupDesc": {
                "Parameter": {
                    "id": "ActivationGroupID"
                },
                "Throw": "java.rmi.RemoteException"
            }
        }
    },
    "196": {
        "Package": "java.rmi.activation",
        "Interface": "Activator",
        "Superinterface": [
            "java.rmi.Remote"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "activate": {
                "Parameter": {
                    "id": "ActivationID",
                    "force": "boolean"
                },
                "Throw": "java.rmi.RemoteException"
            }
        }
    },
    "197": {
        "Package": "java.rmi.dgc",
        "Interface": "DGC",
        "Superinterface": [
            "java.rmi.Remote"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "dirty": {
                "Parameter": {
                    "ids": "ObjID",
                    "sequenceNum": "long",
                    "lease": "Lease"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "clean": {
                "Parameter": {
                    "ids": "ObjID",
                    "sequenceNum": "long",
                    "vmid": "VMID",
                    "strong": "boolean"
                },
                "Throw": "java.rmi.RemoteException"
            }
        }
    },
    "198": {
        "Package": "java.rmi.registry",
        "Interface": "Registry",
        "Superinterface": [
            "java.rmi.Remote"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "lookup": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "bind": {
                "Parameter": {
                    "name": "String",
                    "obj": "Remote"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "unbind": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "rebind": {
                "Parameter": {
                    "name": "String",
                    "obj": "Remote"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "list": {
                "Parameter": {},
                "Throw": "java.rmi.AccessException"
            }
        }
    },
    "199": {
        "Package": "java.rmi.registry",
        "Interface": "RegistryHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "registryStub": {
                "Parameter": {
                    "host": "String",
                    "port": "int"
                },
                "Throw": "java.rmi.UnknownHostException"
            },
            "registryImpl": {
                "Parameter": {
                    "port": "int"
                },
                "Throw": "java.rmi.RemoteException"
            }
        }
    },
    "200": {
        "Package": "java.rmi.server",
        "Interface": "LoaderHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "loadClass": {
                "Parameter": {
                    "codebase": "URL",
                    "name": "String"
                },
                "Throw": "java.lang.ClassNotFoundException"
            },
            "getSecurityContext": {
                "Parameter": {
                    "loader": "ClassLoader"
                },
                "Throw": []
            }
        }
    },
    "201": {
        "Package": "java.rmi.server",
        "Interface": "RemoteCall",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getOutputStream": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "releaseOutputStream": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "getInputStream": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "releaseInputStream": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "getResultStream": {
                "Parameter": {
                    "success": "boolean"
                },
                "Throw": "java.io.StreamCorruptedException"
            },
            "executeCall": {
                "Parameter": {},
                "Throw": "java.lang.Exception"
            },
            "done": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            }
        }
    },
    "202": {
        "Package": "java.rmi.server",
        "Interface": "RemoteRef",
        "Superinterface": [
            "java.io.Externalizable",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "java.rmi.server.ServerRef"
        ],
        "Subinterface": null,
        "Method": {
            "invoke": {
                "Parameter": {
                    "call": "RemoteCall"
                },
                "Throw": "java.lang.Exception"
            },
            "newCall": {
                "Parameter": {
                    "obj": "RemoteObject",
                    "op": "Operation",
                    "opnum": "int",
                    "hash": "long"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "done": {
                "Parameter": {
                    "call": "RemoteCall"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "getRefClass": {
                "Parameter": {
                    "out": "ObjectOutput"
                },
                "Throw": []
            },
            "remoteHashCode": {
                "Parameter": {},
                "Throw": []
            },
            "remoteEquals": {
                "Parameter": {
                    "obj": "RemoteRef"
                },
                "Throw": []
            },
            "remoteToString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "203": {
        "Package": "java.rmi.server",
        "Interface": "RMIClientSocketFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.rmi.server.RMISocketFactory",
            "javax.rmi.ssl.SslRMIClientSocketFactory"
        ],
        "Method": {
            "createSocket": {
                "Parameter": {
                    "host": "String",
                    "port": "int"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "204": {
        "Package": "java.rmi.server",
        "Interface": "RMIFailureHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "failure": {
                "Parameter": {
                    "ex": "Exception"
                },
                "Throw": []
            }
        }
    },
    "205": {
        "Package": "java.rmi.server",
        "Interface": "RMIServerSocketFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.rmi.server.RMISocketFactory",
            "javax.rmi.ssl.SslRMIServerSocketFactory"
        ],
        "Method": {
            "createServerSocket": {
                "Parameter": {
                    "port": "int"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "206": {
        "Package": "java.rmi.server",
        "Interface": "ServerRef",
        "Superinterface": [
            "java.io.Externalizable",
            "java.rmi.server.RemoteRef",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "exportObject": {
                "Parameter": {
                    "obj": "Remote",
                    "data": "Object"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "getClientHost": {
                "Parameter": {},
                "Throw": "java.rmi.server.ServerNotActiveException"
            }
        }
    },
    "207": {
        "Package": "java.rmi.server",
        "Interface": "Skeleton",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "dispatch": {
                "Parameter": {
                    "obj": "Remote",
                    "theCall": "RemoteCall",
                    "opnum": "int",
                    "hash": "long"
                },
                "Throw": "java.lang.Exception"
            },
            "getOperations": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "208": {
        "Package": "java.rmi.server",
        "Interface": "Unreferenced",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.remote.rmi.RMIConnectionImpl"
        ],
        "Method": {
            "unreferenced": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "209": {
        "Package": "java.security",
        "Interface": "AlgorithmConstraints",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "permits": {
                "Parameter": {
                    "": "Set",
                    "algorithm": "String",
                    "key": "Key",
                    "parameters": "AlgorithmParameters"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "210": {
        "Package": "java.security",
        "Interface": "Certificate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getGuarantor": {
                "Parameter": {},
                "Throw": []
            },
            "getPrincipal": {
                "Parameter": {},
                "Throw": []
            },
            "getPublicKey": {
                "Parameter": {},
                "Throw": []
            },
            "encode": {
                "Parameter": {
                    "stream": "OutputStream"
                },
                "Throw": "java.io.IOException"
            },
            "decode": {
                "Parameter": {
                    "stream": "InputStream"
                },
                "Throw": "java.io.IOException"
            },
            "getFormat": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {
                    "detailed": "boolean"
                },
                "Throw": []
            }
        }
    },
    "211": {
        "Package": "java.security",
        "Interface": "DomainCombiner",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.security.auth.SubjectDomainCombiner"
        ],
        "Method": {
            "combine": {
                "Parameter": {
                    "currentDomains": "ProtectionDomain",
                    "assignedDomains": "ProtectionDomain"
                },
                "Throw": []
            }
        }
    },
    "212": {
        "Package": "java.security",
        "Interface": "Guard",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.AllPermission",
            "javax.sound.sampled.AudioPermission",
            "javax.security.auth.AuthPermission",
            "java.awt.AWTPermission",
            "java.security.BasicPermission",
            "javax.security.auth.kerberos.DelegationPermission",
            "java.io.FilePermission",
            "javax.xml.bind.JAXBPermission",
            "java.nio.file.LinkPermission",
            "java.util.logging.LoggingPermission",
            "java.lang.management.ManagementPermission",
            "javax.management.MBeanPermission",
            "javax.management.MBeanServerPermission",
            "javax.management.MBeanTrustPermission",
            "java.net.NetPermission",
            "java.security.Permission",
            "javax.security.auth.PrivateCredentialPermission",
            "java.util.PropertyPermission",
            "java.lang.reflect.ReflectPermission",
            "java.lang.RuntimePermission",
            "java.security.SecurityPermission",
            "java.io.SerializablePermission",
            "javax.security.auth.kerberos.ServicePermission",
            "java.net.SocketPermission",
            "java.sql.SQLPermission",
            "javax.net.ssl.SSLPermission",
            "javax.management.remote.SubjectDelegationPermission",
            "java.security.UnresolvedPermission",
            "java.net.URLPermission",
            "javax.xml.ws.WebServicePermission"
        ],
        "Method": {
            "checkGuard": {
                "Parameter": {
                    "object": "Object"
                },
                "Throw": "java.lang.SecurityException"
            }
        }
    },
    "213": {
        "Package": "java.security",
        "Interface": "Key",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "javax.crypto.interfaces.DHPrivateKey",
            "javax.crypto.interfaces.DHPublicKey",
            "java.security.interfaces.DSAPrivateKey",
            "java.security.interfaces.DSAPublicKey",
            "java.security.interfaces.ECPrivateKey",
            "java.security.interfaces.ECPublicKey",
            "javax.crypto.interfaces.PBEKey",
            "java.security.PrivateKey",
            "java.security.PublicKey",
            "java.security.interfaces.RSAMultiPrimePrivateCrtKey",
            "java.security.interfaces.RSAPrivateCrtKey",
            "java.security.interfaces.RSAPrivateKey",
            "java.security.interfaces.RSAPublicKey",
            "javax.crypto.SecretKey"
        ],
        "Subinterface": [
            "javax.security.auth.kerberos.KerberosKey",
            "javax.crypto.spec.SecretKeySpec"
        ],
        "Method": {
            "getAlgorithm": {
                "Parameter": {},
                "Throw": []
            },
            "getFormat": {
                "Parameter": {},
                "Throw": []
            },
            "getEncoded": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "214": {
        "Package": "java.security",
        "Interface": "KeyStore.Entry.Attribute",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.PKCS12Attribute"
        ],
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getValue": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "215": {
        "Package": "java.security",
        "Interface": "KeyStore.Entry",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.KeyStore.PrivateKeyEntry",
            "java.security.KeyStore.SecretKeyEntry",
            "java.security.KeyStore.TrustedCertificateEntry"
        ],
        "Method": {
            "getAttributes": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "216": {
        "Package": "java.security",
        "Interface": "KeyStore.LoadStoreParameter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.DomainLoadStoreParameter"
        ],
        "Method": {
            "getProtectionParameter": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "217": {
        "Package": "java.security",
        "Interface": "KeyStore.ProtectionParameter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.KeyStore.CallbackHandlerProtection",
            "java.security.KeyStore.PasswordProtection"
        ],
        "Method": {}
    },
    "218": {
        "Package": "java.security",
        "Interface": "Policy.Parameters",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.URIParameter"
        ],
        "Method": {}
    },
    "219": {
        "Package": "java.security",
        "Interface": "Principal",
        "Superinterface": null,
        "Implementing Class": [
            "java.security.acl.Group",
            "java.nio.file.attribute.GroupPrincipal",
            "java.nio.file.attribute.UserPrincipal"
        ],
        "Subinterface": [
            "java.security.Identity",
            "java.security.IdentityScope",
            "javax.management.remote.JMXPrincipal",
            "javax.security.auth.kerberos.KerberosPrincipal",
            "java.security.Signer",
            "javax.security.auth.x500.X500Principal"
        ],
        "Method": {
            "equals": {
                "Parameter": {
                    "another": "Object"
                },
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "implies": {
                "Parameter": {
                    "subject": "Subject"
                },
                "Throw": []
            }
        }
    },
    "220": {
        "Package": "java.security",
        "Interface": "PrivateKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.Key",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "javax.crypto.interfaces.DHPrivateKey",
            "java.security.interfaces.DSAPrivateKey",
            "java.security.interfaces.ECPrivateKey",
            "java.security.interfaces.RSAMultiPrimePrivateCrtKey",
            "java.security.interfaces.RSAPrivateCrtKey",
            "java.security.interfaces.RSAPrivateKey"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "221": {
        "Package": "java.security",
        "Interface": "PrivilegedAction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "run": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "222": {
        "Package": "java.security",
        "Interface": "PrivilegedExceptionAction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "run": {
                "Parameter": {},
                "Throw": "java.lang.Exception"
            }
        }
    },
    "223": {
        "Package": "java.security",
        "Interface": "PublicKey",
        "Superinterface": [
            "java.security.Key",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "javax.crypto.interfaces.DHPublicKey",
            "java.security.interfaces.DSAPublicKey",
            "java.security.interfaces.ECPublicKey",
            "java.security.interfaces.RSAPublicKey"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "224": {
        "Package": "java.security.acl",
        "Interface": "Acl",
        "Superinterface": [
            "java.security.acl.Owner"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setName": {
                "Parameter": {
                    "caller": "Principal",
                    "name": "String"
                },
                "Throw": "java.security.acl.NotOwnerException"
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "addEntry": {
                "Parameter": {
                    "caller": "Principal",
                    "entry": "AclEntry"
                },
                "Throw": "java.security.acl.NotOwnerException"
            },
            "removeEntry": {
                "Parameter": {
                    "caller": "Principal",
                    "entry": "AclEntry"
                },
                "Throw": "java.security.acl.NotOwnerException"
            },
            "getPermissions": {
                "Parameter": {
                    "user": "Principal"
                },
                "Throw": []
            },
            "entries": {
                "Parameter": {},
                "Throw": []
            },
            "checkPermission": {
                "Parameter": {
                    "principal": "Principal",
                    "permission": "Permission"
                },
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "225": {
        "Package": "java.security.acl",
        "Interface": "AclEntry",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setPrincipal": {
                "Parameter": {
                    "user": "Principal"
                },
                "Throw": []
            },
            "getPrincipal": {
                "Parameter": {},
                "Throw": []
            },
            "setNegativePermissions": {
                "Parameter": {},
                "Throw": []
            },
            "isNegative": {
                "Parameter": {},
                "Throw": []
            },
            "addPermission": {
                "Parameter": {
                    "permission": "Permission"
                },
                "Throw": []
            },
            "removePermission": {
                "Parameter": {
                    "permission": "Permission"
                },
                "Throw": []
            },
            "checkPermission": {
                "Parameter": {
                    "permission": "Permission"
                },
                "Throw": []
            },
            "permissions": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            },
            "clone": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "226": {
        "Package": "java.security.acl",
        "Interface": "Group",
        "Superinterface": [
            "java.security.Principal"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "addMember": {
                "Parameter": {
                    "user": "Principal"
                },
                "Throw": []
            },
            "removeMember": {
                "Parameter": {
                    "user": "Principal"
                },
                "Throw": []
            },
            "isMember": {
                "Parameter": {
                    "member": "Principal"
                },
                "Throw": []
            },
            "members": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "227": {
        "Package": "java.security.acl",
        "Interface": "Owner",
        "Superinterface": null,
        "Implementing Class": [
            "java.security.acl.Acl"
        ],
        "Subinterface": null,
        "Method": {
            "addOwner": {
                "Parameter": {
                    "caller": "Principal",
                    "owner": "Principal"
                },
                "Throw": "java.security.acl.NotOwnerException"
            },
            "deleteOwner": {
                "Parameter": {
                    "caller": "Principal",
                    "owner": "Principal"
                },
                "Throw": "java.security.acl.LastOwnerException"
            },
            "isOwner": {
                "Parameter": {
                    "owner": "Principal"
                },
                "Throw": []
            }
        }
    },
    "228": {
        "Package": "java.security.acl",
        "Interface": "Permission",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "equals": {
                "Parameter": {
                    "another": "Object"
                },
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "229": {
        "Package": "java.security.cert",
        "Interface": "CertPathBuilderResult",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.PKIXCertPathBuilderResult"
        ],
        "Method": {
            "getCertPath": {
                "Parameter": {},
                "Throw": []
            },
            "clone": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "230": {
        "Package": "java.security.cert",
        "Interface": "CertPathChecker",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.PKIXCertPathChecker",
            "java.security.cert.PKIXRevocationChecker"
        ],
        "Method": {
            "init": {
                "Parameter": {
                    "forward": "boolean"
                },
                "Throw": "java.security.cert.CertPathValidatorException"
            },
            "isForwardCheckingSupported": {
                "Parameter": {},
                "Throw": []
            },
            "check": {
                "Parameter": {
                    "cert": "Certificate"
                },
                "Throw": "java.security.cert.CertPathValidatorException"
            }
        }
    },
    "231": {
        "Package": "java.security.cert",
        "Interface": "CertPathParameters",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.PKIXBuilderParameters",
            "java.security.cert.PKIXParameters"
        ],
        "Method": {
            "clone": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "232": {
        "Package": "java.security.cert",
        "Interface": "CertPathValidatorException.Reason",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "233": {
        "Package": "java.security.cert",
        "Interface": "CertPathValidatorResult",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.PKIXCertPathBuilderResult",
            "java.security.cert.PKIXCertPathValidatorResult"
        ],
        "Method": {
            "clone": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "234": {
        "Package": "java.security.cert",
        "Interface": "CertSelector",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.X509CertSelector"
        ],
        "Method": {
            "match": {
                "Parameter": {
                    "cert": "Certificate"
                },
                "Throw": []
            },
            "clone": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "235": {
        "Package": "java.security.cert",
        "Interface": "CertStoreParameters",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.CollectionCertStoreParameters",
            "java.security.cert.LDAPCertStoreParameters"
        ],
        "Method": {
            "clone": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "236": {
        "Package": "java.security.cert",
        "Interface": "CRLSelector",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.X509CRLSelector"
        ],
        "Method": {
            "match": {
                "Parameter": {
                    "crl": "CRL"
                },
                "Throw": []
            },
            "clone": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "237": {
        "Package": "java.security.cert",
        "Interface": "Extension",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getId": {
                "Parameter": {},
                "Throw": []
            },
            "isCritical": {
                "Parameter": {},
                "Throw": []
            },
            "getValue": {
                "Parameter": {},
                "Throw": []
            },
            "encode": {
                "Parameter": {
                    "out": "OutputStream"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "238": {
        "Package": "java.security.cert",
        "Interface": "PolicyNode",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getParent": {
                "Parameter": {},
                "Throw": []
            },
            "getChildren": {
                "Parameter": {},
                "Throw": []
            },
            "getDepth": {
                "Parameter": {},
                "Throw": []
            },
            "getValidPolicy": {
                "Parameter": {},
                "Throw": []
            },
            "getPolicyQualifiers": {
                "Parameter": {},
                "Throw": []
            },
            "getExpectedPolicies": {
                "Parameter": {},
                "Throw": []
            },
            "isCritical": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "239": {
        "Package": "java.security.cert",
        "Interface": "X509Extension",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.X509Certificate",
            "java.security.cert.X509CRL",
            "java.security.cert.X509CRLEntry"
        ],
        "Method": {
            "hasUnsupportedCriticalExtension": {
                "Parameter": {},
                "Throw": []
            },
            "getCriticalExtensionOIDs": {
                "Parameter": {},
                "Throw": []
            },
            "getNonCriticalExtensionOIDs": {
                "Parameter": {},
                "Throw": []
            },
            "getExtensionValue": {
                "Parameter": {
                    "oid": "String"
                },
                "Throw": []
            }
        }
    },
    "240": {
        "Package": "java.security.interfaces",
        "Interface": "DSAKey",
        "Superinterface": null,
        "Implementing Class": [
            "java.security.interfaces.DSAPrivateKey",
            "java.security.interfaces.DSAPublicKey"
        ],
        "Subinterface": null,
        "Method": {
            "getParams": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "241": {
        "Package": "java.security.interfaces",
        "Interface": "DSAKeyPairGenerator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "initialize": {
                "Parameter": {
                    "modlen": "int",
                    "genParams": "boolean",
                    "random": "SecureRandom"
                },
                "Throw": "java.security.InvalidParameterException"
            }
        }
    },
    "242": {
        "Package": "java.security.interfaces",
        "Interface": "DSAParams",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.spec.DSAParameterSpec"
        ],
        "Method": {
            "getP": {
                "Parameter": {},
                "Throw": []
            },
            "getQ": {
                "Parameter": {},
                "Throw": []
            },
            "getG": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "243": {
        "Package": "java.security.interfaces",
        "Interface": "DSAPrivateKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.interfaces.DSAKey",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getX": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "244": {
        "Package": "java.security.interfaces",
        "Interface": "DSAPublicKey",
        "Superinterface": [
            "java.security.interfaces.DSAKey",
            "java.security.Key",
            "java.security.PublicKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getY": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "245": {
        "Package": "java.security.interfaces",
        "Interface": "ECKey",
        "Superinterface": null,
        "Implementing Class": [
            "java.security.interfaces.ECPrivateKey",
            "java.security.interfaces.ECPublicKey"
        ],
        "Subinterface": null,
        "Method": {
            "getParams": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "246": {
        "Package": "java.security.interfaces",
        "Interface": "ECPrivateKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.interfaces.ECKey",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getS": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "247": {
        "Package": "java.security.interfaces",
        "Interface": "ECPublicKey",
        "Superinterface": [
            "java.security.interfaces.ECKey",
            "java.security.Key",
            "java.security.PublicKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getW": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "248": {
        "Package": "java.security.interfaces",
        "Interface": "RSAKey",
        "Superinterface": null,
        "Implementing Class": [
            "java.security.interfaces.RSAMultiPrimePrivateCrtKey",
            "java.security.interfaces.RSAPrivateCrtKey",
            "java.security.interfaces.RSAPrivateKey",
            "java.security.interfaces.RSAPublicKey"
        ],
        "Subinterface": null,
        "Method": {
            "getModulus": {
                "Parameter": {},
                "Throw": []
            },
            "getParams": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "249": {
        "Package": "java.security.interfaces",
        "Interface": "RSAMultiPrimePrivateCrtKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.security.interfaces.RSAKey",
            "java.security.interfaces.RSAPrivateKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPublicExponent": {
                "Parameter": {},
                "Throw": []
            },
            "getPrimeP": {
                "Parameter": {},
                "Throw": []
            },
            "getPrimeQ": {
                "Parameter": {},
                "Throw": []
            },
            "getPrimeExponentP": {
                "Parameter": {},
                "Throw": []
            },
            "getPrimeExponentQ": {
                "Parameter": {},
                "Throw": []
            },
            "getCrtCoefficient": {
                "Parameter": {},
                "Throw": []
            },
            "getOtherPrimeInfo": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "250": {
        "Package": "java.security.interfaces",
        "Interface": "RSAPrivateCrtKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.security.interfaces.RSAKey",
            "java.security.interfaces.RSAPrivateKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPublicExponent": {
                "Parameter": {},
                "Throw": []
            },
            "getPrimeP": {
                "Parameter": {},
                "Throw": []
            },
            "getPrimeQ": {
                "Parameter": {},
                "Throw": []
            },
            "getPrimeExponentP": {
                "Parameter": {},
                "Throw": []
            },
            "getPrimeExponentQ": {
                "Parameter": {},
                "Throw": []
            },
            "getCrtCoefficient": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "251": {
        "Package": "java.security.interfaces",
        "Interface": "RSAPrivateKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.security.interfaces.RSAKey",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "java.security.interfaces.RSAMultiPrimePrivateCrtKey",
            "java.security.interfaces.RSAPrivateCrtKey"
        ],
        "Subinterface": null,
        "Method": {
            "getPrivateExponent": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "252": {
        "Package": "java.security.interfaces",
        "Interface": "RSAPublicKey",
        "Superinterface": [
            "java.security.Key",
            "java.security.PublicKey",
            "java.security.interfaces.RSAKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPublicExponent": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "253": {
        "Package": "java.security.spec",
        "Interface": "AlgorithmParameterSpec",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.crypto.dsig.spec.C14NMethodParameterSpec",
            "javax.xml.crypto.dsig.spec.DigestMethodParameterSpec",
            "javax.xml.crypto.dsig.spec.SignatureMethodParameterSpec",
            "javax.xml.crypto.dsig.spec.TransformParameterSpec"
        ],
        "Subinterface": [
            "javax.crypto.spec.DHGenParameterSpec",
            "javax.crypto.spec.DHParameterSpec",
            "java.security.spec.DSAGenParameterSpec",
            "java.security.spec.DSAParameterSpec",
            "java.security.spec.ECGenParameterSpec",
            "java.security.spec.ECParameterSpec",
            "javax.xml.crypto.dsig.spec.ExcC14NParameterSpec",
            "javax.crypto.spec.GCMParameterSpec",
            "javax.xml.crypto.dsig.spec.HMACParameterSpec",
            "javax.crypto.spec.IvParameterSpec",
            "java.security.spec.MGF1ParameterSpec",
            "javax.crypto.spec.OAEPParameterSpec",
            "javax.crypto.spec.PBEParameterSpec",
            "java.security.spec.PSSParameterSpec",
            "javax.crypto.spec.RC2ParameterSpec",
            "javax.crypto.spec.RC5ParameterSpec",
            "java.security.spec.RSAKeyGenParameterSpec",
            "javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec",
            "javax.xml.crypto.dsig.spec.XPathFilterParameterSpec",
            "javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec"
        ],
        "Method": {}
    },
    "254": {
        "Package": "java.security.spec",
        "Interface": "ECField",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.spec.ECFieldF2m",
            "java.security.spec.ECFieldFp"
        ],
        "Method": {
            "getFieldSize": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "255": {
        "Package": "java.security.spec",
        "Interface": "KeySpec",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.crypto.spec.DESedeKeySpec",
            "javax.crypto.spec.DESKeySpec",
            "javax.crypto.spec.DHPrivateKeySpec",
            "javax.crypto.spec.DHPublicKeySpec",
            "java.security.spec.DSAPrivateKeySpec",
            "java.security.spec.DSAPublicKeySpec",
            "java.security.spec.ECPrivateKeySpec",
            "java.security.spec.ECPublicKeySpec",
            "java.security.spec.EncodedKeySpec",
            "javax.crypto.spec.PBEKeySpec",
            "java.security.spec.PKCS8EncodedKeySpec",
            "java.security.spec.RSAMultiPrimePrivateCrtKeySpec",
            "java.security.spec.RSAPrivateCrtKeySpec",
            "java.security.spec.RSAPrivateKeySpec",
            "java.security.spec.RSAPublicKeySpec",
            "javax.crypto.spec.SecretKeySpec",
            "java.security.spec.X509EncodedKeySpec"
        ],
        "Method": {}
    },
    "256": {
        "Package": "java.sql",
        "Interface": "Array",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.serial.SerialArray"
        ],
        "Method": {
            "getBaseTypeName": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getBaseType": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getArray": {
                "Parameter": {
                    "index": "long",
                    "count": "int",
                    "": "Map"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getResultSet": {
                "Parameter": {
                    "index": "long",
                    "count": "int",
                    "": "Map"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "free": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "257": {
        "Package": "java.sql",
        "Interface": "Blob",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.serial.SerialBlob"
        ],
        "Method": {
            "length": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getBytes": {
                "Parameter": {
                    "pos": "long",
                    "length": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getBinaryStream": {
                "Parameter": {
                    "pos": "long",
                    "length": "long"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "position": {
                "Parameter": {
                    "pattern": "Blob",
                    "start": "long"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBytes": {
                "Parameter": {
                    "pos": "long",
                    "bytes": "byte",
                    "offset": "int",
                    "len": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBinaryStream": {
                "Parameter": {
                    "pos": "long"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "truncate": {
                "Parameter": {
                    "len": "long"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "free": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "258": {
        "Package": "java.sql",
        "Interface": "CallableStatement",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.PreparedStatement",
            "java.sql.Statement",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "registerOutParameter": {
                "Parameter": {
                    "parameterName": "String",
                    "sqlType": "SQLType",
                    "typeName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "wasNull": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getString": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getBoolean": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getByte": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getShort": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getInt": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getLong": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getFloat": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getDouble": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getBigDecimal": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getBytes": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getDate": {
                "Parameter": {
                    "parameterName": "String",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getTime": {
                "Parameter": {
                    "parameterName": "String",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getTimestamp": {
                "Parameter": {
                    "parameterName": "String",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getObject": {
                "Parameter": {
                    "parameterName": "String",
                    "": "Class"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getRef": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getBlob": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getClob": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getArray": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getURL": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setURL": {
                "Parameter": {
                    "parameterName": "String",
                    "val": "URL"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setNull": {
                "Parameter": {
                    "parameterName": "String",
                    "sqlType": "int",
                    "typeName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBoolean": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "boolean"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setByte": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "byte"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setShort": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "short"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setInt": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setLong": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "long"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setFloat": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "float"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setDouble": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "double"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBigDecimal": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "BigDecimal"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setString": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBytes": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "byte"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setDate": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "Date",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setTime": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "Time",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setTimestamp": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "Timestamp",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setAsciiStream": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBinaryStream": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setObject": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "Object",
                    "targetSqlType": "SQLType"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setCharacterStream": {
                "Parameter": {
                    "parameterName": "String",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getRowId": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setRowId": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "RowId"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setNString": {
                "Parameter": {
                    "parameterName": "String",
                    "value": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setNCharacterStream": {
                "Parameter": {
                    "parameterName": "String",
                    "value": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setNClob": {
                "Parameter": {
                    "parameterName": "String",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setClob": {
                "Parameter": {
                    "parameterName": "String",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBlob": {
                "Parameter": {
                    "parameterName": "String",
                    "inputStream": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getNClob": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setSQLXML": {
                "Parameter": {
                    "parameterName": "String",
                    "xmlObject": "SQLXML"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getSQLXML": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getNString": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getNCharacterStream": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getCharacterStream": {
                "Parameter": {
                    "parameterName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "259": {
        "Package": "java.sql",
        "Interface": "Clob",
        "Superinterface": null,
        "Implementing Class": [
            "java.sql.NClob"
        ],
        "Subinterface": [
            "javax.sql.rowset.serial.SerialClob"
        ],
        "Method": {
            "length": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getSubString": {
                "Parameter": {
                    "pos": "long",
                    "length": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getCharacterStream": {
                "Parameter": {
                    "pos": "long",
                    "length": "long"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getAsciiStream": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "position": {
                "Parameter": {
                    "searchstr": "Clob",
                    "start": "long"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setString": {
                "Parameter": {
                    "pos": "long",
                    "str": "String",
                    "offset": "int",
                    "len": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setAsciiStream": {
                "Parameter": {
                    "pos": "long"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setCharacterStream": {
                "Parameter": {
                    "pos": "long"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "truncate": {
                "Parameter": {
                    "len": "long"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "free": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "260": {
        "Package": "java.sql",
        "Interface": "Connection",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createStatement": {
                "Parameter": {
                    "resultSetType": "int",
                    "resultSetConcurrency": "int",
                    "resultSetHoldability": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "prepareStatement": {
                "Parameter": {
                    "sql": "String",
                    "columnNames": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "prepareCall": {
                "Parameter": {
                    "sql": "String",
                    "resultSetType": "int",
                    "resultSetConcurrency": "int",
                    "resultSetHoldability": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "nativeSQL": {
                "Parameter": {
                    "sql": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "setAutoCommit": {
                "Parameter": {
                    "autoCommit": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "getAutoCommit": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "commit": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "rollback": {
                "Parameter": {
                    "savepoint": "Savepoint"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "close": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "isClosed": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMetaData": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setReadOnly": {
                "Parameter": {
                    "readOnly": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "isReadOnly": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setCatalog": {
                "Parameter": {
                    "catalog": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getCatalog": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setTransactionIsolation": {
                "Parameter": {
                    "level": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getTransactionIsolation": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getWarnings": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "clearWarnings": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getTypeMap": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setTypeMap": {
                "Parameter": {
                    "": "Map"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setHoldability": {
                "Parameter": {
                    "holdability": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getHoldability": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setSavepoint": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "releaseSavepoint": {
                "Parameter": {
                    "savepoint": "Savepoint"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "createClob": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "createBlob": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "createNClob": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "createSQLXML": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "isValid": {
                "Parameter": {
                    "timeout": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "setClientInfo": {
                "Parameter": {
                    "properties": "Properties"
                },
                "Throw": "java.sql.SQLClientInfoException"
            },
            "getClientInfo": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "createArrayOf": {
                "Parameter": {
                    "typeName": "String",
                    "elements": "Object"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "createStruct": {
                "Parameter": {
                    "typeName": "String",
                    "attributes": "Object"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setSchema": {
                "Parameter": {
                    "schema": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getSchema": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "abort": {
                "Parameter": {
                    "executor": "Executor"
                },
                "Throw": "java.lang.SecurityException"
            },
            "setNetworkTimeout": {
                "Parameter": {
                    "executor": "Executor",
                    "milliseconds": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getNetworkTimeout": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "261": {
        "Package": "java.sql",
        "Interface": "DatabaseMetaData",
        "Superinterface": [
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "allProceduresAreCallable": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "allTablesAreSelectable": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getURL": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getUserName": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "isReadOnly": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "nullsAreSortedHigh": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "nullsAreSortedLow": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "nullsAreSortedAtStart": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "nullsAreSortedAtEnd": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getDatabaseProductName": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getDatabaseProductVersion": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getDriverName": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getDriverVersion": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getDriverMajorVersion": {
                "Parameter": {},
                "Throw": []
            },
            "getDriverMinorVersion": {
                "Parameter": {},
                "Throw": []
            },
            "usesLocalFiles": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "usesLocalFilePerTable": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsMixedCaseIdentifiers": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "storesUpperCaseIdentifiers": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "storesLowerCaseIdentifiers": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "storesMixedCaseIdentifiers": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsMixedCaseQuotedIdentifiers": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "storesUpperCaseQuotedIdentifiers": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "storesLowerCaseQuotedIdentifiers": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "storesMixedCaseQuotedIdentifiers": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getIdentifierQuoteString": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getSQLKeywords": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getNumericFunctions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getStringFunctions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getSystemFunctions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getTimeDateFunctions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getSearchStringEscape": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getExtraNameCharacters": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsAlterTableWithAddColumn": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsAlterTableWithDropColumn": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsColumnAliasing": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "nullPlusNonNullIsNull": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsConvert": {
                "Parameter": {
                    "fromType": "int",
                    "toType": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "supportsTableCorrelationNames": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsDifferentTableCorrelationNames": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsExpressionsInOrderBy": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsOrderByUnrelated": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsGroupBy": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsGroupByUnrelated": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsGroupByBeyondSelect": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsLikeEscapeClause": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsMultipleResultSets": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsMultipleTransactions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsNonNullableColumns": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsMinimumSQLGrammar": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsCoreSQLGrammar": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsExtendedSQLGrammar": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsANSI92EntryLevelSQL": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsANSI92IntermediateSQL": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsANSI92FullSQL": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsIntegrityEnhancementFacility": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsOuterJoins": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsFullOuterJoins": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsLimitedOuterJoins": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getSchemaTerm": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getProcedureTerm": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getCatalogTerm": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "isCatalogAtStart": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getCatalogSeparator": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsSchemasInDataManipulation": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsSchemasInProcedureCalls": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsSchemasInTableDefinitions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsSchemasInIndexDefinitions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsSchemasInPrivilegeDefinitions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsCatalogsInDataManipulation": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsCatalogsInProcedureCalls": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsCatalogsInTableDefinitions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsCatalogsInIndexDefinitions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsCatalogsInPrivilegeDefinitions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsPositionedDelete": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsPositionedUpdate": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsSelectForUpdate": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsStoredProcedures": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsSubqueriesInComparisons": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsSubqueriesInExists": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsSubqueriesInIns": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsSubqueriesInQuantifieds": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsCorrelatedSubqueries": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsUnion": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsUnionAll": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsOpenCursorsAcrossCommit": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsOpenCursorsAcrossRollback": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsOpenStatementsAcrossCommit": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsOpenStatementsAcrossRollback": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxBinaryLiteralLength": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxCharLiteralLength": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxColumnNameLength": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxColumnsInGroupBy": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxColumnsInIndex": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxColumnsInOrderBy": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxColumnsInSelect": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxColumnsInTable": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxConnections": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxCursorNameLength": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxIndexLength": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxSchemaNameLength": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxProcedureNameLength": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxCatalogNameLength": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxRowSize": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "doesMaxRowSizeIncludeBlobs": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxStatementLength": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxStatements": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxTableNameLength": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxTablesInSelect": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxUserNameLength": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getDefaultTransactionIsolation": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsTransactions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsTransactionIsolationLevel": {
                "Parameter": {
                    "level": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "supportsDataDefinitionAndDataManipulationTransactions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsDataManipulationTransactionsOnly": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "dataDefinitionCausesTransactionCommit": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "dataDefinitionIgnoredInTransactions": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getProcedures": {
                "Parameter": {
                    "catalog": "String",
                    "schemaPattern": "String",
                    "procedureNamePattern": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getProcedureColumns": {
                "Parameter": {
                    "catalog": "String",
                    "schemaPattern": "String",
                    "procedureNamePattern": "String",
                    "columnNamePattern": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getTables": {
                "Parameter": {
                    "catalog": "String",
                    "schemaPattern": "String",
                    "tableNamePattern": "String",
                    "types": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getSchemas": {
                "Parameter": {
                    "catalog": "String",
                    "schemaPattern": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getCatalogs": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getTableTypes": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getColumns": {
                "Parameter": {
                    "catalog": "String",
                    "schemaPattern": "String",
                    "tableNamePattern": "String",
                    "columnNamePattern": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getColumnPrivileges": {
                "Parameter": {
                    "catalog": "String",
                    "schema": "String",
                    "table": "String",
                    "columnNamePattern": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getTablePrivileges": {
                "Parameter": {
                    "catalog": "String",
                    "schemaPattern": "String",
                    "tableNamePattern": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getBestRowIdentifier": {
                "Parameter": {
                    "catalog": "String",
                    "schema": "String",
                    "table": "String",
                    "scope": "int",
                    "nullable": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "getVersionColumns": {
                "Parameter": {
                    "catalog": "String",
                    "schema": "String",
                    "table": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getPrimaryKeys": {
                "Parameter": {
                    "catalog": "String",
                    "schema": "String",
                    "table": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getImportedKeys": {
                "Parameter": {
                    "catalog": "String",
                    "schema": "String",
                    "table": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getExportedKeys": {
                "Parameter": {
                    "catalog": "String",
                    "schema": "String",
                    "table": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getCrossReference": {
                "Parameter": {
                    "parentCatalog": "String",
                    "parentSchema": "String",
                    "parentTable": "String",
                    "foreignCatalog": "String",
                    "foreignSchema": "String",
                    "foreignTable": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getTypeInfo": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getIndexInfo": {
                "Parameter": {
                    "catalog": "String",
                    "schema": "String",
                    "table": "String",
                    "unique": "boolean",
                    "approximate": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "supportsResultSetType": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "supportsResultSetConcurrency": {
                "Parameter": {
                    "type": "int",
                    "concurrency": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "ownUpdatesAreVisible": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "ownDeletesAreVisible": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "ownInsertsAreVisible": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "othersUpdatesAreVisible": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "othersDeletesAreVisible": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "othersInsertsAreVisible": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "updatesAreDetected": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "deletesAreDetected": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "insertsAreDetected": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "supportsBatchUpdates": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getUDTs": {
                "Parameter": {
                    "catalog": "String",
                    "schemaPattern": "String",
                    "typeNamePattern": "String",
                    "types": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getConnection": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsSavepoints": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsNamedParameters": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsMultipleOpenResults": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsGetGeneratedKeys": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getSuperTypes": {
                "Parameter": {
                    "catalog": "String",
                    "schemaPattern": "String",
                    "typeNamePattern": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getSuperTables": {
                "Parameter": {
                    "catalog": "String",
                    "schemaPattern": "String",
                    "tableNamePattern": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getAttributes": {
                "Parameter": {
                    "catalog": "String",
                    "schemaPattern": "String",
                    "typeNamePattern": "String",
                    "attributeNamePattern": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "supportsResultSetHoldability": {
                "Parameter": {
                    "holdability": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getResultSetHoldability": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getDatabaseMajorVersion": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getDatabaseMinorVersion": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getJDBCMajorVersion": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getJDBCMinorVersion": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getSQLStateType": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "locatorsUpdateCopy": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsStatementPooling": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getRowIdLifetime": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsStoredFunctionsUsingCallSyntax": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "autoCommitFailureClosesAllResultSets": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getClientInfoProperties": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getFunctions": {
                "Parameter": {
                    "catalog": "String",
                    "schemaPattern": "String",
                    "functionNamePattern": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getFunctionColumns": {
                "Parameter": {
                    "catalog": "String",
                    "schemaPattern": "String",
                    "functionNamePattern": "String",
                    "columnNamePattern": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getPseudoColumns": {
                "Parameter": {
                    "catalog": "String",
                    "schemaPattern": "String",
                    "tableNamePattern": "String",
                    "columnNamePattern": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "generatedKeyAlwaysReturned": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxLogicalLobSize": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsRefCursors": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "262": {
        "Package": "java.sql",
        "Interface": "Driver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "connect": {
                "Parameter": {
                    "url": "String",
                    "info": "Properties"
                },
                "Throw": "java.sql.SQLException"
            },
            "acceptsURL": {
                "Parameter": {
                    "url": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getPropertyInfo": {
                "Parameter": {
                    "url": "String",
                    "info": "Properties"
                },
                "Throw": "java.sql.SQLException"
            },
            "getMajorVersion": {
                "Parameter": {},
                "Throw": []
            },
            "getMinorVersion": {
                "Parameter": {},
                "Throw": []
            },
            "jdbcCompliant": {
                "Parameter": {},
                "Throw": []
            },
            "getParentLogger": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "263": {
        "Package": "java.sql",
        "Interface": "DriverAction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "deregister": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "264": {
        "Package": "java.sql",
        "Interface": "NClob",
        "Superinterface": [
            "java.sql.Clob"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "265": {
        "Package": "java.sql",
        "Interface": "ParameterMetaData",
        "Superinterface": [
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getParameterCount": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "isNullable": {
                "Parameter": {
                    "param": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "isSigned": {
                "Parameter": {
                    "param": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getPrecision": {
                "Parameter": {
                    "param": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getScale": {
                "Parameter": {
                    "param": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getParameterType": {
                "Parameter": {
                    "param": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getParameterTypeName": {
                "Parameter": {
                    "param": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getParameterClassName": {
                "Parameter": {
                    "param": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getParameterMode": {
                "Parameter": {
                    "param": "int"
                },
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "266": {
        "Package": "java.sql",
        "Interface": "PreparedStatement",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.Statement",
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "java.sql.CallableStatement"
        ],
        "Subinterface": null,
        "Method": {
            "executeQuery": {
                "Parameter": {},
                "Throw": "java.sql.SQLTimeoutException"
            },
            "executeUpdate": {
                "Parameter": {},
                "Throw": "java.sql.SQLTimeoutException"
            },
            "setNull": {
                "Parameter": {
                    "parameterIndex": "int",
                    "sqlType": "int",
                    "typeName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBoolean": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "setByte": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "byte"
                },
                "Throw": "java.sql.SQLException"
            },
            "setShort": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "short"
                },
                "Throw": "java.sql.SQLException"
            },
            "setInt": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "setLong": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "long"
                },
                "Throw": "java.sql.SQLException"
            },
            "setFloat": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "float"
                },
                "Throw": "java.sql.SQLException"
            },
            "setDouble": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "double"
                },
                "Throw": "java.sql.SQLException"
            },
            "setBigDecimal": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "BigDecimal"
                },
                "Throw": "java.sql.SQLException"
            },
            "setString": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "setBytes": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "byte"
                },
                "Throw": "java.sql.SQLException"
            },
            "setDate": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "Date",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLException"
            },
            "setTime": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "Time",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLException"
            },
            "setTimestamp": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "Timestamp",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLException"
            },
            "setAsciiStream": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setUnicodeStream": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "InputStream",
                    "length": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBinaryStream": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "clearParameters": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setObject": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "Object",
                    "targetSqlType": "SQLType"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "execute": {
                "Parameter": {},
                "Throw": "java.sql.SQLTimeoutException"
            },
            "addBatch": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setCharacterStream": {
                "Parameter": {
                    "parameterIndex": "int",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setRef": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "Ref"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBlob": {
                "Parameter": {
                    "parameterIndex": "int",
                    "inputStream": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setClob": {
                "Parameter": {
                    "parameterIndex": "int",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setArray": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "Array"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getMetaData": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setURL": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "URL"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getParameterMetaData": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setRowId": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "RowId"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setNString": {
                "Parameter": {
                    "parameterIndex": "int",
                    "value": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setNCharacterStream": {
                "Parameter": {
                    "parameterIndex": "int",
                    "value": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setNClob": {
                "Parameter": {
                    "parameterIndex": "int",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setSQLXML": {
                "Parameter": {
                    "parameterIndex": "int",
                    "xmlObject": "SQLXML"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "executeLargeUpdate": {
                "Parameter": {},
                "Throw": "java.sql.SQLTimeoutException"
            }
        }
    },
    "267": {
        "Package": "java.sql",
        "Interface": "Ref",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.serial.SerialRef"
        ],
        "Method": {
            "getBaseTypeName": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getObject": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setObject": {
                "Parameter": {
                    "value": "Object"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "268": {
        "Package": "java.sql",
        "Interface": "ResultSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "javax.sql.rowset.CachedRowSet",
            "javax.sql.rowset.FilteredRowSet",
            "javax.sql.rowset.JdbcRowSet",
            "javax.sql.rowset.JoinRowSet",
            "javax.sql.RowSet",
            "javax.sql.rowset.spi.SyncResolver",
            "javax.sql.rowset.WebRowSet"
        ],
        "Subinterface": null,
        "Method": {
            "next": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "close": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "wasNull": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getString": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getBoolean": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getByte": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getShort": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getInt": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getLong": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getFloat": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getDouble": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getBigDecimal": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getBytes": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getDate": {
                "Parameter": {
                    "columnLabel": "String",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLException"
            },
            "getTime": {
                "Parameter": {
                    "columnLabel": "String",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLException"
            },
            "getTimestamp": {
                "Parameter": {
                    "columnLabel": "String",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLException"
            },
            "getAsciiStream": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getUnicodeStream": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getBinaryStream": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getWarnings": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "clearWarnings": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getCursorName": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getMetaData": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getObject": {
                "Parameter": {
                    "columnLabel": "String",
                    "": "Class"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "findColumn": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getCharacterStream": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "isBeforeFirst": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "isAfterLast": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "isFirst": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "isLast": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "beforeFirst": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "afterLast": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "first": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "last": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getRow": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "absolute": {
                "Parameter": {
                    "row": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "relative": {
                "Parameter": {
                    "rows": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "previous": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setFetchDirection": {
                "Parameter": {
                    "direction": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getFetchDirection": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setFetchSize": {
                "Parameter": {
                    "rows": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getFetchSize": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getType": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getConcurrency": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "rowUpdated": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "rowInserted": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "rowDeleted": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateNull": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateBoolean": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "boolean"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateByte": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "byte"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateShort": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "short"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateInt": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateLong": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "long"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateFloat": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "float"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateDouble": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "double"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateBigDecimal": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "BigDecimal"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateString": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateBytes": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "byte"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateDate": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "Date"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateTime": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "Time"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateTimestamp": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "Timestamp"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateAsciiStream": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateBinaryStream": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateCharacterStream": {
                "Parameter": {
                    "columnLabel": "String",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateObject": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "Object",
                    "targetSqlType": "SQLType"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "insertRow": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateRow": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "deleteRow": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "refreshRow": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "cancelRowUpdates": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "moveToInsertRow": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "moveToCurrentRow": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getStatement": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getRef": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getBlob": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getClob": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getArray": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getURL": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateRef": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "Ref"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateBlob": {
                "Parameter": {
                    "columnLabel": "String",
                    "inputStream": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateClob": {
                "Parameter": {
                    "columnLabel": "String",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateArray": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "Array"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getRowId": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateRowId": {
                "Parameter": {
                    "columnLabel": "String",
                    "x": "RowId"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getHoldability": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "isClosed": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "updateNString": {
                "Parameter": {
                    "columnLabel": "String",
                    "nString": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateNClob": {
                "Parameter": {
                    "columnLabel": "String",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getNClob": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getSQLXML": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateSQLXML": {
                "Parameter": {
                    "columnLabel": "String",
                    "xmlObject": "SQLXML"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getNString": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getNCharacterStream": {
                "Parameter": {
                    "columnLabel": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "updateNCharacterStream": {
                "Parameter": {
                    "columnLabel": "String",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "269": {
        "Package": "java.sql",
        "Interface": "ResultSetMetaData",
        "Superinterface": [
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "javax.sql.RowSetMetaData"
        ],
        "Subinterface": [
            "javax.sql.rowset.RowSetMetaDataImpl"
        ],
        "Method": {
            "getColumnCount": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "isAutoIncrement": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "isCaseSensitive": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "isSearchable": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "isCurrency": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "isNullable": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "isSigned": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getColumnDisplaySize": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getColumnLabel": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getColumnName": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getSchemaName": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getPrecision": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getScale": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getTableName": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getCatalogName": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getColumnType": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getColumnTypeName": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "isReadOnly": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "isWritable": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "isDefinitelyWritable": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getColumnClassName": {
                "Parameter": {
                    "column": "int"
                },
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "270": {
        "Package": "java.sql",
        "Interface": "RowId",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "getBytes": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "271": {
        "Package": "java.sql",
        "Interface": "Savepoint",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getSavepointId": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getSavepointName": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "272": {
        "Package": "java.sql",
        "Interface": "SQLData",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getSQLTypeName": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readSQL": {
                "Parameter": {
                    "stream": "SQLInput",
                    "typeName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeSQL": {
                "Parameter": {
                    "stream": "SQLOutput"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "273": {
        "Package": "java.sql",
        "Interface": "SQLInput",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.serial.SQLInputImpl"
        ],
        "Method": {
            "readString": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readBoolean": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readByte": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readShort": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readInt": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readLong": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readFloat": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readDouble": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readBigDecimal": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readBytes": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readDate": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readTime": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readTimestamp": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readCharacterStream": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readAsciiStream": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readBinaryStream": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readObject": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readRef": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readBlob": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readClob": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readArray": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "wasNull": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readURL": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readNClob": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readNString": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readSQLXML": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "readRowId": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "274": {
        "Package": "java.sql",
        "Interface": "SQLOutput",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.serial.SQLOutputImpl"
        ],
        "Method": {
            "writeString": {
                "Parameter": {
                    "x": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeBoolean": {
                "Parameter": {
                    "x": "boolean"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeByte": {
                "Parameter": {
                    "x": "byte"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeShort": {
                "Parameter": {
                    "x": "short"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeInt": {
                "Parameter": {
                    "x": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeLong": {
                "Parameter": {
                    "x": "long"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeFloat": {
                "Parameter": {
                    "x": "float"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeDouble": {
                "Parameter": {
                    "x": "double"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeBigDecimal": {
                "Parameter": {
                    "x": "BigDecimal"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeBytes": {
                "Parameter": {
                    "x": "byte"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeDate": {
                "Parameter": {
                    "x": "Date"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeTime": {
                "Parameter": {
                    "x": "Time"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeTimestamp": {
                "Parameter": {
                    "x": "Timestamp"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeCharacterStream": {
                "Parameter": {
                    "x": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeAsciiStream": {
                "Parameter": {
                    "x": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeBinaryStream": {
                "Parameter": {
                    "x": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeObject": {
                "Parameter": {
                    "x": "Object",
                    "targetSqlType": "SQLType"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeRef": {
                "Parameter": {
                    "x": "Ref"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeBlob": {
                "Parameter": {
                    "x": "Blob"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeClob": {
                "Parameter": {
                    "x": "Clob"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeStruct": {
                "Parameter": {
                    "x": "Struct"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeArray": {
                "Parameter": {
                    "x": "Array"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeURL": {
                "Parameter": {
                    "x": "URL"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeNString": {
                "Parameter": {
                    "x": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeNClob": {
                "Parameter": {
                    "x": "NClob"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeRowId": {
                "Parameter": {
                    "x": "RowId"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "writeSQLXML": {
                "Parameter": {
                    "x": "SQLXML"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "275": {
        "Package": "java.sql",
        "Interface": "SQLType",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getVendor": {
                "Parameter": {},
                "Throw": []
            },
            "getVendorTypeNumber": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "276": {
        "Package": "java.sql",
        "Interface": "SQLXML",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "free": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getBinaryStream": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBinaryStream": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getCharacterStream": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setCharacterStream": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getString": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setString": {
                "Parameter": {
                    "value": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getSource": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setResult": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "277": {
        "Package": "java.sql",
        "Interface": "Statement",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "java.sql.CallableStatement",
            "java.sql.PreparedStatement"
        ],
        "Subinterface": null,
        "Method": {
            "executeQuery": {
                "Parameter": {
                    "sql": "String"
                },
                "Throw": "java.sql.SQLTimeoutException"
            },
            "executeUpdate": {
                "Parameter": {
                    "sql": "String",
                    "columnNames": "String"
                },
                "Throw": "java.sql.SQLTimeoutException"
            },
            "close": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMaxFieldSize": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setMaxFieldSize": {
                "Parameter": {
                    "max": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getMaxRows": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setMaxRows": {
                "Parameter": {
                    "max": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "setEscapeProcessing": {
                "Parameter": {
                    "enable": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "getQueryTimeout": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setQueryTimeout": {
                "Parameter": {
                    "seconds": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "cancel": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getWarnings": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "clearWarnings": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setCursorName": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "execute": {
                "Parameter": {
                    "sql": "String",
                    "columnNames": "String"
                },
                "Throw": "java.sql.SQLTimeoutException"
            },
            "getResultSet": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getUpdateCount": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMoreResults": {
                "Parameter": {
                    "current": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setFetchDirection": {
                "Parameter": {
                    "direction": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getFetchDirection": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setFetchSize": {
                "Parameter": {
                    "rows": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getFetchSize": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getResultSetConcurrency": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getResultSetType": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "addBatch": {
                "Parameter": {
                    "sql": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "clearBatch": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "executeBatch": {
                "Parameter": {},
                "Throw": "java.sql.SQLTimeoutException"
            },
            "getConnection": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getGeneratedKeys": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getResultSetHoldability": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "isClosed": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setPoolable": {
                "Parameter": {
                    "poolable": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "isPoolable": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "closeOnCompletion": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "isCloseOnCompletion": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getLargeUpdateCount": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setLargeMaxRows": {
                "Parameter": {
                    "max": "long"
                },
                "Throw": "java.sql.SQLException"
            },
            "getLargeMaxRows": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "executeLargeBatch": {
                "Parameter": {},
                "Throw": "java.sql.SQLTimeoutException"
            },
            "executeLargeUpdate": {
                "Parameter": {
                    "sql": "String",
                    "columnNames": "String"
                },
                "Throw": "java.sql.SQLTimeoutException"
            }
        }
    },
    "278": {
        "Package": "java.sql",
        "Interface": "Struct",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.serial.SerialStruct"
        ],
        "Method": {
            "getSQLTypeName": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "getAttributes": {
                "Parameter": {
                    "": "Map"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "279": {
        "Package": "java.sql",
        "Interface": "Wrapper",
        "Superinterface": null,
        "Implementing Class": [
            "javax.sql.rowset.CachedRowSet",
            "java.sql.CallableStatement",
            "java.sql.Connection",
            "java.sql.DatabaseMetaData",
            "javax.sql.DataSource",
            "javax.sql.rowset.FilteredRowSet",
            "javax.sql.rowset.JdbcRowSet",
            "javax.sql.rowset.JoinRowSet",
            "java.sql.ParameterMetaData",
            "java.sql.PreparedStatement",
            "java.sql.ResultSet",
            "java.sql.ResultSetMetaData",
            "javax.sql.RowSet",
            "javax.sql.RowSetMetaData",
            "java.sql.Statement",
            "javax.sql.rowset.spi.SyncResolver",
            "javax.sql.rowset.WebRowSet"
        ],
        "Subinterface": [
            "javax.sql.rowset.RowSetMetaDataImpl"
        ],
        "Method": {
            "unwrap": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.sql.SQLException"
            },
            "isWrapperFor": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "280": {
        "Package": "java.text",
        "Interface": "AttributedCharacterIterator",
        "Superinterface": [
            "java.text.CharacterIterator",
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getRunStart": {
                "Parameter": {
                    "": "Set"
                },
                "Throw": []
            },
            "getRunLimit": {
                "Parameter": {
                    "": "Set"
                },
                "Throw": []
            },
            "getAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "getAttribute": {
                "Parameter": {
                    "attribute": "AttributedCharacterIterator.Attribute"
                },
                "Throw": []
            },
            "getAllAttributeKeys": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "281": {
        "Package": "java.text",
        "Interface": "CharacterIterator",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": [
            "java.text.AttributedCharacterIterator"
        ],
        "Subinterface": [
            "javax.swing.text.Segment",
            "java.text.StringCharacterIterator"
        ],
        "Method": {
            "first": {
                "Parameter": {},
                "Throw": []
            },
            "last": {
                "Parameter": {},
                "Throw": []
            },
            "current": {
                "Parameter": {},
                "Throw": []
            },
            "next": {
                "Parameter": {},
                "Throw": []
            },
            "previous": {
                "Parameter": {},
                "Throw": []
            },
            "setIndex": {
                "Parameter": {
                    "position": "int"
                },
                "Throw": []
            },
            "getBeginIndex": {
                "Parameter": {},
                "Throw": []
            },
            "getEndIndex": {
                "Parameter": {},
                "Throw": []
            },
            "getIndex": {
                "Parameter": {},
                "Throw": []
            },
            "clone": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "282": {
        "Package": "java.time.chrono",
        "Interface": "ChronoLocalDate",
        "Superinterface": [
            "java.lang.Comparable",
            "java.time.chrono.ChronoLocalDate",
            "java.time.temporal.Temporal",
            "java.time.temporal.TemporalAccessor",
            "java.time.temporal.TemporalAdjuster"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.time.chrono.HijrahDate",
            "java.time.chrono.JapaneseDate",
            "java.time.LocalDate",
            "java.time.chrono.MinguoDate",
            "java.time.chrono.ThaiBuddhistDate"
        ],
        "Method": {
            "timeLineOrder": {
                "Parameter": {},
                "Throw": []
            },
            "from": {
                "Parameter": {
                    "temporal": "TemporalAccessor"
                },
                "Throw": "java.time.DateTimeException"
            },
            "getChronology": {
                "Parameter": {},
                "Throw": []
            },
            "getEra": {
                "Parameter": {},
                "Throw": []
            },
            "isLeapYear": {
                "Parameter": {},
                "Throw": []
            },
            "lengthOfMonth": {
                "Parameter": {},
                "Throw": []
            },
            "lengthOfYear": {
                "Parameter": {},
                "Throw": []
            },
            "isSupported": {
                "Parameter": {
                    "unit": "TemporalUnit"
                },
                "Throw": []
            },
            "with": {
                "Parameter": {
                    "field": "TemporalField",
                    "newValue": "long"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "plus": {
                "Parameter": {
                    "amountToAdd": "long",
                    "unit": "TemporalUnit"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "minus": {
                "Parameter": {
                    "amountToSubtract": "long",
                    "unit": "TemporalUnit"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "query": {
                "Parameter": {
                    "": "TemporalQuery"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "adjustInto": {
                "Parameter": {
                    "temporal": "Temporal"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "until": {
                "Parameter": {
                    "endDateExclusive": "ChronoLocalDate"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "format": {
                "Parameter": {
                    "formatter": "DateTimeFormatter"
                },
                "Throw": "java.time.DateTimeException"
            },
            "atTime": {
                "Parameter": {
                    "localTime": "LocalTime"
                },
                "Throw": []
            },
            "toEpochDay": {
                "Parameter": {},
                "Throw": []
            },
            "compareTo": {
                "Parameter": {
                    "other": "ChronoLocalDate"
                },
                "Throw": []
            },
            "isAfter": {
                "Parameter": {
                    "other": "ChronoLocalDate"
                },
                "Throw": []
            },
            "isBefore": {
                "Parameter": {
                    "other": "ChronoLocalDate"
                },
                "Throw": []
            },
            "isEqual": {
                "Parameter": {
                    "other": "ChronoLocalDate"
                },
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "283": {
        "Package": "java.time.chrono",
        "Interface": "ChronoLocalDateTime",
        "Superinterface": [
            "java.lang.Comparable",
            "java.time.chrono.ChronoLocalDateTime",
            "java.time.temporal.Temporal",
            "java.time.temporal.TemporalAccessor",
            "java.time.temporal.TemporalAdjuster"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.time.LocalDateTime"
        ],
        "Method": {
            "timeLineOrder": {
                "Parameter": {},
                "Throw": []
            },
            "from": {
                "Parameter": {
                    "temporal": "TemporalAccessor"
                },
                "Throw": "java.time.DateTimeException"
            },
            "getChronology": {
                "Parameter": {},
                "Throw": []
            },
            "toLocalDate": {
                "Parameter": {},
                "Throw": []
            },
            "toLocalTime": {
                "Parameter": {},
                "Throw": []
            },
            "isSupported": {
                "Parameter": {
                    "unit": "TemporalUnit"
                },
                "Throw": []
            },
            "with": {
                "Parameter": {
                    "field": "TemporalField",
                    "newValue": "long"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "plus": {
                "Parameter": {
                    "amountToAdd": "long",
                    "unit": "TemporalUnit"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "minus": {
                "Parameter": {
                    "amountToSubtract": "long",
                    "unit": "TemporalUnit"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "query": {
                "Parameter": {
                    "": "TemporalQuery"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "adjustInto": {
                "Parameter": {
                    "temporal": "Temporal"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "format": {
                "Parameter": {
                    "formatter": "DateTimeFormatter"
                },
                "Throw": "java.time.DateTimeException"
            },
            "atZone": {
                "Parameter": {
                    "zone": "ZoneId"
                },
                "Throw": []
            },
            "toInstant": {
                "Parameter": {
                    "offset": "ZoneOffset"
                },
                "Throw": []
            },
            "toEpochSecond": {
                "Parameter": {
                    "offset": "ZoneOffset"
                },
                "Throw": []
            },
            "compareTo": {
                "Parameter": {
                    "": "ChronoLocalDateTime"
                },
                "Throw": []
            },
            "isAfter": {
                "Parameter": {
                    "": "ChronoLocalDateTime"
                },
                "Throw": []
            },
            "isBefore": {
                "Parameter": {
                    "": "ChronoLocalDateTime"
                },
                "Throw": []
            },
            "isEqual": {
                "Parameter": {
                    "": "ChronoLocalDateTime"
                },
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "284": {
        "Package": "java.time.chrono",
        "Interface": "Chronology",
        "Superinterface": [
            "java.lang.Comparable",
            "java.time.chrono.Chronology"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.time.chrono.AbstractChronology",
            "java.time.chrono.HijrahChronology",
            "java.time.chrono.IsoChronology",
            "java.time.chrono.JapaneseChronology",
            "java.time.chrono.MinguoChronology",
            "java.time.chrono.ThaiBuddhistChronology"
        ],
        "Method": {
            "from": {
                "Parameter": {
                    "temporal": "TemporalAccessor"
                },
                "Throw": "java.time.DateTimeException"
            },
            "ofLocale": {
                "Parameter": {
                    "locale": "Locale"
                },
                "Throw": "java.time.DateTimeException"
            },
            "of": {
                "Parameter": {
                    "id": "String"
                },
                "Throw": "java.time.DateTimeException"
            },
            "getAvailableChronologies": {
                "Parameter": {},
                "Throw": []
            },
            "getId": {
                "Parameter": {},
                "Throw": []
            },
            "getCalendarType": {
                "Parameter": {},
                "Throw": []
            },
            "date": {
                "Parameter": {
                    "temporal": "TemporalAccessor"
                },
                "Throw": "java.time.DateTimeException"
            },
            "dateYearDay": {
                "Parameter": {
                    "prolepticYear": "int",
                    "dayOfYear": "int"
                },
                "Throw": "java.time.DateTimeException"
            },
            "dateEpochDay": {
                "Parameter": {
                    "epochDay": "long"
                },
                "Throw": "java.time.DateTimeException"
            },
            "dateNow": {
                "Parameter": {
                    "clock": "Clock"
                },
                "Throw": "java.time.DateTimeException"
            },
            "localDateTime": {
                "Parameter": {
                    "temporal": "TemporalAccessor"
                },
                "Throw": "java.time.DateTimeException"
            },
            "zonedDateTime": {
                "Parameter": {
                    "instant": "Instant",
                    "zone": "ZoneId"
                },
                "Throw": "java.time.DateTimeException"
            },
            "isLeapYear": {
                "Parameter": {
                    "prolepticYear": "long"
                },
                "Throw": []
            },
            "prolepticYear": {
                "Parameter": {
                    "era": "Era",
                    "yearOfEra": "int"
                },
                "Throw": "java.lang.ClassCastException"
            },
            "eraOf": {
                "Parameter": {
                    "eraValue": "int"
                },
                "Throw": "java.time.DateTimeException"
            },
            "eras": {
                "Parameter": {},
                "Throw": []
            },
            "range": {
                "Parameter": {
                    "field": "ChronoField"
                },
                "Throw": "java.time.DateTimeException"
            },
            "getDisplayName": {
                "Parameter": {
                    "style": "TextStyle",
                    "locale": "Locale"
                },
                "Throw": []
            },
            "resolveDate": {
                "Parameter": {
                    "": "Map",
                    "resolverStyle": "ResolverStyle"
                },
                "Throw": "java.time.DateTimeException"
            },
            "period": {
                "Parameter": {
                    "years": "int",
                    "months": "int",
                    "days": "int"
                },
                "Throw": []
            },
            "compareTo": {
                "Parameter": {
                    "other": "Chronology"
                },
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "285": {
        "Package": "java.time.chrono",
        "Interface": "ChronoPeriod",
        "Superinterface": [
            "java.time.temporal.TemporalAmount"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.time.Period"
        ],
        "Method": {
            "between": {
                "Parameter": {
                    "startDateInclusive": "ChronoLocalDate",
                    "endDateExclusive": "ChronoLocalDate"
                },
                "Throw": []
            },
            "get": {
                "Parameter": {
                    "unit": "TemporalUnit"
                },
                "Throw": "java.time.temporal.UnsupportedTemporalTypeException"
            },
            "getUnits": {
                "Parameter": {},
                "Throw": []
            },
            "getChronology": {
                "Parameter": {},
                "Throw": []
            },
            "isZero": {
                "Parameter": {},
                "Throw": []
            },
            "isNegative": {
                "Parameter": {},
                "Throw": []
            },
            "plus": {
                "Parameter": {
                    "amountToAdd": "TemporalAmount"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "minus": {
                "Parameter": {
                    "amountToSubtract": "TemporalAmount"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "multipliedBy": {
                "Parameter": {
                    "scalar": "int"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "negated": {
                "Parameter": {},
                "Throw": "java.lang.ArithmeticException"
            },
            "normalized": {
                "Parameter": {},
                "Throw": "java.lang.ArithmeticException"
            },
            "addTo": {
                "Parameter": {
                    "temporal": "Temporal"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "subtractFrom": {
                "Parameter": {
                    "temporal": "Temporal"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "286": {
        "Package": "java.time.chrono",
        "Interface": "ChronoZonedDateTime",
        "Superinterface": [
            "java.lang.Comparable",
            "java.time.chrono.ChronoZonedDateTime",
            "java.time.temporal.Temporal",
            "java.time.temporal.TemporalAccessor"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.time.ZonedDateTime"
        ],
        "Method": {
            "timeLineOrder": {
                "Parameter": {},
                "Throw": []
            },
            "from": {
                "Parameter": {
                    "temporal": "TemporalAccessor"
                },
                "Throw": "java.time.DateTimeException"
            },
            "range": {
                "Parameter": {
                    "field": "TemporalField"
                },
                "Throw": []
            },
            "get": {
                "Parameter": {
                    "field": "TemporalField"
                },
                "Throw": []
            },
            "getLong": {
                "Parameter": {
                    "field": "TemporalField"
                },
                "Throw": []
            },
            "toLocalDate": {
                "Parameter": {},
                "Throw": []
            },
            "toLocalTime": {
                "Parameter": {},
                "Throw": []
            },
            "toLocalDateTime": {
                "Parameter": {},
                "Throw": []
            },
            "getChronology": {
                "Parameter": {},
                "Throw": []
            },
            "getOffset": {
                "Parameter": {},
                "Throw": []
            },
            "getZone": {
                "Parameter": {},
                "Throw": []
            },
            "withEarlierOffsetAtOverlap": {
                "Parameter": {},
                "Throw": "java.time.DateTimeException"
            },
            "withLaterOffsetAtOverlap": {
                "Parameter": {},
                "Throw": "java.time.DateTimeException"
            },
            "withZoneSameLocal": {
                "Parameter": {
                    "zone": "ZoneId"
                },
                "Throw": []
            },
            "withZoneSameInstant": {
                "Parameter": {
                    "zone": "ZoneId"
                },
                "Throw": "java.time.DateTimeException"
            },
            "isSupported": {
                "Parameter": {
                    "unit": "TemporalUnit"
                },
                "Throw": []
            },
            "with": {
                "Parameter": {
                    "field": "TemporalField",
                    "newValue": "long"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "plus": {
                "Parameter": {
                    "amountToAdd": "long",
                    "unit": "TemporalUnit"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "minus": {
                "Parameter": {
                    "amountToSubtract": "long",
                    "unit": "TemporalUnit"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "query": {
                "Parameter": {
                    "": "TemporalQuery"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "format": {
                "Parameter": {
                    "formatter": "DateTimeFormatter"
                },
                "Throw": "java.time.DateTimeException"
            },
            "toInstant": {
                "Parameter": {},
                "Throw": []
            },
            "toEpochSecond": {
                "Parameter": {},
                "Throw": []
            },
            "compareTo": {
                "Parameter": {
                    "": "ChronoZonedDateTime"
                },
                "Throw": []
            },
            "isBefore": {
                "Parameter": {
                    "": "ChronoZonedDateTime"
                },
                "Throw": []
            },
            "isAfter": {
                "Parameter": {
                    "": "ChronoZonedDateTime"
                },
                "Throw": []
            },
            "isEqual": {
                "Parameter": {
                    "": "ChronoZonedDateTime"
                },
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "287": {
        "Package": "java.time.chrono",
        "Interface": "Era",
        "Superinterface": [
            "java.time.temporal.TemporalAccessor",
            "java.time.temporal.TemporalAdjuster"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.time.chrono.HijrahEra"
        ],
        "Method": {
            "getValue": {
                "Parameter": {},
                "Throw": []
            },
            "isSupported": {
                "Parameter": {
                    "field": "TemporalField"
                },
                "Throw": []
            },
            "range": {
                "Parameter": {
                    "field": "TemporalField"
                },
                "Throw": "java.time.temporal.UnsupportedTemporalTypeException"
            },
            "get": {
                "Parameter": {
                    "field": "TemporalField"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "getLong": {
                "Parameter": {
                    "field": "TemporalField"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "query": {
                "Parameter": {
                    "": "TemporalQuery"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "adjustInto": {
                "Parameter": {
                    "temporal": "Temporal"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "getDisplayName": {
                "Parameter": {
                    "style": "TextStyle",
                    "locale": "Locale"
                },
                "Throw": []
            }
        }
    },
    "288": {
        "Package": "java.time.temporal",
        "Interface": "Temporal",
        "Superinterface": [
            "java.time.temporal.TemporalAccessor"
        ],
        "Implementing Class": [
            "java.time.chrono.ChronoLocalDate",
            "java.time.chrono.ChronoLocalDateTime",
            "java.time.chrono.ChronoZonedDateTime"
        ],
        "Subinterface": [
            "java.time.chrono.HijrahDate",
            "java.time.Instant",
            "java.time.chrono.JapaneseDate",
            "java.time.LocalDate",
            "java.time.LocalDateTime",
            "java.time.LocalTime",
            "java.time.chrono.MinguoDate",
            "java.time.OffsetDateTime",
            "java.time.OffsetTime",
            "java.time.chrono.ThaiBuddhistDate",
            "java.time.Year",
            "java.time.YearMonth",
            "java.time.ZonedDateTime"
        ],
        "Method": {
            "isSupported": {
                "Parameter": {
                    "unit": "TemporalUnit"
                },
                "Throw": []
            },
            "with": {
                "Parameter": {
                    "field": "TemporalField",
                    "newValue": "long"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "plus": {
                "Parameter": {
                    "amountToAdd": "long",
                    "unit": "TemporalUnit"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "minus": {
                "Parameter": {
                    "amountToSubtract": "long",
                    "unit": "TemporalUnit"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "until": {
                "Parameter": {
                    "endExclusive": "Temporal",
                    "unit": "TemporalUnit"
                },
                "Throw": "java.lang.ArithmeticException"
            }
        }
    },
    "289": {
        "Package": "java.time.temporal",
        "Interface": "TemporalAccessor",
        "Superinterface": null,
        "Implementing Class": [
            "java.time.chrono.ChronoLocalDate",
            "java.time.chrono.ChronoLocalDateTime",
            "java.time.chrono.ChronoZonedDateTime",
            "java.time.chrono.Era",
            "java.time.temporal.Temporal"
        ],
        "Subinterface": [
            "java.time.chrono.DayOfWeek",
            "java.time.HijrahDate",
            "java.time.chrono.HijrahEra",
            "java.time.chrono.Instant",
            "java.time.IsoEra",
            "java.time.JapaneseDate",
            "java.time.JapaneseEra",
            "java.time.chrono.LocalDate",
            "java.time.LocalDateTime",
            "java.time.LocalTime",
            "java.time.MinguoDate",
            "java.time.chrono.MinguoEra",
            "java.time.Month",
            "java.time.MonthDay",
            "java.time.OffsetDateTime",
            "java.time.OffsetTime"
        ],
        "Method": {
            "isSupported": {
                "Parameter": {
                    "field": "TemporalField"
                },
                "Throw": []
            },
            "range": {
                "Parameter": {
                    "field": "TemporalField"
                },
                "Throw": "java.time.temporal.UnsupportedTemporalTypeException"
            },
            "get": {
                "Parameter": {
                    "field": "TemporalField"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "getLong": {
                "Parameter": {
                    "field": "TemporalField"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "query": {
                "Parameter": {
                    "": "TemporalQuery"
                },
                "Throw": "java.lang.ArithmeticException"
            }
        }
    },
    "290": {
        "Package": "java.time.temporal",
        "Interface": "TemporalAdjuster",
        "Superinterface": null,
        "Implementing Class": [
            "java.time.chrono.ChronoLocalDate",
            "java.time.chrono.ChronoLocalDateTime",
            "java.time.chrono.Era"
        ],
        "Subinterface": [
            "java.time.chrono.DayOfWeek",
            "java.time.HijrahDate",
            "java.time.chrono.HijrahEra",
            "java.time.chrono.Instant",
            "java.time.IsoEra",
            "java.time.JapaneseDate",
            "java.time.JapaneseEra",
            "java.time.chrono.LocalDate",
            "java.time.LocalDateTime",
            "java.time.LocalTime",
            "java.time.MinguoDate",
            "java.time.chrono.MinguoEra",
            "java.time.Month",
            "java.time.MonthDay",
            "java.time.OffsetDateTime"
        ],
        "Method": {
            "adjustInto": {
                "Parameter": {
                    "temporal": "Temporal"
                },
                "Throw": "java.lang.ArithmeticException"
            }
        }
    },
    "291": {
        "Package": "java.time.temporal",
        "Interface": "TemporalAmount",
        "Superinterface": null,
        "Implementing Class": [
            "java.time.chrono.ChronoPeriod"
        ],
        "Subinterface": [
            "java.time.Duration",
            "java.time.Period"
        ],
        "Method": {
            "get": {
                "Parameter": {
                    "unit": "TemporalUnit"
                },
                "Throw": "java.time.temporal.UnsupportedTemporalTypeException"
            },
            "getUnits": {
                "Parameter": {},
                "Throw": []
            },
            "addTo": {
                "Parameter": {
                    "temporal": "Temporal"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "subtractFrom": {
                "Parameter": {
                    "temporal": "Temporal"
                },
                "Throw": "java.lang.ArithmeticException"
            }
        }
    },
    "292": {
        "Package": "java.time.temporal",
        "Interface": "TemporalField",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getDisplayName": {
                "Parameter": {
                    "locale": "Locale"
                },
                "Throw": []
            },
            "getBaseUnit": {
                "Parameter": {},
                "Throw": []
            },
            "getRangeUnit": {
                "Parameter": {},
                "Throw": []
            },
            "range": {
                "Parameter": {},
                "Throw": []
            },
            "isDateBased": {
                "Parameter": {},
                "Throw": []
            },
            "isTimeBased": {
                "Parameter": {},
                "Throw": []
            },
            "isSupportedBy": {
                "Parameter": {
                    "temporal": "TemporalAccessor"
                },
                "Throw": []
            },
            "rangeRefinedBy": {
                "Parameter": {
                    "temporal": "TemporalAccessor"
                },
                "Throw": "java.time.temporal.UnsupportedTemporalTypeException"
            },
            "getFrom": {
                "Parameter": {
                    "temporal": "TemporalAccessor"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "adjustInto": {
                "Parameter": {
                    "temporal": "R",
                    "newValue": "long"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "resolve": {
                "Parameter": {
                    "": "Map",
                    "partialTemporal": "TemporalAccessor",
                    "resolverStyle": "ResolverStyle"
                },
                "Throw": "java.time.DateTimeException"
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "293": {
        "Package": "java.time.temporal",
        "Interface": "TemporalQuery",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "queryFrom": {
                "Parameter": {
                    "temporal": "TemporalAccessor"
                },
                "Throw": "java.lang.ArithmeticException"
            }
        }
    },
    "294": {
        "Package": "java.time.temporal",
        "Interface": "TemporalUnit",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getDuration": {
                "Parameter": {},
                "Throw": []
            },
            "isDurationEstimated": {
                "Parameter": {},
                "Throw": []
            },
            "isDateBased": {
                "Parameter": {},
                "Throw": []
            },
            "isTimeBased": {
                "Parameter": {},
                "Throw": []
            },
            "isSupportedBy": {
                "Parameter": {
                    "temporal": "Temporal"
                },
                "Throw": []
            },
            "addTo": {
                "Parameter": {
                    "temporal": "R",
                    "amount": "long"
                },
                "Throw": "java.time.temporal.UnsupportedTemporalTypeException"
            },
            "between": {
                "Parameter": {
                    "temporalInclusive": "Temporal",
                    "temporalExclusive": "Temporal"
                },
                "Throw": "java.lang.ArithmeticException"
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "295": {
        "Package": "java.util",
        "Interface": "Collection",
        "Superinterface": [
            "java.lang.Iterable"
        ],
        "Implementing Class": [
            "java.beans.beancontext.BeanContext",
            "java.beans.beancontext.BeanContextServices",
            "java.util.concurrent.BlockingDeque",
            "java.util.concurrent.BlockingQueue",
            "java.util.Deque",
            "java.util.List",
            "java.util.NavigableSet",
            "java.util.Queue",
            "java.util.Set",
            "java.util.SortedSet",
            "java.util.concurrent.TransferQueue"
        ],
        "Subinterface": [
            "java.util.AbstractCollection",
            "java.util.AbstractList",
            "java.util.AbstractQueue",
            "java.util.AbstractSequentialList",
            "java.util.AbstractSet",
            "java.util.concurrent.ArrayBlockingQueue",
            "java.util.ArrayDeque",
            "java.util.ArrayList",
            "javax.management.AttributeList",
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport",
            "java.util.concurrent.ConcurrentHashMap.KeySetView",
            "java.util.concurrent.ConcurrentLinkedDeque",
            "java.util.concurrent.ConcurrentLinkedQueue",
            "java.util.concurrent.ConcurrentSkipListSet",
            "java.util.concurrent.CopyOnWriteArrayList",
            "java.util.concurrent.CopyOnWriteArraySet",
            "java.util.concurrent.DelayQueue",
            "java.util.EnumSet",
            "java.util.HashSet",
            "javax.print.attribute.standard.JobStateReasons",
            "java.util.concurrent.LinkedBlockingDeque",
            "java.util.concurrent.LinkedBlockingQueue",
            "java.util.LinkedHashSet",
            "java.util.LinkedList",
            "java.util.concurrent.LinkedTransferQueue",
            "java.util.concurrent.PriorityBlockingQueue",
            "java.util.PriorityQueue",
            "javax.management.relation.RoleList",
            "javax.management.relation.RoleUnresolvedList",
            "java.util.Stack",
            "java.util.concurrent.SynchronousQueue",
            "java.util.TreeSet",
            "java.util.Vector"
        ],
        "Method": {
            "size": {
                "Parameter": {},
                "Throw": []
            },
            "isEmpty": {
                "Parameter": {},
                "Throw": []
            },
            "contains": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "iterator": {
                "Parameter": {},
                "Throw": []
            },
            "toArray": {
                "Parameter": {
                    "a": "T"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "add": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "remove": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "containsAll": {
                "Parameter": {
                    "": "Collection"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "addAll": {
                "Parameter": {
                    "": "Collection"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "removeAll": {
                "Parameter": {
                    "": "Collection"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "removeIf": {
                "Parameter": {
                    "": "Predicate"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "retainAll": {
                "Parameter": {
                    "": "Collection"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "clear": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "equals": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "spliterator": {
                "Parameter": {},
                "Throw": []
            },
            "stream": {
                "Parameter": {},
                "Throw": []
            },
            "parallelStream": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "296": {
        "Package": "java.util",
        "Interface": "Comparator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.text.Collator",
            "java.text.RuleBasedCollator"
        ],
        "Method": {
            "compare": {
                "Parameter": {
                    "o": "T"
                },
                "Throw": "java.lang.ClassCastException"
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "reversed": {
                "Parameter": {},
                "Throw": []
            },
            "thenComparing": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "thenComparingInt": {
                "Parameter": {
                    "": "ToIntFunction"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "thenComparingLong": {
                "Parameter": {
                    "": "ToLongFunction"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "thenComparingDouble": {
                "Parameter": {
                    "": "ToDoubleFunction"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "reverseOrder": {
                "Parameter": {},
                "Throw": []
            },
            "naturalOrder": {
                "Parameter": {},
                "Throw": []
            },
            "nullsFirst": {
                "Parameter": {
                    "": "Comparator"
                },
                "Throw": []
            },
            "nullsLast": {
                "Parameter": {
                    "": "Comparator"
                },
                "Throw": []
            },
            "comparing": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "comparingInt": {
                "Parameter": {
                    "": "ToIntFunction"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "comparingLong": {
                "Parameter": {
                    "": "ToLongFunction"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "comparingDouble": {
                "Parameter": {
                    "": "ToDoubleFunction"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "297": {
        "Package": "java.util",
        "Interface": "Deque",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable",
            "java.util.Queue"
        ],
        "Implementing Class": [
            "java.util.concurrent.BlockingDeque"
        ],
        "Subinterface": [
            "java.util.ArrayDeque",
            "java.util.concurrent.ConcurrentLinkedDeque",
            "java.util.concurrent.LinkedBlockingDeque",
            "java.util.LinkedList"
        ],
        "Method": {
            "addFirst": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "addLast": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "offerFirst": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "offerLast": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "removeFirst": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "removeLast": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "pollFirst": {
                "Parameter": {},
                "Throw": []
            },
            "pollLast": {
                "Parameter": {},
                "Throw": []
            },
            "getFirst": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "getLast": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "peekFirst": {
                "Parameter": {},
                "Throw": []
            },
            "peekLast": {
                "Parameter": {},
                "Throw": []
            },
            "removeFirstOccurrence": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "removeLastOccurrence": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "add": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "offer": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "remove": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "poll": {
                "Parameter": {},
                "Throw": []
            },
            "element": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "peek": {
                "Parameter": {},
                "Throw": []
            },
            "push": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "pop": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "contains": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "size": {
                "Parameter": {},
                "Throw": []
            },
            "iterator": {
                "Parameter": {},
                "Throw": []
            },
            "descendingIterator": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "298": {
        "Package": "java.util",
        "Interface": "Enumeration",
        "Superinterface": null,
        "Implementing Class": [
            "javax.naming.NamingEnumeration"
        ],
        "Subinterface": [
            "java.util.StringTokenizer"
        ],
        "Method": {
            "hasMoreElements": {
                "Parameter": {},
                "Throw": []
            },
            "nextElement": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            }
        }
    },
    "299": {
        "Package": "java.util",
        "Interface": "EventListener",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.Action",
            "java.awt.event.ActionListener",
            "java.awt.event.AdjustmentListener",
            "javax.swing.event.AncestorListener",
            "java.awt.event.AWTEventListener",
            "java.beans.beancontext.BeanContextMembershipListener",
            "java.beans.beancontext.BeanContextServiceRevokedListener",
            "java.beans.beancontext.BeanContextServices",
            "java.beans.beancontext.BeanContextServicesListener",
            "javax.swing.event.CaretListener",
            "javax.swing.event.CellEditorListener",
            "javax.swing.event.ChangeListener",
            "java.awt.event.ComponentListener",
            "javax.sql.ConnectionEventListener",
            "java.awt.event.ContainerListener",
            "javax.sound.midi.ControllerEventListener",
            "javax.swing.event.DocumentListener",
            "java.awt.dnd.DragGestureListener",
            "java.awt.dnd.DragSourceListener",
            "java.awt.dnd.DragSourceMotionListener",
            "java.awt.dnd.DropTargetListener",
            "java.awt.datatransfer.FlavorListener",
            "java.awt.event.FocusListener",
            "javax.net.ssl.HandshakeCompletedListener",
            "java.awt.event.HierarchyBoundsListener",
            "java.awt.event.HierarchyListener",
            "javax.swing.event.HyperlinkListener",
            "javax.imageio.event.IIOReadProgressListener",
            "javax.imageio.event.IIOReadUpdateListener",
            "javax.imageio.event.IIOReadWarningListener",
            "javax.imageio.event.IIOWriteProgressListener",
            "javax.imageio.event.IIOWriteWarningListener",
            "java.awt.event.InputMethodListener",
            "javax.swing.event.InternalFrameListener",
            "java.awt.event.ItemListener",
            "java.awt.event.KeyListener",
            "javax.sound.sampled.LineListener",
            "javax.swing.event.ListDataListener",
            "javax.swing.event.ListSelectionListener",
            "javax.swing.event.MenuDragMouseListener",
            "javax.swing.event.MenuKeyListener",
            "javax.swing.event.MenuListener",
            "javax.sound.midi.MetaEventListener",
            "javax.swing.event.MouseInputListener",
            "java.awt.event.MouseListener",
            "java.awt.event.MouseMotionListener",
            "java.awt.event.MouseWheelListener",
            "javax.naming.event.NamespaceChangeListener",
            "javax.naming.event.NamingListener",
            "java.util.prefs.NodeChangeListener",
            "javax.management.NotificationListener",
            "javax.naming.event.ObjectChangeListener",
            "javax.swing.event.PopupMenuListener",
            "java.util.prefs.PreferenceChangeListener",
            "java.beans.PropertyChangeListener",
            "javax.sql.RowSetListener",
            "javax.swing.event.RowSorterListener",
            "javax.net.ssl.SSLSessionBindingListener",
            "javax.sql.StatementEventListener",
            "javax.swing.event.TableColumnModelListener",
            "javax.swing.event.TableModelListener",
            "java.awt.event.TextListener",
            "javax.swing.event.TreeExpansionListener",
            "javax.swing.event.TreeModelListener",
            "javax.swing.event.TreeSelectionListener",
            "javax.swing.event.TreeWillExpandListener",
            "javax.swing.event.UndoableEditListener",
            "javax.naming.ldap.UnsolicitedNotificationListener",
            "java.beans.VetoableChangeListener",
            "java.awt.event.WindowFocusListener",
            "java.awt.event.WindowListener",
            "java.awt.event.WindowStateListener"
        ],
        "Subinterface": [
            "javax.swing.AbstractAction",
            "javax.swing.AbstractButton.ButtonChangeListener",
            "java.awt.event.AWTEventListenerProxy",
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicButtonListener",
            "javax.swing.plaf.basic.BasicColorChooserUI.PropertyHandler",
            "javax.swing.plaf.basic.BasicComboBoxEditor",
            "javax.swing.plaf.basic.BasicComboBoxEditor.UIResource",
            "javax.swing.plaf.basic.BasicComboBoxUI.FocusHandler",
            "javax.swing.plaf.basic.BasicComboBoxUI.ItemHandler",
            "javax.swing.plaf.basic.BasicComboBoxUI.KeyHandler",
            "javax.swing.plaf.basic.BasicComboBoxUI.ListDataHandler",
            "javax.swing.plaf.basic.BasicComboBoxUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicComboPopup.InvocationKeyHandler",
            "javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler",
            "javax.swing.plaf.basic.BasicComboPopup.InvocationMouseMotionHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ItemHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListDataHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListMouseHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListMouseMotionHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListSelectionHandler",
            "javax.swing.plaf.basic.BasicComboPopup.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.CloseAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.MaximizeAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.MinimizeAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.NavigateAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.OpenAction",
            "javax.swing.plaf.basic.BasicDirectoryModel",
            "javax.swing.plaf.basic.BasicFileChooserUI.ApproveSelectionAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.CancelSelectionAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.ChangeToParentDirectoryAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.DoubleClickListener",
            "javax.swing.plaf.basic.BasicFileChooserUI.GoHomeAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.NewFolderAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.SelectionListener",
            "javax.swing.plaf.basic.BasicFileChooserUI.UpdateAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.CloseAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.IconifyAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.MoveAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.RestoreAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.SizeAction",
            "javax.swing.plaf.basic.BasicInternalFrameUI.BasicInternalFrameListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.ComponentHandler",
            "javax.swing.plaf.basic.BasicInternalFrameUI.GlassPaneDispatcher",
            "javax.swing.plaf.basic.BasicInternalFrameUI.InternalFramePropertyChangeListener",
            "javax.swing.plaf.basic.BasicLabelUI",
            "javax.swing.plaf.basic.BasicListUI.FocusHandler",
            "javax.swing.plaf.basic.BasicListUI.ListDataHandler",
            "javax.swing.plaf.basic.BasicListUI.ListSelectionHandler",
            "javax.swing.plaf.basic.BasicListUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicMenuItemUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicMenuUI.ChangeHandler",
            "javax.swing.plaf.basic.BasicMenuUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicOptionPaneUI.ButtonActionListener",
            "javax.swing.plaf.basic.BasicOptionPaneUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicProgressBarUI.ChangeHandler",
            "javax.swing.plaf.basic.BasicRootPaneUI",
            "javax.swing.plaf.basic.BasicScrollBarUI.ArrowButtonListener",
            "javax.swing.plaf.basic.BasicScrollBarUI.ModelListener",
            "javax.swing.plaf.basic.BasicScrollBarUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicScrollBarUI.ScrollListener",
            "javax.swing.plaf.basic.BasicScrollBarUI.TrackListener",
            "javax.swing.plaf.basic.BasicScrollPaneUI.HSBChangeListener",
            "javax.swing.plaf.basic.BasicScrollPaneUI.MouseWheelHandler",
            "javax.swing.plaf.basic.BasicScrollPaneUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicScrollPaneUI.ViewportChangeHandler",
            "javax.swing.plaf.basic.BasicScrollPaneUI.VSBChangeListener",
            "javax.swing.plaf.basic.BasicSliderUI.ActionScroller",
            "javax.swing.plaf.basic.BasicSliderUI.ChangeHandler",
            "javax.swing.plaf.basic.BasicSliderUI.ComponentHandler",
            "javax.swing.plaf.basic.BasicSliderUI.FocusHandler",
            "javax.swing.plaf.basic.BasicSliderUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicSliderUI.ScrollListener",
            "javax.swing.plaf.basic.BasicSliderUI.TrackListener",
            "javax.swing.plaf.basic.BasicSplitPaneDivider",
            "javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.FocusHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardDownRightHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardEndHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardHomeHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardResizeToggleHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardUpLeftHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.PropertyHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.FocusHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.MouseHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.TabSelectionHandler",
            "javax.swing.plaf.basic.BasicTableHeaderUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicTableUI.FocusHandler",
            "javax.swing.plaf.basic.BasicTableUI.KeyHandler",
            "javax.swing.plaf.basic.BasicTableUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicTextUI.BasicCaret",
            "javax.swing.plaf.basic.BasicToolBarUI.DockingListener",
            "javax.swing.plaf.basic.BasicToolBarUI.FrameListener",
            "javax.swing.plaf.basic.BasicToolBarUI.PropertyListener",
            "javax.swing.plaf.basic.BasicToolBarUI.ToolBarContListener",
            "javax.swing.plaf.basic.BasicToolBarUI.ToolBarFocusListener",
            "javax.swing.plaf.basic.BasicTreeUI.CellEditorHandler",
            "javax.swing.plaf.basic.BasicTreeUI.ComponentHandler",
            "javax.swing.plaf.basic.BasicTreeUI.FocusHandler",
            "javax.swing.plaf.basic.BasicTreeUI.KeyHandler",
            "javax.swing.plaf.basic.BasicTreeUI.MouseHandler",
            "javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicTreeUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicTreeUI.SelectionModelPropertyChangeHandler",
            "javax.swing.plaf.basic.BasicTreeUI.TreeCancelEditingAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeExpansionHandler",
            "javax.swing.plaf.basic.BasicTreeUI.TreeHomeAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeIncrementAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeModelHandler",
            "javax.swing.plaf.basic.BasicTreeUI.TreePageAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeSelectionHandler",
            "javax.swing.plaf.basic.BasicTreeUI.TreeToggleAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction",
            "java.beans.beancontext.BeanContextChildSupport",
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextServicesSupport.BCSSProxyServiceProvider",
            "java.beans.beancontext.BeanContextSupport",
            "java.awt.Checkbox.AccessibleAWTCheckbox",
            "java.awt.Component.AccessibleAWTComponent.AccessibleAWTComponentHandler",
            "java.awt.Component.AccessibleAWTComponent.AccessibleAWTFocusHandler",
            "java.awt.event.ComponentAdapter",
            "java.awt.Container.AccessibleAWTContainer.AccessibleContainerHandler",
            "java.awt.event.ContainerAdapter",
            "javax.swing.text.DefaultCaret",
            "javax.swing.DefaultCellEditor.EditorDelegate",
            "javax.swing.text.DefaultEditorKit.BeepAction",
            "javax.swing.text.DefaultEditorKit.CopyAction",
            "javax.swing.text.DefaultEditorKit.CutAction",
            "javax.swing.text.DefaultEditorKit.DefaultKeyTypedAction",
            "javax.swing.text.DefaultEditorKit.InsertBreakAction",
            "javax.swing.text.DefaultEditorKit.InsertContentAction",
            "javax.swing.text.DefaultEditorKit.InsertTabAction",
            "javax.swing.text.DefaultEditorKit.PasteAction",
            "javax.swing.table.DefaultTableColumnModel",
            "javax.swing.tree.DefaultTreeCellEditor",
            "java.awt.dnd.DragSourceAdapter",
            "java.awt.dnd.DragSourceContext",
            "java.awt.dnd.DropTarget",
            "java.awt.dnd.DropTarget.DropTargetAutoScroller",
            "java.awt.dnd.DropTargetAdapter",
            "java.util.EventListenerProxy",
            "java.awt.event.FocusAdapter",
            "javax.swing.text.html.FormView",
            "javax.swing.text.html.FormView.MouseEventListener",
            "java.awt.event.HierarchyBoundsAdapter",
            "javax.swing.text.html.HTMLEditorKit.HTMLTextAction",
            "javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction",
            "javax.swing.text.html.HTMLEditorKit.LinkController",
            "javax.swing.event.InternalFrameAdapter",
            "javax.swing.JCheckBox.AccessibleJCheckBox",
            "javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem",
            "javax.swing.JComboBox",
            "javax.swing.JComponent.AccessibleJComponent.AccessibleContainerHandler",
            "javax.swing.JComponent.AccessibleJComponent.AccessibleFocusHandler",
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JLayer",
            "javax.swing.JList.AccessibleJList",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenu.WinListener",
            "javax.swing.JMenuItem.AccessibleJMenuItem",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JPopupMenu.AccessibleJPopupMenu",
            "javax.swing.JRadioButton.AccessibleJRadioButton",
            "javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem",
            "javax.swing.JScrollPane.AccessibleJScrollPane",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JSpinner.DateEditor",
            "javax.swing.JSpinner.DefaultEditor",
            "javax.swing.JSpinner.ListEditor",
            "javax.swing.JSpinner.NumberEditor",
            "javax.swing.JTabbedPane.AccessibleJTabbedPane",
            "javax.swing.JTabbedPane.ModelListener",
            "javax.swing.JTable",
            "javax.swing.JTable.AccessibleJTable",
            "javax.swing.table.JTableHeader",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField",
            "javax.swing.JToggleButton.AccessibleJToggleButton",
            "javax.swing.JTree.AccessibleJTree",
            "javax.swing.JTree.TreeModelHandler",
            "javax.swing.JTree.TreeSelectionRedirector",
            "javax.swing.JViewport.ViewListener",
            "java.awt.event.KeyAdapter",
            "java.awt.List.AccessibleAWTList",
            "javax.swing.plaf.metal.MetalComboBoxEditor",
            "javax.swing.plaf.metal.MetalComboBoxEditor.UIResource",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalPropertyChangeListener",
            "javax.swing.plaf.metal.MetalFileChooserUI.DirectoryComboBoxAction",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxModel",
            "javax.swing.plaf.metal.MetalFileChooserUI.SingleClickListener",
            "javax.swing.plaf.metal.MetalLabelUI",
            "javax.swing.plaf.metal.MetalRootPaneUI",
            "javax.swing.plaf.metal.MetalSliderUI.MetalPropertyListener",
            "javax.swing.plaf.metal.MetalToolBarUI.MetalContainerListener",
            "javax.swing.plaf.metal.MetalToolBarUI.MetalDockingListener",
            "javax.swing.plaf.metal.MetalToolBarUI.MetalRolloverListener",
            "java.awt.event.MouseAdapter",
            "java.awt.dnd.MouseDragGestureRecognizer",
            "javax.swing.event.MouseInputAdapter",
            "java.awt.event.MouseMotionAdapter",
            "javax.swing.ProgressMonitor.AccessibleProgressMonitor",
            "java.beans.PropertyChangeListenerProxy",
            "javax.management.relation.RelationService",
            "javax.swing.text.StyledEditorKit.AlignmentAction",
            "javax.swing.text.StyledEditorKit.BoldAction",
            "javax.swing.text.StyledEditorKit.FontFamilyAction",
            "javax.swing.text.StyledEditorKit.FontSizeAction",
            "javax.swing.text.StyledEditorKit.ForegroundAction",
            "javax.swing.text.StyledEditorKit.ItalicAction",
            "javax.swing.text.StyledEditorKit.StyledTextAction",
            "javax.swing.text.StyledEditorKit.UnderlineAction",
            "javax.swing.plaf.synth.SynthButtonUI",
            "javax.swing.plaf.synth.SynthCheckBoxMenuItemUI",
            "javax.swing.plaf.synth.SynthCheckBoxUI",
            "javax.swing.plaf.synth.SynthColorChooserUI",
            "javax.swing.plaf.synth.SynthComboBoxUI",
            "javax.swing.plaf.synth.SynthDesktopIconUI",
            "javax.swing.plaf.synth.SynthDesktopPaneUI",
            "javax.swing.plaf.synth.SynthInternalFrameUI",
            "javax.swing.plaf.synth.SynthLabelUI",
            "javax.swing.plaf.synth.SynthListUI",
            "javax.swing.plaf.synth.SynthMenuBarUI",
            "javax.swing.plaf.synth.SynthMenuItemUI",
            "javax.swing.plaf.synth.SynthMenuUI",
            "javax.swing.plaf.synth.SynthOptionPaneUI",
            "javax.swing.plaf.synth.SynthPanelUI",
            "javax.swing.plaf.synth.SynthPopupMenuUI",
            "javax.swing.plaf.synth.SynthProgressBarUI",
            "javax.swing.plaf.synth.SynthRadioButtonMenuItemUI",
            "javax.swing.plaf.synth.SynthRadioButtonUI",
            "javax.swing.plaf.synth.SynthRootPaneUI",
            "javax.swing.plaf.synth.SynthScrollBarUI",
            "javax.swing.plaf.synth.SynthScrollPaneUI",
            "javax.swing.plaf.synth.SynthSeparatorUI",
            "javax.swing.plaf.synth.SynthSliderUI",
            "javax.swing.plaf.synth.SynthSpinnerUI",
            "javax.swing.plaf.synth.SynthSplitPaneUI",
            "javax.swing.plaf.synth.SynthTabbedPaneUI",
            "javax.swing.plaf.synth.SynthTableHeaderUI",
            "javax.swing.plaf.synth.SynthTableUI",
            "javax.swing.plaf.synth.SynthToggleButtonUI",
            "javax.swing.plaf.synth.SynthToolBarUI",
            "javax.swing.plaf.synth.SynthToolTipUI",
            "javax.swing.plaf.synth.SynthTreeUI",
            "javax.swing.plaf.synth.SynthViewportUI",
            "javax.swing.text.TextAction",
            "java.awt.TextArea.AccessibleAWTTextArea",
            "java.awt.TextComponent.AccessibleAWTTextComponent",
            "java.awt.TextField.AccessibleAWTTextField",
            "javax.swing.ToolTipManager",
            "javax.swing.ToolTipManager.insideTimerAction",
            "javax.swing.ToolTipManager.outsideTimerAction",
            "javax.swing.ToolTipManager.stillInsideTimerAction",
            "javax.swing.undo.UndoManager",
            "java.beans.VetoableChangeListenerProxy",
            "java.awt.event.WindowAdapter"
        ],
        "Method": {}
    },
    "300": {
        "Package": "java.util",
        "Interface": "Formattable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "formatTo": {
                "Parameter": {
                    "formatter": "Formatter",
                    "flags": "int",
                    "width": "int",
                    "precision": "int"
                },
                "Throw": "java.util.IllegalFormatException"
            }
        }
    },
    "301": {
        "Package": "java.util",
        "Interface": "Iterator",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.ListIterator",
            "java.util.PrimitiveIterator",
            "java.util.PrimitiveIterator.OfDouble",
            "java.util.PrimitiveIterator.OfInt",
            "java.util.PrimitiveIterator.OfLong",
            "javax.xml.stream.XMLEventReader"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextSupport.BCSIterator",
            "javax.xml.stream.util.EventReaderDelegate",
            "java.util.Scanner"
        ],
        "Method": {
            "hasNext": {
                "Parameter": {},
                "Throw": []
            },
            "next": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "remove": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "forEachRemaining": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "302": {
        "Package": "java.util",
        "Interface": "List",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.AbstractList",
            "java.util.AbstractSequentialList",
            "java.util.ArrayList",
            "javax.management.AttributeList",
            "java.util.concurrent.CopyOnWriteArrayList",
            "java.util.LinkedList",
            "javax.management.relation.RoleList",
            "javax.management.relation.RoleUnresolvedList",
            "java.util.Stack",
            "java.util.Vector"
        ],
        "Method": {
            "size": {
                "Parameter": {},
                "Throw": []
            },
            "isEmpty": {
                "Parameter": {},
                "Throw": []
            },
            "contains": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "iterator": {
                "Parameter": {},
                "Throw": []
            },
            "toArray": {
                "Parameter": {
                    "a": "T"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "add": {
                "Parameter": {
                    "index": "int",
                    "element": "E"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "remove": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "containsAll": {
                "Parameter": {
                    "": "Collection"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "addAll": {
                "Parameter": {
                    "index": "int",
                    "": "Collection"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "removeAll": {
                "Parameter": {
                    "": "Collection"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "retainAll": {
                "Parameter": {
                    "": "Collection"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "replaceAll": {
                "Parameter": {
                    "": "UnaryOperator"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "sort": {
                "Parameter": {
                    "": "Comparator"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "clear": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "equals": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "get": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "set": {
                "Parameter": {
                    "index": "int",
                    "element": "E"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "indexOf": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "lastIndexOf": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "listIterator": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "subList": {
                "Parameter": {
                    "fromIndex": "int",
                    "toIndex": "int"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "spliterator": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "303": {
        "Package": "java.util",
        "Interface": "ListIterator",
        "Superinterface": [
            "java.util.Iterator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "hasNext": {
                "Parameter": {},
                "Throw": []
            },
            "next": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "hasPrevious": {
                "Parameter": {},
                "Throw": []
            },
            "previous": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "nextIndex": {
                "Parameter": {},
                "Throw": []
            },
            "previousIndex": {
                "Parameter": {},
                "Throw": []
            },
            "remove": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "set": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "add": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "304": {
        "Package": "java.util",
        "Interface": "Map.Entry",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.AbstractMap.SimpleEntry",
            "java.util.AbstractMap.SimpleImmutableEntry"
        ],
        "Method": {
            "getKey": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "getValue": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "setValue": {
                "Parameter": {
                    "value": "V"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "equals": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "comparingByKey": {
                "Parameter": {
                    "": "Comparator"
                },
                "Throw": []
            },
            "comparingByValue": {
                "Parameter": {
                    "": "Comparator"
                },
                "Throw": []
            }
        }
    },
    "305": {
        "Package": "java.util",
        "Interface": "Map",
        "Superinterface": null,
        "Implementing Class": [
            "javax.script.Bindings",
            "java.util.concurrent.ConcurrentMap",
            "java.util.concurrent.ConcurrentNavigableMap",
            "javax.xml.ws.handler.LogicalMessageContext",
            "javax.xml.ws.handler.MessageContext",
            "java.util.NavigableMap",
            "javax.xml.ws.handler.soap.SOAPMessageContext",
            "java.util.SortedMap"
        ],
        "Subinterface": [
            "java.util.AbstractMap",
            "java.util.jar.Attributes",
            "java.security.AuthProvider",
            "java.util.concurrent.ConcurrentHashMap",
            "java.util.concurrent.ConcurrentSkipListMap",
            "java.util.EnumMap",
            "java.util.HashMap",
            "java.util.Hashtable",
            "java.util.IdentityHashMap",
            "java.util.LinkedHashMap",
            "javax.print.attribute.standard.PrinterStateReasons",
            "java.util.Properties",
            "java.security.Provider",
            "java.awt.RenderingHints",
            "javax.script.SimpleBindings",
            "javax.management.openmbean.TabularDataSupport",
            "java.util.TreeMap",
            "javax.swing.UIDefaults",
            "java.util.WeakHashMap"
        ],
        "Method": {
            "size": {
                "Parameter": {},
                "Throw": []
            },
            "isEmpty": {
                "Parameter": {},
                "Throw": []
            },
            "containsKey": {
                "Parameter": {
                    "key": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "containsValue": {
                "Parameter": {
                    "value": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "get": {
                "Parameter": {
                    "key": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "put": {
                "Parameter": {
                    "key": "K",
                    "value": "V"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "remove": {
                "Parameter": {
                    "key": "Object",
                    "value": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "putAll": {
                "Parameter": {
                    "": "Map"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "clear": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "keySet": {
                "Parameter": {},
                "Throw": []
            },
            "values": {
                "Parameter": {},
                "Throw": []
            },
            "entrySet": {
                "Parameter": {},
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "getOrDefault": {
                "Parameter": {
                    "key": "Object",
                    "defaultValue": "V"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "forEach": {
                "Parameter": {
                    "": "BiConsumer"
                },
                "Throw": "java.util.ConcurrentModificationException"
            },
            "replaceAll": {
                "Parameter": {
                    "": "BiFunction"
                },
                "Throw": "java.util.ConcurrentModificationException"
            },
            "putIfAbsent": {
                "Parameter": {
                    "key": "K",
                    "value": "V"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "replace": {
                "Parameter": {
                    "key": "K",
                    "value": "V"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "computeIfAbsent": {
                "Parameter": {
                    "key": "K",
                    "": "Function"
                },
                "Throw": "java.lang.ClassCastException"
            },
            "computeIfPresent": {
                "Parameter": {
                    "key": "K",
                    "": "BiFunction"
                },
                "Throw": "java.lang.ClassCastException"
            },
            "compute": {
                "Parameter": {
                    "key": "K",
                    "": "BiFunction"
                },
                "Throw": "java.lang.ClassCastException"
            },
            "merge": {
                "Parameter": {
                    "key": "K",
                    "value": "V",
                    "": "BiFunction"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "306": {
        "Package": "java.util",
        "Interface": "NavigableMap",
        "Superinterface": [
            "java.util.Map",
            "java.util.SortedMap"
        ],
        "Implementing Class": [
            "java.util.concurrent.ConcurrentNavigableMap"
        ],
        "Subinterface": [
            "java.util.concurrent.ConcurrentSkipListMap",
            "java.util.TreeMap"
        ],
        "Method": {
            "lowerEntry": {
                "Parameter": {
                    "key": "K"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "lowerKey": {
                "Parameter": {
                    "key": "K"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "floorEntry": {
                "Parameter": {
                    "key": "K"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "floorKey": {
                "Parameter": {
                    "key": "K"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "ceilingEntry": {
                "Parameter": {
                    "key": "K"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "ceilingKey": {
                "Parameter": {
                    "key": "K"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "higherEntry": {
                "Parameter": {
                    "key": "K"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "higherKey": {
                "Parameter": {
                    "key": "K"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "firstEntry": {
                "Parameter": {},
                "Throw": []
            },
            "lastEntry": {
                "Parameter": {},
                "Throw": []
            },
            "pollFirstEntry": {
                "Parameter": {},
                "Throw": []
            },
            "pollLastEntry": {
                "Parameter": {},
                "Throw": []
            },
            "descendingMap": {
                "Parameter": {},
                "Throw": []
            },
            "navigableKeySet": {
                "Parameter": {},
                "Throw": []
            },
            "descendingKeySet": {
                "Parameter": {},
                "Throw": []
            },
            "subMap": {
                "Parameter": {
                    "fromKey": "K",
                    "toKey": "K"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "headMap": {
                "Parameter": {
                    "toKey": "K"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "tailMap": {
                "Parameter": {
                    "fromKey": "K"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "307": {
        "Package": "java.util",
        "Interface": "NavigableSet",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable",
            "java.util.Set",
            "java.util.SortedSet"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.ConcurrentSkipListSet",
            "java.util.TreeSet"
        ],
        "Method": {
            "lower": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "floor": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "ceiling": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "higher": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "pollFirst": {
                "Parameter": {},
                "Throw": []
            },
            "pollLast": {
                "Parameter": {},
                "Throw": []
            },
            "iterator": {
                "Parameter": {},
                "Throw": []
            },
            "descendingSet": {
                "Parameter": {},
                "Throw": []
            },
            "descendingIterator": {
                "Parameter": {},
                "Throw": []
            },
            "subSet": {
                "Parameter": {
                    "fromElement": "E",
                    "toElement": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "headSet": {
                "Parameter": {
                    "toElement": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "tailSet": {
                "Parameter": {
                    "fromElement": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "308": {
        "Package": "java.util",
        "Interface": "Observer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "update": {
                "Parameter": {
                    "o": "Observable",
                    "arg": "Object"
                },
                "Throw": []
            }
        }
    },
    "309": {
        "Package": "java.util",
        "Interface": "PrimitiveIterator",
        "Superinterface": [
            "java.util.Iterator"
        ],
        "Implementing Class": [
            "java.util.PrimitiveIterator.OfDouble",
            "java.util.PrimitiveIterator.OfInt",
            "java.util.PrimitiveIterator.OfLong"
        ],
        "Subinterface": null,
        "Method": {
            "forEachRemaining": {
                "Parameter": {
                    "action": "T_CONS"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "310": {
        "Package": "java.util",
        "Interface": "PrimitiveIterator.OfDouble",
        "Superinterface": [
            "java.util.Iterator",
            "java.util.Double",
            "java.util.function.PrimitiveIterator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "nextDouble": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "forEachRemaining": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            },
            "next": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "311": {
        "Package": "java.util",
        "Interface": "PrimitiveIterator.OfInt",
        "Superinterface": [
            "java.util.Iterator",
            "java.util.Integer",
            "java.util.function.PrimitiveIterator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "nextInt": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "forEachRemaining": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            },
            "next": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "312": {
        "Package": "java.util",
        "Interface": "PrimitiveIterator.OfLong",
        "Superinterface": [
            "java.util.Iterator",
            "java.util.Long",
            "java.util.function.PrimitiveIterator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "nextLong": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "forEachRemaining": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            },
            "next": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "313": {
        "Package": "java.util",
        "Interface": "Queue",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable"
        ],
        "Implementing Class": [
            "java.util.concurrent.BlockingDeque",
            "java.util.concurrent.BlockingQueue",
            "java.util.Deque",
            "java.util.concurrent.TransferQueue"
        ],
        "Subinterface": [
            "java.util.AbstractQueue",
            "java.util.concurrent.ArrayBlockingQueue",
            "java.util.ArrayDeque",
            "java.util.concurrent.ConcurrentLinkedDeque",
            "java.util.concurrent.ConcurrentLinkedQueue",
            "java.util.concurrent.DelayQueue",
            "java.util.concurrent.LinkedBlockingDeque",
            "java.util.concurrent.LinkedBlockingQueue",
            "java.util.LinkedList",
            "java.util.concurrent.LinkedTransferQueue",
            "java.util.concurrent.PriorityBlockingQueue",
            "java.util.PriorityQueue",
            "java.util.concurrent.SynchronousQueue"
        ],
        "Method": {
            "add": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "offer": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "remove": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "poll": {
                "Parameter": {},
                "Throw": []
            },
            "element": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "peek": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "314": {
        "Package": "java.util",
        "Interface": "RandomAccess",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.ArrayList",
            "javax.management.AttributeList",
            "java.util.concurrent.CopyOnWriteArrayList",
            "javax.management.relation.RoleList",
            "javax.management.relation.RoleUnresolvedList",
            "java.util.Stack",
            "java.util.Vector"
        ],
        "Method": {}
    },
    "315": {
        "Package": "java.util",
        "Interface": "Set",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable"
        ],
        "Implementing Class": [
            "java.util.NavigableSet",
            "java.util.SortedSet"
        ],
        "Subinterface": [
            "java.util.AbstractSet",
            "java.util.concurrent.ConcurrentHashMap.KeySetView",
            "java.util.concurrent.ConcurrentSkipListSet",
            "java.util.concurrent.CopyOnWriteArraySet",
            "java.util.EnumSet",
            "java.util.HashSet",
            "javax.print.attribute.standard.JobStateReasons",
            "java.util.LinkedHashSet",
            "java.util.TreeSet"
        ],
        "Method": {
            "size": {
                "Parameter": {},
                "Throw": []
            },
            "isEmpty": {
                "Parameter": {},
                "Throw": []
            },
            "contains": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "iterator": {
                "Parameter": {},
                "Throw": []
            },
            "toArray": {
                "Parameter": {
                    "a": "T"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "add": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "remove": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "containsAll": {
                "Parameter": {
                    "": "Collection"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "addAll": {
                "Parameter": {
                    "": "Collection"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "retainAll": {
                "Parameter": {
                    "": "Collection"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "removeAll": {
                "Parameter": {
                    "": "Collection"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "clear": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "equals": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "spliterator": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "316": {
        "Package": "java.util",
        "Interface": "SortedMap",
        "Superinterface": [
            "java.util.Map"
        ],
        "Implementing Class": [
            "java.util.concurrent.ConcurrentNavigableMap",
            "java.util.NavigableMap"
        ],
        "Subinterface": [
            "java.util.concurrent.ConcurrentSkipListMap",
            "java.util.TreeMap"
        ],
        "Method": {
            "comparator": {
                "Parameter": {},
                "Throw": []
            },
            "subMap": {
                "Parameter": {
                    "fromKey": "K",
                    "toKey": "K"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "headMap": {
                "Parameter": {
                    "toKey": "K"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "tailMap": {
                "Parameter": {
                    "fromKey": "K"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "firstKey": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "lastKey": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "keySet": {
                "Parameter": {},
                "Throw": []
            },
            "values": {
                "Parameter": {},
                "Throw": []
            },
            "entrySet": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "317": {
        "Package": "java.util",
        "Interface": "SortedSet",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable",
            "java.util.Set"
        ],
        "Implementing Class": [
            "java.util.NavigableSet"
        ],
        "Subinterface": [
            "java.util.concurrent.ConcurrentSkipListSet",
            "java.util.TreeSet"
        ],
        "Method": {
            "comparator": {
                "Parameter": {},
                "Throw": []
            },
            "subSet": {
                "Parameter": {
                    "fromElement": "E",
                    "toElement": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "headSet": {
                "Parameter": {
                    "toElement": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "tailSet": {
                "Parameter": {
                    "fromElement": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "first": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "last": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "spliterator": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "318": {
        "Package": "java.util",
        "Interface": "Spliterator",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.Spliterator.OfDouble",
            "java.util.Spliterator.OfInt",
            "java.util.Spliterator.OfLong",
            "java.util.Spliterator.OfPrimitive"
        ],
        "Subinterface": [
            "java.util.Spliterators.AbstractDoubleSpliterator",
            "java.util.Spliterators.AbstractIntSpliterator",
            "java.util.Spliterators.AbstractLongSpliterator",
            "java.util.Spliterators.AbstractSpliterator"
        ],
        "Method": {
            "tryAdvance": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "forEachRemaining": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "trySplit": {
                "Parameter": {},
                "Throw": []
            },
            "estimateSize": {
                "Parameter": {},
                "Throw": []
            },
            "getExactSizeIfKnown": {
                "Parameter": {},
                "Throw": []
            },
            "characteristics": {
                "Parameter": {},
                "Throw": []
            },
            "hasCharacteristics": {
                "Parameter": {
                    "characteristics": "int"
                },
                "Throw": []
            },
            "getComparator": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            }
        }
    },
    "319": {
        "Package": "java.util",
        "Interface": "Spliterator.OfDouble",
        "Superinterface": [
            "java.util.Spliterator",
            "java.util.Double",
            "java.util.function.Spliterator.OfPrimitive",
            "java.util.Double"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.Spliterators.AbstractDoubleSpliterator"
        ],
        "Method": {
            "trySplit": {
                "Parameter": {},
                "Throw": []
            },
            "tryAdvance": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            },
            "forEachRemaining": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            }
        }
    },
    "320": {
        "Package": "java.util",
        "Interface": "Spliterator.OfInt",
        "Superinterface": [
            "java.util.Spliterator",
            "java.util.Integer",
            "java.util.function.Spliterator.OfPrimitive",
            "java.util.Integer"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.Spliterators.AbstractIntSpliterator"
        ],
        "Method": {
            "trySplit": {
                "Parameter": {},
                "Throw": []
            },
            "tryAdvance": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            },
            "forEachRemaining": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            }
        }
    },
    "321": {
        "Package": "java.util",
        "Interface": "Spliterator.OfLong",
        "Superinterface": [
            "java.util.Spliterator",
            "java.util.Long",
            "java.util.function.Spliterator.OfPrimitive",
            "java.util.Long"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.Spliterators.AbstractLongSpliterator"
        ],
        "Method": {
            "trySplit": {
                "Parameter": {},
                "Throw": []
            },
            "tryAdvance": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            },
            "forEachRemaining": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            }
        }
    },
    "322": {
        "Package": "java.util",
        "Interface": "Spliterator.OfPrimitive",
        "Superinterface": [
            "java.util.Spliterator"
        ],
        "Implementing Class": [
            "java.util.Spliterator.OfDouble",
            "java.util.Spliterator.OfInt",
            "java.util.Spliterator.OfLong"
        ],
        "Subinterface": [
            "java.util.Spliterators.AbstractDoubleSpliterator",
            "java.util.Spliterators.AbstractIntSpliterator",
            "java.util.Spliterators.AbstractLongSpliterator"
        ],
        "Method": {
            "trySplit": {
                "Parameter": {},
                "Throw": []
            },
            "tryAdvance": {
                "Parameter": {
                    "action": "T_CONS"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "forEachRemaining": {
                "Parameter": {
                    "action": "T_CONS"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "323": {
        "Package": "java.util.concurrent",
        "Interface": "BlockingDeque",
        "Superinterface": [
            "java.util.concurrent.BlockingQueue",
            "java.util.Collection",
            "java.util.Deque",
            "java.lang.Iterable",
            "java.util.Queue"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.LinkedBlockingDeque"
        ],
        "Method": {
            "addFirst": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "addLast": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "offerFirst": {
                "Parameter": {
                    "e": "E",
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "offerLast": {
                "Parameter": {
                    "e": "E",
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "putFirst": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "putLast": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "takeFirst": {
                "Parameter": {},
                "Throw": "java.lang.InterruptedException"
            },
            "takeLast": {
                "Parameter": {},
                "Throw": "java.lang.InterruptedException"
            },
            "pollFirst": {
                "Parameter": {
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.InterruptedException"
            },
            "pollLast": {
                "Parameter": {
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.InterruptedException"
            },
            "removeFirstOccurrence": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "removeLastOccurrence": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "add": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "offer": {
                "Parameter": {
                    "e": "E",
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "put": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "remove": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "poll": {
                "Parameter": {
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.InterruptedException"
            },
            "take": {
                "Parameter": {},
                "Throw": "java.lang.InterruptedException"
            },
            "element": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "peek": {
                "Parameter": {},
                "Throw": []
            },
            "contains": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "size": {
                "Parameter": {},
                "Throw": []
            },
            "iterator": {
                "Parameter": {},
                "Throw": []
            },
            "push": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "324": {
        "Package": "java.util.concurrent",
        "Interface": "BlockingQueue",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable",
            "java.util.Queue"
        ],
        "Implementing Class": [
            "java.util.concurrent.BlockingDeque",
            "java.util.concurrent.TransferQueue"
        ],
        "Subinterface": [
            "java.util.concurrent.ArrayBlockingQueue",
            "java.util.concurrent.DelayQueue",
            "java.util.concurrent.LinkedBlockingDeque",
            "java.util.concurrent.LinkedBlockingQueue",
            "java.util.concurrent.LinkedTransferQueue",
            "java.util.concurrent.PriorityBlockingQueue",
            "java.util.concurrent.SynchronousQueue"
        ],
        "Method": {
            "add": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "offer": {
                "Parameter": {
                    "e": "E",
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "put": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "take": {
                "Parameter": {},
                "Throw": "java.lang.InterruptedException"
            },
            "poll": {
                "Parameter": {
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.InterruptedException"
            },
            "remainingCapacity": {
                "Parameter": {},
                "Throw": []
            },
            "remove": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "contains": {
                "Parameter": {
                    "o": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "drainTo": {
                "Parameter": {
                    "": "Collection",
                    "maxElements": "int"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "325": {
        "Package": "java.util.concurrent",
        "Interface": "Callable",
        "Superinterface": null,
        "Implementing Class": [
            "javax.tools.DocumentationTool.DocumentationTask",
            "javax.tools.JavaCompiler.CompilationTask"
        ],
        "Subinterface": null,
        "Method": {
            "call": {
                "Parameter": {},
                "Throw": "java.lang.Exception"
            }
        }
    },
    "326": {
        "Package": "java.util.concurrent",
        "Interface": "CompletableFuture.AsynchronousCompletionTask",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "327": {
        "Package": "java.util.concurrent",
        "Interface": "CompletionService",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.ExecutorCompletionService"
        ],
        "Method": {
            "submit": {
                "Parameter": {
                    "task": "Runnable",
                    "result": "V"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "take": {
                "Parameter": {},
                "Throw": "java.lang.InterruptedException"
            },
            "poll": {
                "Parameter": {
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.InterruptedException"
            }
        }
    },
    "328": {
        "Package": "java.util.concurrent",
        "Interface": "CompletionStage",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.CompletableFuture"
        ],
        "Method": {
            "thenApply": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": []
            },
            "thenApplyAsync": {
                "Parameter": {
                    "": "Function",
                    "executor": "Executor"
                },
                "Throw": []
            },
            "thenAccept": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            },
            "thenAcceptAsync": {
                "Parameter": {
                    "": "Consumer",
                    "executor": "Executor"
                },
                "Throw": []
            },
            "thenRun": {
                "Parameter": {
                    "action": "Runnable"
                },
                "Throw": []
            },
            "thenRunAsync": {
                "Parameter": {
                    "action": "Runnable",
                    "executor": "Executor"
                },
                "Throw": []
            },
            "thenCombine": {
                "Parameter": {
                    "": "BiFunction"
                },
                "Throw": []
            },
            "thenCombineAsync": {
                "Parameter": {
                    "": "BiFunction",
                    "executor": "Executor"
                },
                "Throw": []
            },
            "thenAcceptBoth": {
                "Parameter": {
                    "": "BiConsumer"
                },
                "Throw": []
            },
            "thenAcceptBothAsync": {
                "Parameter": {
                    "": "BiConsumer",
                    "executor": "Executor"
                },
                "Throw": []
            },
            "runAfterBoth": {
                "Parameter": {
                    "": "CompletionStage",
                    "action": "Runnable"
                },
                "Throw": []
            },
            "runAfterBothAsync": {
                "Parameter": {
                    "": "CompletionStage",
                    "action": "Runnable",
                    "executor": "Executor"
                },
                "Throw": []
            },
            "applyToEither": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": []
            },
            "applyToEitherAsync": {
                "Parameter": {
                    "": "Function",
                    "executor": "Executor"
                },
                "Throw": []
            },
            "acceptEither": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            },
            "acceptEitherAsync": {
                "Parameter": {
                    "": "Consumer",
                    "executor": "Executor"
                },
                "Throw": []
            },
            "runAfterEither": {
                "Parameter": {
                    "": "CompletionStage",
                    "action": "Runnable"
                },
                "Throw": []
            },
            "runAfterEitherAsync": {
                "Parameter": {
                    "": "CompletionStage",
                    "action": "Runnable",
                    "executor": "Executor"
                },
                "Throw": []
            },
            "thenCompose": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": []
            },
            "thenComposeAsync": {
                "Parameter": {
                    "": "Function",
                    "executor": "Executor"
                },
                "Throw": []
            },
            "exceptionally": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": []
            },
            "whenComplete": {
                "Parameter": {
                    "": "BiConsumer"
                },
                "Throw": []
            },
            "whenCompleteAsync": {
                "Parameter": {
                    "": "BiConsumer",
                    "executor": "Executor"
                },
                "Throw": []
            },
            "handle": {
                "Parameter": {
                    "": "BiFunction"
                },
                "Throw": []
            },
            "handleAsync": {
                "Parameter": {
                    "": "BiFunction",
                    "executor": "Executor"
                },
                "Throw": []
            },
            "toCompletableFuture": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            }
        }
    },
    "329": {
        "Package": "java.util.concurrent",
        "Interface": "ConcurrentMap",
        "Superinterface": [
            "java.util.Map"
        ],
        "Implementing Class": [
            "java.util.concurrent.ConcurrentNavigableMap"
        ],
        "Subinterface": [
            "java.util.concurrent.ConcurrentHashMap",
            "java.util.concurrent.ConcurrentSkipListMap"
        ],
        "Method": {
            "getOrDefault": {
                "Parameter": {
                    "key": "Object",
                    "defaultValue": "V"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "forEach": {
                "Parameter": {
                    "": "BiConsumer"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "putIfAbsent": {
                "Parameter": {
                    "key": "K",
                    "value": "V"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "remove": {
                "Parameter": {
                    "key": "Object",
                    "value": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "replace": {
                "Parameter": {
                    "key": "K",
                    "value": "V"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "replaceAll": {
                "Parameter": {
                    "": "BiFunction"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "computeIfAbsent": {
                "Parameter": {
                    "key": "K",
                    "": "Function"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "computeIfPresent": {
                "Parameter": {
                    "key": "K",
                    "": "BiFunction"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "compute": {
                "Parameter": {
                    "key": "K",
                    "": "BiFunction"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "merge": {
                "Parameter": {
                    "key": "K",
                    "value": "V",
                    "": "BiFunction"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "330": {
        "Package": "java.util.concurrent",
        "Interface": "ConcurrentNavigableMap",
        "Superinterface": [
            "java.util.concurrent.ConcurrentMap",
            "java.util.Map",
            "java.util.NavigableMap",
            "java.util.SortedMap"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.ConcurrentSkipListMap"
        ],
        "Method": {
            "subMap": {
                "Parameter": {
                    "fromKey": "K",
                    "toKey": "K"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "headMap": {
                "Parameter": {
                    "toKey": "K"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "tailMap": {
                "Parameter": {
                    "fromKey": "K"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "descendingMap": {
                "Parameter": {},
                "Throw": []
            },
            "navigableKeySet": {
                "Parameter": {},
                "Throw": []
            },
            "keySet": {
                "Parameter": {},
                "Throw": []
            },
            "descendingKeySet": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "331": {
        "Package": "java.util.concurrent",
        "Interface": "Delayed",
        "Superinterface": [
            "java.lang.Comparable",
            "java.util.concurrent.Delayed"
        ],
        "Implementing Class": [
            "java.util.concurrent.RunnableScheduledFuture",
            "java.util.concurrent.ScheduledFuture"
        ],
        "Subinterface": null,
        "Method": {
            "getDelay": {
                "Parameter": {
                    "unit": "TimeUnit"
                },
                "Throw": []
            }
        }
    },
    "332": {
        "Package": "java.util.concurrent",
        "Interface": "Executor",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.concurrent.ExecutorService",
            "java.util.concurrent.ScheduledExecutorService"
        ],
        "Subinterface": [
            "java.util.concurrent.AbstractExecutorService",
            "java.util.concurrent.ForkJoinPool",
            "java.util.concurrent.ScheduledThreadPoolExecutor",
            "java.util.concurrent.ThreadPoolExecutor"
        ],
        "Method": {
            "execute": {
                "Parameter": {
                    "command": "Runnable"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "333": {
        "Package": "java.util.concurrent",
        "Interface": "ExecutorService",
        "Superinterface": [
            "java.util.concurrent.Executor"
        ],
        "Implementing Class": [
            "java.util.concurrent.ScheduledExecutorService"
        ],
        "Subinterface": [
            "java.util.concurrent.AbstractExecutorService",
            "java.util.concurrent.ForkJoinPool",
            "java.util.concurrent.ScheduledThreadPoolExecutor",
            "java.util.concurrent.ThreadPoolExecutor"
        ],
        "Method": {
            "shutdown": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "shutdownNow": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "isShutdown": {
                "Parameter": {},
                "Throw": []
            },
            "isTerminated": {
                "Parameter": {},
                "Throw": []
            },
            "awaitTermination": {
                "Parameter": {
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.InterruptedException"
            },
            "submit": {
                "Parameter": {
                    "task": "Runnable"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "invokeAll": {
                "Parameter": {
                    "": "Collection",
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.util.concurrent.RejectedExecutionException"
            },
            "invokeAny": {
                "Parameter": {
                    "": "Collection",
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.util.concurrent.RejectedExecutionException"
            }
        }
    },
    "334": {
        "Package": "java.util.concurrent",
        "Interface": "ForkJoinPool.ForkJoinWorkerThreadFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "newThread": {
                "Parameter": {
                    "pool": "ForkJoinPool"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "335": {
        "Package": "java.util.concurrent",
        "Interface": "ForkJoinPool.ManagedBlocker",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "block": {
                "Parameter": {},
                "Throw": "java.lang.InterruptedException"
            },
            "isReleasable": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "336": {
        "Package": "java.util.concurrent",
        "Interface": "Future",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.ws.Response",
            "java.util.concurrent.RunnableFuture",
            "java.util.concurrent.RunnableScheduledFuture",
            "java.util.concurrent.ScheduledFuture"
        ],
        "Subinterface": [
            "java.util.concurrent.CompletableFuture",
            "java.util.concurrent.CountedCompleter",
            "java.util.concurrent.ForkJoinTask",
            "java.util.concurrent.FutureTask",
            "java.util.concurrent.RecursiveAction",
            "java.util.concurrent.RecursiveTask",
            "javax.swing.SwingWorker"
        ],
        "Method": {
            "cancel": {
                "Parameter": {
                    "mayInterruptIfRunning": "boolean"
                },
                "Throw": []
            },
            "isCancelled": {
                "Parameter": {},
                "Throw": []
            },
            "isDone": {
                "Parameter": {},
                "Throw": []
            },
            "get": {
                "Parameter": {
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.util.concurrent.TimeoutException"
            }
        }
    },
    "337": {
        "Package": "java.util.concurrent",
        "Interface": "RejectedExecutionHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.ThreadPoolExecutor.AbortPolicy",
            "java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy",
            "java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy",
            "java.util.concurrent.ThreadPoolExecutor.DiscardPolicy"
        ],
        "Method": {
            "rejectedExecution": {
                "Parameter": {
                    "r": "Runnable",
                    "executor": "ThreadPoolExecutor"
                },
                "Throw": "java.util.concurrent.RejectedExecutionException"
            }
        }
    },
    "338": {
        "Package": "java.util.concurrent",
        "Interface": "RunnableFuture",
        "Superinterface": [
            "java.util.concurrent.Future",
            "java.lang.Runnable"
        ],
        "Implementing Class": [
            "java.util.concurrent.RunnableScheduledFuture"
        ],
        "Subinterface": [
            "java.util.concurrent.FutureTask",
            "javax.swing.SwingWorker"
        ],
        "Method": {
            "run": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "339": {
        "Package": "java.util.concurrent",
        "Interface": "RunnableScheduledFuture",
        "Superinterface": [
            "java.lang.Comparable",
            "java.util.concurrent.Delayed",
            "java.util.concurrent.Delayed",
            "java.util.concurrent.Future",
            "java.lang.Runnable",
            "java.util.concurrent.RunnableFuture",
            "java.util.concurrent.ScheduledFuture"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "isPeriodic": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "340": {
        "Package": "java.util.concurrent",
        "Interface": "ScheduledExecutorService",
        "Superinterface": [
            "java.util.concurrent.Executor",
            "java.util.concurrent.ExecutorService"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.ScheduledThreadPoolExecutor"
        ],
        "Method": {
            "schedule": {
                "Parameter": {
                    "": "Callable",
                    "delay": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "scheduleAtFixedRate": {
                "Parameter": {
                    "command": "Runnable",
                    "initialDelay": "long",
                    "period": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "scheduleWithFixedDelay": {
                "Parameter": {
                    "command": "Runnable",
                    "initialDelay": "long",
                    "delay": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "341": {
        "Package": "java.util.concurrent",
        "Interface": "ScheduledFuture",
        "Superinterface": [
            "java.lang.Comparable",
            "java.util.concurrent.Delayed",
            "java.util.concurrent.Delayed",
            "java.util.concurrent.Future"
        ],
        "Implementing Class": [
            "java.util.concurrent.RunnableScheduledFuture"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "342": {
        "Package": "java.util.concurrent",
        "Interface": "ThreadFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "newThread": {
                "Parameter": {
                    "r": "Runnable"
                },
                "Throw": []
            }
        }
    },
    "343": {
        "Package": "java.util.concurrent",
        "Interface": "TransferQueue",
        "Superinterface": [
            "java.util.concurrent.BlockingQueue",
            "java.util.Collection",
            "java.lang.Iterable",
            "java.util.Queue"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.LinkedTransferQueue"
        ],
        "Method": {
            "tryTransfer": {
                "Parameter": {
                    "e": "E",
                    "timeout": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "transfer": {
                "Parameter": {
                    "e": "E"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "hasWaitingConsumer": {
                "Parameter": {},
                "Throw": []
            },
            "getWaitingConsumerCount": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "344": {
        "Package": "java.util.concurrent.locks",
        "Interface": "Condition",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject",
            "java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject"
        ],
        "Method": {
            "await": {
                "Parameter": {
                    "time": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.InterruptedException"
            },
            "awaitUninterruptibly": {
                "Parameter": {},
                "Throw": []
            },
            "awaitNanos": {
                "Parameter": {
                    "nanosTimeout": "long"
                },
                "Throw": "java.lang.InterruptedException"
            },
            "awaitUntil": {
                "Parameter": {
                    "deadline": "Date"
                },
                "Throw": "java.lang.InterruptedException"
            },
            "signal": {
                "Parameter": {},
                "Throw": []
            },
            "signalAll": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "345": {
        "Package": "java.util.concurrent.locks",
        "Interface": "Lock",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.locks.ReentrantLock",
            "java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock",
            "java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock"
        ],
        "Method": {
            "lock": {
                "Parameter": {},
                "Throw": []
            },
            "lockInterruptibly": {
                "Parameter": {},
                "Throw": "java.lang.InterruptedException"
            },
            "tryLock": {
                "Parameter": {
                    "time": "long",
                    "unit": "TimeUnit"
                },
                "Throw": "java.lang.InterruptedException"
            },
            "unlock": {
                "Parameter": {},
                "Throw": []
            },
            "newCondition": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            }
        }
    },
    "346": {
        "Package": "java.util.concurrent.locks",
        "Interface": "ReadWriteLock",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.locks.ReentrantReadWriteLock"
        ],
        "Method": {
            "readLock": {
                "Parameter": {},
                "Throw": []
            },
            "writeLock": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "347": {
        "Package": "java.util.function",
        "Interface": "BiConsumer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "t": "T",
                    "u": "U"
                },
                "Throw": []
            },
            "andThen": {
                "Parameter": {
                    "": "BiConsumer"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "348": {
        "Package": "java.util.function",
        "Interface": "BiFunction",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.function.BinaryOperator"
        ],
        "Subinterface": null,
        "Method": {
            "apply": {
                "Parameter": {
                    "t": "T",
                    "u": "U"
                },
                "Throw": []
            },
            "andThen": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "349": {
        "Package": "java.util.function",
        "Interface": "BinaryOperator",
        "Superinterface": [
            "java.util.function.BiFunction"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "minBy": {
                "Parameter": {
                    "": "Comparator"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "maxBy": {
                "Parameter": {
                    "": "Comparator"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "350": {
        "Package": "java.util.function",
        "Interface": "BiPredicate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "test": {
                "Parameter": {
                    "t": "T",
                    "u": "U"
                },
                "Throw": []
            },
            "and": {
                "Parameter": {
                    "": "BiPredicate"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "negate": {
                "Parameter": {},
                "Throw": []
            },
            "or": {
                "Parameter": {
                    "": "BiPredicate"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "351": {
        "Package": "java.util.function",
        "Interface": "BooleanSupplier",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAsBoolean": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "352": {
        "Package": "java.util.function",
        "Interface": "Consumer",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.stream.Stream.Builder"
        ],
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "t": "T"
                },
                "Throw": []
            },
            "andThen": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "353": {
        "Package": "java.util.function",
        "Interface": "DoubleBinaryOperator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsDouble": {
                "Parameter": {
                    "left": "double",
                    "right": "double"
                },
                "Throw": []
            }
        }
    },
    "354": {
        "Package": "java.util.function",
        "Interface": "DoubleConsumer",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.stream.DoubleStream.Builder"
        ],
        "Subinterface": [
            "java.util.DoubleSummaryStatistics"
        ],
        "Method": {
            "accept": {
                "Parameter": {
                    "value": "double"
                },
                "Throw": []
            },
            "andThen": {
                "Parameter": {
                    "after": "DoubleConsumer"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "355": {
        "Package": "java.util.function",
        "Interface": "DoubleFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "apply": {
                "Parameter": {
                    "value": "double"
                },
                "Throw": []
            }
        }
    },
    "356": {
        "Package": "java.util.function",
        "Interface": "DoublePredicate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "test": {
                "Parameter": {
                    "value": "double"
                },
                "Throw": []
            },
            "and": {
                "Parameter": {
                    "other": "DoublePredicate"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "negate": {
                "Parameter": {},
                "Throw": []
            },
            "or": {
                "Parameter": {
                    "other": "DoublePredicate"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "357": {
        "Package": "java.util.function",
        "Interface": "DoubleSupplier",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAsDouble": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "358": {
        "Package": "java.util.function",
        "Interface": "DoubleToIntFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsInt": {
                "Parameter": {
                    "value": "double"
                },
                "Throw": []
            }
        }
    },
    "359": {
        "Package": "java.util.function",
        "Interface": "DoubleToLongFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsLong": {
                "Parameter": {
                    "value": "double"
                },
                "Throw": []
            }
        }
    },
    "360": {
        "Package": "java.util.function",
        "Interface": "DoubleUnaryOperator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsDouble": {
                "Parameter": {
                    "operand": "double"
                },
                "Throw": []
            },
            "compose": {
                "Parameter": {
                    "before": "DoubleUnaryOperator"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "andThen": {
                "Parameter": {
                    "after": "DoubleUnaryOperator"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "identity": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "361": {
        "Package": "java.util.function",
        "Interface": "Function",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.function.UnaryOperator"
        ],
        "Subinterface": null,
        "Method": {
            "apply": {
                "Parameter": {
                    "t": "T"
                },
                "Throw": []
            },
            "compose": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "andThen": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "identity": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "362": {
        "Package": "java.util.function",
        "Interface": "IntBinaryOperator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsInt": {
                "Parameter": {
                    "left": "int",
                    "right": "int"
                },
                "Throw": []
            }
        }
    },
    "363": {
        "Package": "java.util.function",
        "Interface": "IntConsumer",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.stream.IntStream.Builder"
        ],
        "Subinterface": [
            "java.util.IntSummaryStatistics",
            "java.util.LongSummaryStatistics"
        ],
        "Method": {
            "accept": {
                "Parameter": {
                    "value": "int"
                },
                "Throw": []
            },
            "andThen": {
                "Parameter": {
                    "after": "IntConsumer"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "364": {
        "Package": "java.util.function",
        "Interface": "IntFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "apply": {
                "Parameter": {
                    "value": "int"
                },
                "Throw": []
            }
        }
    },
    "365": {
        "Package": "java.util.function",
        "Interface": "IntPredicate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "test": {
                "Parameter": {
                    "value": "int"
                },
                "Throw": []
            },
            "and": {
                "Parameter": {
                    "other": "IntPredicate"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "negate": {
                "Parameter": {},
                "Throw": []
            },
            "or": {
                "Parameter": {
                    "other": "IntPredicate"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "366": {
        "Package": "java.util.function",
        "Interface": "IntSupplier",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAsInt": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "367": {
        "Package": "java.util.function",
        "Interface": "IntToDoubleFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsDouble": {
                "Parameter": {
                    "value": "int"
                },
                "Throw": []
            }
        }
    },
    "368": {
        "Package": "java.util.function",
        "Interface": "IntToLongFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsLong": {
                "Parameter": {
                    "value": "int"
                },
                "Throw": []
            }
        }
    },
    "369": {
        "Package": "java.util.function",
        "Interface": "IntUnaryOperator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsInt": {
                "Parameter": {
                    "operand": "int"
                },
                "Throw": []
            },
            "compose": {
                "Parameter": {
                    "before": "IntUnaryOperator"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "andThen": {
                "Parameter": {
                    "after": "IntUnaryOperator"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "identity": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "370": {
        "Package": "java.util.function",
        "Interface": "LongBinaryOperator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsLong": {
                "Parameter": {
                    "left": "long",
                    "right": "long"
                },
                "Throw": []
            }
        }
    },
    "371": {
        "Package": "java.util.function",
        "Interface": "LongConsumer",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.stream.LongStream.Builder"
        ],
        "Subinterface": [
            "java.util.LongSummaryStatistics"
        ],
        "Method": {
            "accept": {
                "Parameter": {
                    "value": "long"
                },
                "Throw": []
            },
            "andThen": {
                "Parameter": {
                    "after": "LongConsumer"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "372": {
        "Package": "java.util.function",
        "Interface": "LongFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "apply": {
                "Parameter": {
                    "value": "long"
                },
                "Throw": []
            }
        }
    },
    "373": {
        "Package": "java.util.function",
        "Interface": "LongPredicate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "test": {
                "Parameter": {
                    "value": "long"
                },
                "Throw": []
            },
            "and": {
                "Parameter": {
                    "other": "LongPredicate"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "negate": {
                "Parameter": {},
                "Throw": []
            },
            "or": {
                "Parameter": {
                    "other": "LongPredicate"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "374": {
        "Package": "java.util.function",
        "Interface": "LongSupplier",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAsLong": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "375": {
        "Package": "java.util.function",
        "Interface": "LongToDoubleFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsDouble": {
                "Parameter": {
                    "value": "long"
                },
                "Throw": []
            }
        }
    },
    "376": {
        "Package": "java.util.function",
        "Interface": "LongToIntFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsInt": {
                "Parameter": {
                    "value": "long"
                },
                "Throw": []
            }
        }
    },
    "377": {
        "Package": "java.util.function",
        "Interface": "LongUnaryOperator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsLong": {
                "Parameter": {
                    "operand": "long"
                },
                "Throw": []
            },
            "compose": {
                "Parameter": {
                    "before": "LongUnaryOperator"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "andThen": {
                "Parameter": {
                    "after": "LongUnaryOperator"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "identity": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "378": {
        "Package": "java.util.function",
        "Interface": "ObjDoubleConsumer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "t": "T",
                    "value": "double"
                },
                "Throw": []
            }
        }
    },
    "379": {
        "Package": "java.util.function",
        "Interface": "ObjIntConsumer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "t": "T",
                    "value": "int"
                },
                "Throw": []
            }
        }
    },
    "380": {
        "Package": "java.util.function",
        "Interface": "ObjLongConsumer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "t": "T",
                    "value": "long"
                },
                "Throw": []
            }
        }
    },
    "381": {
        "Package": "java.util.function",
        "Interface": "Predicate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "test": {
                "Parameter": {
                    "t": "T"
                },
                "Throw": []
            },
            "and": {
                "Parameter": {
                    "": "Predicate"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "negate": {
                "Parameter": {},
                "Throw": []
            },
            "or": {
                "Parameter": {
                    "": "Predicate"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "isEqual": {
                "Parameter": {
                    "targetRef": "Object"
                },
                "Throw": []
            }
        }
    },
    "382": {
        "Package": "java.util.function",
        "Interface": "Supplier",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "get": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "383": {
        "Package": "java.util.function",
        "Interface": "ToDoubleBiFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsDouble": {
                "Parameter": {
                    "t": "T",
                    "u": "U"
                },
                "Throw": []
            }
        }
    },
    "384": {
        "Package": "java.util.function",
        "Interface": "ToDoubleFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsDouble": {
                "Parameter": {
                    "value": "T"
                },
                "Throw": []
            }
        }
    },
    "385": {
        "Package": "java.util.function",
        "Interface": "ToIntBiFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsInt": {
                "Parameter": {
                    "t": "T",
                    "u": "U"
                },
                "Throw": []
            }
        }
    },
    "386": {
        "Package": "java.util.function",
        "Interface": "ToIntFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsInt": {
                "Parameter": {
                    "value": "T"
                },
                "Throw": []
            }
        }
    },
    "387": {
        "Package": "java.util.function",
        "Interface": "ToLongBiFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsLong": {
                "Parameter": {
                    "t": "T",
                    "u": "U"
                },
                "Throw": []
            }
        }
    },
    "388": {
        "Package": "java.util.function",
        "Interface": "ToLongFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "applyAsLong": {
                "Parameter": {
                    "value": "T"
                },
                "Throw": []
            }
        }
    },
    "389": {
        "Package": "java.util.function",
        "Interface": "UnaryOperator",
        "Superinterface": [
            "java.util.function.Function"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "identity": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "390": {
        "Package": "java.util.jar",
        "Interface": "Pack200.Packer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "properties": {
                "Parameter": {},
                "Throw": []
            },
            "pack": {
                "Parameter": {
                    "in": "JarInputStream",
                    "out": "OutputStream"
                },
                "Throw": "java.io.IOException"
            },
            "addPropertyChangeListener": {
                "Parameter": {
                    "listener": "PropertyChangeListener"
                },
                "Throw": []
            },
            "removePropertyChangeListener": {
                "Parameter": {
                    "listener": "PropertyChangeListener"
                },
                "Throw": []
            }
        }
    },
    "391": {
        "Package": "java.util.jar",
        "Interface": "Pack200.Unpacker",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "properties": {
                "Parameter": {},
                "Throw": []
            },
            "unpack": {
                "Parameter": {
                    "in": "File",
                    "out": "JarOutputStream"
                },
                "Throw": "java.io.IOException"
            },
            "addPropertyChangeListener": {
                "Parameter": {
                    "listener": "PropertyChangeListener"
                },
                "Throw": []
            },
            "removePropertyChangeListener": {
                "Parameter": {
                    "listener": "PropertyChangeListener"
                },
                "Throw": []
            }
        }
    },
    "392": {
        "Package": "java.util.logging",
        "Interface": "Filter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "isLoggable": {
                "Parameter": {
                    "record": "LogRecord"
                },
                "Throw": []
            }
        }
    },
    "393": {
        "Package": "java.util.logging",
        "Interface": "LoggingMXBean",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getLoggerNames": {
                "Parameter": {},
                "Throw": []
            },
            "getLoggerLevel": {
                "Parameter": {
                    "loggerName": "String"
                },
                "Throw": []
            },
            "setLoggerLevel": {
                "Parameter": {
                    "loggerName": "String",
                    "levelName": "String"
                },
                "Throw": "java.lang.SecurityException"
            },
            "getParentLoggerName": {
                "Parameter": {
                    "loggerName": "String"
                },
                "Throw": []
            }
        }
    },
    "394": {
        "Package": "java.util.prefs",
        "Interface": "NodeChangeListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "childAdded": {
                "Parameter": {
                    "evt": "NodeChangeEvent"
                },
                "Throw": []
            },
            "childRemoved": {
                "Parameter": {
                    "evt": "NodeChangeEvent"
                },
                "Throw": []
            }
        }
    },
    "395": {
        "Package": "java.util.prefs",
        "Interface": "PreferenceChangeListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "preferenceChange": {
                "Parameter": {
                    "evt": "PreferenceChangeEvent"
                },
                "Throw": []
            }
        }
    },
    "396": {
        "Package": "java.util.prefs",
        "Interface": "PreferencesFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "systemRoot": {
                "Parameter": {},
                "Throw": []
            },
            "userRoot": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "397": {
        "Package": "java.util.regex",
        "Interface": "MatchResult",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.regex.Matcher"
        ],
        "Method": {
            "start": {
                "Parameter": {
                    "group": "int"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "end": {
                "Parameter": {
                    "group": "int"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "group": {
                "Parameter": {
                    "group": "int"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "groupCount": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "398": {
        "Package": "java.util.spi",
        "Interface": "ResourceBundleControlProvider",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getControl": {
                "Parameter": {
                    "baseName": "String"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "399": {
        "Package": "java.util.stream",
        "Interface": "BaseStream",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": [
            "java.util.stream.DoubleStream",
            "java.util.stream.IntStream",
            "java.util.stream.LongStream",
            "java.util.stream.Stream"
        ],
        "Subinterface": null,
        "Method": {
            "iterator": {
                "Parameter": {},
                "Throw": []
            },
            "spliterator": {
                "Parameter": {},
                "Throw": []
            },
            "isParallel": {
                "Parameter": {},
                "Throw": []
            },
            "sequential": {
                "Parameter": {},
                "Throw": []
            },
            "parallel": {
                "Parameter": {},
                "Throw": []
            },
            "unordered": {
                "Parameter": {},
                "Throw": []
            },
            "onClose": {
                "Parameter": {
                    "closeHandler": "Runnable"
                },
                "Throw": []
            },
            "close": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "400": {
        "Package": "java.util.stream",
        "Interface": "Collector",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "supplier": {
                "Parameter": {},
                "Throw": []
            },
            "accumulator": {
                "Parameter": {},
                "Throw": []
            },
            "combiner": {
                "Parameter": {},
                "Throw": []
            },
            "finisher": {
                "Parameter": {},
                "Throw": []
            },
            "characteristics": {
                "Parameter": {},
                "Throw": []
            },
            "of": {
                "Parameter": {
                    "": "Function",
                    "characteristics": "Collector.Characteristics"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "401": {
        "Package": "java.util.stream",
        "Interface": "DoubleStream.Builder",
        "Superinterface": [
            "java.util.function.DoubleConsumer"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "t": "double"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "add": {
                "Parameter": {
                    "t": "double"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "build": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            }
        }
    },
    "402": {
        "Package": "java.util.stream",
        "Interface": "DoubleStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.util.stream.BaseStream",
            "java.util.stream.Double"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "filter": {
                "Parameter": {
                    "predicate": "DoublePredicate"
                },
                "Throw": []
            },
            "map": {
                "Parameter": {
                    "mapper": "DoubleUnaryOperator"
                },
                "Throw": []
            },
            "mapToObj": {
                "Parameter": {
                    "": "DoubleFunction"
                },
                "Throw": []
            },
            "mapToInt": {
                "Parameter": {
                    "mapper": "DoubleToIntFunction"
                },
                "Throw": []
            },
            "mapToLong": {
                "Parameter": {
                    "mapper": "DoubleToLongFunction"
                },
                "Throw": []
            },
            "flatMap": {
                "Parameter": {
                    "": "DoubleFunction"
                },
                "Throw": []
            },
            "distinct": {
                "Parameter": {},
                "Throw": []
            },
            "sorted": {
                "Parameter": {},
                "Throw": []
            },
            "peek": {
                "Parameter": {
                    "action": "DoubleConsumer"
                },
                "Throw": []
            },
            "limit": {
                "Parameter": {
                    "maxSize": "long"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "skip": {
                "Parameter": {
                    "n": "long"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "forEach": {
                "Parameter": {
                    "action": "DoubleConsumer"
                },
                "Throw": []
            },
            "forEachOrdered": {
                "Parameter": {
                    "action": "DoubleConsumer"
                },
                "Throw": []
            },
            "toArray": {
                "Parameter": {},
                "Throw": []
            },
            "reduce": {
                "Parameter": {
                    "op": "DoubleBinaryOperator"
                },
                "Throw": []
            },
            "collect": {
                "Parameter": {
                    "": "BiConsumer"
                },
                "Throw": []
            },
            "sum": {
                "Parameter": {},
                "Throw": []
            },
            "min": {
                "Parameter": {},
                "Throw": []
            },
            "max": {
                "Parameter": {},
                "Throw": []
            },
            "count": {
                "Parameter": {},
                "Throw": []
            },
            "average": {
                "Parameter": {},
                "Throw": []
            },
            "summaryStatistics": {
                "Parameter": {},
                "Throw": []
            },
            "anyMatch": {
                "Parameter": {
                    "predicate": "DoublePredicate"
                },
                "Throw": []
            },
            "allMatch": {
                "Parameter": {
                    "predicate": "DoublePredicate"
                },
                "Throw": []
            },
            "noneMatch": {
                "Parameter": {
                    "predicate": "DoublePredicate"
                },
                "Throw": []
            },
            "findFirst": {
                "Parameter": {},
                "Throw": []
            },
            "findAny": {
                "Parameter": {},
                "Throw": []
            },
            "boxed": {
                "Parameter": {},
                "Throw": []
            },
            "sequential": {
                "Parameter": {},
                "Throw": []
            },
            "parallel": {
                "Parameter": {},
                "Throw": []
            },
            "iterator": {
                "Parameter": {},
                "Throw": []
            },
            "spliterator": {
                "Parameter": {},
                "Throw": []
            },
            "builder": {
                "Parameter": {},
                "Throw": []
            },
            "empty": {
                "Parameter": {},
                "Throw": []
            },
            "of": {
                "Parameter": {
                    "values": "double"
                },
                "Throw": []
            },
            "iterate": {
                "Parameter": {
                    "seed": "double",
                    "f": "DoubleUnaryOperator"
                },
                "Throw": []
            },
            "generate": {
                "Parameter": {
                    "s": "DoubleSupplier"
                },
                "Throw": []
            },
            "concat": {
                "Parameter": {
                    "a": "DoubleStream",
                    "b": "DoubleStream"
                },
                "Throw": []
            }
        }
    },
    "403": {
        "Package": "java.util.stream",
        "Interface": "IntStream.Builder",
        "Superinterface": [
            "java.util.function.IntConsumer"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "t": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "add": {
                "Parameter": {
                    "t": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "build": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            }
        }
    },
    "404": {
        "Package": "java.util.stream",
        "Interface": "IntStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.util.stream.BaseStream",
            "java.util.stream.Integer"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "filter": {
                "Parameter": {
                    "predicate": "IntPredicate"
                },
                "Throw": []
            },
            "map": {
                "Parameter": {
                    "mapper": "IntUnaryOperator"
                },
                "Throw": []
            },
            "mapToObj": {
                "Parameter": {
                    "": "IntFunction"
                },
                "Throw": []
            },
            "mapToLong": {
                "Parameter": {
                    "mapper": "IntToLongFunction"
                },
                "Throw": []
            },
            "mapToDouble": {
                "Parameter": {
                    "mapper": "IntToDoubleFunction"
                },
                "Throw": []
            },
            "flatMap": {
                "Parameter": {
                    "": "IntFunction"
                },
                "Throw": []
            },
            "distinct": {
                "Parameter": {},
                "Throw": []
            },
            "sorted": {
                "Parameter": {},
                "Throw": []
            },
            "peek": {
                "Parameter": {
                    "action": "IntConsumer"
                },
                "Throw": []
            },
            "limit": {
                "Parameter": {
                    "maxSize": "long"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "skip": {
                "Parameter": {
                    "n": "long"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "forEach": {
                "Parameter": {
                    "action": "IntConsumer"
                },
                "Throw": []
            },
            "forEachOrdered": {
                "Parameter": {
                    "action": "IntConsumer"
                },
                "Throw": []
            },
            "toArray": {
                "Parameter": {},
                "Throw": []
            },
            "reduce": {
                "Parameter": {
                    "op": "IntBinaryOperator"
                },
                "Throw": []
            },
            "collect": {
                "Parameter": {
                    "": "BiConsumer"
                },
                "Throw": []
            },
            "sum": {
                "Parameter": {},
                "Throw": []
            },
            "min": {
                "Parameter": {},
                "Throw": []
            },
            "max": {
                "Parameter": {},
                "Throw": []
            },
            "count": {
                "Parameter": {},
                "Throw": []
            },
            "average": {
                "Parameter": {},
                "Throw": []
            },
            "summaryStatistics": {
                "Parameter": {},
                "Throw": []
            },
            "anyMatch": {
                "Parameter": {
                    "predicate": "IntPredicate"
                },
                "Throw": []
            },
            "allMatch": {
                "Parameter": {
                    "predicate": "IntPredicate"
                },
                "Throw": []
            },
            "noneMatch": {
                "Parameter": {
                    "predicate": "IntPredicate"
                },
                "Throw": []
            },
            "findFirst": {
                "Parameter": {},
                "Throw": []
            },
            "findAny": {
                "Parameter": {},
                "Throw": []
            },
            "asLongStream": {
                "Parameter": {},
                "Throw": []
            },
            "asDoubleStream": {
                "Parameter": {},
                "Throw": []
            },
            "boxed": {
                "Parameter": {},
                "Throw": []
            },
            "sequential": {
                "Parameter": {},
                "Throw": []
            },
            "parallel": {
                "Parameter": {},
                "Throw": []
            },
            "iterator": {
                "Parameter": {},
                "Throw": []
            },
            "spliterator": {
                "Parameter": {},
                "Throw": []
            },
            "builder": {
                "Parameter": {},
                "Throw": []
            },
            "empty": {
                "Parameter": {},
                "Throw": []
            },
            "of": {
                "Parameter": {
                    "values": "int"
                },
                "Throw": []
            },
            "iterate": {
                "Parameter": {
                    "seed": "int",
                    "f": "IntUnaryOperator"
                },
                "Throw": []
            },
            "generate": {
                "Parameter": {
                    "s": "IntSupplier"
                },
                "Throw": []
            },
            "range": {
                "Parameter": {
                    "startInclusive": "int",
                    "endExclusive": "int"
                },
                "Throw": []
            },
            "rangeClosed": {
                "Parameter": {
                    "startInclusive": "int",
                    "endInclusive": "int"
                },
                "Throw": []
            },
            "concat": {
                "Parameter": {
                    "a": "IntStream",
                    "b": "IntStream"
                },
                "Throw": []
            }
        }
    },
    "405": {
        "Package": "java.util.stream",
        "Interface": "LongStream.Builder",
        "Superinterface": [
            "java.util.function.LongConsumer"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "t": "long"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "add": {
                "Parameter": {
                    "t": "long"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "build": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            }
        }
    },
    "406": {
        "Package": "java.util.stream",
        "Interface": "LongStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.util.stream.BaseStream",
            "java.util.stream.Long"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "filter": {
                "Parameter": {
                    "predicate": "LongPredicate"
                },
                "Throw": []
            },
            "map": {
                "Parameter": {
                    "mapper": "LongUnaryOperator"
                },
                "Throw": []
            },
            "mapToObj": {
                "Parameter": {
                    "": "LongFunction"
                },
                "Throw": []
            },
            "mapToInt": {
                "Parameter": {
                    "mapper": "LongToIntFunction"
                },
                "Throw": []
            },
            "mapToDouble": {
                "Parameter": {
                    "mapper": "LongToDoubleFunction"
                },
                "Throw": []
            },
            "flatMap": {
                "Parameter": {
                    "": "LongFunction"
                },
                "Throw": []
            },
            "distinct": {
                "Parameter": {},
                "Throw": []
            },
            "sorted": {
                "Parameter": {},
                "Throw": []
            },
            "peek": {
                "Parameter": {
                    "action": "LongConsumer"
                },
                "Throw": []
            },
            "limit": {
                "Parameter": {
                    "maxSize": "long"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "skip": {
                "Parameter": {
                    "n": "long"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "forEach": {
                "Parameter": {
                    "action": "LongConsumer"
                },
                "Throw": []
            },
            "forEachOrdered": {
                "Parameter": {
                    "action": "LongConsumer"
                },
                "Throw": []
            },
            "toArray": {
                "Parameter": {},
                "Throw": []
            },
            "reduce": {
                "Parameter": {
                    "op": "LongBinaryOperator"
                },
                "Throw": []
            },
            "collect": {
                "Parameter": {
                    "": "BiConsumer"
                },
                "Throw": []
            },
            "sum": {
                "Parameter": {},
                "Throw": []
            },
            "min": {
                "Parameter": {},
                "Throw": []
            },
            "max": {
                "Parameter": {},
                "Throw": []
            },
            "count": {
                "Parameter": {},
                "Throw": []
            },
            "average": {
                "Parameter": {},
                "Throw": []
            },
            "summaryStatistics": {
                "Parameter": {},
                "Throw": []
            },
            "anyMatch": {
                "Parameter": {
                    "predicate": "LongPredicate"
                },
                "Throw": []
            },
            "allMatch": {
                "Parameter": {
                    "predicate": "LongPredicate"
                },
                "Throw": []
            },
            "noneMatch": {
                "Parameter": {
                    "predicate": "LongPredicate"
                },
                "Throw": []
            },
            "findFirst": {
                "Parameter": {},
                "Throw": []
            },
            "findAny": {
                "Parameter": {},
                "Throw": []
            },
            "asDoubleStream": {
                "Parameter": {},
                "Throw": []
            },
            "boxed": {
                "Parameter": {},
                "Throw": []
            },
            "sequential": {
                "Parameter": {},
                "Throw": []
            },
            "parallel": {
                "Parameter": {},
                "Throw": []
            },
            "iterator": {
                "Parameter": {},
                "Throw": []
            },
            "spliterator": {
                "Parameter": {},
                "Throw": []
            },
            "builder": {
                "Parameter": {},
                "Throw": []
            },
            "empty": {
                "Parameter": {},
                "Throw": []
            },
            "of": {
                "Parameter": {
                    "values": "long"
                },
                "Throw": []
            },
            "iterate": {
                "Parameter": {
                    "seed": "long",
                    "f": "LongUnaryOperator"
                },
                "Throw": []
            },
            "generate": {
                "Parameter": {
                    "s": "LongSupplier"
                },
                "Throw": []
            },
            "range": {
                "Parameter": {
                    "startInclusive": "long",
                    "endExclusive": "long"
                },
                "Throw": []
            },
            "rangeClosed": {
                "Parameter": {
                    "startInclusive": "long",
                    "endInclusive": "long"
                },
                "Throw": []
            },
            "concat": {
                "Parameter": {
                    "a": "LongStream",
                    "b": "LongStream"
                },
                "Throw": []
            }
        }
    },
    "407": {
        "Package": "java.util.stream",
        "Interface": "Stream.Builder",
        "Superinterface": [
            "java.util.function.Consumer"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "t": "T"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "add": {
                "Parameter": {
                    "t": "T"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "build": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            }
        }
    },
    "408": {
        "Package": "java.util.stream",
        "Interface": "Stream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.util.stream.BaseStream",
            "java.util.stream.Stream"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "filter": {
                "Parameter": {
                    "": "Predicate"
                },
                "Throw": []
            },
            "map": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": []
            },
            "mapToInt": {
                "Parameter": {
                    "": "ToIntFunction"
                },
                "Throw": []
            },
            "mapToLong": {
                "Parameter": {
                    "": "ToLongFunction"
                },
                "Throw": []
            },
            "mapToDouble": {
                "Parameter": {
                    "": "ToDoubleFunction"
                },
                "Throw": []
            },
            "flatMap": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": []
            },
            "flatMapToInt": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": []
            },
            "flatMapToLong": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": []
            },
            "flatMapToDouble": {
                "Parameter": {
                    "": "Function"
                },
                "Throw": []
            },
            "distinct": {
                "Parameter": {},
                "Throw": []
            },
            "sorted": {
                "Parameter": {
                    "": "Comparator"
                },
                "Throw": []
            },
            "peek": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            },
            "limit": {
                "Parameter": {
                    "maxSize": "long"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "skip": {
                "Parameter": {
                    "n": "long"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "forEach": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            },
            "forEachOrdered": {
                "Parameter": {
                    "": "Consumer"
                },
                "Throw": []
            },
            "toArray": {
                "Parameter": {
                    "": "IntFunction"
                },
                "Throw": "java.lang.ArrayStoreException"
            },
            "reduce": {
                "Parameter": {
                    "identity": "U",
                    "": "BinaryOperator"
                },
                "Throw": []
            },
            "collect": {
                "Parameter": {
                    "": "Collector"
                },
                "Throw": []
            },
            "min": {
                "Parameter": {
                    "": "Comparator"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "max": {
                "Parameter": {
                    "": "Comparator"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "count": {
                "Parameter": {},
                "Throw": []
            },
            "anyMatch": {
                "Parameter": {
                    "": "Predicate"
                },
                "Throw": []
            },
            "allMatch": {
                "Parameter": {
                    "": "Predicate"
                },
                "Throw": []
            },
            "noneMatch": {
                "Parameter": {
                    "": "Predicate"
                },
                "Throw": []
            },
            "findFirst": {
                "Parameter": {},
                "Throw": "java.lang.NullPointerException"
            },
            "findAny": {
                "Parameter": {},
                "Throw": "java.lang.NullPointerException"
            },
            "builder": {
                "Parameter": {},
                "Throw": []
            },
            "empty": {
                "Parameter": {},
                "Throw": []
            },
            "of": {
                "Parameter": {
                    "values": "T"
                },
                "Throw": []
            },
            "iterate": {
                "Parameter": {
                    "seed": "T",
                    "": "UnaryOperator"
                },
                "Throw": []
            },
            "generate": {
                "Parameter": {
                    "": "Supplier"
                },
                "Throw": []
            },
            "concat": {
                "Parameter": {
                    "": "Stream"
                },
                "Throw": []
            }
        }
    },
    "409": {
        "Package": "java.util.zip",
        "Interface": "Checksum",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.zip.Adler32",
            "java.util.zip.CRC32"
        ],
        "Method": {
            "update": {
                "Parameter": {
                    "b": "byte",
                    "off": "int",
                    "len": "int"
                },
                "Throw": []
            },
            "getValue": {
                "Parameter": {},
                "Throw": []
            },
            "reset": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "410": {
        "Package": "javax.accessibility",
        "Interface": "Accessible",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.colorchooser.AbstractColorChooserPanel",
            "java.applet.Applet",
            "javax.swing.plaf.basic.BasicArrowButton",
            "javax.swing.plaf.basic.BasicComboBoxRenderer",
            "javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource",
            "javax.swing.plaf.basic.BasicComboPopup",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.SystemMenuBar",
            "javax.swing.plaf.basic.BasicToolBarUI.DragWindow",
            "javax.swing.Box",
            "javax.swing.Box.Filler",
            "java.awt.Button",
            "java.awt.Canvas",
            "javax.swing.CellRendererPane",
            "java.awt.Checkbox",
            "java.awt.CheckboxMenuItem",
            "java.awt.Choice",
            "javax.swing.DefaultListCellRenderer",
            "javax.swing.DefaultListCellRenderer.UIResource",
            "javax.swing.table.DefaultTableCellRenderer",
            "javax.swing.table.DefaultTableCellRenderer.UIResource",
            "javax.swing.tree.DefaultTreeCellEditor.DefaultTextField",
            "javax.swing.tree.DefaultTreeCellRenderer",
            "java.awt.Dialog",
            "java.awt.FileDialog",
            "java.awt.Frame",
            "javax.swing.text.html.HTMLEditorKit",
            "javax.swing.ImageIcon",
            "javax.swing.JApplet",
            "javax.swing.JButton",
            "javax.swing.JCheckBox",
            "javax.swing.JCheckBoxMenuItem",
            "javax.swing.JColorChooser",
            "javax.swing.JComboBox",
            "javax.swing.JDesktopPane",
            "javax.swing.JDialog",
            "javax.swing.JEditorPane",
            "javax.swing.JFileChooser",
            "javax.swing.JFormattedTextField",
            "javax.swing.JFrame",
            "javax.swing.JInternalFrame",
            "javax.swing.JInternalFrame.JDesktopIcon",
            "javax.swing.JLabel",
            "javax.swing.JLayer",
            "javax.swing.JLayeredPane",
            "javax.swing.JList",
            "javax.swing.JList.AccessibleJList.AccessibleJListChild",
            "javax.swing.JMenu",
            "javax.swing.JMenuBar",
            "javax.swing.JMenuItem",
            "javax.swing.JOptionPane",
            "javax.swing.JPanel",
            "javax.swing.JPasswordField",
            "javax.swing.JPopupMenu",
            "javax.swing.JPopupMenu.Separator",
            "javax.swing.JProgressBar",
            "javax.swing.JRadioButton",
            "javax.swing.JRadioButtonMenuItem",
            "javax.swing.JRootPane",
            "javax.swing.JScrollBar",
            "javax.swing.JScrollPane",
            "javax.swing.JScrollPane.ScrollBar",
            "javax.swing.JSeparator",
            "javax.swing.JSlider",
            "javax.swing.JSpinner",
            "javax.swing.JSpinner.DateEditor",
            "javax.swing.JSpinner.DefaultEditor",
            "javax.swing.JSpinner.ListEditor",
            "javax.swing.JSpinner.NumberEditor",
            "javax.swing.JSplitPane",
            "javax.swing.JTabbedPane",
            "javax.swing.JTable",
            "javax.swing.JTable.AccessibleJTable.AccessibleJTableCell",
            "javax.swing.table.JTableHeader",
            "javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry",
            "javax.swing.JTextArea",
            "javax.swing.text.JTextComponent",
            "javax.swing.JTextField",
            "javax.swing.JTextPane",
            "javax.swing.JToggleButton",
            "javax.swing.JToolBar",
            "javax.swing.JToolBar.Separator",
            "javax.swing.JToolTip",
            "javax.swing.JTree",
            "javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode",
            "javax.swing.JViewport",
            "javax.swing.JWindow",
            "java.awt.Label",
            "java.awt.List",
            "java.awt.List.AccessibleAWTList.AccessibleAWTListChild",
            "java.awt.Menu",
            "java.awt.MenuBar",
            "java.awt.MenuItem",
            "javax.swing.plaf.metal.MetalComboBoxButton",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalComboPopup",
            "javax.swing.plaf.metal.MetalFileChooserUI.FileRenderer",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxRenderer",
            "javax.swing.plaf.metal.MetalScrollButton",
            "java.awt.Panel",
            "java.awt.PopupMenu",
            "javax.swing.ProgressMonitor",
            "java.awt.Scrollbar",
            "java.awt.ScrollPane",
            "java.awt.TextArea",
            "java.awt.TextComponent",
            "java.awt.TextField",
            "java.awt.Window"
        ],
        "Method": {
            "getAccessibleContext": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "411": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleAction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractButton.AccessibleAbstractButton",
            "javax.accessibility.AccessibleHyperlink",
            "java.awt.Button.AccessibleAWTButton",
            "java.awt.Checkbox.AccessibleAWTCheckbox",
            "java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem",
            "java.awt.Choice.AccessibleAWTChoice",
            "javax.swing.JButton.AccessibleJButton",
            "javax.swing.JCheckBox.AccessibleJCheckBox",
            "javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem",
            "javax.swing.JComboBox.AccessibleJComboBox",
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuItem.AccessibleJMenuItem",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JRadioButton.AccessibleJRadioButton",
            "javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField",
            "javax.swing.JToggleButton.AccessibleJToggleButton",
            "javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode",
            "java.awt.Menu.AccessibleAWTMenu",
            "java.awt.MenuItem.AccessibleAWTMenuItem",
            "java.awt.PopupMenu.AccessibleAWTPopupMenu"
        ],
        "Method": {
            "getAccessibleActionCount": {
                "Parameter": {},
                "Throw": []
            },
            "getAccessibleActionDescription": {
                "Parameter": {
                    "i": "int"
                },
                "Throw": []
            },
            "doAccessibleAction": {
                "Parameter": {
                    "i": "int"
                },
                "Throw": []
            }
        }
    },
    "412": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleComponent",
        "Superinterface": null,
        "Implementing Class": [
            "javax.accessibility.AccessibleExtendedComponent"
        ],
        "Subinterface": [
            "javax.swing.AbstractButton.AccessibleAbstractButton",
            "java.applet.Applet.AccessibleApplet",
            "javax.swing.Box.AccessibleBox",
            "javax.swing.Box.Filler.AccessibleBoxFiller",
            "java.awt.Button.AccessibleAWTButton",
            "java.awt.Canvas.AccessibleAWTCanvas",
            "javax.swing.CellRendererPane.AccessibleCellRendererPane",
            "java.awt.Checkbox.AccessibleAWTCheckbox",
            "java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem",
            "java.awt.Choice.AccessibleAWTChoice",
            "java.awt.Component.AccessibleAWTComponent",
            "java.awt.Container.AccessibleAWTContainer",
            "java.awt.Dialog.AccessibleAWTDialog",
            "java.awt.Frame.AccessibleAWTFrame",
            "javax.swing.JApplet.AccessibleJApplet",
            "javax.swing.JButton.AccessibleJButton",
            "javax.swing.JCheckBox.AccessibleJCheckBox",
            "javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem",
            "javax.swing.JColorChooser.AccessibleJColorChooser",
            "javax.swing.JComboBox.AccessibleJComboBox",
            "javax.swing.JComponent.AccessibleJComponent",
            "javax.swing.JDesktopPane.AccessibleJDesktopPane",
            "javax.swing.JDialog.AccessibleJDialog",
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JFileChooser.AccessibleJFileChooser",
            "javax.swing.JFrame.AccessibleJFrame",
            "javax.swing.JInternalFrame.AccessibleJInternalFrame",
            "javax.swing.JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon",
            "javax.swing.JLabel.AccessibleJLabel",
            "javax.swing.JLayeredPane.AccessibleJLayeredPane",
            "javax.swing.JList.AccessibleJList",
            "javax.swing.JList.AccessibleJList.AccessibleJListChild",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuBar.AccessibleJMenuBar",
            "javax.swing.JMenuItem.AccessibleJMenuItem",
            "javax.swing.JOptionPane.AccessibleJOptionPane",
            "javax.swing.JPanel.AccessibleJPanel",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JPopupMenu.AccessibleJPopupMenu",
            "javax.swing.JProgressBar.AccessibleJProgressBar",
            "javax.swing.JRadioButton.AccessibleJRadioButton",
            "javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem",
            "javax.swing.JRootPane.AccessibleJRootPane",
            "javax.swing.JScrollBar.AccessibleJScrollBar",
            "javax.swing.JScrollPane.AccessibleJScrollPane",
            "javax.swing.JSeparator.AccessibleJSeparator",
            "javax.swing.JSlider.AccessibleJSlider",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JSplitPane.AccessibleJSplitPane",
            "javax.swing.JTabbedPane.AccessibleJTabbedPane",
            "javax.swing.JTable.AccessibleJTable",
            "javax.swing.JTable.AccessibleJTable.AccessibleJTableCell",
            "javax.swing.table.JTableHeader.AccessibleJTableHeader",
            "javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField",
            "javax.swing.JToggleButton.AccessibleJToggleButton",
            "javax.swing.JToolBar.AccessibleJToolBar",
            "javax.swing.JToolTip.AccessibleJToolTip",
            "javax.swing.JTree.AccessibleJTree",
            "javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode",
            "javax.swing.JViewport.AccessibleJViewport",
            "javax.swing.JWindow.AccessibleJWindow",
            "java.awt.Label.AccessibleAWTLabel",
            "java.awt.List.AccessibleAWTList",
            "java.awt.List.AccessibleAWTList.AccessibleAWTListChild",
            "java.awt.Menu.AccessibleAWTMenu",
            "java.awt.MenuBar.AccessibleAWTMenuBar",
            "java.awt.MenuComponent.AccessibleAWTMenuComponent",
            "java.awt.MenuItem.AccessibleAWTMenuItem",
            "java.awt.Panel.AccessibleAWTPanel",
            "java.awt.PopupMenu.AccessibleAWTPopupMenu",
            "java.awt.Scrollbar.AccessibleAWTScrollBar",
            "java.awt.ScrollPane.AccessibleAWTScrollPane",
            "java.awt.TextArea.AccessibleAWTTextArea",
            "java.awt.TextComponent.AccessibleAWTTextComponent",
            "java.awt.TextField.AccessibleAWTTextField",
            "java.awt.Window.AccessibleAWTWindow"
        ],
        "Method": {
            "getBackground": {
                "Parameter": {},
                "Throw": []
            },
            "setBackground": {
                "Parameter": {
                    "c": "Color"
                },
                "Throw": []
            },
            "getForeground": {
                "Parameter": {},
                "Throw": []
            },
            "setForeground": {
                "Parameter": {
                    "c": "Color"
                },
                "Throw": []
            },
            "getCursor": {
                "Parameter": {},
                "Throw": []
            },
            "setCursor": {
                "Parameter": {
                    "cursor": "Cursor"
                },
                "Throw": []
            },
            "getFont": {
                "Parameter": {},
                "Throw": []
            },
            "setFont": {
                "Parameter": {
                    "f": "Font"
                },
                "Throw": []
            },
            "getFontMetrics": {
                "Parameter": {
                    "f": "Font"
                },
                "Throw": []
            },
            "isEnabled": {
                "Parameter": {},
                "Throw": []
            },
            "setEnabled": {
                "Parameter": {
                    "b": "boolean"
                },
                "Throw": []
            },
            "isVisible": {
                "Parameter": {},
                "Throw": []
            },
            "setVisible": {
                "Parameter": {
                    "b": "boolean"
                },
                "Throw": []
            },
            "isShowing": {
                "Parameter": {},
                "Throw": []
            },
            "contains": {
                "Parameter": {
                    "p": "Point"
                },
                "Throw": []
            },
            "getLocationOnScreen": {
                "Parameter": {},
                "Throw": []
            },
            "getLocation": {
                "Parameter": {},
                "Throw": []
            },
            "setLocation": {
                "Parameter": {
                    "p": "Point"
                },
                "Throw": []
            },
            "getBounds": {
                "Parameter": {},
                "Throw": []
            },
            "setBounds": {
                "Parameter": {
                    "r": "Rectangle"
                },
                "Throw": []
            },
            "getSize": {
                "Parameter": {},
                "Throw": []
            },
            "setSize": {
                "Parameter": {
                    "d": "Dimension"
                },
                "Throw": []
            },
            "getAccessibleAt": {
                "Parameter": {
                    "p": "Point"
                },
                "Throw": []
            },
            "isFocusTraversable": {
                "Parameter": {},
                "Throw": []
            },
            "requestFocus": {
                "Parameter": {},
                "Throw": []
            },
            "addFocusListener": {
                "Parameter": {
                    "l": "FocusListener"
                },
                "Throw": []
            },
            "removeFocusListener": {
                "Parameter": {
                    "l": "FocusListener"
                },
                "Throw": []
            }
        }
    },
    "413": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleEditableText",
        "Superinterface": [
            "javax.accessibility.AccessibleText"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField"
        ],
        "Method": {
            "setTextContents": {
                "Parameter": {
                    "s": "String"
                },
                "Throw": []
            },
            "insertTextAtIndex": {
                "Parameter": {
                    "index": "int",
                    "s": "String"
                },
                "Throw": []
            },
            "getTextRange": {
                "Parameter": {
                    "startIndex": "int",
                    "endIndex": "int"
                },
                "Throw": []
            },
            "delete": {
                "Parameter": {
                    "startIndex": "int",
                    "endIndex": "int"
                },
                "Throw": []
            },
            "cut": {
                "Parameter": {
                    "startIndex": "int",
                    "endIndex": "int"
                },
                "Throw": []
            },
            "paste": {
                "Parameter": {
                    "startIndex": "int"
                },
                "Throw": []
            },
            "replaceText": {
                "Parameter": {
                    "startIndex": "int",
                    "endIndex": "int",
                    "s": "String"
                },
                "Throw": []
            },
            "selectText": {
                "Parameter": {
                    "startIndex": "int",
                    "endIndex": "int"
                },
                "Throw": []
            },
            "setAttributes": {
                "Parameter": {
                    "startIndex": "int",
                    "endIndex": "int",
                    "as": "AttributeSet"
                },
                "Throw": []
            }
        }
    },
    "414": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleExtendedComponent",
        "Superinterface": [
            "javax.accessibility.AccessibleComponent"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractButton.AccessibleAbstractButton",
            "javax.swing.JButton.AccessibleJButton",
            "javax.swing.JCheckBox.AccessibleJCheckBox",
            "javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem",
            "javax.swing.JColorChooser.AccessibleJColorChooser",
            "javax.swing.JComboBox.AccessibleJComboBox",
            "javax.swing.JComponent.AccessibleJComponent",
            "javax.swing.JDesktopPane.AccessibleJDesktopPane",
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JFileChooser.AccessibleJFileChooser",
            "javax.swing.JInternalFrame.AccessibleJInternalFrame",
            "javax.swing.JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon",
            "javax.swing.JLabel.AccessibleJLabel",
            "javax.swing.JLayeredPane.AccessibleJLayeredPane",
            "javax.swing.JList.AccessibleJList",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuBar.AccessibleJMenuBar",
            "javax.swing.JMenuItem.AccessibleJMenuItem",
            "javax.swing.JOptionPane.AccessibleJOptionPane",
            "javax.swing.JPanel.AccessibleJPanel",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JPopupMenu.AccessibleJPopupMenu",
            "javax.swing.JProgressBar.AccessibleJProgressBar",
            "javax.swing.JRadioButton.AccessibleJRadioButton",
            "javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem",
            "javax.swing.JRootPane.AccessibleJRootPane",
            "javax.swing.JScrollBar.AccessibleJScrollBar",
            "javax.swing.JScrollPane.AccessibleJScrollPane",
            "javax.swing.JSeparator.AccessibleJSeparator",
            "javax.swing.JSlider.AccessibleJSlider",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JSplitPane.AccessibleJSplitPane",
            "javax.swing.JTabbedPane.AccessibleJTabbedPane",
            "javax.swing.JTable.AccessibleJTable",
            "javax.swing.table.JTableHeader.AccessibleJTableHeader",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField",
            "javax.swing.JToggleButton.AccessibleJToggleButton",
            "javax.swing.JToolBar.AccessibleJToolBar",
            "javax.swing.JToolTip.AccessibleJToolTip",
            "javax.swing.JTree.AccessibleJTree",
            "javax.swing.JViewport.AccessibleJViewport"
        ],
        "Method": {
            "getToolTipText": {
                "Parameter": {},
                "Throw": []
            },
            "getTitledBorderText": {
                "Parameter": {},
                "Throw": []
            },
            "getAccessibleKeyBinding": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "415": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleExtendedTable",
        "Superinterface": [
            "javax.accessibility.AccessibleTable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JTable.AccessibleJTable"
        ],
        "Method": {
            "getAccessibleRow": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getAccessibleColumn": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getAccessibleIndex": {
                "Parameter": {
                    "r": "int",
                    "c": "int"
                },
                "Throw": []
            }
        }
    },
    "416": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleExtendedText",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField"
        ],
        "Method": {
            "getTextRange": {
                "Parameter": {
                    "startIndex": "int",
                    "endIndex": "int"
                },
                "Throw": []
            },
            "getTextSequenceAt": {
                "Parameter": {
                    "part": "int",
                    "index": "int"
                },
                "Throw": []
            },
            "getTextSequenceAfter": {
                "Parameter": {
                    "part": "int",
                    "index": "int"
                },
                "Throw": []
            },
            "getTextSequenceBefore": {
                "Parameter": {
                    "part": "int",
                    "index": "int"
                },
                "Throw": []
            },
            "getTextBounds": {
                "Parameter": {
                    "startIndex": "int",
                    "endIndex": "int"
                },
                "Throw": []
            }
        }
    },
    "417": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleHypertext",
        "Superinterface": [
            "javax.accessibility.AccessibleText"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport"
        ],
        "Method": {
            "getLinkCount": {
                "Parameter": {},
                "Throw": []
            },
            "getLink": {
                "Parameter": {
                    "linkIndex": "int"
                },
                "Throw": []
            },
            "getLinkIndex": {
                "Parameter": {
                    "charIndex": "int"
                },
                "Throw": []
            }
        }
    },
    "418": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleIcon",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.ImageIcon.AccessibleImageIcon"
        ],
        "Method": {
            "getAccessibleIconDescription": {
                "Parameter": {},
                "Throw": []
            },
            "setAccessibleIconDescription": {
                "Parameter": {
                    "description": "String"
                },
                "Throw": []
            },
            "getAccessibleIconWidth": {
                "Parameter": {},
                "Throw": []
            },
            "getAccessibleIconHeight": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "419": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleKeyBinding",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAccessibleKeyBindingCount": {
                "Parameter": {},
                "Throw": []
            },
            "getAccessibleKeyBinding": {
                "Parameter": {
                    "i": "int"
                },
                "Throw": []
            }
        }
    },
    "420": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleSelection",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem",
            "javax.swing.JComboBox.AccessibleJComboBox",
            "javax.swing.JList.AccessibleJList",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuBar.AccessibleJMenuBar",
            "javax.swing.JTabbedPane.AccessibleJTabbedPane",
            "javax.swing.JTable.AccessibleJTable",
            "javax.swing.JTree.AccessibleJTree",
            "javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode",
            "java.awt.List.AccessibleAWTList",
            "java.awt.Menu.AccessibleAWTMenu",
            "java.awt.MenuBar.AccessibleAWTMenuBar",
            "java.awt.MenuComponent.AccessibleAWTMenuComponent",
            "java.awt.MenuItem.AccessibleAWTMenuItem",
            "java.awt.PopupMenu.AccessibleAWTPopupMenu"
        ],
        "Method": {
            "getAccessibleSelectionCount": {
                "Parameter": {},
                "Throw": []
            },
            "getAccessibleSelection": {
                "Parameter": {
                    "i": "int"
                },
                "Throw": []
            },
            "isAccessibleChildSelected": {
                "Parameter": {
                    "i": "int"
                },
                "Throw": []
            },
            "addAccessibleSelection": {
                "Parameter": {
                    "i": "int"
                },
                "Throw": []
            },
            "removeAccessibleSelection": {
                "Parameter": {
                    "i": "int"
                },
                "Throw": []
            },
            "clearAccessibleSelection": {
                "Parameter": {},
                "Throw": []
            },
            "selectAllAccessibleSelection": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "421": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleStreamable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getMimeTypes": {
                "Parameter": {},
                "Throw": []
            },
            "getStream": {
                "Parameter": {
                    "flavor": "DataFlavor"
                },
                "Throw": []
            }
        }
    },
    "422": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleTable",
        "Superinterface": null,
        "Implementing Class": [
            "javax.accessibility.AccessibleExtendedTable"
        ],
        "Subinterface": [
            "javax.swing.JTable.AccessibleJTable"
        ],
        "Method": {
            "getAccessibleCaption": {
                "Parameter": {},
                "Throw": []
            },
            "setAccessibleCaption": {
                "Parameter": {
                    "a": "Accessible"
                },
                "Throw": []
            },
            "getAccessibleSummary": {
                "Parameter": {},
                "Throw": []
            },
            "setAccessibleSummary": {
                "Parameter": {
                    "a": "Accessible"
                },
                "Throw": []
            },
            "getAccessibleRowCount": {
                "Parameter": {},
                "Throw": []
            },
            "getAccessibleColumnCount": {
                "Parameter": {},
                "Throw": []
            },
            "getAccessibleAt": {
                "Parameter": {
                    "r": "int",
                    "c": "int"
                },
                "Throw": []
            },
            "getAccessibleRowExtentAt": {
                "Parameter": {
                    "r": "int",
                    "c": "int"
                },
                "Throw": []
            },
            "getAccessibleColumnExtentAt": {
                "Parameter": {
                    "r": "int",
                    "c": "int"
                },
                "Throw": []
            },
            "getAccessibleRowHeader": {
                "Parameter": {},
                "Throw": []
            },
            "setAccessibleRowHeader": {
                "Parameter": {
                    "table": "AccessibleTable"
                },
                "Throw": []
            },
            "getAccessibleColumnHeader": {
                "Parameter": {},
                "Throw": []
            },
            "setAccessibleColumnHeader": {
                "Parameter": {
                    "table": "AccessibleTable"
                },
                "Throw": []
            },
            "getAccessibleRowDescription": {
                "Parameter": {
                    "r": "int"
                },
                "Throw": []
            },
            "setAccessibleRowDescription": {
                "Parameter": {
                    "r": "int",
                    "a": "Accessible"
                },
                "Throw": []
            },
            "getAccessibleColumnDescription": {
                "Parameter": {
                    "c": "int"
                },
                "Throw": []
            },
            "setAccessibleColumnDescription": {
                "Parameter": {
                    "c": "int",
                    "a": "Accessible"
                },
                "Throw": []
            },
            "isAccessibleSelected": {
                "Parameter": {
                    "r": "int",
                    "c": "int"
                },
                "Throw": []
            },
            "isAccessibleRowSelected": {
                "Parameter": {
                    "r": "int"
                },
                "Throw": []
            },
            "isAccessibleColumnSelected": {
                "Parameter": {
                    "c": "int"
                },
                "Throw": []
            },
            "getSelectedAccessibleRows": {
                "Parameter": {},
                "Throw": []
            },
            "getSelectedAccessibleColumns": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "423": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleTableModelChange",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JTable.AccessibleJTable.AccessibleJTableModelChange"
        ],
        "Method": {
            "getType": {
                "Parameter": {},
                "Throw": []
            },
            "getFirstRow": {
                "Parameter": {},
                "Throw": []
            },
            "getLastRow": {
                "Parameter": {},
                "Throw": []
            },
            "getFirstColumn": {
                "Parameter": {},
                "Throw": []
            },
            "getLastColumn": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "424": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleText",
        "Superinterface": null,
        "Implementing Class": [
            "javax.accessibility.AccessibleEditableText",
            "javax.accessibility.AccessibleHypertext"
        ],
        "Subinterface": [
            "javax.swing.AbstractButton.AccessibleAbstractButton",
            "javax.swing.JButton.AccessibleJButton",
            "javax.swing.JCheckBox.AccessibleJCheckBox",
            "javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem",
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JLabel.AccessibleJLabel",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuItem.AccessibleJMenuItem",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JRadioButton.AccessibleJRadioButton",
            "javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField",
            "javax.swing.JToggleButton.AccessibleJToggleButton",
            "javax.swing.ProgressMonitor.AccessibleProgressMonitor",
            "java.awt.TextArea.AccessibleAWTTextArea",
            "java.awt.TextComponent.AccessibleAWTTextComponent",
            "java.awt.TextField.AccessibleAWTTextField"
        ],
        "Method": {
            "getIndexAtPoint": {
                "Parameter": {
                    "p": "Point"
                },
                "Throw": []
            },
            "getCharacterBounds": {
                "Parameter": {
                    "i": "int"
                },
                "Throw": []
            },
            "getCharCount": {
                "Parameter": {},
                "Throw": []
            },
            "getCaretPosition": {
                "Parameter": {},
                "Throw": []
            },
            "getAtIndex": {
                "Parameter": {
                    "part": "int",
                    "index": "int"
                },
                "Throw": []
            },
            "getAfterIndex": {
                "Parameter": {
                    "part": "int",
                    "index": "int"
                },
                "Throw": []
            },
            "getBeforeIndex": {
                "Parameter": {
                    "part": "int",
                    "index": "int"
                },
                "Throw": []
            },
            "getCharacterAttribute": {
                "Parameter": {
                    "i": "int"
                },
                "Throw": []
            },
            "getSelectionStart": {
                "Parameter": {},
                "Throw": []
            },
            "getSelectionEnd": {
                "Parameter": {},
                "Throw": []
            },
            "getSelectedText": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "425": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleValue",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractButton.AccessibleAbstractButton",
            "java.awt.Button.AccessibleAWTButton",
            "java.awt.Checkbox.AccessibleAWTCheckbox",
            "java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem",
            "javax.swing.JButton.AccessibleJButton",
            "javax.swing.JCheckBox.AccessibleJCheckBox",
            "javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem",
            "javax.swing.JInternalFrame.AccessibleJInternalFrame",
            "javax.swing.JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuItem.AccessibleJMenuItem",
            "javax.swing.JProgressBar.AccessibleJProgressBar",
            "javax.swing.JRadioButton.AccessibleJRadioButton",
            "javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem",
            "javax.swing.JScrollBar.AccessibleJScrollBar",
            "javax.swing.JSlider.AccessibleJSlider",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JSplitPane.AccessibleJSplitPane",
            "javax.swing.JToggleButton.AccessibleJToggleButton",
            "java.awt.Menu.AccessibleAWTMenu",
            "java.awt.MenuItem.AccessibleAWTMenuItem",
            "java.awt.PopupMenu.AccessibleAWTPopupMenu",
            "java.awt.Scrollbar.AccessibleAWTScrollBar"
        ],
        "Method": {
            "getCurrentAccessibleValue": {
                "Parameter": {},
                "Throw": []
            },
            "setCurrentAccessibleValue": {
                "Parameter": {
                    "n": "Number"
                },
                "Throw": []
            },
            "getMinimumAccessibleValue": {
                "Parameter": {},
                "Throw": []
            },
            "getMaximumAccessibleValue": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "426": {
        "Package": "javax.activation",
        "Interface": "CommandObject",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setCommandContext": {
                "Parameter": {
                    "verb": "String",
                    "dh": "DataHandler"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "427": {
        "Package": "javax.activation",
        "Interface": "DataContentHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getTransferDataFlavors": {
                "Parameter": {},
                "Throw": []
            },
            "getTransferData": {
                "Parameter": {
                    "df": "DataFlavor",
                    "ds": "DataSource"
                },
                "Throw": "java.io.IOException"
            },
            "getContent": {
                "Parameter": {
                    "ds": "DataSource"
                },
                "Throw": "java.io.IOException"
            },
            "writeTo": {
                "Parameter": {
                    "obj": "Object",
                    "mimeType": "String",
                    "os": "OutputStream"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "428": {
        "Package": "javax.activation",
        "Interface": "DataContentHandlerFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createDataContentHandler": {
                "Parameter": {
                    "mimeType": "String"
                },
                "Throw": []
            }
        }
    },
    "429": {
        "Package": "javax.activation",
        "Interface": "DataSource",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.activation.FileDataSource",
            "javax.activation.URLDataSource"
        ],
        "Method": {
            "getInputStream": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "getOutputStream": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "getContentType": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "430": {
        "Package": "javax.annotation.processing",
        "Interface": "Completion",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getValue": {
                "Parameter": {},
                "Throw": []
            },
            "getMessage": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "431": {
        "Package": "javax.annotation.processing",
        "Interface": "Filer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createSourceFile": {
                "Parameter": {
                    "name": "CharSequence",
                    "originatingElements": "Element"
                },
                "Throw": "java.io.IOException"
            },
            "createClassFile": {
                "Parameter": {
                    "name": "CharSequence",
                    "originatingElements": "Element"
                },
                "Throw": "java.io.IOException"
            },
            "createResource": {
                "Parameter": {
                    "location": "JavaFileManager.Location",
                    "pkg": "CharSequence",
                    "relativeName": "CharSequence",
                    "originatingElements": "Element"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getResource": {
                "Parameter": {
                    "location": "JavaFileManager.Location",
                    "pkg": "CharSequence",
                    "relativeName": "CharSequence"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "432": {
        "Package": "javax.annotation.processing",
        "Interface": "Messager",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "printMessage": {
                "Parameter": {
                    "kind": "Diagnostic.Kind",
                    "msg": "CharSequence",
                    "e": "Element",
                    "a": "AnnotationMirror",
                    "v": "AnnotationValue"
                },
                "Throw": []
            }
        }
    },
    "433": {
        "Package": "javax.annotation.processing",
        "Interface": "ProcessingEnvironment",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getOptions": {
                "Parameter": {},
                "Throw": []
            },
            "getMessager": {
                "Parameter": {},
                "Throw": []
            },
            "getFiler": {
                "Parameter": {},
                "Throw": []
            },
            "getElementUtils": {
                "Parameter": {},
                "Throw": []
            },
            "getTypeUtils": {
                "Parameter": {},
                "Throw": []
            },
            "getSourceVersion": {
                "Parameter": {},
                "Throw": []
            },
            "getLocale": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "434": {
        "Package": "javax.annotation.processing",
        "Interface": "Processor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.annotation.processing.AbstractProcessor"
        ],
        "Method": {
            "getSupportedOptions": {
                "Parameter": {},
                "Throw": []
            },
            "getSupportedAnnotationTypes": {
                "Parameter": {},
                "Throw": []
            },
            "getSupportedSourceVersion": {
                "Parameter": {},
                "Throw": []
            },
            "init": {
                "Parameter": {
                    "processingEnv": "ProcessingEnvironment"
                },
                "Throw": []
            },
            "process": {
                "Parameter": {
                    "": "Set",
                    "roundEnv": "RoundEnvironment"
                },
                "Throw": []
            },
            "getCompletions": {
                "Parameter": {
                    "element": "Element",
                    "annotation": "AnnotationMirror",
                    "member": "ExecutableElement",
                    "userText": "String"
                },
                "Throw": []
            }
        }
    },
    "435": {
        "Package": "javax.annotation.processing",
        "Interface": "RoundEnvironment",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "processingOver": {
                "Parameter": {},
                "Throw": []
            },
            "errorRaised": {
                "Parameter": {},
                "Throw": []
            },
            "getRootElements": {
                "Parameter": {},
                "Throw": []
            },
            "getElementsAnnotatedWith": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "436": {
        "Package": "javax.crypto",
        "Interface": "SecretKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.Key",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "javax.crypto.interfaces.PBEKey"
        ],
        "Subinterface": [
            "javax.security.auth.kerberos.KerberosKey",
            "javax.crypto.spec.SecretKeySpec"
        ],
        "Method": {}
    },
    "437": {
        "Package": "javax.crypto.interfaces",
        "Interface": "DHKey",
        "Superinterface": null,
        "Implementing Class": [
            "javax.crypto.interfaces.DHPrivateKey",
            "javax.crypto.interfaces.DHPublicKey"
        ],
        "Subinterface": null,
        "Method": {
            "getParams": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "438": {
        "Package": "javax.crypto.interfaces",
        "Interface": "DHPrivateKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "javax.crypto.interfaces.DHKey",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getX": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "439": {
        "Package": "javax.crypto.interfaces",
        "Interface": "DHPublicKey",
        "Superinterface": [
            "javax.crypto.interfaces.DHKey",
            "java.security.Key",
            "java.security.PublicKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getY": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "440": {
        "Package": "javax.crypto.interfaces",
        "Interface": "PBEKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.Key",
            "javax.crypto.SecretKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPassword": {
                "Parameter": {},
                "Throw": []
            },
            "getSalt": {
                "Parameter": {},
                "Throw": []
            },
            "getIterationCount": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "441": {
        "Package": "javax.imageio",
        "Interface": "IIOParamController",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "activate": {
                "Parameter": {
                    "param": "IIOParam"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "442": {
        "Package": "javax.imageio",
        "Interface": "ImageTranscoder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.imageio.ImageWriter"
        ],
        "Method": {
            "convertStreamMetadata": {
                "Parameter": {
                    "inData": "IIOMetadata",
                    "param": "ImageWriteParam"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "convertImageMetadata": {
                "Parameter": {
                    "inData": "IIOMetadata",
                    "imageType": "ImageTypeSpecifier",
                    "param": "ImageWriteParam"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "443": {
        "Package": "javax.imageio.event",
        "Interface": "IIOReadProgressListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "sequenceStarted": {
                "Parameter": {
                    "source": "ImageReader",
                    "minIndex": "int"
                },
                "Throw": []
            },
            "sequenceComplete": {
                "Parameter": {
                    "source": "ImageReader"
                },
                "Throw": []
            },
            "imageStarted": {
                "Parameter": {
                    "source": "ImageReader",
                    "imageIndex": "int"
                },
                "Throw": []
            },
            "imageProgress": {
                "Parameter": {
                    "source": "ImageReader",
                    "percentageDone": "float"
                },
                "Throw": []
            },
            "imageComplete": {
                "Parameter": {
                    "source": "ImageReader"
                },
                "Throw": []
            },
            "thumbnailStarted": {
                "Parameter": {
                    "source": "ImageReader",
                    "imageIndex": "int",
                    "thumbnailIndex": "int"
                },
                "Throw": []
            },
            "thumbnailProgress": {
                "Parameter": {
                    "source": "ImageReader",
                    "percentageDone": "float"
                },
                "Throw": []
            },
            "thumbnailComplete": {
                "Parameter": {
                    "source": "ImageReader"
                },
                "Throw": []
            },
            "readAborted": {
                "Parameter": {
                    "source": "ImageReader"
                },
                "Throw": []
            }
        }
    },
    "444": {
        "Package": "javax.imageio.event",
        "Interface": "IIOReadUpdateListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "passStarted": {
                "Parameter": {
                    "source": "ImageReader",
                    "theImage": "BufferedImage",
                    "pass": "int",
                    "minPass": "int",
                    "maxPass": "int",
                    "minX": "int",
                    "minY": "int",
                    "periodX": "int",
                    "periodY": "int",
                    "bands": "int"
                },
                "Throw": []
            },
            "imageUpdate": {
                "Parameter": {
                    "source": "ImageReader",
                    "theImage": "BufferedImage",
                    "minX": "int",
                    "minY": "int",
                    "width": "int",
                    "height": "int",
                    "periodX": "int",
                    "periodY": "int",
                    "bands": "int"
                },
                "Throw": []
            },
            "passComplete": {
                "Parameter": {
                    "source": "ImageReader",
                    "theImage": "BufferedImage"
                },
                "Throw": []
            },
            "thumbnailPassStarted": {
                "Parameter": {
                    "source": "ImageReader",
                    "theThumbnail": "BufferedImage",
                    "pass": "int",
                    "minPass": "int",
                    "maxPass": "int",
                    "minX": "int",
                    "minY": "int",
                    "periodX": "int",
                    "periodY": "int",
                    "bands": "int"
                },
                "Throw": []
            },
            "thumbnailUpdate": {
                "Parameter": {
                    "source": "ImageReader",
                    "theThumbnail": "BufferedImage",
                    "minX": "int",
                    "minY": "int",
                    "width": "int",
                    "height": "int",
                    "periodX": "int",
                    "periodY": "int",
                    "bands": "int"
                },
                "Throw": []
            },
            "thumbnailPassComplete": {
                "Parameter": {
                    "source": "ImageReader",
                    "theThumbnail": "BufferedImage"
                },
                "Throw": []
            }
        }
    },
    "445": {
        "Package": "javax.imageio.event",
        "Interface": "IIOReadWarningListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "warningOccurred": {
                "Parameter": {
                    "source": "ImageReader",
                    "warning": "String"
                },
                "Throw": []
            }
        }
    },
    "446": {
        "Package": "javax.imageio.event",
        "Interface": "IIOWriteProgressListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "imageStarted": {
                "Parameter": {
                    "source": "ImageWriter",
                    "imageIndex": "int"
                },
                "Throw": []
            },
            "imageProgress": {
                "Parameter": {
                    "source": "ImageWriter",
                    "percentageDone": "float"
                },
                "Throw": []
            },
            "imageComplete": {
                "Parameter": {
                    "source": "ImageWriter"
                },
                "Throw": []
            },
            "thumbnailStarted": {
                "Parameter": {
                    "source": "ImageWriter",
                    "imageIndex": "int",
                    "thumbnailIndex": "int"
                },
                "Throw": []
            },
            "thumbnailProgress": {
                "Parameter": {
                    "source": "ImageWriter",
                    "percentageDone": "float"
                },
                "Throw": []
            },
            "thumbnailComplete": {
                "Parameter": {
                    "source": "ImageWriter"
                },
                "Throw": []
            },
            "writeAborted": {
                "Parameter": {
                    "source": "ImageWriter"
                },
                "Throw": []
            }
        }
    },
    "447": {
        "Package": "javax.imageio.event",
        "Interface": "IIOWriteWarningListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "warningOccurred": {
                "Parameter": {
                    "source": "ImageWriter",
                    "imageIndex": "int",
                    "warning": "String"
                },
                "Throw": []
            }
        }
    },
    "448": {
        "Package": "javax.imageio.metadata",
        "Interface": "IIOMetadataController",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "activate": {
                "Parameter": {
                    "metadata": "IIOMetadata"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "449": {
        "Package": "javax.imageio.metadata",
        "Interface": "IIOMetadataFormat",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.imageio.metadata.IIOMetadataFormatImpl"
        ],
        "Method": {
            "getRootName": {
                "Parameter": {},
                "Throw": []
            },
            "canNodeAppear": {
                "Parameter": {
                    "elementName": "String",
                    "imageType": "ImageTypeSpecifier"
                },
                "Throw": []
            },
            "getElementMinChildren": {
                "Parameter": {
                    "elementName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getElementMaxChildren": {
                "Parameter": {
                    "elementName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getElementDescription": {
                "Parameter": {
                    "elementName": "String",
                    "locale": "Locale"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getChildPolicy": {
                "Parameter": {
                    "elementName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getChildNames": {
                "Parameter": {
                    "elementName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getAttributeNames": {
                "Parameter": {
                    "elementName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getAttributeValueType": {
                "Parameter": {
                    "elementName": "String",
                    "attrName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getAttributeDataType": {
                "Parameter": {
                    "elementName": "String",
                    "attrName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "isAttributeRequired": {
                "Parameter": {
                    "elementName": "String",
                    "attrName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getAttributeDefaultValue": {
                "Parameter": {
                    "elementName": "String",
                    "attrName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getAttributeEnumerations": {
                "Parameter": {
                    "elementName": "String",
                    "attrName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getAttributeMinValue": {
                "Parameter": {
                    "elementName": "String",
                    "attrName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getAttributeMaxValue": {
                "Parameter": {
                    "elementName": "String",
                    "attrName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getAttributeListMinLength": {
                "Parameter": {
                    "elementName": "String",
                    "attrName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getAttributeListMaxLength": {
                "Parameter": {
                    "elementName": "String",
                    "attrName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getAttributeDescription": {
                "Parameter": {
                    "elementName": "String",
                    "attrName": "String",
                    "locale": "Locale"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getObjectValueType": {
                "Parameter": {
                    "elementName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getObjectClass": {
                "Parameter": {
                    "elementName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getObjectDefaultValue": {
                "Parameter": {
                    "elementName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getObjectEnumerations": {
                "Parameter": {
                    "elementName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getObjectMinValue": {
                "Parameter": {
                    "elementName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getObjectMaxValue": {
                "Parameter": {
                    "elementName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getObjectArrayMinLength": {
                "Parameter": {
                    "elementName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getObjectArrayMaxLength": {
                "Parameter": {
                    "elementName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "450": {
        "Package": "javax.imageio.spi",
        "Interface": "RegisterableService",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.imageio.spi.IIOServiceProvider",
            "javax.imageio.spi.ImageInputStreamSpi",
            "javax.imageio.spi.ImageOutputStreamSpi",
            "javax.imageio.spi.ImageReaderSpi",
            "javax.imageio.spi.ImageReaderWriterSpi",
            "javax.imageio.spi.ImageTranscoderSpi",
            "javax.imageio.spi.ImageWriterSpi"
        ],
        "Method": {
            "onRegistration": {
                "Parameter": {
                    "registry": "ServiceRegistry",
                    "": "Class"
                },
                "Throw": []
            },
            "onDeregistration": {
                "Parameter": {
                    "registry": "ServiceRegistry",
                    "": "Class"
                },
                "Throw": []
            }
        }
    },
    "451": {
        "Package": "javax.imageio.spi",
        "Interface": "ServiceRegistry.Filter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "filter": {
                "Parameter": {
                    "provider": "Object"
                },
                "Throw": []
            }
        }
    },
    "452": {
        "Package": "javax.imageio.stream",
        "Interface": "ImageInputStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.io.DataInput"
        ],
        "Implementing Class": [
            "javax.imageio.stream.ImageOutputStream"
        ],
        "Subinterface": [
            "javax.imageio.stream.FileCacheImageInputStream",
            "javax.imageio.stream.FileCacheImageOutputStream",
            "javax.imageio.stream.FileImageInputStream",
            "javax.imageio.stream.FileImageOutputStream",
            "javax.imageio.stream.ImageInputStreamImpl",
            "javax.imageio.stream.ImageOutputStreamImpl",
            "javax.imageio.stream.MemoryCacheImageInputStream",
            "javax.imageio.stream.MemoryCacheImageOutputStream"
        ],
        "Method": {
            "setByteOrder": {
                "Parameter": {
                    "byteOrder": "ByteOrder"
                },
                "Throw": []
            },
            "getByteOrder": {
                "Parameter": {},
                "Throw": []
            },
            "read": {
                "Parameter": {
                    "b": "byte",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "readBytes": {
                "Parameter": {
                    "buf": "IIOByteBuffer",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "readBoolean": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readByte": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readUnsignedByte": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readShort": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readUnsignedShort": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readChar": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readInt": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readUnsignedInt": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readLong": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readFloat": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readDouble": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readLine": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readUTF": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readFully": {
                "Parameter": {
                    "d": "double",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "getStreamPosition": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "getBitOffset": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "setBitOffset": {
                "Parameter": {
                    "bitOffset": "int"
                },
                "Throw": "java.io.IOException"
            },
            "readBit": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "readBits": {
                "Parameter": {
                    "numBits": "int"
                },
                "Throw": "java.io.IOException"
            },
            "length": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "skipBytes": {
                "Parameter": {
                    "n": "long"
                },
                "Throw": "java.io.IOException"
            },
            "seek": {
                "Parameter": {
                    "pos": "long"
                },
                "Throw": "java.io.IOException"
            },
            "mark": {
                "Parameter": {},
                "Throw": []
            },
            "reset": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "flushBefore": {
                "Parameter": {
                    "pos": "long"
                },
                "Throw": "java.io.IOException"
            },
            "flush": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "getFlushedPosition": {
                "Parameter": {},
                "Throw": []
            },
            "isCached": {
                "Parameter": {},
                "Throw": []
            },
            "isCachedMemory": {
                "Parameter": {},
                "Throw": []
            },
            "isCachedFile": {
                "Parameter": {},
                "Throw": []
            },
            "close": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            }
        }
    },
    "453": {
        "Package": "javax.imageio.stream",
        "Interface": "ImageOutputStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.io.DataInput",
            "java.io.DataOutput",
            "javax.imageio.stream.ImageInputStream"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.imageio.stream.FileCacheImageOutputStream",
            "javax.imageio.stream.FileImageOutputStream",
            "javax.imageio.stream.ImageOutputStreamImpl",
            "javax.imageio.stream.MemoryCacheImageOutputStream"
        ],
        "Method": {
            "write": {
                "Parameter": {
                    "b": "byte",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeBoolean": {
                "Parameter": {
                    "v": "boolean"
                },
                "Throw": "java.io.IOException"
            },
            "writeByte": {
                "Parameter": {
                    "v": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeShort": {
                "Parameter": {
                    "v": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeChar": {
                "Parameter": {
                    "v": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeInt": {
                "Parameter": {
                    "v": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeLong": {
                "Parameter": {
                    "v": "long"
                },
                "Throw": "java.io.IOException"
            },
            "writeFloat": {
                "Parameter": {
                    "v": "float"
                },
                "Throw": "java.io.IOException"
            },
            "writeDouble": {
                "Parameter": {
                    "v": "double"
                },
                "Throw": "java.io.IOException"
            },
            "writeBytes": {
                "Parameter": {
                    "s": "String"
                },
                "Throw": "java.io.IOException"
            },
            "writeChars": {
                "Parameter": {
                    "c": "char",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeUTF": {
                "Parameter": {
                    "s": "String"
                },
                "Throw": "java.io.IOException"
            },
            "writeShorts": {
                "Parameter": {
                    "s": "short",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeInts": {
                "Parameter": {
                    "i": "int",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeLongs": {
                "Parameter": {
                    "l": "long",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeFloats": {
                "Parameter": {
                    "f": "float",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeDoubles": {
                "Parameter": {
                    "d": "double",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeBit": {
                "Parameter": {
                    "bit": "int"
                },
                "Throw": "java.io.IOException"
            },
            "writeBits": {
                "Parameter": {
                    "bits": "long",
                    "numBits": "int"
                },
                "Throw": "java.io.IOException"
            },
            "flushBefore": {
                "Parameter": {
                    "pos": "long"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "454": {
        "Package": "javax.lang.model",
        "Interface": "AnnotatedConstruct",
        "Superinterface": null,
        "Implementing Class": [
            "javax.lang.model.type.ArrayType",
            "javax.lang.model.type.DeclaredType",
            "javax.lang.model.element.Element",
            "javax.lang.model.type.ErrorType",
            "javax.lang.model.element.ExecutableElement",
            "javax.lang.model.type.ExecutableType",
            "javax.lang.model.type.IntersectionType",
            "javax.lang.model.type.NoType",
            "javax.lang.model.type.NullType",
            "javax.lang.model.element.PackageElement",
            "javax.lang.model.element.Parameterizable",
            "javax.lang.model.type.PrimitiveType",
            "javax.lang.model.element.QualifiedNameable",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.element.TypeElement",
            "javax.lang.model.type.TypeMirror",
            "javax.lang.model.element.TypeParameterElement",
            "javax.lang.model.type.TypeVariable",
            "javax.lang.model.type.UnionType",
            "javax.lang.model.element.VariableElement",
            "javax.lang.model.type.WildcardType"
        ],
        "Subinterface": null,
        "Method": {
            "getAnnotationMirrors": {
                "Parameter": {},
                "Throw": []
            },
            "getAnnotation": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": []
            },
            "getAnnotationsByType": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": []
            }
        }
    },
    "455": {
        "Package": "javax.lang.model.element",
        "Interface": "AnnotationMirror",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAnnotationType": {
                "Parameter": {},
                "Throw": []
            },
            "getElementValues": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "456": {
        "Package": "javax.lang.model.element",
        "Interface": "AnnotationValue",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getValue": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            },
            "accept": {
                "Parameter": {
                    "": "AnnotationValueVisitor",
                    "p": "P"
                },
                "Throw": []
            }
        }
    },
    "457": {
        "Package": "javax.lang.model.element",
        "Interface": "AnnotationValueVisitor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.lang.model.util.AbstractAnnotationValueVisitor6",
            "javax.lang.model.util.AbstractAnnotationValueVisitor7",
            "javax.lang.model.util.AbstractAnnotationValueVisitor8",
            "javax.lang.model.util.SimpleAnnotationValueVisitor6",
            "javax.lang.model.util.SimpleAnnotationValueVisitor7",
            "javax.lang.model.util.SimpleAnnotationValueVisitor8"
        ],
        "Method": {
            "visit": {
                "Parameter": {
                    "av": "AnnotationValue"
                },
                "Throw": []
            },
            "visitBoolean": {
                "Parameter": {
                    "b": "boolean",
                    "p": "P"
                },
                "Throw": []
            },
            "visitByte": {
                "Parameter": {
                    "b": "byte",
                    "p": "P"
                },
                "Throw": []
            },
            "visitChar": {
                "Parameter": {
                    "c": "char",
                    "p": "P"
                },
                "Throw": []
            },
            "visitDouble": {
                "Parameter": {
                    "d": "double",
                    "p": "P"
                },
                "Throw": []
            },
            "visitFloat": {
                "Parameter": {
                    "f": "float",
                    "p": "P"
                },
                "Throw": []
            },
            "visitInt": {
                "Parameter": {
                    "i": "int",
                    "p": "P"
                },
                "Throw": []
            },
            "visitLong": {
                "Parameter": {
                    "i": "long",
                    "p": "P"
                },
                "Throw": []
            },
            "visitShort": {
                "Parameter": {
                    "s": "short",
                    "p": "P"
                },
                "Throw": []
            },
            "visitString": {
                "Parameter": {
                    "s": "String",
                    "p": "P"
                },
                "Throw": []
            },
            "visitType": {
                "Parameter": {
                    "t": "TypeMirror",
                    "p": "P"
                },
                "Throw": []
            },
            "visitEnumConstant": {
                "Parameter": {
                    "c": "VariableElement",
                    "p": "P"
                },
                "Throw": []
            },
            "visitAnnotation": {
                "Parameter": {
                    "a": "AnnotationMirror",
                    "p": "P"
                },
                "Throw": []
            },
            "visitArray": {
                "Parameter": {
                    "": "List",
                    "p": "P"
                },
                "Throw": []
            },
            "visitUnknown": {
                "Parameter": {
                    "av": "AnnotationValue",
                    "p": "P"
                },
                "Throw": "javax.lang.model.element.UnknownAnnotationValueException"
            }
        }
    },
    "458": {
        "Package": "javax.lang.model.element",
        "Interface": "Element",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct"
        ],
        "Implementing Class": [
            "javax.lang.model.element.ExecutableElement",
            "javax.lang.model.element.PackageElement",
            "javax.lang.model.element.Parameterizable",
            "javax.lang.model.element.QualifiedNameable",
            "javax.lang.model.element.TypeElement",
            "javax.lang.model.element.TypeParameterElement",
            "javax.lang.model.element.VariableElement"
        ],
        "Subinterface": null,
        "Method": {
            "asType": {
                "Parameter": {},
                "Throw": []
            },
            "getKind": {
                "Parameter": {},
                "Throw": []
            },
            "getModifiers": {
                "Parameter": {},
                "Throw": []
            },
            "getSimpleName": {
                "Parameter": {},
                "Throw": []
            },
            "getEnclosingElement": {
                "Parameter": {},
                "Throw": []
            },
            "getEnclosedElements": {
                "Parameter": {},
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "getAnnotationMirrors": {
                "Parameter": {},
                "Throw": []
            },
            "getAnnotation": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": []
            },
            "accept": {
                "Parameter": {
                    "": "ElementVisitor",
                    "p": "P"
                },
                "Throw": []
            }
        }
    },
    "459": {
        "Package": "javax.lang.model.element",
        "Interface": "ElementVisitor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.lang.model.util.AbstractElementVisitor6",
            "javax.lang.model.util.AbstractElementVisitor7",
            "javax.lang.model.util.AbstractElementVisitor8",
            "javax.lang.model.util.ElementKindVisitor6",
            "javax.lang.model.util.ElementKindVisitor7",
            "javax.lang.model.util.ElementKindVisitor8",
            "javax.lang.model.util.ElementScanner6",
            "javax.lang.model.util.ElementScanner7",
            "javax.lang.model.util.ElementScanner8",
            "javax.lang.model.util.SimpleElementVisitor6",
            "javax.lang.model.util.SimpleElementVisitor7",
            "javax.lang.model.util.SimpleElementVisitor8"
        ],
        "Method": {
            "visit": {
                "Parameter": {
                    "e": "Element"
                },
                "Throw": []
            },
            "visitPackage": {
                "Parameter": {
                    "e": "PackageElement",
                    "p": "P"
                },
                "Throw": []
            },
            "visitType": {
                "Parameter": {
                    "e": "TypeElement",
                    "p": "P"
                },
                "Throw": []
            },
            "visitVariable": {
                "Parameter": {
                    "e": "VariableElement",
                    "p": "P"
                },
                "Throw": []
            },
            "visitExecutable": {
                "Parameter": {
                    "e": "ExecutableElement",
                    "p": "P"
                },
                "Throw": []
            },
            "visitTypeParameter": {
                "Parameter": {
                    "e": "TypeParameterElement",
                    "p": "P"
                },
                "Throw": []
            },
            "visitUnknown": {
                "Parameter": {
                    "e": "Element",
                    "p": "P"
                },
                "Throw": "javax.lang.model.element.UnknownElementException"
            }
        }
    },
    "460": {
        "Package": "javax.lang.model.element",
        "Interface": "ExecutableElement",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element",
            "javax.lang.model.element.Parameterizable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getTypeParameters": {
                "Parameter": {},
                "Throw": []
            },
            "getReturnType": {
                "Parameter": {},
                "Throw": []
            },
            "getParameters": {
                "Parameter": {},
                "Throw": []
            },
            "getReceiverType": {
                "Parameter": {},
                "Throw": []
            },
            "isVarArgs": {
                "Parameter": {},
                "Throw": []
            },
            "isDefault": {
                "Parameter": {},
                "Throw": []
            },
            "getThrownTypes": {
                "Parameter": {},
                "Throw": []
            },
            "getDefaultValue": {
                "Parameter": {},
                "Throw": []
            },
            "getSimpleName": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "461": {
        "Package": "javax.lang.model.element",
        "Interface": "Name",
        "Superinterface": [
            "java.lang.CharSequence"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "contentEquals": {
                "Parameter": {
                    "cs": "CharSequence"
                },
                "Throw": []
            }
        }
    },
    "462": {
        "Package": "javax.lang.model.element",
        "Interface": "PackageElement",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element",
            "javax.lang.model.element.QualifiedNameable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getQualifiedName": {
                "Parameter": {},
                "Throw": []
            },
            "getSimpleName": {
                "Parameter": {},
                "Throw": []
            },
            "getEnclosedElements": {
                "Parameter": {},
                "Throw": []
            },
            "isUnnamed": {
                "Parameter": {},
                "Throw": []
            },
            "getEnclosingElement": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "463": {
        "Package": "javax.lang.model.element",
        "Interface": "Parameterizable",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element"
        ],
        "Implementing Class": [
            "javax.lang.model.element.ExecutableElement",
            "javax.lang.model.element.TypeElement"
        ],
        "Subinterface": null,
        "Method": {
            "getTypeParameters": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "464": {
        "Package": "javax.lang.model.element",
        "Interface": "QualifiedNameable",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element"
        ],
        "Implementing Class": [
            "javax.lang.model.element.PackageElement",
            "javax.lang.model.element.TypeElement"
        ],
        "Subinterface": null,
        "Method": {
            "getQualifiedName": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "465": {
        "Package": "javax.lang.model.element",
        "Interface": "TypeElement",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element",
            "javax.lang.model.element.Parameterizable",
            "javax.lang.model.element.QualifiedNameable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getEnclosedElements": {
                "Parameter": {},
                "Throw": []
            },
            "getNestingKind": {
                "Parameter": {},
                "Throw": []
            },
            "getQualifiedName": {
                "Parameter": {},
                "Throw": []
            },
            "getSimpleName": {
                "Parameter": {},
                "Throw": []
            },
            "getSuperclass": {
                "Parameter": {},
                "Throw": []
            },
            "getInterfaces": {
                "Parameter": {},
                "Throw": []
            },
            "getTypeParameters": {
                "Parameter": {},
                "Throw": []
            },
            "getEnclosingElement": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "466": {
        "Package": "javax.lang.model.element",
        "Interface": "TypeParameterElement",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getGenericElement": {
                "Parameter": {},
                "Throw": []
            },
            "getBounds": {
                "Parameter": {},
                "Throw": []
            },
            "getEnclosingElement": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "467": {
        "Package": "javax.lang.model.element",
        "Interface": "VariableElement",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getConstantValue": {
                "Parameter": {},
                "Throw": []
            },
            "getSimpleName": {
                "Parameter": {},
                "Throw": []
            },
            "getEnclosingElement": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "468": {
        "Package": "javax.lang.model.type",
        "Interface": "ArrayType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getComponentType": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "469": {
        "Package": "javax.lang.model.type",
        "Interface": "DeclaredType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": [
            "javax.lang.model.type.ErrorType"
        ],
        "Subinterface": null,
        "Method": {
            "asElement": {
                "Parameter": {},
                "Throw": []
            },
            "getEnclosingType": {
                "Parameter": {},
                "Throw": []
            },
            "getTypeArguments": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "470": {
        "Package": "javax.lang.model.type",
        "Interface": "ErrorType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.DeclaredType",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "471": {
        "Package": "javax.lang.model.type",
        "Interface": "ExecutableType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getTypeVariables": {
                "Parameter": {},
                "Throw": []
            },
            "getReturnType": {
                "Parameter": {},
                "Throw": []
            },
            "getParameterTypes": {
                "Parameter": {},
                "Throw": []
            },
            "getReceiverType": {
                "Parameter": {},
                "Throw": []
            },
            "getThrownTypes": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "472": {
        "Package": "javax.lang.model.type",
        "Interface": "IntersectionType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getBounds": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "473": {
        "Package": "javax.lang.model.type",
        "Interface": "NoType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "474": {
        "Package": "javax.lang.model.type",
        "Interface": "NullType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "475": {
        "Package": "javax.lang.model.type",
        "Interface": "PrimitiveType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "476": {
        "Package": "javax.lang.model.type",
        "Interface": "ReferenceType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": [
            "javax.lang.model.type.ArrayType",
            "javax.lang.model.type.DeclaredType",
            "javax.lang.model.type.ErrorType",
            "javax.lang.model.type.NullType",
            "javax.lang.model.type.TypeVariable"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "477": {
        "Package": "javax.lang.model.type",
        "Interface": "TypeMirror",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct"
        ],
        "Implementing Class": [
            "javax.lang.model.type.ArrayType",
            "javax.lang.model.type.DeclaredType",
            "javax.lang.model.type.ErrorType",
            "javax.lang.model.type.ExecutableType",
            "javax.lang.model.type.IntersectionType",
            "javax.lang.model.type.NoType",
            "javax.lang.model.type.NullType",
            "javax.lang.model.type.PrimitiveType",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.type.TypeVariable",
            "javax.lang.model.type.UnionType",
            "javax.lang.model.type.WildcardType"
        ],
        "Subinterface": null,
        "Method": {
            "getKind": {
                "Parameter": {},
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            },
            "accept": {
                "Parameter": {
                    "": "TypeVisitor",
                    "p": "P"
                },
                "Throw": []
            }
        }
    },
    "478": {
        "Package": "javax.lang.model.type",
        "Interface": "TypeVariable",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "asElement": {
                "Parameter": {},
                "Throw": []
            },
            "getUpperBound": {
                "Parameter": {},
                "Throw": []
            },
            "getLowerBound": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "479": {
        "Package": "javax.lang.model.type",
        "Interface": "TypeVisitor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.lang.model.util.AbstractTypeVisitor6",
            "javax.lang.model.util.AbstractTypeVisitor7",
            "javax.lang.model.util.AbstractTypeVisitor8",
            "javax.lang.model.util.SimpleTypeVisitor6",
            "javax.lang.model.util.SimpleTypeVisitor7",
            "javax.lang.model.util.SimpleTypeVisitor8",
            "javax.lang.model.util.TypeKindVisitor6",
            "javax.lang.model.util.TypeKindVisitor7",
            "javax.lang.model.util.TypeKindVisitor8"
        ],
        "Method": {
            "visit": {
                "Parameter": {
                    "t": "TypeMirror"
                },
                "Throw": []
            },
            "visitPrimitive": {
                "Parameter": {
                    "t": "PrimitiveType",
                    "p": "P"
                },
                "Throw": []
            },
            "visitNull": {
                "Parameter": {
                    "t": "NullType",
                    "p": "P"
                },
                "Throw": []
            },
            "visitArray": {
                "Parameter": {
                    "t": "ArrayType",
                    "p": "P"
                },
                "Throw": []
            },
            "visitDeclared": {
                "Parameter": {
                    "t": "DeclaredType",
                    "p": "P"
                },
                "Throw": []
            },
            "visitError": {
                "Parameter": {
                    "t": "ErrorType",
                    "p": "P"
                },
                "Throw": []
            },
            "visitTypeVariable": {
                "Parameter": {
                    "t": "TypeVariable",
                    "p": "P"
                },
                "Throw": []
            },
            "visitWildcard": {
                "Parameter": {
                    "t": "WildcardType",
                    "p": "P"
                },
                "Throw": []
            },
            "visitExecutable": {
                "Parameter": {
                    "t": "ExecutableType",
                    "p": "P"
                },
                "Throw": []
            },
            "visitNoType": {
                "Parameter": {
                    "t": "NoType",
                    "p": "P"
                },
                "Throw": []
            },
            "visitUnknown": {
                "Parameter": {
                    "t": "TypeMirror",
                    "p": "P"
                },
                "Throw": "javax.lang.model.type.UnknownTypeException"
            },
            "visitUnion": {
                "Parameter": {
                    "t": "UnionType",
                    "p": "P"
                },
                "Throw": []
            },
            "visitIntersection": {
                "Parameter": {
                    "t": "IntersectionType",
                    "p": "P"
                },
                "Throw": []
            }
        }
    },
    "480": {
        "Package": "javax.lang.model.type",
        "Interface": "UnionType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getAlternatives": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "481": {
        "Package": "javax.lang.model.type",
        "Interface": "WildcardType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getExtendsBound": {
                "Parameter": {},
                "Throw": []
            },
            "getSuperBound": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "482": {
        "Package": "javax.lang.model.util",
        "Interface": "Elements",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPackageElement": {
                "Parameter": {
                    "name": "CharSequence"
                },
                "Throw": []
            },
            "getTypeElement": {
                "Parameter": {
                    "name": "CharSequence"
                },
                "Throw": []
            },
            "getElementValuesWithDefaults": {
                "Parameter": {
                    "a": "AnnotationMirror"
                },
                "Throw": []
            },
            "getDocComment": {
                "Parameter": {
                    "e": "Element"
                },
                "Throw": []
            },
            "isDeprecated": {
                "Parameter": {
                    "e": "Element"
                },
                "Throw": []
            },
            "getBinaryName": {
                "Parameter": {
                    "type": "TypeElement"
                },
                "Throw": []
            },
            "getPackageOf": {
                "Parameter": {
                    "type": "Element"
                },
                "Throw": []
            },
            "getAllMembers": {
                "Parameter": {
                    "type": "TypeElement"
                },
                "Throw": []
            },
            "getAllAnnotationMirrors": {
                "Parameter": {
                    "e": "Element"
                },
                "Throw": []
            },
            "hides": {
                "Parameter": {
                    "hider": "Element",
                    "hidden": "Element"
                },
                "Throw": []
            },
            "overrides": {
                "Parameter": {
                    "overrider": "ExecutableElement",
                    "overridden": "ExecutableElement",
                    "type": "TypeElement"
                },
                "Throw": []
            },
            "getConstantExpression": {
                "Parameter": {
                    "value": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "printElements": {
                "Parameter": {
                    "w": "Writer",
                    "elements": "Element"
                },
                "Throw": []
            },
            "getName": {
                "Parameter": {
                    "cs": "CharSequence"
                },
                "Throw": []
            },
            "isFunctionalInterface": {
                "Parameter": {
                    "type": "TypeElement"
                },
                "Throw": []
            }
        }
    },
    "483": {
        "Package": "javax.lang.model.util",
        "Interface": "Types",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "asElement": {
                "Parameter": {
                    "t": "TypeMirror"
                },
                "Throw": []
            },
            "isSameType": {
                "Parameter": {
                    "t": "TypeMirror"
                },
                "Throw": []
            },
            "isSubtype": {
                "Parameter": {
                    "t": "TypeMirror"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "isAssignable": {
                "Parameter": {
                    "t": "TypeMirror"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "contains": {
                "Parameter": {
                    "t": "TypeMirror"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "isSubsignature": {
                "Parameter": {
                    "m": "ExecutableType"
                },
                "Throw": []
            },
            "directSupertypes": {
                "Parameter": {
                    "t": "TypeMirror"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "erasure": {
                "Parameter": {
                    "t": "TypeMirror"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "boxedClass": {
                "Parameter": {
                    "p": "PrimitiveType"
                },
                "Throw": []
            },
            "unboxedType": {
                "Parameter": {
                    "t": "TypeMirror"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "capture": {
                "Parameter": {
                    "t": "TypeMirror"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getPrimitiveType": {
                "Parameter": {
                    "kind": "TypeKind"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getNullType": {
                "Parameter": {},
                "Throw": []
            },
            "getNoType": {
                "Parameter": {
                    "kind": "TypeKind"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getArrayType": {
                "Parameter": {
                    "componentType": "TypeMirror"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getWildcardType": {
                "Parameter": {
                    "extendsBound": "TypeMirror",
                    "superBound": "TypeMirror"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getDeclaredType": {
                "Parameter": {
                    "containing": "DeclaredType",
                    "typeElem": "TypeElement",
                    "typeArgs": "TypeMirror"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "asMemberOf": {
                "Parameter": {
                    "containing": "DeclaredType",
                    "element": "Element"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "484": {
        "Package": "javax.management",
        "Interface": "Descriptor",
        "Superinterface": [
            "java.lang.Cloneable",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.modelmbean.DescriptorSupport",
            "javax.management.ImmutableDescriptor"
        ],
        "Method": {
            "getFieldValue": {
                "Parameter": {
                    "fieldName": "String"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "setField": {
                "Parameter": {
                    "fieldName": "String",
                    "fieldValue": "Object"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "getFields": {
                "Parameter": {},
                "Throw": []
            },
            "getFieldNames": {
                "Parameter": {},
                "Throw": []
            },
            "getFieldValues": {
                "Parameter": {
                    "fieldNames": "String"
                },
                "Throw": []
            },
            "removeField": {
                "Parameter": {
                    "fieldName": "String"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "setFields": {
                "Parameter": {
                    "fieldNames": "String",
                    "fieldValues": "Object"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "clone": {
                "Parameter": {},
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "isValid": {
                "Parameter": {},
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "485": {
        "Package": "javax.management",
        "Interface": "DescriptorAccess",
        "Superinterface": [
            "javax.management.DescriptorRead"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.modelmbean.ModelMBeanAttributeInfo",
            "javax.management.modelmbean.ModelMBeanConstructorInfo",
            "javax.management.modelmbean.ModelMBeanNotificationInfo",
            "javax.management.modelmbean.ModelMBeanOperationInfo"
        ],
        "Method": {
            "setDescriptor": {
                "Parameter": {
                    "inDescriptor": "Descriptor"
                },
                "Throw": []
            }
        }
    },
    "486": {
        "Package": "javax.management",
        "Interface": "DescriptorRead",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.DescriptorAccess"
        ],
        "Subinterface": [
            "javax.management.MBeanAttributeInfo",
            "javax.management.MBeanConstructorInfo",
            "javax.management.MBeanFeatureInfo",
            "javax.management.MBeanInfo",
            "javax.management.MBeanNotificationInfo",
            "javax.management.MBeanOperationInfo",
            "javax.management.MBeanParameterInfo",
            "javax.management.modelmbean.ModelMBeanAttributeInfo",
            "javax.management.modelmbean.ModelMBeanConstructorInfo",
            "javax.management.modelmbean.ModelMBeanInfoSupport",
            "javax.management.modelmbean.ModelMBeanNotificationInfo",
            "javax.management.modelmbean.ModelMBeanOperationInfo",
            "javax.management.openmbean.OpenMBeanAttributeInfoSupport",
            "javax.management.openmbean.OpenMBeanConstructorInfoSupport",
            "javax.management.openmbean.OpenMBeanInfoSupport",
            "javax.management.openmbean.OpenMBeanOperationInfoSupport",
            "javax.management.openmbean.OpenMBeanParameterInfoSupport"
        ],
        "Method": {
            "getDescriptor": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "487": {
        "Package": "javax.management",
        "Interface": "DynamicMBean",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.modelmbean.ModelMBean"
        ],
        "Subinterface": [
            "javax.management.modelmbean.RequiredModelMBean",
            "javax.management.StandardEmitterMBean",
            "javax.management.StandardMBean"
        ],
        "Method": {
            "getAttribute": {
                "Parameter": {
                    "attribute": "String"
                },
                "Throw": "javax.management.ReflectionException"
            },
            "setAttribute": {
                "Parameter": {
                    "attribute": "Attribute"
                },
                "Throw": "javax.management.ReflectionException"
            },
            "getAttributes": {
                "Parameter": {
                    "attributes": "String"
                },
                "Throw": []
            },
            "setAttributes": {
                "Parameter": {
                    "attributes": "AttributeList"
                },
                "Throw": []
            },
            "invoke": {
                "Parameter": {
                    "actionName": "String",
                    "params": "Object",
                    "signature": "String"
                },
                "Throw": "javax.management.ReflectionException"
            },
            "getMBeanInfo": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "488": {
        "Package": "javax.management",
        "Interface": "MBeanRegistration",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.monitor.CounterMonitor",
            "javax.management.monitor.GaugeMonitor",
            "javax.management.remote.JMXConnectorServer",
            "javax.management.loading.MLet",
            "javax.management.monitor.Monitor",
            "javax.management.loading.PrivateMLet",
            "javax.management.relation.RelationService",
            "javax.management.relation.RelationSupport",
            "javax.management.modelmbean.RequiredModelMBean",
            "javax.management.remote.rmi.RMIConnectorServer",
            "javax.management.StandardEmitterMBean",
            "javax.management.StandardMBean",
            "javax.management.monitor.StringMonitor",
            "javax.management.timer.Timer"
        ],
        "Method": {
            "preRegister": {
                "Parameter": {
                    "server": "MBeanServer",
                    "name": "ObjectName"
                },
                "Throw": "java.lang.Exception"
            },
            "postRegister": {
                "Parameter": {
                    "registrationDone": "Boolean"
                },
                "Throw": []
            },
            "preDeregister": {
                "Parameter": {},
                "Throw": "java.lang.Exception"
            },
            "postDeregister": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "489": {
        "Package": "javax.management",
        "Interface": "MBeanServer",
        "Superinterface": [
            "javax.management.MBeanServerConnection"
        ],
        "Implementing Class": [
            "javax.management.remote.MBeanServerForwarder"
        ],
        "Subinterface": null,
        "Method": {
            "createMBean": {
                "Parameter": {
                    "className": "String",
                    "name": "ObjectName",
                    "loaderName": "ObjectName",
                    "params": "Object",
                    "signature": "String"
                },
                "Throw": "javax.management.InstanceNotFoundException"
            },
            "registerMBean": {
                "Parameter": {
                    "object": "Object",
                    "name": "ObjectName"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "unregisterMBean": {
                "Parameter": {
                    "name": "ObjectName"
                },
                "Throw": "javax.management.MBeanRegistrationException"
            },
            "getObjectInstance": {
                "Parameter": {
                    "name": "ObjectName"
                },
                "Throw": "javax.management.InstanceNotFoundException"
            },
            "queryMBeans": {
                "Parameter": {
                    "name": "ObjectName",
                    "query": "QueryExp"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "queryNames": {
                "Parameter": {
                    "name": "ObjectName",
                    "query": "QueryExp"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "isRegistered": {
                "Parameter": {
                    "name": "ObjectName"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "getMBeanCount": {
                "Parameter": {},
                "Throw": []
            },
            "getAttribute": {
                "Parameter": {
                    "name": "ObjectName",
                    "attribute": "String"
                },
                "Throw": "javax.management.ReflectionException"
            },
            "getAttributes": {
                "Parameter": {
                    "name": "ObjectName",
                    "attributes": "String"
                },
                "Throw": "javax.management.ReflectionException"
            },
            "setAttribute": {
                "Parameter": {
                    "name": "ObjectName",
                    "attribute": "Attribute"
                },
                "Throw": "javax.management.ReflectionException"
            },
            "setAttributes": {
                "Parameter": {
                    "name": "ObjectName",
                    "attributes": "AttributeList"
                },
                "Throw": "javax.management.ReflectionException"
            },
            "invoke": {
                "Parameter": {
                    "name": "ObjectName",
                    "operationName": "String",
                    "params": "Object",
                    "signature": "String"
                },
                "Throw": "javax.management.ReflectionException"
            },
            "getDefaultDomain": {
                "Parameter": {},
                "Throw": []
            },
            "getDomains": {
                "Parameter": {},
                "Throw": []
            },
            "addNotificationListener": {
                "Parameter": {
                    "name": "ObjectName",
                    "listener": "ObjectName",
                    "filter": "NotificationFilter",
                    "handback": "Object"
                },
                "Throw": "javax.management.InstanceNotFoundException"
            },
            "removeNotificationListener": {
                "Parameter": {
                    "name": "ObjectName",
                    "listener": "NotificationListener",
                    "filter": "NotificationFilter",
                    "handback": "Object"
                },
                "Throw": "javax.management.ListenerNotFoundException"
            },
            "getMBeanInfo": {
                "Parameter": {
                    "name": "ObjectName"
                },
                "Throw": "javax.management.ReflectionException"
            },
            "isInstanceOf": {
                "Parameter": {
                    "name": "ObjectName",
                    "className": "String"
                },
                "Throw": "javax.management.InstanceNotFoundException"
            },
            "instantiate": {
                "Parameter": {
                    "className": "String",
                    "loaderName": "ObjectName",
                    "params": "Object",
                    "signature": "String"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "deserialize": {
                "Parameter": {
                    "className": "String",
                    "loaderName": "ObjectName",
                    "data": "byte"
                },
                "Throw": "javax.management.ReflectionException"
            },
            "getClassLoaderFor": {
                "Parameter": {
                    "mbeanName": "ObjectName"
                },
                "Throw": "javax.management.InstanceNotFoundException"
            },
            "getClassLoader": {
                "Parameter": {
                    "loaderName": "ObjectName"
                },
                "Throw": "javax.management.InstanceNotFoundException"
            },
            "getClassLoaderRepository": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "490": {
        "Package": "javax.management",
        "Interface": "MBeanServerConnection",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.MBeanServer",
            "javax.management.remote.MBeanServerForwarder"
        ],
        "Subinterface": null,
        "Method": {
            "createMBean": {
                "Parameter": {
                    "className": "String",
                    "name": "ObjectName",
                    "loaderName": "ObjectName",
                    "params": "Object",
                    "signature": "String"
                },
                "Throw": "java.io.IOException"
            },
            "unregisterMBean": {
                "Parameter": {
                    "name": "ObjectName"
                },
                "Throw": "java.io.IOException"
            },
            "getObjectInstance": {
                "Parameter": {
                    "name": "ObjectName"
                },
                "Throw": "java.io.IOException"
            },
            "queryMBeans": {
                "Parameter": {
                    "name": "ObjectName",
                    "query": "QueryExp"
                },
                "Throw": "java.io.IOException"
            },
            "queryNames": {
                "Parameter": {
                    "name": "ObjectName",
                    "query": "QueryExp"
                },
                "Throw": "java.io.IOException"
            },
            "isRegistered": {
                "Parameter": {
                    "name": "ObjectName"
                },
                "Throw": "java.io.IOException"
            },
            "getMBeanCount": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "getAttribute": {
                "Parameter": {
                    "name": "ObjectName",
                    "attribute": "String"
                },
                "Throw": "java.io.IOException"
            },
            "getAttributes": {
                "Parameter": {
                    "name": "ObjectName",
                    "attributes": "String"
                },
                "Throw": "java.io.IOException"
            },
            "setAttribute": {
                "Parameter": {
                    "name": "ObjectName",
                    "attribute": "Attribute"
                },
                "Throw": "java.io.IOException"
            },
            "setAttributes": {
                "Parameter": {
                    "name": "ObjectName",
                    "attributes": "AttributeList"
                },
                "Throw": "java.io.IOException"
            },
            "invoke": {
                "Parameter": {
                    "name": "ObjectName",
                    "operationName": "String",
                    "params": "Object",
                    "signature": "String"
                },
                "Throw": "java.io.IOException"
            },
            "getDefaultDomain": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "getDomains": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "addNotificationListener": {
                "Parameter": {
                    "name": "ObjectName",
                    "listener": "ObjectName",
                    "filter": "NotificationFilter",
                    "handback": "Object"
                },
                "Throw": "java.io.IOException"
            },
            "removeNotificationListener": {
                "Parameter": {
                    "name": "ObjectName",
                    "listener": "NotificationListener",
                    "filter": "NotificationFilter",
                    "handback": "Object"
                },
                "Throw": "java.io.IOException"
            },
            "getMBeanInfo": {
                "Parameter": {
                    "name": "ObjectName"
                },
                "Throw": "java.io.IOException"
            },
            "isInstanceOf": {
                "Parameter": {
                    "name": "ObjectName",
                    "className": "String"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "491": {
        "Package": "javax.management",
        "Interface": "MBeanServerDelegateMBean",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.MBeanServerDelegate"
        ],
        "Method": {
            "getMBeanServerId": {
                "Parameter": {},
                "Throw": []
            },
            "getSpecificationName": {
                "Parameter": {},
                "Throw": []
            },
            "getSpecificationVersion": {
                "Parameter": {},
                "Throw": []
            },
            "getSpecificationVendor": {
                "Parameter": {},
                "Throw": []
            },
            "getImplementationName": {
                "Parameter": {},
                "Throw": []
            },
            "getImplementationVersion": {
                "Parameter": {},
                "Throw": []
            },
            "getImplementationVendor": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "492": {
        "Package": "javax.management",
        "Interface": "NotificationBroadcaster",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.modelmbean.ModelMBean",
            "javax.management.modelmbean.ModelMBeanNotificationBroadcaster",
            "javax.management.NotificationEmitter"
        ],
        "Subinterface": [
            "javax.management.monitor.CounterMonitor",
            "javax.management.monitor.GaugeMonitor",
            "javax.management.remote.JMXConnectorServer",
            "javax.management.MBeanServerDelegate",
            "javax.management.monitor.Monitor",
            "javax.management.NotificationBroadcasterSupport",
            "javax.management.relation.RelationService",
            "javax.management.modelmbean.RequiredModelMBean",
            "javax.management.remote.rmi.RMIConnectorServer",
            "javax.management.StandardEmitterMBean",
            "javax.management.monitor.StringMonitor",
            "javax.management.timer.Timer"
        ],
        "Method": {
            "addNotificationListener": {
                "Parameter": {
                    "listener": "NotificationListener",
                    "filter": "NotificationFilter",
                    "handback": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "removeNotificationListener": {
                "Parameter": {
                    "listener": "NotificationListener"
                },
                "Throw": "javax.management.ListenerNotFoundException"
            },
            "getNotificationInfo": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "493": {
        "Package": "javax.management",
        "Interface": "NotificationEmitter",
        "Superinterface": [
            "javax.management.NotificationBroadcaster"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.monitor.CounterMonitor",
            "javax.management.monitor.GaugeMonitor",
            "javax.management.remote.JMXConnectorServer",
            "javax.management.MBeanServerDelegate",
            "javax.management.monitor.Monitor",
            "javax.management.NotificationBroadcasterSupport",
            "javax.management.relation.RelationService",
            "javax.management.modelmbean.RequiredModelMBean",
            "javax.management.remote.rmi.RMIConnectorServer",
            "javax.management.StandardEmitterMBean",
            "javax.management.monitor.StringMonitor",
            "javax.management.timer.Timer"
        ],
        "Method": {
            "removeNotificationListener": {
                "Parameter": {
                    "listener": "NotificationListener",
                    "filter": "NotificationFilter",
                    "handback": "Object"
                },
                "Throw": "javax.management.ListenerNotFoundException"
            }
        }
    },
    "494": {
        "Package": "javax.management",
        "Interface": "NotificationFilter",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.AttributeChangeNotificationFilter",
            "javax.management.relation.MBeanServerNotificationFilter",
            "javax.management.NotificationFilterSupport"
        ],
        "Method": {
            "isNotificationEnabled": {
                "Parameter": {
                    "notification": "Notification"
                },
                "Throw": []
            }
        }
    },
    "495": {
        "Package": "javax.management",
        "Interface": "NotificationListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.relation.RelationService"
        ],
        "Method": {
            "handleNotification": {
                "Parameter": {
                    "notification": "Notification",
                    "handback": "Object"
                },
                "Throw": []
            }
        }
    },
    "496": {
        "Package": "javax.management",
        "Interface": "PersistentMBean",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.modelmbean.ModelMBean"
        ],
        "Subinterface": [
            "javax.management.modelmbean.RequiredModelMBean"
        ],
        "Method": {
            "load": {
                "Parameter": {},
                "Throw": "javax.management.InstanceNotFoundException"
            },
            "store": {
                "Parameter": {},
                "Throw": "javax.management.InstanceNotFoundException"
            }
        }
    },
    "497": {
        "Package": "javax.management",
        "Interface": "QueryExp",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.ObjectName"
        ],
        "Method": {
            "apply": {
                "Parameter": {
                    "name": "ObjectName"
                },
                "Throw": "javax.management.InvalidApplicationException"
            },
            "setMBeanServer": {
                "Parameter": {
                    "s": "MBeanServer"
                },
                "Throw": []
            }
        }
    },
    "498": {
        "Package": "javax.management",
        "Interface": "ValueExp",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.AttributeValueExp",
            "javax.management.StringValueExp"
        ],
        "Method": {
            "apply": {
                "Parameter": {
                    "name": "ObjectName"
                },
                "Throw": "javax.management.InvalidApplicationException"
            },
            "setMBeanServer": {
                "Parameter": {
                    "s": "MBeanServer"
                },
                "Throw": []
            }
        }
    },
    "499": {
        "Package": "javax.management.loading",
        "Interface": "ClassLoaderRepository",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "loadClass": {
                "Parameter": {
                    "className": "String"
                },
                "Throw": "java.lang.ClassNotFoundException"
            },
            "loadClassWithout": {
                "Parameter": {
                    "exclude": "ClassLoader",
                    "className": "String"
                },
                "Throw": "java.lang.ClassNotFoundException"
            },
            "loadClassBefore": {
                "Parameter": {
                    "stop": "ClassLoader",
                    "className": "String"
                },
                "Throw": "java.lang.ClassNotFoundException"
            }
        }
    },
    "500": {
        "Package": "javax.management.loading",
        "Interface": "MLetMBean",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.loading.MLet",
            "javax.management.loading.PrivateMLet"
        ],
        "Method": {
            "getMBeansFromURL": {
                "Parameter": {
                    "url": "URL"
                },
                "Throw": "javax.management.ServiceNotFoundException"
            },
            "addURL": {
                "Parameter": {
                    "url": "String"
                },
                "Throw": "javax.management.ServiceNotFoundException"
            },
            "getURLs": {
                "Parameter": {},
                "Throw": []
            },
            "getResource": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            },
            "getResourceAsStream": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            },
            "getResources": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.io.IOException"
            },
            "getLibraryDirectory": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "setLibraryDirectory": {
                "Parameter": {
                    "libdir": "String"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            }
        }
    },
    "501": {
        "Package": "javax.management.loading",
        "Interface": "PrivateClassLoader",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.loading.PrivateMLet"
        ],
        "Method": {}
    },
    "502": {
        "Package": "javax.management.modelmbean",
        "Interface": "ModelMBean",
        "Superinterface": [
            "javax.management.DynamicMBean",
            "javax.management.modelmbean.ModelMBeanNotificationBroadcaster",
            "javax.management.NotificationBroadcaster",
            "javax.management.PersistentMBean"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.modelmbean.RequiredModelMBean"
        ],
        "Method": {
            "setModelMBeanInfo": {
                "Parameter": {
                    "inModelMBeanInfo": "ModelMBeanInfo"
                },
                "Throw": []
            },
            "setManagedResource": {
                "Parameter": {
                    "mr": "Object",
                    "mrtype": "String"
                },
                "Throw": "javax.management.modelmbean.InvalidTargetObjectTypeException"
            }
        }
    },
    "503": {
        "Package": "javax.management.modelmbean",
        "Interface": "ModelMBeanInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.modelmbean.ModelMBeanInfoSupport"
        ],
        "Method": {
            "getDescriptors": {
                "Parameter": {
                    "inDescriptorType": "String"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "setDescriptors": {
                "Parameter": {
                    "inDescriptors": "Descriptor"
                },
                "Throw": "javax.management.MBeanException"
            },
            "getDescriptor": {
                "Parameter": {
                    "inDescriptorName": "String",
                    "inDescriptorType": "String"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "setDescriptor": {
                "Parameter": {
                    "inDescriptor": "Descriptor",
                    "inDescriptorType": "String"
                },
                "Throw": "javax.management.MBeanException"
            },
            "getMBeanDescriptor": {
                "Parameter": {},
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "setMBeanDescriptor": {
                "Parameter": {
                    "inDescriptor": "Descriptor"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "getAttribute": {
                "Parameter": {
                    "inName": "String"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "getOperation": {
                "Parameter": {
                    "inName": "String"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "getNotification": {
                "Parameter": {
                    "inName": "String"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "clone": {
                "Parameter": {},
                "Throw": []
            },
            "getAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "getClassName": {
                "Parameter": {},
                "Throw": []
            },
            "getConstructors": {
                "Parameter": {},
                "Throw": []
            },
            "getDescription": {
                "Parameter": {},
                "Throw": []
            },
            "getNotifications": {
                "Parameter": {},
                "Throw": []
            },
            "getOperations": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "504": {
        "Package": "javax.management.modelmbean",
        "Interface": "ModelMBeanNotificationBroadcaster",
        "Superinterface": [
            "javax.management.NotificationBroadcaster"
        ],
        "Implementing Class": [
            "javax.management.modelmbean.ModelMBean"
        ],
        "Subinterface": [
            "javax.management.modelmbean.RequiredModelMBean"
        ],
        "Method": {
            "sendNotification": {
                "Parameter": {
                    "ntfyText": "String"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "sendAttributeChangeNotification": {
                "Parameter": {
                    "oldValue": "Attribute",
                    "newValue": "Attribute"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "addAttributeChangeNotificationListener": {
                "Parameter": {
                    "listener": "NotificationListener",
                    "attributeName": "String",
                    "handback": "Object"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "removeAttributeChangeNotificationListener": {
                "Parameter": {
                    "listener": "NotificationListener",
                    "attributeName": "String"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            }
        }
    },
    "505": {
        "Package": "javax.management.monitor",
        "Interface": "CounterMonitorMBean",
        "Superinterface": [
            "javax.management.monitor.MonitorMBean"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.monitor.CounterMonitor"
        ],
        "Method": {
            "getDerivedGauge": {
                "Parameter": {
                    "object": "ObjectName"
                },
                "Throw": []
            },
            "getDerivedGaugeTimeStamp": {
                "Parameter": {
                    "object": "ObjectName"
                },
                "Throw": []
            },
            "getThreshold": {
                "Parameter": {
                    "object": "ObjectName"
                },
                "Throw": []
            },
            "setThreshold": {
                "Parameter": {
                    "value": "Number"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getInitThreshold": {
                "Parameter": {},
                "Throw": []
            },
            "setInitThreshold": {
                "Parameter": {
                    "value": "Number"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getOffset": {
                "Parameter": {},
                "Throw": []
            },
            "setOffset": {
                "Parameter": {
                    "value": "Number"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getModulus": {
                "Parameter": {},
                "Throw": []
            },
            "setModulus": {
                "Parameter": {
                    "value": "Number"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getNotify": {
                "Parameter": {},
                "Throw": []
            },
            "setNotify": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": []
            },
            "getDifferenceMode": {
                "Parameter": {},
                "Throw": []
            },
            "setDifferenceMode": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": []
            }
        }
    },
    "506": {
        "Package": "javax.management.monitor",
        "Interface": "GaugeMonitorMBean",
        "Superinterface": [
            "javax.management.monitor.MonitorMBean"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.monitor.GaugeMonitor"
        ],
        "Method": {
            "getDerivedGauge": {
                "Parameter": {
                    "object": "ObjectName"
                },
                "Throw": []
            },
            "getDerivedGaugeTimeStamp": {
                "Parameter": {
                    "object": "ObjectName"
                },
                "Throw": []
            },
            "getHighThreshold": {
                "Parameter": {},
                "Throw": []
            },
            "getLowThreshold": {
                "Parameter": {},
                "Throw": []
            },
            "setThresholds": {
                "Parameter": {
                    "highValue": "Number",
                    "lowValue": "Number"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getNotifyHigh": {
                "Parameter": {},
                "Throw": []
            },
            "setNotifyHigh": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": []
            },
            "getNotifyLow": {
                "Parameter": {},
                "Throw": []
            },
            "setNotifyLow": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": []
            },
            "getDifferenceMode": {
                "Parameter": {},
                "Throw": []
            },
            "setDifferenceMode": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": []
            }
        }
    },
    "507": {
        "Package": "javax.management.monitor",
        "Interface": "MonitorMBean",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.monitor.CounterMonitorMBean",
            "javax.management.monitor.GaugeMonitorMBean",
            "javax.management.monitor.StringMonitorMBean"
        ],
        "Subinterface": [
            "javax.management.monitor.CounterMonitor",
            "javax.management.monitor.GaugeMonitor",
            "javax.management.monitor.Monitor",
            "javax.management.monitor.StringMonitor"
        ],
        "Method": {
            "start": {
                "Parameter": {},
                "Throw": []
            },
            "stop": {
                "Parameter": {},
                "Throw": []
            },
            "addObservedObject": {
                "Parameter": {
                    "object": "ObjectName"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "removeObservedObject": {
                "Parameter": {
                    "object": "ObjectName"
                },
                "Throw": []
            },
            "containsObservedObject": {
                "Parameter": {
                    "object": "ObjectName"
                },
                "Throw": []
            },
            "getObservedObjects": {
                "Parameter": {},
                "Throw": []
            },
            "getObservedObject": {
                "Parameter": {},
                "Throw": []
            },
            "setObservedObject": {
                "Parameter": {
                    "object": "ObjectName"
                },
                "Throw": []
            },
            "getObservedAttribute": {
                "Parameter": {},
                "Throw": []
            },
            "setObservedAttribute": {
                "Parameter": {
                    "attribute": "String"
                },
                "Throw": []
            },
            "getGranularityPeriod": {
                "Parameter": {},
                "Throw": []
            },
            "setGranularityPeriod": {
                "Parameter": {
                    "period": "long"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "isActive": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "508": {
        "Package": "javax.management.monitor",
        "Interface": "StringMonitorMBean",
        "Superinterface": [
            "javax.management.monitor.MonitorMBean"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.monitor.StringMonitor"
        ],
        "Method": {
            "getDerivedGauge": {
                "Parameter": {
                    "object": "ObjectName"
                },
                "Throw": []
            },
            "getDerivedGaugeTimeStamp": {
                "Parameter": {
                    "object": "ObjectName"
                },
                "Throw": []
            },
            "getStringToCompare": {
                "Parameter": {},
                "Throw": []
            },
            "setStringToCompare": {
                "Parameter": {
                    "value": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getNotifyMatch": {
                "Parameter": {},
                "Throw": []
            },
            "setNotifyMatch": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": []
            },
            "getNotifyDiffer": {
                "Parameter": {},
                "Throw": []
            },
            "setNotifyDiffer": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": []
            }
        }
    },
    "509": {
        "Package": "javax.management.openmbean",
        "Interface": "CompositeData",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.CompositeDataSupport"
        ],
        "Method": {
            "getCompositeType": {
                "Parameter": {},
                "Throw": []
            },
            "get": {
                "Parameter": {
                    "key": "String"
                },
                "Throw": "javax.management.openmbean.InvalidKeyException"
            },
            "getAll": {
                "Parameter": {
                    "keys": "String"
                },
                "Throw": "javax.management.openmbean.InvalidKeyException"
            },
            "containsKey": {
                "Parameter": {
                    "key": "String"
                },
                "Throw": []
            },
            "containsValue": {
                "Parameter": {
                    "value": "Object"
                },
                "Throw": []
            },
            "values": {
                "Parameter": {},
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "510": {
        "Package": "javax.management.openmbean",
        "Interface": "CompositeDataView",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "toCompositeData": {
                "Parameter": {
                    "ct": "CompositeType"
                },
                "Throw": []
            }
        }
    },
    "511": {
        "Package": "javax.management.openmbean",
        "Interface": "OpenMBeanAttributeInfo",
        "Superinterface": [
            "javax.management.openmbean.OpenMBeanParameterInfo"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.OpenMBeanAttributeInfoSupport"
        ],
        "Method": {
            "isReadable": {
                "Parameter": {},
                "Throw": []
            },
            "isWritable": {
                "Parameter": {},
                "Throw": []
            },
            "isIs": {
                "Parameter": {},
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "512": {
        "Package": "javax.management.openmbean",
        "Interface": "OpenMBeanConstructorInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.OpenMBeanConstructorInfoSupport"
        ],
        "Method": {
            "getDescription": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getSignature": {
                "Parameter": {},
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "513": {
        "Package": "javax.management.openmbean",
        "Interface": "OpenMBeanInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.OpenMBeanInfoSupport"
        ],
        "Method": {
            "getClassName": {
                "Parameter": {},
                "Throw": []
            },
            "getDescription": {
                "Parameter": {},
                "Throw": []
            },
            "getAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "getOperations": {
                "Parameter": {},
                "Throw": []
            },
            "getConstructors": {
                "Parameter": {},
                "Throw": []
            },
            "getNotifications": {
                "Parameter": {},
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "514": {
        "Package": "javax.management.openmbean",
        "Interface": "OpenMBeanOperationInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.OpenMBeanOperationInfoSupport"
        ],
        "Method": {
            "getDescription": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getSignature": {
                "Parameter": {},
                "Throw": []
            },
            "getImpact": {
                "Parameter": {},
                "Throw": []
            },
            "getReturnType": {
                "Parameter": {},
                "Throw": []
            },
            "getReturnOpenType": {
                "Parameter": {},
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "515": {
        "Package": "javax.management.openmbean",
        "Interface": "OpenMBeanParameterInfo",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.openmbean.OpenMBeanAttributeInfo"
        ],
        "Subinterface": [
            "javax.management.openmbean.OpenMBeanAttributeInfoSupport",
            "javax.management.openmbean.OpenMBeanParameterInfoSupport"
        ],
        "Method": {
            "getDescription": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getOpenType": {
                "Parameter": {},
                "Throw": []
            },
            "getDefaultValue": {
                "Parameter": {},
                "Throw": []
            },
            "getLegalValues": {
                "Parameter": {},
                "Throw": []
            },
            "getMinValue": {
                "Parameter": {},
                "Throw": []
            },
            "getMaxValue": {
                "Parameter": {},
                "Throw": []
            },
            "hasDefaultValue": {
                "Parameter": {},
                "Throw": []
            },
            "hasLegalValues": {
                "Parameter": {},
                "Throw": []
            },
            "hasMinValue": {
                "Parameter": {},
                "Throw": []
            },
            "hasMaxValue": {
                "Parameter": {},
                "Throw": []
            },
            "isValue": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "516": {
        "Package": "javax.management.openmbean",
        "Interface": "TabularData",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.TabularDataSupport"
        ],
        "Method": {
            "getTabularType": {
                "Parameter": {},
                "Throw": []
            },
            "calculateIndex": {
                "Parameter": {
                    "value": "CompositeData"
                },
                "Throw": "javax.management.openmbean.InvalidOpenTypeException"
            },
            "size": {
                "Parameter": {},
                "Throw": []
            },
            "isEmpty": {
                "Parameter": {},
                "Throw": []
            },
            "containsKey": {
                "Parameter": {
                    "key": "Object"
                },
                "Throw": []
            },
            "containsValue": {
                "Parameter": {
                    "value": "CompositeData"
                },
                "Throw": []
            },
            "get": {
                "Parameter": {
                    "key": "Object"
                },
                "Throw": "javax.management.openmbean.InvalidKeyException"
            },
            "put": {
                "Parameter": {
                    "value": "CompositeData"
                },
                "Throw": "javax.management.openmbean.KeyAlreadyExistsException"
            },
            "remove": {
                "Parameter": {
                    "key": "Object"
                },
                "Throw": "javax.management.openmbean.InvalidKeyException"
            },
            "putAll": {
                "Parameter": {
                    "values": "CompositeData"
                },
                "Throw": "javax.management.openmbean.KeyAlreadyExistsException"
            },
            "clear": {
                "Parameter": {},
                "Throw": []
            },
            "keySet": {
                "Parameter": {},
                "Throw": []
            },
            "values": {
                "Parameter": {},
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "517": {
        "Package": "javax.management.relation",
        "Interface": "Relation",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.relation.RelationSupportMBean"
        ],
        "Subinterface": [
            "javax.management.relation.RelationSupport"
        ],
        "Method": {
            "getRole": {
                "Parameter": {
                    "roleName": "String"
                },
                "Throw": "javax.management.relation.RelationServiceNotRegisteredException"
            },
            "getRoles": {
                "Parameter": {
                    "roleNameArray": "String"
                },
                "Throw": "javax.management.relation.RelationServiceNotRegisteredException"
            },
            "getRoleCardinality": {
                "Parameter": {
                    "roleName": "String"
                },
                "Throw": "javax.management.relation.RoleNotFoundException"
            },
            "getAllRoles": {
                "Parameter": {},
                "Throw": "javax.management.relation.RelationServiceNotRegisteredException"
            },
            "retrieveAllRoles": {
                "Parameter": {},
                "Throw": []
            },
            "setRole": {
                "Parameter": {
                    "role": "Role"
                },
                "Throw": "javax.management.relation.RelationNotFoundException"
            },
            "setRoles": {
                "Parameter": {
                    "roleList": "RoleList"
                },
                "Throw": "javax.management.relation.RelationNotFoundException"
            },
            "handleMBeanUnregistration": {
                "Parameter": {
                    "objectName": "ObjectName",
                    "roleName": "String"
                },
                "Throw": "javax.management.relation.RelationNotFoundException"
            },
            "getReferencedMBeans": {
                "Parameter": {},
                "Throw": []
            },
            "getRelationTypeName": {
                "Parameter": {},
                "Throw": []
            },
            "getRelationServiceName": {
                "Parameter": {},
                "Throw": []
            },
            "getRelationId": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "518": {
        "Package": "javax.management.relation",
        "Interface": "RelationServiceMBean",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.relation.RelationService"
        ],
        "Method": {
            "isActive": {
                "Parameter": {},
                "Throw": "javax.management.relation.RelationServiceNotRegisteredException"
            },
            "getPurgeFlag": {
                "Parameter": {},
                "Throw": []
            },
            "setPurgeFlag": {
                "Parameter": {
                    "purgeFlag": "boolean"
                },
                "Throw": []
            },
            "createRelationType": {
                "Parameter": {
                    "relationTypeName": "String",
                    "roleInfoArray": "RoleInfo"
                },
                "Throw": "javax.management.relation.InvalidRelationTypeException"
            },
            "addRelationType": {
                "Parameter": {
                    "relationTypeObj": "RelationType"
                },
                "Throw": "javax.management.relation.InvalidRelationTypeException"
            },
            "getAllRelationTypeNames": {
                "Parameter": {},
                "Throw": []
            },
            "getRoleInfos": {
                "Parameter": {
                    "relationTypeName": "String"
                },
                "Throw": "javax.management.relation.RelationTypeNotFoundException"
            },
            "getRoleInfo": {
                "Parameter": {
                    "relationTypeName": "String",
                    "roleInfoName": "String"
                },
                "Throw": "javax.management.relation.RoleInfoNotFoundException"
            },
            "removeRelationType": {
                "Parameter": {
                    "relationTypeName": "String"
                },
                "Throw": "javax.management.relation.RelationTypeNotFoundException"
            },
            "createRelation": {
                "Parameter": {
                    "relationId": "String",
                    "relationTypeName": "String",
                    "roleList": "RoleList"
                },
                "Throw": "javax.management.relation.InvalidRoleValueException"
            },
            "addRelation": {
                "Parameter": {
                    "relationObjectName": "ObjectName"
                },
                "Throw": "javax.management.relation.RoleNotFoundException"
            },
            "isRelationMBean": {
                "Parameter": {
                    "relationId": "String"
                },
                "Throw": "javax.management.relation.RelationNotFoundException"
            },
            "isRelation": {
                "Parameter": {
                    "objectName": "ObjectName"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "hasRelation": {
                "Parameter": {
                    "relationId": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getAllRelationIds": {
                "Parameter": {},
                "Throw": []
            },
            "checkRoleReading": {
                "Parameter": {
                    "roleName": "String",
                    "relationTypeName": "String"
                },
                "Throw": "javax.management.relation.RelationTypeNotFoundException"
            },
            "checkRoleWriting": {
                "Parameter": {
                    "role": "Role",
                    "relationTypeName": "String",
                    "initFlag": "Boolean"
                },
                "Throw": "javax.management.relation.RelationTypeNotFoundException"
            },
            "sendRelationCreationNotification": {
                "Parameter": {
                    "relationId": "String"
                },
                "Throw": "javax.management.relation.RelationNotFoundException"
            },
            "sendRoleUpdateNotification": {
                "Parameter": {
                    "relationId": "String",
                    "newRole": "Role",
                    "": "List"
                },
                "Throw": "javax.management.relation.RelationNotFoundException"
            },
            "sendRelationRemovalNotification": {
                "Parameter": {
                    "relationId": "String",
                    "": "List"
                },
                "Throw": "javax.management.relation.RelationNotFoundException"
            },
            "updateRoleMap": {
                "Parameter": {
                    "relationId": "String",
                    "newRole": "Role",
                    "": "List"
                },
                "Throw": "javax.management.relation.RelationNotFoundException"
            },
            "removeRelation": {
                "Parameter": {
                    "relationId": "String"
                },
                "Throw": "javax.management.relation.RelationNotFoundException"
            },
            "purgeRelations": {
                "Parameter": {},
                "Throw": "javax.management.relation.RelationServiceNotRegisteredException"
            },
            "findReferencingRelations": {
                "Parameter": {
                    "mbeanName": "ObjectName",
                    "relationTypeName": "String",
                    "roleName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "findAssociatedMBeans": {
                "Parameter": {
                    "mbeanName": "ObjectName",
                    "relationTypeName": "String",
                    "roleName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "findRelationsOfType": {
                "Parameter": {
                    "relationTypeName": "String"
                },
                "Throw": "javax.management.relation.RelationTypeNotFoundException"
            },
            "getRole": {
                "Parameter": {
                    "relationId": "String",
                    "roleName": "String"
                },
                "Throw": "javax.management.relation.RoleNotFoundException"
            },
            "getRoles": {
                "Parameter": {
                    "relationId": "String",
                    "roleNameArray": "String"
                },
                "Throw": "javax.management.relation.RelationNotFoundException"
            },
            "getAllRoles": {
                "Parameter": {
                    "relationId": "String"
                },
                "Throw": "javax.management.relation.RelationServiceNotRegisteredException"
            },
            "getRoleCardinality": {
                "Parameter": {
                    "relationId": "String",
                    "roleName": "String"
                },
                "Throw": "javax.management.relation.RoleNotFoundException"
            },
            "setRole": {
                "Parameter": {
                    "relationId": "String",
                    "role": "Role"
                },
                "Throw": "javax.management.relation.RelationTypeNotFoundException"
            },
            "setRoles": {
                "Parameter": {
                    "relationId": "String",
                    "roleList": "RoleList"
                },
                "Throw": "javax.management.relation.RelationNotFoundException"
            },
            "getReferencedMBeans": {
                "Parameter": {
                    "relationId": "String"
                },
                "Throw": "javax.management.relation.RelationNotFoundException"
            },
            "getRelationTypeName": {
                "Parameter": {
                    "relationId": "String"
                },
                "Throw": "javax.management.relation.RelationNotFoundException"
            }
        }
    },
    "519": {
        "Package": "javax.management.relation",
        "Interface": "RelationSupportMBean",
        "Superinterface": [
            "javax.management.relation.Relation"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.relation.RelationSupport"
        ],
        "Method": {
            "isInRelationService": {
                "Parameter": {},
                "Throw": []
            },
            "setRelationServiceManagementFlag": {
                "Parameter": {
                    "flag": "Boolean"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "520": {
        "Package": "javax.management.relation",
        "Interface": "RelationType",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.relation.RelationTypeSupport"
        ],
        "Method": {
            "getRelationTypeName": {
                "Parameter": {},
                "Throw": []
            },
            "getRoleInfos": {
                "Parameter": {},
                "Throw": []
            },
            "getRoleInfo": {
                "Parameter": {
                    "roleInfoName": "String"
                },
                "Throw": "javax.management.relation.RoleInfoNotFoundException"
            }
        }
    },
    "521": {
        "Package": "javax.management.remote",
        "Interface": "JMXAddressable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.remote.JMXConnectorServer",
            "javax.management.remote.rmi.RMIConnector",
            "javax.management.remote.rmi.RMIConnectorServer"
        ],
        "Method": {
            "getAddress": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "522": {
        "Package": "javax.management.remote",
        "Interface": "JMXAuthenticator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "authenticate": {
                "Parameter": {
                    "credentials": "Object"
                },
                "Throw": "java.lang.SecurityException"
            }
        }
    },
    "523": {
        "Package": "javax.management.remote",
        "Interface": "JMXConnector",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.remote.rmi.RMIConnector"
        ],
        "Method": {
            "connect": {
                "Parameter": {
                    "": "Map"
                },
                "Throw": "java.lang.SecurityException"
            },
            "getMBeanServerConnection": {
                "Parameter": {
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "close": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "addConnectionNotificationListener": {
                "Parameter": {
                    "listener": "NotificationListener",
                    "filter": "NotificationFilter",
                    "handback": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "removeConnectionNotificationListener": {
                "Parameter": {
                    "l": "NotificationListener",
                    "f": "NotificationFilter",
                    "handback": "Object"
                },
                "Throw": "javax.management.ListenerNotFoundException"
            },
            "getConnectionId": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            }
        }
    },
    "524": {
        "Package": "javax.management.remote",
        "Interface": "JMXConnectorProvider",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "newJMXConnector": {
                "Parameter": {
                    "serviceURL": "JMXServiceURL",
                    "": "Map"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "525": {
        "Package": "javax.management.remote",
        "Interface": "JMXConnectorServerMBean",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.remote.JMXConnectorServer",
            "javax.management.remote.rmi.RMIConnectorServer"
        ],
        "Method": {
            "start": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "stop": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "isActive": {
                "Parameter": {},
                "Throw": []
            },
            "setMBeanServerForwarder": {
                "Parameter": {
                    "mbsf": "MBeanServerForwarder"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getConnectionIds": {
                "Parameter": {},
                "Throw": []
            },
            "getAddress": {
                "Parameter": {},
                "Throw": []
            },
            "getAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "toJMXConnector": {
                "Parameter": {
                    "": "Map"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "526": {
        "Package": "javax.management.remote",
        "Interface": "JMXConnectorServerProvider",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "newJMXConnectorServer": {
                "Parameter": {
                    "serviceURL": "JMXServiceURL",
                    "": "Map",
                    "mbeanServer": "MBeanServer"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "527": {
        "Package": "javax.management.remote",
        "Interface": "MBeanServerForwarder",
        "Superinterface": [
            "javax.management.MBeanServer",
            "javax.management.MBeanServerConnection"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getMBeanServer": {
                "Parameter": {},
                "Throw": []
            },
            "setMBeanServer": {
                "Parameter": {
                    "mbs": "MBeanServer"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "528": {
        "Package": "javax.management.remote.rmi",
        "Interface": "RMIConnection",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.rmi.Remote"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.remote.rmi.RMIConnectionImpl",
            "javax.management.remote.rmi.RMIConnectionImpl_Stub"
        ],
        "Method": {
            "getConnectionId": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "close": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "createMBean": {
                "Parameter": {
                    "className": "String",
                    "name": "ObjectName",
                    "loaderName": "ObjectName",
                    "params": "MarshalledObject",
                    "signature": "String",
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "unregisterMBean": {
                "Parameter": {
                    "name": "ObjectName",
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "getObjectInstance": {
                "Parameter": {
                    "name": "ObjectName",
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "queryMBeans": {
                "Parameter": {
                    "name": "ObjectName",
                    "query": "MarshalledObject",
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "queryNames": {
                "Parameter": {
                    "name": "ObjectName",
                    "query": "MarshalledObject",
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "isRegistered": {
                "Parameter": {
                    "name": "ObjectName",
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "getMBeanCount": {
                "Parameter": {
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "getAttribute": {
                "Parameter": {
                    "name": "ObjectName",
                    "attribute": "String",
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "getAttributes": {
                "Parameter": {
                    "name": "ObjectName",
                    "attributes": "String",
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "setAttribute": {
                "Parameter": {
                    "name": "ObjectName",
                    "attribute": "MarshalledObject",
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "setAttributes": {
                "Parameter": {
                    "name": "ObjectName",
                    "attributes": "MarshalledObject",
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "invoke": {
                "Parameter": {
                    "name": "ObjectName",
                    "operationName": "String",
                    "params": "MarshalledObject",
                    "signature": "String",
                    "delegationSubject": "Subject"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "getDefaultDomain": {
                "Parameter": {
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "getDomains": {
                "Parameter": {
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "getMBeanInfo": {
                "Parameter": {
                    "name": "ObjectName",
                    "delegationSubject": "Subject"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "isInstanceOf": {
                "Parameter": {
                    "name": "ObjectName",
                    "className": "String",
                    "delegationSubject": "Subject"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "addNotificationListener": {
                "Parameter": {
                    "name": "ObjectName",
                    "listener": "ObjectName",
                    "filter": "MarshalledObject",
                    "handback": "MarshalledObject",
                    "delegationSubject": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "removeNotificationListener": {
                "Parameter": {
                    "name": "ObjectName",
                    "listener": "ObjectName",
                    "filter": "MarshalledObject",
                    "handback": "MarshalledObject",
                    "delegationSubject": "Subject"
                },
                "Throw": "javax.management.RuntimeOperationsException"
            },
            "addNotificationListeners": {
                "Parameter": {
                    "names": "ObjectName",
                    "filters": "MarshalledObject",
                    "delegationSubjects": "Subject"
                },
                "Throw": "java.io.IOException"
            },
            "removeNotificationListeners": {
                "Parameter": {
                    "name": "ObjectName",
                    "listenerIDs": "Integer",
                    "delegationSubject": "Subject"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "fetchNotifications": {
                "Parameter": {
                    "clientSequenceNumber": "long",
                    "maxNotifications": "int",
                    "timeout": "long"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "529": {
        "Package": "javax.management.remote.rmi",
        "Interface": "RMIServer",
        "Superinterface": [
            "java.rmi.Remote"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.remote.rmi.RMIIIOPServerImpl",
            "javax.management.remote.rmi.RMIJRMPServerImpl",
            "javax.management.remote.rmi.RMIServerImpl",
            "javax.management.remote.rmi.RMIServerImpl_Stub"
        ],
        "Method": {
            "getVersion": {
                "Parameter": {},
                "Throw": "java.rmi.RemoteException"
            },
            "newClient": {
                "Parameter": {
                    "credentials": "Object"
                },
                "Throw": "java.lang.SecurityException"
            }
        }
    },
    "530": {
        "Package": "javax.management.timer",
        "Interface": "TimerMBean",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.timer.Timer"
        ],
        "Method": {
            "start": {
                "Parameter": {},
                "Throw": []
            },
            "stop": {
                "Parameter": {},
                "Throw": []
            },
            "addNotification": {
                "Parameter": {
                    "type": "String",
                    "message": "String",
                    "userData": "Object",
                    "date": "Date"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "removeNotification": {
                "Parameter": {
                    "id": "Integer"
                },
                "Throw": "javax.management.InstanceNotFoundException"
            },
            "removeNotifications": {
                "Parameter": {
                    "type": "String"
                },
                "Throw": "javax.management.InstanceNotFoundException"
            },
            "removeAllNotifications": {
                "Parameter": {},
                "Throw": []
            },
            "getNbNotifications": {
                "Parameter": {},
                "Throw": []
            },
            "getAllNotificationIDs": {
                "Parameter": {},
                "Throw": []
            },
            "getNotificationIDs": {
                "Parameter": {
                    "type": "String"
                },
                "Throw": []
            },
            "getNotificationType": {
                "Parameter": {
                    "id": "Integer"
                },
                "Throw": []
            },
            "getNotificationMessage": {
                "Parameter": {
                    "id": "Integer"
                },
                "Throw": []
            },
            "getNotificationUserData": {
                "Parameter": {
                    "id": "Integer"
                },
                "Throw": []
            },
            "getDate": {
                "Parameter": {
                    "id": "Integer"
                },
                "Throw": []
            },
            "getPeriod": {
                "Parameter": {
                    "id": "Integer"
                },
                "Throw": []
            },
            "getNbOccurences": {
                "Parameter": {
                    "id": "Integer"
                },
                "Throw": []
            },
            "getFixedRate": {
                "Parameter": {
                    "id": "Integer"
                },
                "Throw": []
            },
            "getSendPastNotifications": {
                "Parameter": {},
                "Throw": []
            },
            "setSendPastNotifications": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": []
            },
            "isActive": {
                "Parameter": {},
                "Throw": []
            },
            "isEmpty": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "531": {
        "Package": "javax.naming",
        "Interface": "Context",
        "Superinterface": null,
        "Implementing Class": [
            "javax.naming.directory.DirContext",
            "javax.naming.event.EventContext",
            "javax.naming.event.EventDirContext",
            "javax.naming.ldap.LdapContext"
        ],
        "Subinterface": [
            "javax.naming.InitialContext",
            "javax.naming.directory.InitialDirContext",
            "javax.naming.ldap.InitialLdapContext"
        ],
        "Method": {
            "lookup": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "bind": {
                "Parameter": {
                    "name": "String",
                    "obj": "Object"
                },
                "Throw": "javax.naming.NamingException"
            },
            "rebind": {
                "Parameter": {
                    "name": "String",
                    "obj": "Object"
                },
                "Throw": "javax.naming.NamingException"
            },
            "unbind": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "rename": {
                "Parameter": {
                    "oldName": "String",
                    "newName": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "list": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "listBindings": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "destroySubcontext": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "createSubcontext": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "lookupLink": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "getNameParser": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "composeName": {
                "Parameter": {
                    "name": "String",
                    "prefix": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "addToEnvironment": {
                "Parameter": {
                    "propName": "String",
                    "propVal": "Object"
                },
                "Throw": "javax.naming.NamingException"
            },
            "removeFromEnvironment": {
                "Parameter": {
                    "propName": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "getEnvironment": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            },
            "close": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            },
            "getNameInNamespace": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "532": {
        "Package": "javax.naming",
        "Interface": "Name",
        "Superinterface": [
            "java.lang.Cloneable",
            "java.lang.Comparable",
            "java.io.Object"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.naming.CompositeName",
            "javax.naming.CompoundName",
            "javax.naming.ldap.LdapName"
        ],
        "Method": {
            "clone": {
                "Parameter": {},
                "Throw": []
            },
            "compareTo": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": "java.lang.ClassCastException"
            },
            "size": {
                "Parameter": {},
                "Throw": []
            },
            "isEmpty": {
                "Parameter": {},
                "Throw": []
            },
            "getAll": {
                "Parameter": {},
                "Throw": []
            },
            "get": {
                "Parameter": {
                    "posn": "int"
                },
                "Throw": "java.lang.ArrayIndexOutOfBoundsException"
            },
            "getPrefix": {
                "Parameter": {
                    "posn": "int"
                },
                "Throw": "java.lang.ArrayIndexOutOfBoundsException"
            },
            "getSuffix": {
                "Parameter": {
                    "posn": "int"
                },
                "Throw": "java.lang.ArrayIndexOutOfBoundsException"
            },
            "startsWith": {
                "Parameter": {
                    "n": "Name"
                },
                "Throw": []
            },
            "endsWith": {
                "Parameter": {
                    "n": "Name"
                },
                "Throw": []
            },
            "addAll": {
                "Parameter": {
                    "posn": "int",
                    "n": "Name"
                },
                "Throw": "javax.naming.InvalidNameException"
            },
            "add": {
                "Parameter": {
                    "posn": "int",
                    "comp": "String"
                },
                "Throw": "javax.naming.InvalidNameException"
            },
            "remove": {
                "Parameter": {
                    "posn": "int"
                },
                "Throw": "javax.naming.InvalidNameException"
            }
        }
    },
    "533": {
        "Package": "javax.naming",
        "Interface": "NameParser",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "parse": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "534": {
        "Package": "javax.naming",
        "Interface": "NamingEnumeration",
        "Superinterface": [
            "java.util.Enumeration"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "next": {
                "Parameter": {},
                "Throw": "java.util.NoSuchElementException"
            },
            "hasMore": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            },
            "close": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "535": {
        "Package": "javax.naming",
        "Interface": "Referenceable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getReference": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "536": {
        "Package": "javax.naming.directory",
        "Interface": "Attribute",
        "Superinterface": [
            "java.lang.Cloneable",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.naming.directory.BasicAttribute"
        ],
        "Method": {
            "getAll": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            },
            "get": {
                "Parameter": {
                    "ix": "int"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "size": {
                "Parameter": {},
                "Throw": []
            },
            "getID": {
                "Parameter": {},
                "Throw": []
            },
            "contains": {
                "Parameter": {
                    "attrVal": "Object"
                },
                "Throw": []
            },
            "add": {
                "Parameter": {
                    "ix": "int",
                    "attrVal": "Object"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "remove": {
                "Parameter": {
                    "ix": "int"
                },
                "Throw": "java.lang.IndexOutOfBoundsException"
            },
            "clear": {
                "Parameter": {},
                "Throw": []
            },
            "getAttributeSyntaxDefinition": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            },
            "getAttributeDefinition": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            },
            "clone": {
                "Parameter": {},
                "Throw": []
            },
            "isOrdered": {
                "Parameter": {},
                "Throw": []
            },
            "set": {
                "Parameter": {
                    "ix": "int",
                    "attrVal": "Object"
                },
                "Throw": "java.lang.IllegalStateException"
            }
        }
    },
    "537": {
        "Package": "javax.naming.directory",
        "Interface": "Attributes",
        "Superinterface": [
            "java.lang.Cloneable",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.naming.directory.BasicAttributes"
        ],
        "Method": {
            "isCaseIgnored": {
                "Parameter": {},
                "Throw": []
            },
            "size": {
                "Parameter": {},
                "Throw": []
            },
            "get": {
                "Parameter": {
                    "attrID": "String"
                },
                "Throw": []
            },
            "getAll": {
                "Parameter": {},
                "Throw": []
            },
            "getIDs": {
                "Parameter": {},
                "Throw": []
            },
            "put": {
                "Parameter": {
                    "attr": "Attribute"
                },
                "Throw": []
            },
            "remove": {
                "Parameter": {
                    "attrID": "String"
                },
                "Throw": []
            },
            "clone": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "538": {
        "Package": "javax.naming.directory",
        "Interface": "DirContext",
        "Superinterface": [
            "javax.naming.Context"
        ],
        "Implementing Class": [
            "javax.naming.event.EventDirContext",
            "javax.naming.ldap.LdapContext"
        ],
        "Subinterface": [
            "javax.naming.directory.InitialDirContext",
            "javax.naming.ldap.InitialLdapContext"
        ],
        "Method": {
            "getAttributes": {
                "Parameter": {
                    "name": "String",
                    "attrIds": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "modifyAttributes": {
                "Parameter": {
                    "name": "String",
                    "mods": "ModificationItem"
                },
                "Throw": "javax.naming.NamingException"
            },
            "bind": {
                "Parameter": {
                    "name": "String",
                    "obj": "Object",
                    "attrs": "Attributes"
                },
                "Throw": "javax.naming.NamingException"
            },
            "rebind": {
                "Parameter": {
                    "name": "String",
                    "obj": "Object",
                    "attrs": "Attributes"
                },
                "Throw": "javax.naming.NamingException"
            },
            "createSubcontext": {
                "Parameter": {
                    "name": "String",
                    "attrs": "Attributes"
                },
                "Throw": "javax.naming.NamingException"
            },
            "getSchema": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "getSchemaClassDefinition": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "javax.naming.NamingException"
            },
            "search": {
                "Parameter": {
                    "name": "String",
                    "filterExpr": "String",
                    "filterArgs": "Object",
                    "cons": "SearchControls"
                },
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "539": {
        "Package": "javax.naming.event",
        "Interface": "EventContext",
        "Superinterface": [
            "javax.naming.Context"
        ],
        "Implementing Class": [
            "javax.naming.event.EventDirContext"
        ],
        "Subinterface": null,
        "Method": {
            "addNamingListener": {
                "Parameter": {
                    "target": "String",
                    "scope": "int",
                    "l": "NamingListener"
                },
                "Throw": "javax.naming.NamingException"
            },
            "removeNamingListener": {
                "Parameter": {
                    "l": "NamingListener"
                },
                "Throw": "javax.naming.NamingException"
            },
            "targetMustExist": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "540": {
        "Package": "javax.naming.event",
        "Interface": "EventDirContext",
        "Superinterface": [
            "javax.naming.Context",
            "javax.naming.directory.DirContext",
            "javax.naming.event.EventContext"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "addNamingListener": {
                "Parameter": {
                    "target": "String",
                    "filter": "String",
                    "filterArgs": "Object",
                    "ctls": "SearchControls",
                    "l": "NamingListener"
                },
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "541": {
        "Package": "javax.naming.event",
        "Interface": "NamespaceChangeListener",
        "Superinterface": [
            "java.util.EventListener",
            "javax.naming.event.NamingListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "objectAdded": {
                "Parameter": {
                    "evt": "NamingEvent"
                },
                "Throw": []
            },
            "objectRemoved": {
                "Parameter": {
                    "evt": "NamingEvent"
                },
                "Throw": []
            },
            "objectRenamed": {
                "Parameter": {
                    "evt": "NamingEvent"
                },
                "Throw": []
            }
        }
    },
    "542": {
        "Package": "javax.naming.event",
        "Interface": "NamingListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": [
            "javax.naming.event.NamespaceChangeListener",
            "javax.naming.event.ObjectChangeListener",
            "javax.naming.ldap.UnsolicitedNotificationListener"
        ],
        "Subinterface": null,
        "Method": {
            "namingExceptionThrown": {
                "Parameter": {
                    "evt": "NamingExceptionEvent"
                },
                "Throw": []
            }
        }
    },
    "543": {
        "Package": "javax.naming.event",
        "Interface": "ObjectChangeListener",
        "Superinterface": [
            "java.util.EventListener",
            "javax.naming.event.NamingListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "objectChanged": {
                "Parameter": {
                    "evt": "NamingEvent"
                },
                "Throw": []
            }
        }
    },
    "544": {
        "Package": "javax.naming.ldap",
        "Interface": "Control",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.naming.ldap.BasicControl",
            "javax.naming.ldap.ManageReferralControl",
            "javax.naming.ldap.PagedResultsControl",
            "javax.naming.ldap.PagedResultsResponseControl",
            "javax.naming.ldap.SortControl",
            "javax.naming.ldap.SortResponseControl"
        ],
        "Method": {
            "getID": {
                "Parameter": {},
                "Throw": []
            },
            "isCritical": {
                "Parameter": {},
                "Throw": []
            },
            "getEncodedValue": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "545": {
        "Package": "javax.naming.ldap",
        "Interface": "ExtendedRequest",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.naming.ldap.StartTlsRequest"
        ],
        "Method": {
            "getID": {
                "Parameter": {},
                "Throw": []
            },
            "getEncodedValue": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "createExtendedResponse": {
                "Parameter": {
                    "id": "String",
                    "berValue": "byte",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "546": {
        "Package": "javax.naming.ldap",
        "Interface": "ExtendedResponse",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "javax.naming.ldap.UnsolicitedNotification"
        ],
        "Subinterface": [
            "javax.naming.ldap.StartTlsResponse"
        ],
        "Method": {
            "getID": {
                "Parameter": {},
                "Throw": []
            },
            "getEncodedValue": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "547": {
        "Package": "javax.naming.ldap",
        "Interface": "HasControls",
        "Superinterface": null,
        "Implementing Class": [
            "javax.naming.ldap.UnsolicitedNotification"
        ],
        "Subinterface": null,
        "Method": {
            "getControls": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "548": {
        "Package": "javax.naming.ldap",
        "Interface": "LdapContext",
        "Superinterface": [
            "javax.naming.Context",
            "javax.naming.directory.DirContext"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.naming.ldap.InitialLdapContext"
        ],
        "Method": {
            "extendedOperation": {
                "Parameter": {
                    "request": "ExtendedRequest"
                },
                "Throw": "javax.naming.NamingException"
            },
            "newInstance": {
                "Parameter": {
                    "requestControls": "Control"
                },
                "Throw": "javax.naming.NamingException"
            },
            "reconnect": {
                "Parameter": {
                    "connCtls": "Control"
                },
                "Throw": "javax.naming.NamingException"
            },
            "getConnectControls": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            },
            "setRequestControls": {
                "Parameter": {
                    "requestControls": "Control"
                },
                "Throw": "javax.naming.NamingException"
            },
            "getRequestControls": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            },
            "getResponseControls": {
                "Parameter": {},
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "549": {
        "Package": "javax.naming.ldap",
        "Interface": "UnsolicitedNotification",
        "Superinterface": [
            "javax.naming.ldap.ExtendedResponse",
            "javax.naming.ldap.HasControls",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getReferrals": {
                "Parameter": {},
                "Throw": []
            },
            "getException": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "550": {
        "Package": "javax.naming.ldap",
        "Interface": "UnsolicitedNotificationListener",
        "Superinterface": [
            "java.util.EventListener",
            "javax.naming.event.NamingListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "notificationReceived": {
                "Parameter": {
                    "evt": "UnsolicitedNotificationEvent"
                },
                "Throw": []
            }
        }
    },
    "551": {
        "Package": "javax.naming.spi",
        "Interface": "DirObjectFactory",
        "Superinterface": [
            "javax.naming.spi.ObjectFactory"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getObjectInstance": {
                "Parameter": {
                    "obj": "Object",
                    "name": "Name",
                    "nameCtx": "Context",
                    "": "Hashtable",
                    "attrs": "Attributes"
                },
                "Throw": "java.lang.Exception"
            }
        }
    },
    "552": {
        "Package": "javax.naming.spi",
        "Interface": "DirStateFactory",
        "Superinterface": [
            "javax.naming.spi.StateFactory"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getStateToBind": {
                "Parameter": {
                    "obj": "Object",
                    "name": "Name",
                    "nameCtx": "Context",
                    "": "Hashtable",
                    "inAttrs": "Attributes"
                },
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "553": {
        "Package": "javax.naming.spi",
        "Interface": "InitialContextFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getInitialContext": {
                "Parameter": {
                    "": "Hashtable"
                },
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "554": {
        "Package": "javax.naming.spi",
        "Interface": "InitialContextFactoryBuilder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createInitialContextFactory": {
                "Parameter": {
                    "": "Hashtable"
                },
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "555": {
        "Package": "javax.naming.spi",
        "Interface": "ObjectFactory",
        "Superinterface": null,
        "Implementing Class": [
            "javax.naming.spi.DirObjectFactory"
        ],
        "Subinterface": null,
        "Method": {
            "getObjectInstance": {
                "Parameter": {
                    "obj": "Object",
                    "name": "Name",
                    "nameCtx": "Context",
                    "": "Hashtable"
                },
                "Throw": "java.lang.Exception"
            }
        }
    },
    "556": {
        "Package": "javax.naming.spi",
        "Interface": "ObjectFactoryBuilder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createObjectFactory": {
                "Parameter": {
                    "obj": "Object",
                    "": "Hashtable"
                },
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "557": {
        "Package": "javax.naming.spi",
        "Interface": "Resolver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "resolveToClass": {
                "Parameter": {
                    "name": "String",
                    "": "Class"
                },
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "558": {
        "Package": "javax.naming.spi",
        "Interface": "StateFactory",
        "Superinterface": null,
        "Implementing Class": [
            "javax.naming.spi.DirStateFactory"
        ],
        "Subinterface": null,
        "Method": {
            "getStateToBind": {
                "Parameter": {
                    "obj": "Object",
                    "name": "Name",
                    "nameCtx": "Context",
                    "": "Hashtable"
                },
                "Throw": "javax.naming.NamingException"
            }
        }
    },
    "559": {
        "Package": "javax.net.ssl",
        "Interface": "HandshakeCompletedListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "handshakeCompleted": {
                "Parameter": {
                    "event": "HandshakeCompletedEvent"
                },
                "Throw": []
            }
        }
    },
    "560": {
        "Package": "javax.net.ssl",
        "Interface": "HostnameVerifier",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "verify": {
                "Parameter": {
                    "hostname": "String",
                    "session": "SSLSession"
                },
                "Throw": []
            }
        }
    },
    "561": {
        "Package": "javax.net.ssl",
        "Interface": "KeyManager",
        "Superinterface": null,
        "Implementing Class": [
            "javax.net.ssl.X509KeyManager"
        ],
        "Subinterface": [
            "javax.net.ssl.X509ExtendedKeyManager"
        ],
        "Method": {}
    },
    "562": {
        "Package": "javax.net.ssl",
        "Interface": "ManagerFactoryParameters",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.net.ssl.CertPathTrustManagerParameters",
            "javax.net.ssl.KeyStoreBuilderParameters"
        ],
        "Method": {}
    },
    "563": {
        "Package": "javax.net.ssl",
        "Interface": "SSLSession",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.net.ssl.ExtendedSSLSession"
        ],
        "Method": {
            "getId": {
                "Parameter": {},
                "Throw": []
            },
            "getSessionContext": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getCreationTime": {
                "Parameter": {},
                "Throw": []
            },
            "getLastAccessedTime": {
                "Parameter": {},
                "Throw": []
            },
            "invalidate": {
                "Parameter": {},
                "Throw": []
            },
            "isValid": {
                "Parameter": {},
                "Throw": []
            },
            "putValue": {
                "Parameter": {
                    "name": "String",
                    "value": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getValue": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "removeValue": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getValueNames": {
                "Parameter": {},
                "Throw": []
            },
            "getPeerCertificates": {
                "Parameter": {},
                "Throw": "javax.net.ssl.SSLPeerUnverifiedException"
            },
            "getLocalCertificates": {
                "Parameter": {},
                "Throw": []
            },
            "getPeerCertificateChain": {
                "Parameter": {},
                "Throw": "javax.net.ssl.SSLPeerUnverifiedException"
            },
            "getPeerPrincipal": {
                "Parameter": {},
                "Throw": "javax.net.ssl.SSLPeerUnverifiedException"
            },
            "getLocalPrincipal": {
                "Parameter": {},
                "Throw": []
            },
            "getCipherSuite": {
                "Parameter": {},
                "Throw": []
            },
            "getProtocol": {
                "Parameter": {},
                "Throw": []
            },
            "getPeerHost": {
                "Parameter": {},
                "Throw": []
            },
            "getPeerPort": {
                "Parameter": {},
                "Throw": []
            },
            "getPacketBufferSize": {
                "Parameter": {},
                "Throw": []
            },
            "getApplicationBufferSize": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "564": {
        "Package": "javax.net.ssl",
        "Interface": "SSLSessionBindingListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "valueBound": {
                "Parameter": {
                    "event": "SSLSessionBindingEvent"
                },
                "Throw": []
            },
            "valueUnbound": {
                "Parameter": {
                    "event": "SSLSessionBindingEvent"
                },
                "Throw": []
            }
        }
    },
    "565": {
        "Package": "javax.net.ssl",
        "Interface": "SSLSessionContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getSession": {
                "Parameter": {
                    "sessionId": "byte"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getIds": {
                "Parameter": {},
                "Throw": []
            },
            "setSessionTimeout": {
                "Parameter": {
                    "seconds": "int"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getSessionTimeout": {
                "Parameter": {},
                "Throw": []
            },
            "setSessionCacheSize": {
                "Parameter": {
                    "size": "int"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getSessionCacheSize": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "566": {
        "Package": "javax.net.ssl",
        "Interface": "TrustManager",
        "Superinterface": null,
        "Implementing Class": [
            "javax.net.ssl.X509TrustManager"
        ],
        "Subinterface": [
            "javax.net.ssl.X509ExtendedTrustManager"
        ],
        "Method": {}
    },
    "567": {
        "Package": "javax.net.ssl",
        "Interface": "X509KeyManager",
        "Superinterface": [
            "javax.net.ssl.KeyManager"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.net.ssl.X509ExtendedKeyManager"
        ],
        "Method": {
            "getClientAliases": {
                "Parameter": {
                    "keyType": "String",
                    "issuers": "Principal"
                },
                "Throw": []
            },
            "chooseClientAlias": {
                "Parameter": {
                    "keyType": "String",
                    "issuers": "Principal",
                    "socket": "Socket"
                },
                "Throw": []
            },
            "getServerAliases": {
                "Parameter": {
                    "keyType": "String",
                    "issuers": "Principal"
                },
                "Throw": []
            },
            "chooseServerAlias": {
                "Parameter": {
                    "keyType": "String",
                    "issuers": "Principal",
                    "socket": "Socket"
                },
                "Throw": []
            },
            "getCertificateChain": {
                "Parameter": {
                    "alias": "String"
                },
                "Throw": []
            },
            "getPrivateKey": {
                "Parameter": {
                    "alias": "String"
                },
                "Throw": []
            }
        }
    },
    "568": {
        "Package": "javax.net.ssl",
        "Interface": "X509TrustManager",
        "Superinterface": [
            "javax.net.ssl.TrustManager"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.net.ssl.X509ExtendedTrustManager"
        ],
        "Method": {
            "checkClientTrusted": {
                "Parameter": {
                    "chain": "X509Certificate",
                    "authType": "String"
                },
                "Throw": "java.security.cert.CertificateException"
            },
            "checkServerTrusted": {
                "Parameter": {
                    "chain": "X509Certificate",
                    "authType": "String"
                },
                "Throw": "java.security.cert.CertificateException"
            },
            "getAcceptedIssuers": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "569": {
        "Package": "javax.print",
        "Interface": "AttributeException",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getUnsupportedAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "getUnsupportedValues": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "570": {
        "Package": "javax.print",
        "Interface": "CancelablePrintJob",
        "Superinterface": [
            "javax.print.DocPrintJob"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "cancel": {
                "Parameter": {},
                "Throw": "javax.print.PrintException"
            }
        }
    },
    "571": {
        "Package": "javax.print",
        "Interface": "Doc",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.SimpleDoc"
        ],
        "Method": {
            "getDocFlavor": {
                "Parameter": {},
                "Throw": []
            },
            "getPrintData": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "getAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "getReaderForText": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "getStreamForBytes": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            }
        }
    },
    "572": {
        "Package": "javax.print",
        "Interface": "DocPrintJob",
        "Superinterface": null,
        "Implementing Class": [
            "javax.print.CancelablePrintJob",
            "javax.print.MultiDocPrintJob"
        ],
        "Subinterface": null,
        "Method": {
            "getPrintService": {
                "Parameter": {},
                "Throw": []
            },
            "getAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "addPrintJobListener": {
                "Parameter": {
                    "listener": "PrintJobListener"
                },
                "Throw": []
            },
            "removePrintJobListener": {
                "Parameter": {
                    "listener": "PrintJobListener"
                },
                "Throw": []
            },
            "addPrintJobAttributeListener": {
                "Parameter": {
                    "listener": "PrintJobAttributeListener",
                    "attributes": "PrintJobAttributeSet"
                },
                "Throw": []
            },
            "removePrintJobAttributeListener": {
                "Parameter": {
                    "listener": "PrintJobAttributeListener"
                },
                "Throw": []
            },
            "print": {
                "Parameter": {
                    "doc": "Doc",
                    "attributes": "PrintRequestAttributeSet"
                },
                "Throw": "javax.print.PrintException"
            }
        }
    },
    "573": {
        "Package": "javax.print",
        "Interface": "FlavorException",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getUnsupportedFlavors": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "574": {
        "Package": "javax.print",
        "Interface": "MultiDoc",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getDoc": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "next": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            }
        }
    },
    "575": {
        "Package": "javax.print",
        "Interface": "MultiDocPrintJob",
        "Superinterface": [
            "javax.print.DocPrintJob"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "print": {
                "Parameter": {
                    "multiDoc": "MultiDoc",
                    "attributes": "PrintRequestAttributeSet"
                },
                "Throw": "javax.print.PrintException"
            }
        }
    },
    "576": {
        "Package": "javax.print",
        "Interface": "MultiDocPrintService",
        "Superinterface": [
            "javax.print.PrintService"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createMultiDocPrintJob": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "577": {
        "Package": "javax.print",
        "Interface": "PrintService",
        "Superinterface": null,
        "Implementing Class": [
            "javax.print.MultiDocPrintService"
        ],
        "Subinterface": [
            "javax.print.StreamPrintService"
        ],
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "createPrintJob": {
                "Parameter": {},
                "Throw": []
            },
            "addPrintServiceAttributeListener": {
                "Parameter": {
                    "listener": "PrintServiceAttributeListener"
                },
                "Throw": []
            },
            "removePrintServiceAttributeListener": {
                "Parameter": {
                    "listener": "PrintServiceAttributeListener"
                },
                "Throw": []
            },
            "getAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "getAttribute": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getSupportedDocFlavors": {
                "Parameter": {},
                "Throw": []
            },
            "isDocFlavorSupported": {
                "Parameter": {
                    "flavor": "DocFlavor"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getSupportedAttributeCategories": {
                "Parameter": {},
                "Throw": []
            },
            "isAttributeCategorySupported": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getDefaultAttributeValue": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getSupportedAttributeValues": {
                "Parameter": {
                    "": "Class",
                    "flavor": "DocFlavor",
                    "attributes": "AttributeSet"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "isAttributeValueSupported": {
                "Parameter": {
                    "attrval": "Attribute",
                    "flavor": "DocFlavor",
                    "attributes": "AttributeSet"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getUnsupportedAttributes": {
                "Parameter": {
                    "flavor": "DocFlavor",
                    "attributes": "AttributeSet"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getServiceUIFactory": {
                "Parameter": {},
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "578": {
        "Package": "javax.print",
        "Interface": "URIException",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getUnsupportedURI": {
                "Parameter": {},
                "Throw": []
            },
            "getReason": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "579": {
        "Package": "javax.print.attribute",
        "Interface": "Attribute",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "javax.print.attribute.DocAttribute",
            "javax.print.attribute.PrintJobAttribute",
            "javax.print.attribute.PrintRequestAttribute",
            "javax.print.attribute.PrintServiceAttribute",
            "javax.print.attribute.SupportedValuesAttribute"
        ],
        "Subinterface": [
            "javax.print.attribute.standard.Chromaticity",
            "javax.print.attribute.standard.ColorSupported",
            "javax.print.attribute.standard.Compression",
            "javax.print.attribute.standard.Copies",
            "javax.print.attribute.standard.CopiesSupported",
            "javax.print.attribute.standard.DateTimeAtCompleted",
            "javax.print.attribute.standard.DateTimeAtCreation",
            "javax.print.attribute.standard.DateTimeAtProcessing",
            "javax.print.attribute.standard.Destination",
            "javax.print.attribute.standard.DialogTypeSelection",
            "javax.print.attribute.standard.DocumentName",
            "javax.print.attribute.standard.Fidelity",
            "javax.print.attribute.standard.Finishings",
            "javax.print.attribute.standard.JobHoldUntil",
            "javax.print.attribute.standard.JobImpressions",
            "javax.print.attribute.standard.JobImpressionsCompleted",
            "javax.print.attribute.standard.JobImpressionsSupported",
            "javax.print.attribute.standard.JobKOctets",
            "javax.print.attribute.standard.JobKOctetsProcessed",
            "javax.print.attribute.standard.JobKOctetsSupported",
            "javax.print.attribute.standard.JobMediaSheets",
            "javax.print.attribute.standard.JobMediaSheetsCompleted",
            "javax.print.attribute.standard.JobMediaSheetsSupported",
            "javax.print.attribute.standard.JobMessageFromOperator",
            "javax.print.attribute.standard.JobName",
            "javax.print.attribute.standard.JobOriginatingUserName",
            "javax.print.attribute.standard.JobPriority",
            "javax.print.attribute.standard.JobPrioritySupported",
            "javax.print.attribute.standard.JobSheets",
            "javax.print.attribute.standard.JobState",
            "javax.print.attribute.standard.JobStateReason",
            "javax.print.attribute.standard.JobStateReasons",
            "javax.print.attribute.standard.Media",
            "javax.print.attribute.standard.MediaName",
            "javax.print.attribute.standard.MediaPrintableArea",
            "javax.print.attribute.standard.MediaSize",
            "javax.print.attribute.standard.MediaSizeName",
            "javax.print.attribute.standard.MediaTray",
            "javax.print.attribute.standard.MultipleDocumentHandling",
            "javax.print.attribute.standard.NumberOfDocuments",
            "javax.print.attribute.standard.NumberOfInterveningJobs",
            "javax.print.attribute.standard.NumberUp",
            "javax.print.attribute.standard.NumberUpSupported",
            "javax.print.attribute.standard.OrientationRequested",
            "javax.print.attribute.standard.OutputDeviceAssigned",
            "javax.print.attribute.standard.PageRanges",
            "javax.print.attribute.standard.PagesPerMinute",
            "javax.print.attribute.standard.PagesPerMinuteColor",
            "javax.print.attribute.standard.PDLOverrideSupported",
            "javax.print.attribute.standard.PresentationDirection",
            "javax.print.attribute.standard.PrinterInfo",
            "javax.print.attribute.standard.PrinterIsAcceptingJobs",
            "javax.print.attribute.standard.PrinterLocation",
            "javax.print.attribute.standard.PrinterMakeAndModel",
            "javax.print.attribute.standard.PrinterMessageFromOperator",
            "javax.print.attribute.standard.PrinterMoreInfo",
            "javax.print.attribute.standard.PrinterMoreInfoManufacturer",
            "javax.print.attribute.standard.PrinterName",
            "javax.print.attribute.standard.PrinterResolution",
            "javax.print.attribute.standard.PrinterState",
            "javax.print.attribute.standard.PrinterStateReason",
            "javax.print.attribute.standard.PrinterStateReasons",
            "javax.print.attribute.standard.PrinterURI",
            "javax.print.attribute.standard.PrintQuality",
            "javax.print.attribute.standard.QueuedJobCount",
            "javax.print.attribute.standard.ReferenceUriSchemesSupported",
            "javax.print.attribute.standard.RequestingUserName",
            "javax.print.attribute.standard.Severity",
            "javax.print.attribute.standard.SheetCollate",
            "javax.print.attribute.standard.Sides"
        ],
        "Method": {
            "getCategory": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "580": {
        "Package": "javax.print.attribute",
        "Interface": "AttributeSet",
        "Superinterface": null,
        "Implementing Class": [
            "javax.print.attribute.DocAttributeSet",
            "javax.print.attribute.PrintJobAttributeSet",
            "javax.print.attribute.PrintRequestAttributeSet",
            "javax.print.attribute.PrintServiceAttributeSet"
        ],
        "Subinterface": [
            "javax.print.attribute.HashAttributeSet",
            "javax.print.attribute.HashDocAttributeSet",
            "javax.print.attribute.HashPrintJobAttributeSet",
            "javax.print.attribute.HashPrintRequestAttributeSet",
            "javax.print.attribute.HashPrintServiceAttributeSet"
        ],
        "Method": {
            "get": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.ClassCastException"
            },
            "add": {
                "Parameter": {
                    "attribute": "Attribute"
                },
                "Throw": "javax.print.attribute.UnmodifiableSetException"
            },
            "remove": {
                "Parameter": {
                    "attribute": "Attribute"
                },
                "Throw": "javax.print.attribute.UnmodifiableSetException"
            },
            "containsKey": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": []
            },
            "containsValue": {
                "Parameter": {
                    "attribute": "Attribute"
                },
                "Throw": []
            },
            "addAll": {
                "Parameter": {
                    "attributes": "AttributeSet"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "size": {
                "Parameter": {},
                "Throw": []
            },
            "toArray": {
                "Parameter": {},
                "Throw": []
            },
            "clear": {
                "Parameter": {},
                "Throw": "javax.print.attribute.UnmodifiableSetException"
            },
            "isEmpty": {
                "Parameter": {},
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "object": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "581": {
        "Package": "javax.print.attribute",
        "Interface": "DocAttribute",
        "Superinterface": [
            "javax.print.attribute.Attribute",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.standard.Chromaticity",
            "javax.print.attribute.standard.Compression",
            "javax.print.attribute.standard.DocumentName",
            "javax.print.attribute.standard.Finishings",
            "javax.print.attribute.standard.Media",
            "javax.print.attribute.standard.MediaName",
            "javax.print.attribute.standard.MediaPrintableArea",
            "javax.print.attribute.standard.MediaSizeName",
            "javax.print.attribute.standard.MediaTray",
            "javax.print.attribute.standard.NumberUp",
            "javax.print.attribute.standard.OrientationRequested",
            "javax.print.attribute.standard.PageRanges",
            "javax.print.attribute.standard.PrinterResolution",
            "javax.print.attribute.standard.PrintQuality",
            "javax.print.attribute.standard.SheetCollate",
            "javax.print.attribute.standard.Sides"
        ],
        "Method": {}
    },
    "582": {
        "Package": "javax.print.attribute",
        "Interface": "DocAttributeSet",
        "Superinterface": [
            "javax.print.attribute.AttributeSet"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.HashDocAttributeSet"
        ],
        "Method": {
            "add": {
                "Parameter": {
                    "attribute": "Attribute"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "addAll": {
                "Parameter": {
                    "attributes": "AttributeSet"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "583": {
        "Package": "javax.print.attribute",
        "Interface": "PrintJobAttribute",
        "Superinterface": [
            "javax.print.attribute.Attribute",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.standard.Chromaticity",
            "javax.print.attribute.standard.Copies",
            "javax.print.attribute.standard.DateTimeAtCompleted",
            "javax.print.attribute.standard.DateTimeAtCreation",
            "javax.print.attribute.standard.DateTimeAtProcessing",
            "javax.print.attribute.standard.Destination",
            "javax.print.attribute.standard.Fidelity",
            "javax.print.attribute.standard.Finishings",
            "javax.print.attribute.standard.JobHoldUntil",
            "javax.print.attribute.standard.JobImpressions",
            "javax.print.attribute.standard.JobImpressionsCompleted",
            "javax.print.attribute.standard.JobKOctets",
            "javax.print.attribute.standard.JobKOctetsProcessed",
            "javax.print.attribute.standard.JobMediaSheets",
            "javax.print.attribute.standard.JobMediaSheetsCompleted",
            "javax.print.attribute.standard.JobMessageFromOperator",
            "javax.print.attribute.standard.JobName",
            "javax.print.attribute.standard.JobOriginatingUserName",
            "javax.print.attribute.standard.JobPriority",
            "javax.print.attribute.standard.JobSheets",
            "javax.print.attribute.standard.JobState",
            "javax.print.attribute.standard.JobStateReasons",
            "javax.print.attribute.standard.Media",
            "javax.print.attribute.standard.MediaName",
            "javax.print.attribute.standard.MediaPrintableArea",
            "javax.print.attribute.standard.MediaSizeName",
            "javax.print.attribute.standard.MediaTray",
            "javax.print.attribute.standard.MultipleDocumentHandling",
            "javax.print.attribute.standard.NumberOfDocuments",
            "javax.print.attribute.standard.NumberOfInterveningJobs",
            "javax.print.attribute.standard.NumberUp",
            "javax.print.attribute.standard.OrientationRequested",
            "javax.print.attribute.standard.OutputDeviceAssigned",
            "javax.print.attribute.standard.PageRanges",
            "javax.print.attribute.standard.PresentationDirection",
            "javax.print.attribute.standard.PrinterResolution",
            "javax.print.attribute.standard.PrintQuality",
            "javax.print.attribute.standard.SheetCollate",
            "javax.print.attribute.standard.Sides"
        ],
        "Method": {}
    },
    "584": {
        "Package": "javax.print.attribute",
        "Interface": "PrintJobAttributeSet",
        "Superinterface": [
            "javax.print.attribute.AttributeSet"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.HashPrintJobAttributeSet"
        ],
        "Method": {
            "add": {
                "Parameter": {
                    "attribute": "Attribute"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "addAll": {
                "Parameter": {
                    "attributes": "AttributeSet"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "585": {
        "Package": "javax.print.attribute",
        "Interface": "PrintRequestAttribute",
        "Superinterface": [
            "javax.print.attribute.Attribute",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.standard.Chromaticity",
            "javax.print.attribute.standard.Copies",
            "javax.print.attribute.standard.Destination",
            "javax.print.attribute.standard.DialogTypeSelection",
            "javax.print.attribute.standard.Fidelity",
            "javax.print.attribute.standard.Finishings",
            "javax.print.attribute.standard.JobHoldUntil",
            "javax.print.attribute.standard.JobImpressions",
            "javax.print.attribute.standard.JobKOctets",
            "javax.print.attribute.standard.JobMediaSheets",
            "javax.print.attribute.standard.JobName",
            "javax.print.attribute.standard.JobPriority",
            "javax.print.attribute.standard.JobSheets",
            "javax.print.attribute.standard.Media",
            "javax.print.attribute.standard.MediaName",
            "javax.print.attribute.standard.MediaPrintableArea",
            "javax.print.attribute.standard.MediaSizeName",
            "javax.print.attribute.standard.MediaTray",
            "javax.print.attribute.standard.MultipleDocumentHandling",
            "javax.print.attribute.standard.NumberUp",
            "javax.print.attribute.standard.OrientationRequested",
            "javax.print.attribute.standard.PageRanges",
            "javax.print.attribute.standard.PresentationDirection",
            "javax.print.attribute.standard.PrinterResolution",
            "javax.print.attribute.standard.PrintQuality",
            "javax.print.attribute.standard.RequestingUserName",
            "javax.print.attribute.standard.SheetCollate",
            "javax.print.attribute.standard.Sides"
        ],
        "Method": {}
    },
    "586": {
        "Package": "javax.print.attribute",
        "Interface": "PrintRequestAttributeSet",
        "Superinterface": [
            "javax.print.attribute.AttributeSet"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.HashPrintRequestAttributeSet"
        ],
        "Method": {
            "add": {
                "Parameter": {
                    "attribute": "Attribute"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "addAll": {
                "Parameter": {
                    "attributes": "AttributeSet"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "587": {
        "Package": "javax.print.attribute",
        "Interface": "PrintServiceAttribute",
        "Superinterface": [
            "javax.print.attribute.Attribute",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.standard.ColorSupported",
            "javax.print.attribute.standard.PagesPerMinute",
            "javax.print.attribute.standard.PagesPerMinuteColor",
            "javax.print.attribute.standard.PDLOverrideSupported",
            "javax.print.attribute.standard.PrinterInfo",
            "javax.print.attribute.standard.PrinterIsAcceptingJobs",
            "javax.print.attribute.standard.PrinterLocation",
            "javax.print.attribute.standard.PrinterMakeAndModel",
            "javax.print.attribute.standard.PrinterMessageFromOperator",
            "javax.print.attribute.standard.PrinterMoreInfo",
            "javax.print.attribute.standard.PrinterMoreInfoManufacturer",
            "javax.print.attribute.standard.PrinterName",
            "javax.print.attribute.standard.PrinterState",
            "javax.print.attribute.standard.PrinterStateReasons",
            "javax.print.attribute.standard.PrinterURI",
            "javax.print.attribute.standard.QueuedJobCount"
        ],
        "Method": {}
    },
    "588": {
        "Package": "javax.print.attribute",
        "Interface": "PrintServiceAttributeSet",
        "Superinterface": [
            "javax.print.attribute.AttributeSet"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.HashPrintServiceAttributeSet"
        ],
        "Method": {
            "add": {
                "Parameter": {
                    "attribute": "Attribute"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "addAll": {
                "Parameter": {
                    "attributes": "AttributeSet"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "589": {
        "Package": "javax.print.attribute",
        "Interface": "SupportedValuesAttribute",
        "Superinterface": [
            "javax.print.attribute.Attribute",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.standard.CopiesSupported",
            "javax.print.attribute.standard.JobImpressionsSupported",
            "javax.print.attribute.standard.JobKOctetsSupported",
            "javax.print.attribute.standard.JobMediaSheetsSupported",
            "javax.print.attribute.standard.JobPrioritySupported",
            "javax.print.attribute.standard.NumberUpSupported"
        ],
        "Method": {}
    },
    "590": {
        "Package": "javax.print.event",
        "Interface": "PrintJobAttributeListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "attributeUpdate": {
                "Parameter": {
                    "pjae": "PrintJobAttributeEvent"
                },
                "Throw": []
            }
        }
    },
    "591": {
        "Package": "javax.print.event",
        "Interface": "PrintJobListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.event.PrintJobAdapter"
        ],
        "Method": {
            "printDataTransferCompleted": {
                "Parameter": {
                    "pje": "PrintJobEvent"
                },
                "Throw": []
            },
            "printJobCompleted": {
                "Parameter": {
                    "pje": "PrintJobEvent"
                },
                "Throw": []
            },
            "printJobFailed": {
                "Parameter": {
                    "pje": "PrintJobEvent"
                },
                "Throw": []
            },
            "printJobCanceled": {
                "Parameter": {
                    "pje": "PrintJobEvent"
                },
                "Throw": []
            },
            "printJobNoMoreEvents": {
                "Parameter": {
                    "pje": "PrintJobEvent"
                },
                "Throw": []
            },
            "printJobRequiresAttention": {
                "Parameter": {
                    "pje": "PrintJobEvent"
                },
                "Throw": []
            }
        }
    },
    "592": {
        "Package": "javax.print.event",
        "Interface": "PrintServiceAttributeListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "attributeUpdate": {
                "Parameter": {
                    "psae": "PrintServiceAttributeEvent"
                },
                "Throw": []
            }
        }
    },
    "593": {
        "Package": "javax.rmi.CORBA",
        "Interface": "PortableRemoteObjectDelegate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "exportObject": {
                "Parameter": {
                    "obj": "Remote"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "toStub": {
                "Parameter": {
                    "obj": "Remote"
                },
                "Throw": "java.rmi.NoSuchObjectException"
            },
            "unexportObject": {
                "Parameter": {
                    "obj": "Remote"
                },
                "Throw": "java.rmi.NoSuchObjectException"
            },
            "narrow": {
                "Parameter": {
                    "narrowFrom": "Object",
                    "narrowTo": "Class"
                },
                "Throw": "java.lang.ClassCastException"
            },
            "connect": {
                "Parameter": {
                    "target": "Remote",
                    "source": "Remote"
                },
                "Throw": "java.rmi.RemoteException"
            }
        }
    },
    "594": {
        "Package": "javax.rmi.CORBA",
        "Interface": "StubDelegate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "hashCode": {
                "Parameter": {
                    "self": "Stub"
                },
                "Throw": []
            },
            "equals": {
                "Parameter": {
                    "self": "Stub",
                    "obj": "Object"
                },
                "Throw": []
            },
            "toString": {
                "Parameter": {
                    "self": "Stub"
                },
                "Throw": []
            },
            "connect": {
                "Parameter": {
                    "self": "Stub",
                    "orb": "ORB"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "readObject": {
                "Parameter": {
                    "self": "Stub",
                    "s": "ObjectInputStream"
                },
                "Throw": "java.lang.ClassNotFoundException"
            },
            "writeObject": {
                "Parameter": {
                    "self": "Stub",
                    "s": "ObjectOutputStream"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "595": {
        "Package": "javax.rmi.CORBA",
        "Interface": "Tie",
        "Superinterface": [
            "org.omg.CORBA.portable.InvokeHandler"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "thisObject": {
                "Parameter": {},
                "Throw": []
            },
            "deactivate": {
                "Parameter": {},
                "Throw": "java.rmi.NoSuchObjectException"
            },
            "orb": {
                "Parameter": {
                    "orb": "ORB"
                },
                "Throw": []
            },
            "setTarget": {
                "Parameter": {
                    "target": "Remote"
                },
                "Throw": []
            },
            "getTarget": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "596": {
        "Package": "javax.rmi.CORBA",
        "Interface": "UtilDelegate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "mapSystemException": {
                "Parameter": {
                    "ex": "SystemException"
                },
                "Throw": []
            },
            "writeAny": {
                "Parameter": {
                    "out": "OutputStream",
                    "obj": "Object"
                },
                "Throw": []
            },
            "readAny": {
                "Parameter": {
                    "in": "InputStream"
                },
                "Throw": []
            },
            "writeRemoteObject": {
                "Parameter": {
                    "out": "OutputStream",
                    "obj": "Object"
                },
                "Throw": []
            },
            "writeAbstractObject": {
                "Parameter": {
                    "out": "OutputStream",
                    "obj": "Object"
                },
                "Throw": []
            },
            "registerTarget": {
                "Parameter": {
                    "tie": "Tie",
                    "target": "Remote"
                },
                "Throw": []
            },
            "unexportObject": {
                "Parameter": {
                    "target": "Remote"
                },
                "Throw": "java.rmi.NoSuchObjectException"
            },
            "getTie": {
                "Parameter": {
                    "target": "Remote"
                },
                "Throw": []
            },
            "createValueHandler": {
                "Parameter": {},
                "Throw": []
            },
            "getCodebase": {
                "Parameter": {
                    "clz": "Class"
                },
                "Throw": []
            },
            "loadClass": {
                "Parameter": {
                    "className": "String",
                    "remoteCodebase": "String",
                    "loader": "ClassLoader"
                },
                "Throw": "java.lang.ClassNotFoundException"
            },
            "isLocal": {
                "Parameter": {
                    "stub": "Stub"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "wrapException": {
                "Parameter": {
                    "obj": "Throwable"
                },
                "Throw": []
            },
            "copyObject": {
                "Parameter": {
                    "obj": "Object",
                    "orb": "ORB"
                },
                "Throw": "java.rmi.RemoteException"
            },
            "copyObjects": {
                "Parameter": {
                    "obj": "Object",
                    "orb": "ORB"
                },
                "Throw": "java.rmi.RemoteException"
            }
        }
    },
    "597": {
        "Package": "javax.rmi.CORBA",
        "Interface": "ValueHandler",
        "Superinterface": null,
        "Implementing Class": [
            "javax.rmi.CORBA.ValueHandlerMultiFormat"
        ],
        "Subinterface": null,
        "Method": {
            "writeValue": {
                "Parameter": {
                    "out": "OutputStream",
                    "value": "Serializable"
                },
                "Throw": []
            },
            "readValue": {
                "Parameter": {
                    "in": "InputStream",
                    "offset": "int",
                    "clz": "Class",
                    "repositoryID": "String",
                    "sender": "RunTime"
                },
                "Throw": []
            },
            "getRMIRepositoryID": {
                "Parameter": {
                    "clz": "Class"
                },
                "Throw": []
            },
            "isCustomMarshaled": {
                "Parameter": {
                    "clz": "Class"
                },
                "Throw": []
            },
            "getRunTimeCodeBase": {
                "Parameter": {},
                "Throw": []
            },
            "writeReplace": {
                "Parameter": {
                    "value": "Serializable"
                },
                "Throw": []
            }
        }
    },
    "598": {
        "Package": "javax.rmi.CORBA",
        "Interface": "ValueHandlerMultiFormat",
        "Superinterface": [
            "javax.rmi.CORBA.ValueHandler"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getMaximumStreamFormatVersion": {
                "Parameter": {},
                "Throw": []
            },
            "writeValue": {
                "Parameter": {
                    "out": "OutputStream",
                    "value": "Serializable",
                    "streamFormatVersion": "byte"
                },
                "Throw": []
            }
        }
    },
    "599": {
        "Package": "javax.script",
        "Interface": "Bindings",
        "Superinterface": [
            "java.util.Map"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.script.SimpleBindings"
        ],
        "Method": {
            "put": {
                "Parameter": {
                    "name": "String",
                    "value": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "putAll": {
                "Parameter": {
                    "": "Map"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "containsKey": {
                "Parameter": {
                    "key": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "get": {
                "Parameter": {
                    "key": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "remove": {
                "Parameter": {
                    "key": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "600": {
        "Package": "javax.script",
        "Interface": "Compilable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "compile": {
                "Parameter": {
                    "script": "Reader"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "601": {
        "Package": "javax.script",
        "Interface": "Invocable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "invokeMethod": {
                "Parameter": {
                    "thiz": "Object",
                    "name": "String",
                    "args": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "invokeFunction": {
                "Parameter": {
                    "name": "String",
                    "args": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getInterface": {
                "Parameter": {
                    "thiz": "Object",
                    "": "Class"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "602": {
        "Package": "javax.script",
        "Interface": "ScriptContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.script.SimpleScriptContext"
        ],
        "Method": {
            "setBindings": {
                "Parameter": {
                    "bindings": "Bindings",
                    "scope": "int"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getBindings": {
                "Parameter": {
                    "scope": "int"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "setAttribute": {
                "Parameter": {
                    "name": "String",
                    "value": "Object",
                    "scope": "int"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getAttribute": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "removeAttribute": {
                "Parameter": {
                    "name": "String",
                    "scope": "int"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getAttributesScope": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getWriter": {
                "Parameter": {},
                "Throw": []
            },
            "getErrorWriter": {
                "Parameter": {},
                "Throw": []
            },
            "setWriter": {
                "Parameter": {
                    "writer": "Writer"
                },
                "Throw": []
            },
            "setErrorWriter": {
                "Parameter": {
                    "writer": "Writer"
                },
                "Throw": []
            },
            "getReader": {
                "Parameter": {},
                "Throw": []
            },
            "setReader": {
                "Parameter": {
                    "reader": "Reader"
                },
                "Throw": []
            },
            "getScopes": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "603": {
        "Package": "javax.script",
        "Interface": "ScriptEngine",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.script.AbstractScriptEngine"
        ],
        "Method": {
            "eval": {
                "Parameter": {
                    "reader": "Reader",
                    "n": "Bindings"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "put": {
                "Parameter": {
                    "key": "String",
                    "value": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "get": {
                "Parameter": {
                    "key": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getBindings": {
                "Parameter": {
                    "scope": "int"
                },
                "Throw": []
            },
            "setBindings": {
                "Parameter": {
                    "bindings": "Bindings",
                    "scope": "int"
                },
                "Throw": []
            },
            "createBindings": {
                "Parameter": {},
                "Throw": []
            },
            "getContext": {
                "Parameter": {},
                "Throw": []
            },
            "setContext": {
                "Parameter": {
                    "context": "ScriptContext"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getFactory": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "604": {
        "Package": "javax.script",
        "Interface": "ScriptEngineFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getEngineName": {
                "Parameter": {},
                "Throw": []
            },
            "getEngineVersion": {
                "Parameter": {},
                "Throw": []
            },
            "getExtensions": {
                "Parameter": {},
                "Throw": []
            },
            "getMimeTypes": {
                "Parameter": {},
                "Throw": []
            },
            "getNames": {
                "Parameter": {},
                "Throw": []
            },
            "getLanguageName": {
                "Parameter": {},
                "Throw": []
            },
            "getLanguageVersion": {
                "Parameter": {},
                "Throw": []
            },
            "getParameter": {
                "Parameter": {
                    "key": "String"
                },
                "Throw": []
            },
            "getMethodCallSyntax": {
                "Parameter": {
                    "obj": "String",
                    "m": "String",
                    "args": "String"
                },
                "Throw": []
            },
            "getOutputStatement": {
                "Parameter": {
                    "toDisplay": "String"
                },
                "Throw": []
            },
            "getProgram": {
                "Parameter": {
                    "statements": "String"
                },
                "Throw": []
            },
            "getScriptEngine": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "605": {
        "Package": "javax.security.auth",
        "Interface": "Destroyable",
        "Superinterface": null,
        "Implementing Class": [
            "javax.crypto.interfaces.DHPrivateKey",
            "java.security.interfaces.DSAPrivateKey",
            "java.security.interfaces.ECPrivateKey",
            "javax.crypto.interfaces.PBEKey",
            "java.security.PrivateKey",
            "java.security.interfaces.RSAMultiPrimePrivateCrtKey",
            "java.security.interfaces.RSAPrivateCrtKey",
            "java.security.interfaces.RSAPrivateKey",
            "javax.crypto.SecretKey"
        ],
        "Subinterface": [
            "javax.security.auth.kerberos.KerberosKey",
            "javax.security.auth.kerberos.KerberosTicket",
            "java.security.KeyStore.PasswordProtection",
            "javax.crypto.spec.SecretKeySpec",
            "javax.security.auth.x500.X500PrivateCredential"
        ],
        "Method": {
            "destroy": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "isDestroyed": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "606": {
        "Package": "javax.security.auth",
        "Interface": "Refreshable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.security.auth.kerberos.KerberosTicket"
        ],
        "Method": {
            "isCurrent": {
                "Parameter": {},
                "Throw": []
            },
            "refresh": {
                "Parameter": {},
                "Throw": "javax.security.auth.RefreshFailedException"
            }
        }
    },
    "607": {
        "Package": "javax.security.auth.callback",
        "Interface": "Callback",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.security.sasl.AuthorizeCallback",
            "javax.security.auth.callback.ChoiceCallback",
            "javax.security.auth.callback.ConfirmationCallback",
            "javax.security.auth.callback.LanguageCallback",
            "javax.security.auth.callback.NameCallback",
            "javax.security.auth.callback.PasswordCallback",
            "javax.security.sasl.RealmCallback",
            "javax.security.sasl.RealmChoiceCallback",
            "javax.security.auth.callback.TextInputCallback",
            "javax.security.auth.callback.TextOutputCallback"
        ],
        "Method": {}
    },
    "608": {
        "Package": "javax.security.auth.callback",
        "Interface": "CallbackHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "handle": {
                "Parameter": {
                    "callbacks": "Callback"
                },
                "Throw": "javax.security.auth.callback.UnsupportedCallbackException"
            }
        }
    },
    "609": {
        "Package": "javax.security.auth.login",
        "Interface": "Configuration.Parameters",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.URIParameter"
        ],
        "Method": {}
    },
    "610": {
        "Package": "javax.security.auth.spi",
        "Interface": "LoginModule",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "initialize": {
                "Parameter": {
                    "subject": "Subject",
                    "callbackHandler": "CallbackHandler",
                    "": "Map"
                },
                "Throw": []
            },
            "login": {
                "Parameter": {},
                "Throw": "javax.security.auth.login.LoginException"
            },
            "commit": {
                "Parameter": {},
                "Throw": "javax.security.auth.login.LoginException"
            },
            "abort": {
                "Parameter": {},
                "Throw": "javax.security.auth.login.LoginException"
            },
            "logout": {
                "Parameter": {},
                "Throw": "javax.security.auth.login.LoginException"
            }
        }
    },
    "611": {
        "Package": "javax.security.sasl",
        "Interface": "SaslClient",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getMechanismName": {
                "Parameter": {},
                "Throw": []
            },
            "hasInitialResponse": {
                "Parameter": {},
                "Throw": []
            },
            "evaluateChallenge": {
                "Parameter": {
                    "challenge": "byte"
                },
                "Throw": "javax.security.sasl.SaslException"
            },
            "isComplete": {
                "Parameter": {},
                "Throw": []
            },
            "unwrap": {
                "Parameter": {
                    "incoming": "byte",
                    "offset": "int",
                    "len": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "wrap": {
                "Parameter": {
                    "outgoing": "byte",
                    "offset": "int",
                    "len": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getNegotiatedProperty": {
                "Parameter": {
                    "propName": "String"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "dispose": {
                "Parameter": {},
                "Throw": "javax.security.sasl.SaslException"
            }
        }
    },
    "612": {
        "Package": "javax.security.sasl",
        "Interface": "SaslClientFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createSaslClient": {
                "Parameter": {
                    "mechanisms": "String",
                    "authorizationId": "String",
                    "protocol": "String",
                    "serverName": "String",
                    "": "Map",
                    "cbh": "CallbackHandler"
                },
                "Throw": "javax.security.sasl.SaslException"
            },
            "getMechanismNames": {
                "Parameter": {
                    "": "Map"
                },
                "Throw": []
            }
        }
    },
    "613": {
        "Package": "javax.security.sasl",
        "Interface": "SaslServer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getMechanismName": {
                "Parameter": {},
                "Throw": []
            },
            "evaluateResponse": {
                "Parameter": {
                    "response": "byte"
                },
                "Throw": "javax.security.sasl.SaslException"
            },
            "isComplete": {
                "Parameter": {},
                "Throw": []
            },
            "getAuthorizationID": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "unwrap": {
                "Parameter": {
                    "incoming": "byte",
                    "offset": "int",
                    "len": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "wrap": {
                "Parameter": {
                    "outgoing": "byte",
                    "offset": "int",
                    "len": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getNegotiatedProperty": {
                "Parameter": {
                    "propName": "String"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "dispose": {
                "Parameter": {},
                "Throw": "javax.security.sasl.SaslException"
            }
        }
    },
    "614": {
        "Package": "javax.security.sasl",
        "Interface": "SaslServerFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createSaslServer": {
                "Parameter": {
                    "mechanism": "String",
                    "protocol": "String",
                    "serverName": "String",
                    "": "Map",
                    "cbh": "CallbackHandler"
                },
                "Throw": "javax.security.sasl.SaslException"
            },
            "getMechanismNames": {
                "Parameter": {
                    "": "Map"
                },
                "Throw": []
            }
        }
    },
    "615": {
        "Package": "javax.sound.midi",
        "Interface": "ControllerEventListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "controlChange": {
                "Parameter": {
                    "event": "ShortMessage"
                },
                "Throw": []
            }
        }
    },
    "616": {
        "Package": "javax.sound.midi",
        "Interface": "MetaEventListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "meta": {
                "Parameter": {
                    "meta": "MetaMessage"
                },
                "Throw": []
            }
        }
    },
    "617": {
        "Package": "javax.sound.midi",
        "Interface": "MidiChannel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "noteOn": {
                "Parameter": {
                    "noteNumber": "int",
                    "velocity": "int"
                },
                "Throw": []
            },
            "noteOff": {
                "Parameter": {
                    "noteNumber": "int"
                },
                "Throw": []
            },
            "setPolyPressure": {
                "Parameter": {
                    "noteNumber": "int",
                    "pressure": "int"
                },
                "Throw": []
            },
            "getPolyPressure": {
                "Parameter": {
                    "noteNumber": "int"
                },
                "Throw": []
            },
            "setChannelPressure": {
                "Parameter": {
                    "pressure": "int"
                },
                "Throw": []
            },
            "getChannelPressure": {
                "Parameter": {},
                "Throw": []
            },
            "controlChange": {
                "Parameter": {
                    "controller": "int",
                    "value": "int"
                },
                "Throw": []
            },
            "getController": {
                "Parameter": {
                    "controller": "int"
                },
                "Throw": []
            },
            "programChange": {
                "Parameter": {
                    "bank": "int",
                    "program": "int"
                },
                "Throw": []
            },
            "getProgram": {
                "Parameter": {},
                "Throw": []
            },
            "setPitchBend": {
                "Parameter": {
                    "bend": "int"
                },
                "Throw": []
            },
            "getPitchBend": {
                "Parameter": {},
                "Throw": []
            },
            "resetAllControllers": {
                "Parameter": {},
                "Throw": []
            },
            "allNotesOff": {
                "Parameter": {},
                "Throw": []
            },
            "allSoundOff": {
                "Parameter": {},
                "Throw": []
            },
            "localControl": {
                "Parameter": {
                    "on": "boolean"
                },
                "Throw": []
            },
            "setMono": {
                "Parameter": {
                    "on": "boolean"
                },
                "Throw": []
            },
            "getMono": {
                "Parameter": {},
                "Throw": []
            },
            "setOmni": {
                "Parameter": {
                    "on": "boolean"
                },
                "Throw": []
            },
            "getOmni": {
                "Parameter": {},
                "Throw": []
            },
            "setMute": {
                "Parameter": {
                    "mute": "boolean"
                },
                "Throw": []
            },
            "getMute": {
                "Parameter": {},
                "Throw": []
            },
            "setSolo": {
                "Parameter": {
                    "soloState": "boolean"
                },
                "Throw": []
            },
            "getSolo": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "618": {
        "Package": "javax.sound.midi",
        "Interface": "MidiDevice",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": [
            "javax.sound.midi.Sequencer",
            "javax.sound.midi.Synthesizer"
        ],
        "Subinterface": null,
        "Method": {
            "getDeviceInfo": {
                "Parameter": {},
                "Throw": []
            },
            "open": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "close": {
                "Parameter": {},
                "Throw": []
            },
            "isOpen": {
                "Parameter": {},
                "Throw": []
            },
            "getMicrosecondPosition": {
                "Parameter": {},
                "Throw": []
            },
            "getMaxReceivers": {
                "Parameter": {},
                "Throw": []
            },
            "getMaxTransmitters": {
                "Parameter": {},
                "Throw": []
            },
            "getReceiver": {
                "Parameter": {},
                "Throw": "javax.sound.midi.MidiUnavailableException"
            },
            "getReceivers": {
                "Parameter": {},
                "Throw": []
            },
            "getTransmitter": {
                "Parameter": {},
                "Throw": "javax.sound.midi.MidiUnavailableException"
            },
            "getTransmitters": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "619": {
        "Package": "javax.sound.midi",
        "Interface": "MidiDeviceReceiver",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.midi.Receiver"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getMidiDevice": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "620": {
        "Package": "javax.sound.midi",
        "Interface": "MidiDeviceTransmitter",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.midi.Transmitter"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getMidiDevice": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "621": {
        "Package": "javax.sound.midi",
        "Interface": "Receiver",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": [
            "javax.sound.midi.MidiDeviceReceiver"
        ],
        "Subinterface": null,
        "Method": {
            "send": {
                "Parameter": {
                    "message": "MidiMessage",
                    "timeStamp": "long"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "close": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "622": {
        "Package": "javax.sound.midi",
        "Interface": "Sequencer",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.midi.MidiDevice"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setSequence": {
                "Parameter": {
                    "stream": "InputStream"
                },
                "Throw": "javax.sound.midi.InvalidMidiDataException"
            },
            "getSequence": {
                "Parameter": {},
                "Throw": []
            },
            "start": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "stop": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "isRunning": {
                "Parameter": {},
                "Throw": []
            },
            "startRecording": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "stopRecording": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "isRecording": {
                "Parameter": {},
                "Throw": []
            },
            "recordEnable": {
                "Parameter": {
                    "track": "Track",
                    "channel": "int"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "recordDisable": {
                "Parameter": {
                    "track": "Track"
                },
                "Throw": []
            },
            "getTempoInBPM": {
                "Parameter": {},
                "Throw": []
            },
            "setTempoInBPM": {
                "Parameter": {
                    "bpm": "float"
                },
                "Throw": []
            },
            "getTempoInMPQ": {
                "Parameter": {},
                "Throw": []
            },
            "setTempoInMPQ": {
                "Parameter": {
                    "mpq": "float"
                },
                "Throw": []
            },
            "setTempoFactor": {
                "Parameter": {
                    "factor": "float"
                },
                "Throw": []
            },
            "getTempoFactor": {
                "Parameter": {},
                "Throw": []
            },
            "getTickLength": {
                "Parameter": {},
                "Throw": []
            },
            "getTickPosition": {
                "Parameter": {},
                "Throw": []
            },
            "setTickPosition": {
                "Parameter": {
                    "tick": "long"
                },
                "Throw": []
            },
            "getMicrosecondLength": {
                "Parameter": {},
                "Throw": []
            },
            "getMicrosecondPosition": {
                "Parameter": {},
                "Throw": []
            },
            "setMicrosecondPosition": {
                "Parameter": {
                    "microseconds": "long"
                },
                "Throw": []
            },
            "setMasterSyncMode": {
                "Parameter": {
                    "sync": "Sequencer.SyncMode"
                },
                "Throw": []
            },
            "getMasterSyncMode": {
                "Parameter": {},
                "Throw": []
            },
            "getMasterSyncModes": {
                "Parameter": {},
                "Throw": []
            },
            "setSlaveSyncMode": {
                "Parameter": {
                    "sync": "Sequencer.SyncMode"
                },
                "Throw": []
            },
            "getSlaveSyncMode": {
                "Parameter": {},
                "Throw": []
            },
            "getSlaveSyncModes": {
                "Parameter": {},
                "Throw": []
            },
            "setTrackMute": {
                "Parameter": {
                    "track": "int",
                    "mute": "boolean"
                },
                "Throw": []
            },
            "getTrackMute": {
                "Parameter": {
                    "track": "int"
                },
                "Throw": []
            },
            "setTrackSolo": {
                "Parameter": {
                    "track": "int",
                    "solo": "boolean"
                },
                "Throw": []
            },
            "getTrackSolo": {
                "Parameter": {
                    "track": "int"
                },
                "Throw": []
            },
            "addMetaEventListener": {
                "Parameter": {
                    "listener": "MetaEventListener"
                },
                "Throw": []
            },
            "removeMetaEventListener": {
                "Parameter": {
                    "listener": "MetaEventListener"
                },
                "Throw": []
            },
            "addControllerEventListener": {
                "Parameter": {
                    "listener": "ControllerEventListener",
                    "controllers": "int"
                },
                "Throw": []
            },
            "removeControllerEventListener": {
                "Parameter": {
                    "listener": "ControllerEventListener",
                    "controllers": "int"
                },
                "Throw": []
            },
            "setLoopStartPoint": {
                "Parameter": {
                    "tick": "long"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getLoopStartPoint": {
                "Parameter": {},
                "Throw": []
            },
            "setLoopEndPoint": {
                "Parameter": {
                    "tick": "long"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getLoopEndPoint": {
                "Parameter": {},
                "Throw": []
            },
            "setLoopCount": {
                "Parameter": {
                    "count": "int"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getLoopCount": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "623": {
        "Package": "javax.sound.midi",
        "Interface": "Soundbank",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getVersion": {
                "Parameter": {},
                "Throw": []
            },
            "getVendor": {
                "Parameter": {},
                "Throw": []
            },
            "getDescription": {
                "Parameter": {},
                "Throw": []
            },
            "getResources": {
                "Parameter": {},
                "Throw": []
            },
            "getInstruments": {
                "Parameter": {},
                "Throw": []
            },
            "getInstrument": {
                "Parameter": {
                    "patch": "Patch"
                },
                "Throw": []
            }
        }
    },
    "624": {
        "Package": "javax.sound.midi",
        "Interface": "Synthesizer",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.midi.MidiDevice"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getMaxPolyphony": {
                "Parameter": {},
                "Throw": []
            },
            "getLatency": {
                "Parameter": {},
                "Throw": []
            },
            "getChannels": {
                "Parameter": {},
                "Throw": []
            },
            "getVoiceStatus": {
                "Parameter": {},
                "Throw": []
            },
            "isSoundbankSupported": {
                "Parameter": {
                    "soundbank": "Soundbank"
                },
                "Throw": []
            },
            "loadInstrument": {
                "Parameter": {
                    "instrument": "Instrument"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "unloadInstrument": {
                "Parameter": {
                    "instrument": "Instrument"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "remapInstrument": {
                "Parameter": {
                    "from": "Instrument",
                    "to": "Instrument"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getDefaultSoundbank": {
                "Parameter": {},
                "Throw": []
            },
            "getAvailableInstruments": {
                "Parameter": {},
                "Throw": []
            },
            "getLoadedInstruments": {
                "Parameter": {},
                "Throw": []
            },
            "loadAllInstruments": {
                "Parameter": {
                    "soundbank": "Soundbank"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "unloadAllInstruments": {
                "Parameter": {
                    "soundbank": "Soundbank"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "loadInstruments": {
                "Parameter": {
                    "soundbank": "Soundbank",
                    "patchList": "Patch"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "unloadInstruments": {
                "Parameter": {
                    "soundbank": "Soundbank",
                    "patchList": "Patch"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "625": {
        "Package": "javax.sound.midi",
        "Interface": "Transmitter",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": [
            "javax.sound.midi.MidiDeviceTransmitter"
        ],
        "Subinterface": null,
        "Method": {
            "setReceiver": {
                "Parameter": {
                    "receiver": "Receiver"
                },
                "Throw": []
            },
            "getReceiver": {
                "Parameter": {},
                "Throw": []
            },
            "close": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "626": {
        "Package": "javax.sound.sampled",
        "Interface": "Clip",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.sampled.DataLine",
            "javax.sound.sampled.Line"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "open": {
                "Parameter": {
                    "stream": "AudioInputStream"
                },
                "Throw": "java.lang.SecurityException"
            },
            "getFrameLength": {
                "Parameter": {},
                "Throw": []
            },
            "getMicrosecondLength": {
                "Parameter": {},
                "Throw": []
            },
            "setFramePosition": {
                "Parameter": {
                    "frames": "int"
                },
                "Throw": []
            },
            "setMicrosecondPosition": {
                "Parameter": {
                    "microseconds": "long"
                },
                "Throw": []
            },
            "setLoopPoints": {
                "Parameter": {
                    "start": "int",
                    "end": "int"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "loop": {
                "Parameter": {
                    "count": "int"
                },
                "Throw": []
            }
        }
    },
    "627": {
        "Package": "javax.sound.sampled",
        "Interface": "DataLine",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.sampled.Line"
        ],
        "Implementing Class": [
            "javax.sound.sampled.Clip",
            "javax.sound.sampled.SourceDataLine",
            "javax.sound.sampled.TargetDataLine"
        ],
        "Subinterface": null,
        "Method": {
            "drain": {
                "Parameter": {},
                "Throw": []
            },
            "flush": {
                "Parameter": {},
                "Throw": []
            },
            "start": {
                "Parameter": {},
                "Throw": []
            },
            "stop": {
                "Parameter": {},
                "Throw": []
            },
            "isRunning": {
                "Parameter": {},
                "Throw": []
            },
            "isActive": {
                "Parameter": {},
                "Throw": []
            },
            "getFormat": {
                "Parameter": {},
                "Throw": []
            },
            "getBufferSize": {
                "Parameter": {},
                "Throw": []
            },
            "available": {
                "Parameter": {},
                "Throw": []
            },
            "getFramePosition": {
                "Parameter": {},
                "Throw": []
            },
            "getLongFramePosition": {
                "Parameter": {},
                "Throw": []
            },
            "getMicrosecondPosition": {
                "Parameter": {},
                "Throw": []
            },
            "getLevel": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "628": {
        "Package": "javax.sound.sampled",
        "Interface": "Line",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": [
            "javax.sound.sampled.Clip",
            "javax.sound.sampled.DataLine",
            "javax.sound.sampled.Mixer",
            "javax.sound.sampled.Port",
            "javax.sound.sampled.SourceDataLine",
            "javax.sound.sampled.TargetDataLine"
        ],
        "Subinterface": null,
        "Method": {
            "getLineInfo": {
                "Parameter": {},
                "Throw": []
            },
            "open": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "close": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "isOpen": {
                "Parameter": {},
                "Throw": []
            },
            "getControls": {
                "Parameter": {},
                "Throw": []
            },
            "isControlSupported": {
                "Parameter": {
                    "control": "Control.Type"
                },
                "Throw": []
            },
            "getControl": {
                "Parameter": {
                    "control": "Control.Type"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "addLineListener": {
                "Parameter": {
                    "listener": "LineListener"
                },
                "Throw": []
            },
            "removeLineListener": {
                "Parameter": {
                    "listener": "LineListener"
                },
                "Throw": []
            }
        }
    },
    "629": {
        "Package": "javax.sound.sampled",
        "Interface": "LineListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "update": {
                "Parameter": {
                    "event": "LineEvent"
                },
                "Throw": []
            }
        }
    },
    "630": {
        "Package": "javax.sound.sampled",
        "Interface": "Mixer",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.sampled.Line"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getMixerInfo": {
                "Parameter": {},
                "Throw": []
            },
            "getSourceLineInfo": {
                "Parameter": {
                    "info": "Line.Info"
                },
                "Throw": []
            },
            "getTargetLineInfo": {
                "Parameter": {
                    "info": "Line.Info"
                },
                "Throw": []
            },
            "isLineSupported": {
                "Parameter": {
                    "info": "Line.Info"
                },
                "Throw": []
            },
            "getLine": {
                "Parameter": {
                    "info": "Line.Info"
                },
                "Throw": "java.lang.SecurityException"
            },
            "getMaxLines": {
                "Parameter": {
                    "info": "Line.Info"
                },
                "Throw": []
            },
            "getSourceLines": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "getTargetLines": {
                "Parameter": {},
                "Throw": "java.lang.SecurityException"
            },
            "synchronize": {
                "Parameter": {
                    "lines": "Line",
                    "maintainSync": "boolean"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "unsynchronize": {
                "Parameter": {
                    "lines": "Line"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "isSynchronizationSupported": {
                "Parameter": {
                    "lines": "Line",
                    "maintainSync": "boolean"
                },
                "Throw": []
            }
        }
    },
    "631": {
        "Package": "javax.sound.sampled",
        "Interface": "Port",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.sampled.Line"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "632": {
        "Package": "javax.sound.sampled",
        "Interface": "SourceDataLine",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.sampled.DataLine",
            "javax.sound.sampled.Line"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "open": {
                "Parameter": {
                    "format": "AudioFormat"
                },
                "Throw": "java.lang.SecurityException"
            },
            "write": {
                "Parameter": {
                    "b": "byte",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.lang.ArrayIndexOutOfBoundsException"
            }
        }
    },
    "633": {
        "Package": "javax.sound.sampled",
        "Interface": "TargetDataLine",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.sampled.DataLine",
            "javax.sound.sampled.Line"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "open": {
                "Parameter": {
                    "format": "AudioFormat"
                },
                "Throw": "java.lang.SecurityException"
            },
            "read": {
                "Parameter": {
                    "b": "byte",
                    "off": "int",
                    "len": "int"
                },
                "Throw": "java.lang.ArrayIndexOutOfBoundsException"
            }
        }
    },
    "634": {
        "Package": "javax.sql",
        "Interface": "CommonDataSource",
        "Superinterface": null,
        "Implementing Class": [
            "javax.sql.ConnectionPoolDataSource",
            "javax.sql.DataSource",
            "javax.sql.XADataSource"
        ],
        "Subinterface": null,
        "Method": {
            "getLogWriter": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setLogWriter": {
                "Parameter": {
                    "out": "PrintWriter"
                },
                "Throw": "java.sql.SQLException"
            },
            "setLoginTimeout": {
                "Parameter": {
                    "seconds": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getLoginTimeout": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getParentLogger": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "635": {
        "Package": "javax.sql",
        "Interface": "ConnectionEventListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "connectionClosed": {
                "Parameter": {
                    "event": "ConnectionEvent"
                },
                "Throw": []
            },
            "connectionErrorOccurred": {
                "Parameter": {
                    "event": "ConnectionEvent"
                },
                "Throw": []
            }
        }
    },
    "636": {
        "Package": "javax.sql",
        "Interface": "ConnectionPoolDataSource",
        "Superinterface": [
            "javax.sql.CommonDataSource"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPooledConnection": {
                "Parameter": {
                    "user": "String",
                    "password": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "637": {
        "Package": "javax.sql",
        "Interface": "DataSource",
        "Superinterface": [
            "javax.sql.CommonDataSource",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getConnection": {
                "Parameter": {
                    "username": "String",
                    "password": "String"
                },
                "Throw": "java.sql.SQLTimeoutException"
            }
        }
    },
    "638": {
        "Package": "javax.sql",
        "Interface": "PooledConnection",
        "Superinterface": null,
        "Implementing Class": [
            "javax.sql.XAConnection"
        ],
        "Subinterface": null,
        "Method": {
            "getConnection": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "close": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "addConnectionEventListener": {
                "Parameter": {
                    "listener": "ConnectionEventListener"
                },
                "Throw": []
            },
            "removeConnectionEventListener": {
                "Parameter": {
                    "listener": "ConnectionEventListener"
                },
                "Throw": []
            },
            "addStatementEventListener": {
                "Parameter": {
                    "listener": "StatementEventListener"
                },
                "Throw": []
            },
            "removeStatementEventListener": {
                "Parameter": {
                    "listener": "StatementEventListener"
                },
                "Throw": []
            }
        }
    },
    "639": {
        "Package": "javax.sql",
        "Interface": "RowSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.ResultSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "javax.sql.rowset.CachedRowSet",
            "javax.sql.rowset.FilteredRowSet",
            "javax.sql.rowset.JdbcRowSet",
            "javax.sql.rowset.JoinRowSet",
            "javax.sql.rowset.spi.SyncResolver",
            "javax.sql.rowset.WebRowSet"
        ],
        "Subinterface": null,
        "Method": {
            "getUrl": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setUrl": {
                "Parameter": {
                    "url": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getDataSourceName": {
                "Parameter": {},
                "Throw": []
            },
            "setDataSourceName": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getUsername": {
                "Parameter": {},
                "Throw": []
            },
            "setUsername": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getPassword": {
                "Parameter": {},
                "Throw": []
            },
            "setPassword": {
                "Parameter": {
                    "password": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getTransactionIsolation": {
                "Parameter": {},
                "Throw": []
            },
            "setTransactionIsolation": {
                "Parameter": {
                    "level": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getTypeMap": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setTypeMap": {
                "Parameter": {
                    "": "Map"
                },
                "Throw": "java.sql.SQLException"
            },
            "getCommand": {
                "Parameter": {},
                "Throw": []
            },
            "setCommand": {
                "Parameter": {
                    "cmd": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "isReadOnly": {
                "Parameter": {},
                "Throw": []
            },
            "setReadOnly": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "getMaxFieldSize": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setMaxFieldSize": {
                "Parameter": {
                    "max": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getMaxRows": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setMaxRows": {
                "Parameter": {
                    "max": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getEscapeProcessing": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setEscapeProcessing": {
                "Parameter": {
                    "enable": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "getQueryTimeout": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setQueryTimeout": {
                "Parameter": {
                    "seconds": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "setType": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "setConcurrency": {
                "Parameter": {
                    "concurrency": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "setNull": {
                "Parameter": {
                    "parameterName": "String",
                    "sqlType": "int",
                    "typeName": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBoolean": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "boolean"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setByte": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "byte"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setShort": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "short"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setInt": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "int"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setLong": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "long"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setFloat": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "float"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setDouble": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "double"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBigDecimal": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "BigDecimal"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setString": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "String"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBytes": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "byte"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setDate": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "Date",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setTime": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "Time",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setTimestamp": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "Timestamp",
                    "cal": "Calendar"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setAsciiStream": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setBinaryStream": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setCharacterStream": {
                "Parameter": {
                    "parameterName": "String",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setNCharacterStream": {
                "Parameter": {
                    "parameterName": "String",
                    "value": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setObject": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "Object"
                },
                "Throw": "java.sql.SQLException"
            },
            "setRef": {
                "Parameter": {
                    "i": "int",
                    "x": "Ref"
                },
                "Throw": "java.sql.SQLException"
            },
            "setBlob": {
                "Parameter": {
                    "parameterName": "String",
                    "inputStream": "InputStream"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setClob": {
                "Parameter": {
                    "parameterName": "String",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setArray": {
                "Parameter": {
                    "i": "int",
                    "x": "Array"
                },
                "Throw": "java.sql.SQLException"
            },
            "clearParameters": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "execute": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "addRowSetListener": {
                "Parameter": {
                    "listener": "RowSetListener"
                },
                "Throw": []
            },
            "removeRowSetListener": {
                "Parameter": {
                    "listener": "RowSetListener"
                },
                "Throw": []
            },
            "setSQLXML": {
                "Parameter": {
                    "parameterName": "String",
                    "xmlObject": "SQLXML"
                },
                "Throw": "java.sql.SQLException"
            },
            "setRowId": {
                "Parameter": {
                    "parameterName": "String",
                    "x": "RowId"
                },
                "Throw": "java.sql.SQLException"
            },
            "setNString": {
                "Parameter": {
                    "parameterName": "String",
                    "value": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "setNClob": {
                "Parameter": {
                    "parameterIndex": "int",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            },
            "setURL": {
                "Parameter": {
                    "parameterIndex": "int",
                    "x": "URL"
                },
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "640": {
        "Package": "javax.sql",
        "Interface": "RowSetInternal",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getParams": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getConnection": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setMetaData": {
                "Parameter": {
                    "md": "RowSetMetaData"
                },
                "Throw": "java.sql.SQLException"
            },
            "getOriginal": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getOriginalRow": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "641": {
        "Package": "javax.sql",
        "Interface": "RowSetListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "rowSetChanged": {
                "Parameter": {
                    "event": "RowSetEvent"
                },
                "Throw": []
            },
            "rowChanged": {
                "Parameter": {
                    "event": "RowSetEvent"
                },
                "Throw": []
            },
            "cursorMoved": {
                "Parameter": {
                    "event": "RowSetEvent"
                },
                "Throw": []
            }
        }
    },
    "642": {
        "Package": "javax.sql",
        "Interface": "RowSetMetaData",
        "Superinterface": [
            "java.sql.ResultSetMetaData",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.RowSetMetaDataImpl"
        ],
        "Method": {
            "setColumnCount": {
                "Parameter": {
                    "columnCount": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "setAutoIncrement": {
                "Parameter": {
                    "columnIndex": "int",
                    "property": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "setCaseSensitive": {
                "Parameter": {
                    "columnIndex": "int",
                    "property": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "setSearchable": {
                "Parameter": {
                    "columnIndex": "int",
                    "property": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "setCurrency": {
                "Parameter": {
                    "columnIndex": "int",
                    "property": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "setNullable": {
                "Parameter": {
                    "columnIndex": "int",
                    "property": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "setSigned": {
                "Parameter": {
                    "columnIndex": "int",
                    "property": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "setColumnDisplaySize": {
                "Parameter": {
                    "columnIndex": "int",
                    "size": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "setColumnLabel": {
                "Parameter": {
                    "columnIndex": "int",
                    "label": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "setColumnName": {
                "Parameter": {
                    "columnIndex": "int",
                    "columnName": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "setSchemaName": {
                "Parameter": {
                    "columnIndex": "int",
                    "schemaName": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "setPrecision": {
                "Parameter": {
                    "columnIndex": "int",
                    "precision": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "setScale": {
                "Parameter": {
                    "columnIndex": "int",
                    "scale": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "setTableName": {
                "Parameter": {
                    "columnIndex": "int",
                    "tableName": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "setCatalogName": {
                "Parameter": {
                    "columnIndex": "int",
                    "catalogName": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "setColumnType": {
                "Parameter": {
                    "columnIndex": "int",
                    "SQLType": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "setColumnTypeName": {
                "Parameter": {
                    "columnIndex": "int",
                    "typeName": "String"
                },
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "643": {
        "Package": "javax.sql",
        "Interface": "RowSetReader",
        "Superinterface": null,
        "Implementing Class": [
            "javax.sql.rowset.spi.XmlReader"
        ],
        "Subinterface": null,
        "Method": {
            "readData": {
                "Parameter": {
                    "caller": "RowSetInternal"
                },
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "644": {
        "Package": "javax.sql",
        "Interface": "RowSetWriter",
        "Superinterface": null,
        "Implementing Class": [
            "javax.sql.rowset.spi.TransactionalWriter",
            "javax.sql.rowset.spi.XmlWriter"
        ],
        "Subinterface": null,
        "Method": {
            "writeData": {
                "Parameter": {
                    "caller": "RowSetInternal"
                },
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "645": {
        "Package": "javax.sql",
        "Interface": "StatementEventListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "statementClosed": {
                "Parameter": {
                    "event": "StatementEvent"
                },
                "Throw": []
            },
            "statementErrorOccurred": {
                "Parameter": {
                    "event": "StatementEvent"
                },
                "Throw": []
            }
        }
    },
    "646": {
        "Package": "javax.sql",
        "Interface": "XAConnection",
        "Superinterface": [
            "javax.sql.PooledConnection"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getXAResource": {
                "Parameter": {},
                "Throw": "java.sql.SQLFeatureNotSupportedException"
            }
        }
    },
    "647": {
        "Package": "javax.sql",
        "Interface": "XADataSource",
        "Superinterface": [
            "javax.sql.CommonDataSource"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getXAConnection": {
                "Parameter": {
                    "user": "String",
                    "password": "String"
                },
                "Throw": "java.sql.SQLTimeoutException"
            }
        }
    },
    "648": {
        "Package": "javax.sql.rowset",
        "Interface": "CachedRowSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sql.rowset.Joinable",
            "java.sql.ResultSet",
            "javax.sql.RowSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "javax.sql.rowset.FilteredRowSet",
            "javax.sql.rowset.JoinRowSet",
            "javax.sql.rowset.WebRowSet"
        ],
        "Subinterface": null,
        "Method": {
            "populate": {
                "Parameter": {
                    "rs": "ResultSet",
                    "startRow": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "execute": {
                "Parameter": {
                    "conn": "Connection"
                },
                "Throw": "java.sql.SQLException"
            },
            "acceptChanges": {
                "Parameter": {
                    "con": "Connection"
                },
                "Throw": "javax.sql.rowset.spi.SyncProviderException"
            },
            "restoreOriginal": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "release": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "undoDelete": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "undoInsert": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "undoUpdate": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "columnUpdated": {
                "Parameter": {
                    "columnName": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "toCollection": {
                "Parameter": {
                    "column": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getSyncProvider": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setSyncProvider": {
                "Parameter": {
                    "provider": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "size": {
                "Parameter": {},
                "Throw": []
            },
            "setMetaData": {
                "Parameter": {
                    "md": "RowSetMetaData"
                },
                "Throw": "java.sql.SQLException"
            },
            "getOriginal": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getOriginalRow": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setOriginalRow": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getTableName": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setTableName": {
                "Parameter": {
                    "tabName": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getKeyColumns": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setKeyColumns": {
                "Parameter": {
                    "keys": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "createShared": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "createCopy": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "createCopySchema": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "createCopyNoConstraints": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getRowSetWarnings": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getShowDeleted": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setShowDeleted": {
                "Parameter": {
                    "b": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "commit": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "rollback": {
                "Parameter": {
                    "s": "Savepoint"
                },
                "Throw": "java.sql.SQLException"
            },
            "rowSetPopulated": {
                "Parameter": {
                    "event": "RowSetEvent",
                    "numRows": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "setPageSize": {
                "Parameter": {
                    "size": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getPageSize": {
                "Parameter": {},
                "Throw": []
            },
            "nextPage": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "previousPage": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "649": {
        "Package": "javax.sql.rowset",
        "Interface": "FilteredRowSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sql.rowset.CachedRowSet",
            "javax.sql.rowset.Joinable",
            "java.sql.ResultSet",
            "javax.sql.RowSet",
            "javax.sql.rowset.WebRowSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setFilter": {
                "Parameter": {
                    "p": "Predicate"
                },
                "Throw": "java.sql.SQLException"
            },
            "getFilter": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "650": {
        "Package": "javax.sql.rowset",
        "Interface": "JdbcRowSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sql.rowset.Joinable",
            "java.sql.ResultSet",
            "javax.sql.RowSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getShowDeleted": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setShowDeleted": {
                "Parameter": {
                    "b": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "getRowSetWarnings": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "commit": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getAutoCommit": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "setAutoCommit": {
                "Parameter": {
                    "autoCommit": "boolean"
                },
                "Throw": "java.sql.SQLException"
            },
            "rollback": {
                "Parameter": {
                    "s": "Savepoint"
                },
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "651": {
        "Package": "javax.sql.rowset",
        "Interface": "Joinable",
        "Superinterface": null,
        "Implementing Class": [
            "javax.sql.rowset.CachedRowSet",
            "javax.sql.rowset.FilteredRowSet",
            "javax.sql.rowset.JdbcRowSet",
            "javax.sql.rowset.JoinRowSet",
            "javax.sql.rowset.WebRowSet"
        ],
        "Subinterface": null,
        "Method": {
            "setMatchColumn": {
                "Parameter": {
                    "columnNames": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getMatchColumnIndexes": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getMatchColumnNames": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "unsetMatchColumn": {
                "Parameter": {
                    "columnName": "String"
                },
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "652": {
        "Package": "javax.sql.rowset",
        "Interface": "JoinRowSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sql.rowset.CachedRowSet",
            "javax.sql.rowset.Joinable",
            "java.sql.ResultSet",
            "javax.sql.RowSet",
            "javax.sql.rowset.WebRowSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "addRowSet": {
                "Parameter": {
                    "rowset": "RowSet",
                    "columnName": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "getRowSets": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getRowSetNames": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "toCachedRowSet": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "supportsCrossJoin": {
                "Parameter": {},
                "Throw": []
            },
            "supportsInnerJoin": {
                "Parameter": {},
                "Throw": []
            },
            "supportsLeftOuterJoin": {
                "Parameter": {},
                "Throw": []
            },
            "supportsRightOuterJoin": {
                "Parameter": {},
                "Throw": []
            },
            "supportsFullJoin": {
                "Parameter": {},
                "Throw": []
            },
            "setJoinType": {
                "Parameter": {
                    "joinType": "int"
                },
                "Throw": "java.sql.SQLException"
            },
            "getWhereClause": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "getJoinType": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "653": {
        "Package": "javax.sql.rowset",
        "Interface": "Predicate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "evaluate": {
                "Parameter": {
                    "value": "Object",
                    "columnName": "String"
                },
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "654": {
        "Package": "javax.sql.rowset",
        "Interface": "RowSetFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createCachedRowSet": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "createFilteredRowSet": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "createJdbcRowSet": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "createJoinRowSet": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "createWebRowSet": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "655": {
        "Package": "javax.sql.rowset",
        "Interface": "WebRowSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sql.rowset.CachedRowSet",
            "javax.sql.rowset.Joinable",
            "java.sql.ResultSet",
            "javax.sql.RowSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "javax.sql.rowset.FilteredRowSet",
            "javax.sql.rowset.JoinRowSet"
        ],
        "Subinterface": null,
        "Method": {
            "readXml": {
                "Parameter": {
                    "iStream": "InputStream"
                },
                "Throw": "java.io.IOException"
            },
            "writeXml": {
                "Parameter": {
                    "oStream": "OutputStream"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "656": {
        "Package": "javax.sql.rowset.spi",
        "Interface": "SyncResolver",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.ResultSet",
            "javax.sql.RowSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getStatus": {
                "Parameter": {},
                "Throw": []
            },
            "getConflictValue": {
                "Parameter": {
                    "columnName": "String"
                },
                "Throw": "java.sql.SQLException"
            },
            "setResolvedValue": {
                "Parameter": {
                    "columnName": "String",
                    "obj": "Object"
                },
                "Throw": "java.sql.SQLException"
            },
            "nextConflict": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "previousConflict": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "657": {
        "Package": "javax.sql.rowset.spi",
        "Interface": "TransactionalWriter",
        "Superinterface": [
            "javax.sql.RowSetWriter"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "commit": {
                "Parameter": {},
                "Throw": "java.sql.SQLException"
            },
            "rollback": {
                "Parameter": {
                    "s": "Savepoint"
                },
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "658": {
        "Package": "javax.sql.rowset.spi",
        "Interface": "XmlReader",
        "Superinterface": [
            "javax.sql.RowSetReader"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "readXML": {
                "Parameter": {
                    "caller": "WebRowSet",
                    "reader": "Reader"
                },
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "659": {
        "Package": "javax.sql.rowset.spi",
        "Interface": "XmlWriter",
        "Superinterface": [
            "javax.sql.RowSetWriter"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "writeXML": {
                "Parameter": {
                    "caller": "WebRowSet",
                    "writer": "Writer"
                },
                "Throw": "java.sql.SQLException"
            }
        }
    },
    "660": {
        "Package": "javax.swing",
        "Interface": "Action",
        "Superinterface": [
            "java.awt.event.ActionListener",
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.CloseAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.MaximizeAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.MinimizeAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.NavigateAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.OpenAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.ApproveSelectionAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.CancelSelectionAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.ChangeToParentDirectoryAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.GoHomeAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.NewFolderAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.UpdateAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.CloseAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.IconifyAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.MoveAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.RestoreAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.SizeAction",
            "javax.swing.plaf.basic.BasicSliderUI.ActionScroller",
            "javax.swing.plaf.basic.BasicTreeUI.TreeCancelEditingAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeHomeAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeIncrementAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreePageAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeToggleAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction",
            "javax.swing.text.DefaultEditorKit.BeepAction",
            "javax.swing.text.DefaultEditorKit.CopyAction",
            "javax.swing.text.DefaultEditorKit.CutAction",
            "javax.swing.text.DefaultEditorKit.DefaultKeyTypedAction",
            "javax.swing.text.DefaultEditorKit.InsertBreakAction",
            "javax.swing.text.DefaultEditorKit.InsertContentAction",
            "javax.swing.text.DefaultEditorKit.InsertTabAction",
            "javax.swing.text.DefaultEditorKit.PasteAction",
            "javax.swing.text.html.HTMLEditorKit.HTMLTextAction",
            "javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction",
            "javax.swing.plaf.metal.MetalFileChooserUI.DirectoryComboBoxAction",
            "javax.swing.text.StyledEditorKit.AlignmentAction",
            "javax.swing.text.StyledEditorKit.BoldAction",
            "javax.swing.text.StyledEditorKit.FontFamilyAction",
            "javax.swing.text.StyledEditorKit.FontSizeAction",
            "javax.swing.text.StyledEditorKit.ForegroundAction",
            "javax.swing.text.StyledEditorKit.ItalicAction",
            "javax.swing.text.StyledEditorKit.StyledTextAction",
            "javax.swing.text.StyledEditorKit.UnderlineAction",
            "javax.swing.text.TextAction"
        ],
        "Method": {
            "getValue": {
                "Parameter": {
                    "key": "String"
                },
                "Throw": []
            },
            "putValue": {
                "Parameter": {
                    "key": "String",
                    "value": "Object"
                },
                "Throw": []
            },
            "setEnabled": {
                "Parameter": {
                    "b": "boolean"
                },
                "Throw": []
            },
            "isEnabled": {
                "Parameter": {},
                "Throw": []
            },
            "addPropertyChangeListener": {
                "Parameter": {
                    "listener": "PropertyChangeListener"
                },
                "Throw": []
            },
            "removePropertyChangeListener": {
                "Parameter": {
                    "listener": "PropertyChangeListener"
                },
                "Throw": []
            }
        }
    },
    "661": {
        "Package": "javax.swing",
        "Interface": "BoundedRangeModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultBoundedRangeModel"
        ],
        "Method": {
            "getMinimum": {
                "Parameter": {},
                "Throw": []
            },
            "setMinimum": {
                "Parameter": {
                    "newMinimum": "int"
                },
                "Throw": []
            },
            "getMaximum": {
                "Parameter": {},
                "Throw": []
            },
            "setMaximum": {
                "Parameter": {
                    "newMaximum": "int"
                },
                "Throw": []
            },
            "getValue": {
                "Parameter": {},
                "Throw": []
            },
            "setValue": {
                "Parameter": {
                    "newValue": "int"
                },
                "Throw": []
            },
            "setValueIsAdjusting": {
                "Parameter": {
                    "b": "boolean"
                },
                "Throw": []
            },
            "getValueIsAdjusting": {
                "Parameter": {},
                "Throw": []
            },
            "getExtent": {
                "Parameter": {},
                "Throw": []
            },
            "setExtent": {
                "Parameter": {
                    "newExtent": "int"
                },
                "Throw": []
            },
            "setRangeProperties": {
                "Parameter": {
                    "value": "int",
                    "extent": "int",
                    "min": "int",
                    "max": "int",
                    "adjusting": "boolean"
                },
                "Throw": []
            },
            "addChangeListener": {
                "Parameter": {
                    "x": "ChangeListener"
                },
                "Throw": []
            },
            "removeChangeListener": {
                "Parameter": {
                    "x": "ChangeListener"
                },
                "Throw": []
            }
        }
    },
    "662": {
        "Package": "javax.swing",
        "Interface": "ButtonModel",
        "Superinterface": [
            "java.awt.ItemSelectable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultButtonModel",
            "javax.swing.JToggleButton.ToggleButtonModel"
        ],
        "Method": {
            "isArmed": {
                "Parameter": {},
                "Throw": []
            },
            "isSelected": {
                "Parameter": {},
                "Throw": []
            },
            "isEnabled": {
                "Parameter": {},
                "Throw": []
            },
            "isPressed": {
                "Parameter": {},
                "Throw": []
            },
            "isRollover": {
                "Parameter": {},
                "Throw": []
            },
            "setArmed": {
                "Parameter": {
                    "b": "boolean"
                },
                "Throw": []
            },
            "setSelected": {
                "Parameter": {
                    "b": "boolean"
                },
                "Throw": []
            },
            "setEnabled": {
                "Parameter": {
                    "b": "boolean"
                },
                "Throw": []
            },
            "setPressed": {
                "Parameter": {
                    "b": "boolean"
                },
                "Throw": []
            },
            "setRollover": {
                "Parameter": {
                    "b": "boolean"
                },
                "Throw": []
            },
            "setMnemonic": {
                "Parameter": {
                    "key": "int"
                },
                "Throw": []
            },
            "getMnemonic": {
                "Parameter": {},
                "Throw": []
            },
            "setActionCommand": {
                "Parameter": {
                    "s": "String"
                },
                "Throw": []
            },
            "getActionCommand": {
                "Parameter": {},
                "Throw": []
            },
            "setGroup": {
                "Parameter": {
                    "group": "ButtonGroup"
                },
                "Throw": []
            },
            "addActionListener": {
                "Parameter": {
                    "l": "ActionListener"
                },
                "Throw": []
            },
            "removeActionListener": {
                "Parameter": {
                    "l": "ActionListener"
                },
                "Throw": []
            },
            "addItemListener": {
                "Parameter": {
                    "l": "ItemListener"
                },
                "Throw": []
            },
            "removeItemListener": {
                "Parameter": {
                    "l": "ItemListener"
                },
                "Throw": []
            },
            "addChangeListener": {
                "Parameter": {
                    "l": "ChangeListener"
                },
                "Throw": []
            },
            "removeChangeListener": {
                "Parameter": {
                    "l": "ChangeListener"
                },
                "Throw": []
            }
        }
    },
    "663": {
        "Package": "javax.swing",
        "Interface": "CellEditor",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.table.TableCellEditor",
            "javax.swing.tree.TreeCellEditor"
        ],
        "Subinterface": [
            "javax.swing.AbstractCellEditor",
            "javax.swing.DefaultCellEditor",
            "javax.swing.tree.DefaultTreeCellEditor"
        ],
        "Method": {
            "getCellEditorValue": {
                "Parameter": {},
                "Throw": []
            },
            "isCellEditable": {
                "Parameter": {
                    "anEvent": "EventObject"
                },
                "Throw": []
            },
            "shouldSelectCell": {
                "Parameter": {
                    "anEvent": "EventObject"
                },
                "Throw": []
            },
            "stopCellEditing": {
                "Parameter": {},
                "Throw": []
            },
            "cancelCellEditing": {
                "Parameter": {},
                "Throw": []
            },
            "addCellEditorListener": {
                "Parameter": {
                    "l": "CellEditorListener"
                },
                "Throw": []
            },
            "removeCellEditorListener": {
                "Parameter": {
                    "l": "CellEditorListener"
                },
                "Throw": []
            }
        }
    },
    "664": {
        "Package": "javax.swing",
        "Interface": "ComboBoxEditor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboBoxEditor",
            "javax.swing.plaf.basic.BasicComboBoxEditor.UIResource",
            "javax.swing.plaf.metal.MetalComboBoxEditor",
            "javax.swing.plaf.metal.MetalComboBoxEditor.UIResource"
        ],
        "Method": {
            "getEditorComponent": {
                "Parameter": {},
                "Throw": []
            },
            "setItem": {
                "Parameter": {
                    "anObject": "Object"
                },
                "Throw": []
            },
            "getItem": {
                "Parameter": {},
                "Throw": []
            },
            "selectAll": {
                "Parameter": {},
                "Throw": []
            },
            "addActionListener": {
                "Parameter": {
                    "l": "ActionListener"
                },
                "Throw": []
            },
            "removeActionListener": {
                "Parameter": {
                    "l": "ActionListener"
                },
                "Throw": []
            }
        }
    },
    "665": {
        "Package": "javax.swing",
        "Interface": "ComboBoxModel",
        "Superinterface": [
            "javax.swing.ListModel"
        ],
        "Implementing Class": [
            "javax.swing.MutableComboBoxModel"
        ],
        "Subinterface": [
            "javax.swing.DefaultComboBoxModel",
            "javax.swing.plaf.metal.MetalFileChooserUI.DirectoryComboBoxModel",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxModel"
        ],
        "Method": {
            "setSelectedItem": {
                "Parameter": {
                    "anItem": "Object"
                },
                "Throw": []
            },
            "getSelectedItem": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "666": {
        "Package": "javax.swing",
        "Interface": "DesktopManager",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultDesktopManager"
        ],
        "Method": {
            "openFrame": {
                "Parameter": {
                    "f": "JInternalFrame"
                },
                "Throw": []
            },
            "closeFrame": {
                "Parameter": {
                    "f": "JInternalFrame"
                },
                "Throw": []
            },
            "maximizeFrame": {
                "Parameter": {
                    "f": "JInternalFrame"
                },
                "Throw": []
            },
            "minimizeFrame": {
                "Parameter": {
                    "f": "JInternalFrame"
                },
                "Throw": []
            },
            "iconifyFrame": {
                "Parameter": {
                    "f": "JInternalFrame"
                },
                "Throw": []
            },
            "deiconifyFrame": {
                "Parameter": {
                    "f": "JInternalFrame"
                },
                "Throw": []
            },
            "activateFrame": {
                "Parameter": {
                    "f": "JInternalFrame"
                },
                "Throw": []
            },
            "deactivateFrame": {
                "Parameter": {
                    "f": "JInternalFrame"
                },
                "Throw": []
            },
            "beginDraggingFrame": {
                "Parameter": {
                    "f": "JComponent"
                },
                "Throw": []
            },
            "dragFrame": {
                "Parameter": {
                    "f": "JComponent",
                    "newX": "int",
                    "newY": "int"
                },
                "Throw": []
            },
            "endDraggingFrame": {
                "Parameter": {
                    "f": "JComponent"
                },
                "Throw": []
            },
            "beginResizingFrame": {
                "Parameter": {
                    "f": "JComponent",
                    "direction": "int"
                },
                "Throw": []
            },
            "resizeFrame": {
                "Parameter": {
                    "f": "JComponent",
                    "newX": "int",
                    "newY": "int",
                    "newWidth": "int",
                    "newHeight": "int"
                },
                "Throw": []
            },
            "endResizingFrame": {
                "Parameter": {
                    "f": "JComponent"
                },
                "Throw": []
            },
            "setBoundsForFrame": {
                "Parameter": {
                    "f": "JComponent",
                    "newX": "int",
                    "newY": "int",
                    "newWidth": "int",
                    "newHeight": "int"
                },
                "Throw": []
            }
        }
    },
    "667": {
        "Package": "javax.swing",
        "Interface": "Icon",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.IconUIResource",
            "javax.swing.ImageIcon",
            "javax.swing.plaf.metal.MetalCheckBoxIcon",
            "javax.swing.plaf.metal.MetalComboBoxIcon",
            "javax.swing.plaf.metal.MetalIconFactory.FileIcon16",
            "javax.swing.plaf.metal.MetalIconFactory.FolderIcon16",
            "javax.swing.plaf.metal.MetalIconFactory.PaletteCloseIcon",
            "javax.swing.plaf.metal.MetalIconFactory.TreeControlIcon",
            "javax.swing.plaf.metal.MetalIconFactory.TreeFolderIcon",
            "javax.swing.plaf.metal.MetalIconFactory.TreeLeafIcon"
        ],
        "Method": {
            "paintIcon": {
                "Parameter": {
                    "c": "Component",
                    "g": "Graphics",
                    "x": "int",
                    "y": "int"
                },
                "Throw": []
            },
            "getIconWidth": {
                "Parameter": {},
                "Throw": []
            },
            "getIconHeight": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "668": {
        "Package": "javax.swing",
        "Interface": "JComboBox.KeySelectionManager",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "selectionForKey": {
                "Parameter": {
                    "aKey": "char",
                    "aModel": "ComboBoxModel"
                },
                "Throw": []
            }
        }
    },
    "669": {
        "Package": "javax.swing",
        "Interface": "ListCellRenderer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboBoxRenderer",
            "javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource",
            "javax.swing.DefaultListCellRenderer",
            "javax.swing.DefaultListCellRenderer.UIResource",
            "javax.swing.plaf.metal.MetalFileChooserUI.FileRenderer",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxRenderer"
        ],
        "Method": {
            "getListCellRendererComponent": {
                "Parameter": {
                    "": "JList",
                    "value": "E",
                    "index": "int",
                    "isSelected": "boolean",
                    "cellHasFocus": "boolean"
                },
                "Throw": []
            }
        }
    },
    "670": {
        "Package": "javax.swing",
        "Interface": "ListModel",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.ComboBoxModel",
            "javax.swing.MutableComboBoxModel"
        ],
        "Subinterface": [
            "javax.swing.AbstractListModel",
            "javax.swing.plaf.basic.BasicDirectoryModel",
            "javax.swing.DefaultComboBoxModel",
            "javax.swing.DefaultListModel",
            "javax.swing.plaf.metal.MetalFileChooserUI.DirectoryComboBoxModel",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxModel"
        ],
        "Method": {
            "getSize": {
                "Parameter": {},
                "Throw": []
            },
            "getElementAt": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "addListDataListener": {
                "Parameter": {
                    "l": "ListDataListener"
                },
                "Throw": []
            },
            "removeListDataListener": {
                "Parameter": {
                    "l": "ListDataListener"
                },
                "Throw": []
            }
        }
    },
    "671": {
        "Package": "javax.swing",
        "Interface": "ListSelectionModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultListSelectionModel"
        ],
        "Method": {
            "setSelectionInterval": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "addSelectionInterval": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "removeSelectionInterval": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getMinSelectionIndex": {
                "Parameter": {},
                "Throw": []
            },
            "getMaxSelectionIndex": {
                "Parameter": {},
                "Throw": []
            },
            "isSelectedIndex": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getAnchorSelectionIndex": {
                "Parameter": {},
                "Throw": []
            },
            "setAnchorSelectionIndex": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getLeadSelectionIndex": {
                "Parameter": {},
                "Throw": []
            },
            "setLeadSelectionIndex": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "clearSelection": {
                "Parameter": {},
                "Throw": []
            },
            "isSelectionEmpty": {
                "Parameter": {},
                "Throw": []
            },
            "insertIndexInterval": {
                "Parameter": {
                    "index": "int",
                    "length": "int",
                    "before": "boolean"
                },
                "Throw": []
            },
            "removeIndexInterval": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "setValueIsAdjusting": {
                "Parameter": {
                    "valueIsAdjusting": "boolean"
                },
                "Throw": []
            },
            "getValueIsAdjusting": {
                "Parameter": {},
                "Throw": []
            },
            "setSelectionMode": {
                "Parameter": {
                    "selectionMode": "int"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getSelectionMode": {
                "Parameter": {},
                "Throw": []
            },
            "addListSelectionListener": {
                "Parameter": {
                    "x": "ListSelectionListener"
                },
                "Throw": []
            },
            "removeListSelectionListener": {
                "Parameter": {
                    "x": "ListSelectionListener"
                },
                "Throw": []
            }
        }
    },
    "672": {
        "Package": "javax.swing",
        "Interface": "MenuElement",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboPopup",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.SystemMenuBar",
            "javax.swing.JCheckBoxMenuItem",
            "javax.swing.JMenu",
            "javax.swing.JMenuBar",
            "javax.swing.JMenuItem",
            "javax.swing.JPopupMenu",
            "javax.swing.JRadioButtonMenuItem",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalComboPopup"
        ],
        "Method": {
            "processMouseEvent": {
                "Parameter": {
                    "event": "MouseEvent",
                    "path": "MenuElement",
                    "manager": "MenuSelectionManager"
                },
                "Throw": []
            },
            "processKeyEvent": {
                "Parameter": {
                    "event": "KeyEvent",
                    "path": "MenuElement",
                    "manager": "MenuSelectionManager"
                },
                "Throw": []
            },
            "menuSelectionChanged": {
                "Parameter": {
                    "isIncluded": "boolean"
                },
                "Throw": []
            },
            "getSubElements": {
                "Parameter": {},
                "Throw": []
            },
            "getComponent": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "673": {
        "Package": "javax.swing",
        "Interface": "MutableComboBoxModel",
        "Superinterface": [
            "javax.swing.ComboBoxModel",
            "javax.swing.ListModel"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultComboBoxModel"
        ],
        "Method": {
            "addElement": {
                "Parameter": {
                    "item": "E"
                },
                "Throw": []
            },
            "removeElement": {
                "Parameter": {
                    "obj": "Object"
                },
                "Throw": []
            },
            "insertElementAt": {
                "Parameter": {
                    "item": "E",
                    "index": "int"
                },
                "Throw": []
            },
            "removeElementAt": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            }
        }
    },
    "674": {
        "Package": "javax.swing",
        "Interface": "Painter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.nimbus.AbstractRegionPainter"
        ],
        "Method": {
            "paint": {
                "Parameter": {
                    "g": "Graphics2D",
                    "object": "T",
                    "width": "int",
                    "height": "int"
                },
                "Throw": []
            }
        }
    },
    "675": {
        "Package": "javax.swing",
        "Interface": "Renderer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setValue": {
                "Parameter": {
                    "aValue": "Object",
                    "isSelected": "boolean"
                },
                "Throw": []
            },
            "getComponent": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "676": {
        "Package": "javax.swing",
        "Interface": "RootPaneContainer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JApplet",
            "javax.swing.JDialog",
            "javax.swing.JFrame",
            "javax.swing.JInternalFrame",
            "javax.swing.JWindow"
        ],
        "Method": {
            "getRootPane": {
                "Parameter": {},
                "Throw": []
            },
            "setContentPane": {
                "Parameter": {
                    "contentPane": "Container"
                },
                "Throw": "java.awt.IllegalComponentStateException"
            },
            "getContentPane": {
                "Parameter": {},
                "Throw": []
            },
            "setLayeredPane": {
                "Parameter": {
                    "layeredPane": "JLayeredPane"
                },
                "Throw": "java.awt.IllegalComponentStateException"
            },
            "getLayeredPane": {
                "Parameter": {},
                "Throw": []
            },
            "setGlassPane": {
                "Parameter": {
                    "glassPane": "Component"
                },
                "Throw": []
            },
            "getGlassPane": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "677": {
        "Package": "javax.swing",
        "Interface": "Scrollable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.tree.DefaultTreeCellEditor.DefaultTextField",
            "javax.swing.JEditorPane",
            "javax.swing.JFormattedTextField",
            "javax.swing.JLayer",
            "javax.swing.JList",
            "javax.swing.JPasswordField",
            "javax.swing.JTable",
            "javax.swing.JTextArea",
            "javax.swing.text.JTextComponent",
            "javax.swing.JTextField",
            "javax.swing.JTextPane",
            "javax.swing.JTree"
        ],
        "Method": {
            "getPreferredScrollableViewportSize": {
                "Parameter": {},
                "Throw": []
            },
            "getScrollableUnitIncrement": {
                "Parameter": {
                    "visibleRect": "Rectangle",
                    "orientation": "int",
                    "direction": "int"
                },
                "Throw": []
            },
            "getScrollableBlockIncrement": {
                "Parameter": {
                    "visibleRect": "Rectangle",
                    "orientation": "int",
                    "direction": "int"
                },
                "Throw": []
            },
            "getScrollableTracksViewportWidth": {
                "Parameter": {},
                "Throw": []
            },
            "getScrollableTracksViewportHeight": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "678": {
        "Package": "javax.swing",
        "Interface": "ScrollPaneConstants",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicScrollPaneUI",
            "javax.swing.JScrollPane",
            "javax.swing.plaf.metal.MetalScrollPaneUI",
            "javax.swing.ScrollPaneLayout",
            "javax.swing.ScrollPaneLayout.UIResource",
            "javax.swing.plaf.synth.SynthScrollPaneUI"
        ],
        "Method": {}
    },
    "679": {
        "Package": "javax.swing",
        "Interface": "SingleSelectionModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultSingleSelectionModel"
        ],
        "Method": {
            "getSelectedIndex": {
                "Parameter": {},
                "Throw": []
            },
            "setSelectedIndex": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "clearSelection": {
                "Parameter": {},
                "Throw": []
            },
            "isSelected": {
                "Parameter": {},
                "Throw": []
            },
            "addChangeListener": {
                "Parameter": {
                    "listener": "ChangeListener"
                },
                "Throw": []
            },
            "removeChangeListener": {
                "Parameter": {
                    "listener": "ChangeListener"
                },
                "Throw": []
            }
        }
    },
    "680": {
        "Package": "javax.swing",
        "Interface": "SpinnerModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractSpinnerModel",
            "javax.swing.SpinnerDateModel",
            "javax.swing.SpinnerListModel",
            "javax.swing.SpinnerNumberModel"
        ],
        "Method": {
            "getValue": {
                "Parameter": {},
                "Throw": []
            },
            "setValue": {
                "Parameter": {
                    "value": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getNextValue": {
                "Parameter": {},
                "Throw": []
            },
            "getPreviousValue": {
                "Parameter": {},
                "Throw": []
            },
            "addChangeListener": {
                "Parameter": {
                    "l": "ChangeListener"
                },
                "Throw": []
            },
            "removeChangeListener": {
                "Parameter": {
                    "l": "ChangeListener"
                },
                "Throw": []
            }
        }
    },
    "681": {
        "Package": "javax.swing",
        "Interface": "SwingConstants",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractButton",
            "javax.swing.text.AsyncBoxView",
            "javax.swing.plaf.basic.BasicArrowButton",
            "javax.swing.plaf.basic.BasicComboBoxRenderer",
            "javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource",
            "javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener",
            "javax.swing.plaf.basic.BasicScrollBarUI",
            "javax.swing.plaf.basic.BasicTabbedPaneUI",
            "javax.swing.plaf.basic.BasicToolBarUI",
            "javax.swing.text.html.BlockView",
            "javax.swing.text.BoxView",
            "javax.swing.text.ComponentView",
            "javax.swing.text.CompositeView",
            "javax.swing.DefaultListCellRenderer",
            "javax.swing.DefaultListCellRenderer.UIResource",
            "javax.swing.table.DefaultTableCellRenderer",
            "javax.swing.table.DefaultTableCellRenderer.UIResource",
            "javax.swing.tree.DefaultTreeCellEditor.DefaultTextField",
            "javax.swing.tree.DefaultTreeCellRenderer",
            "javax.swing.text.FieldView",
            "javax.swing.text.FlowView",
            "javax.swing.text.html.FormView",
            "javax.swing.text.GlyphView",
            "javax.swing.text.IconView",
            "javax.swing.text.html.ImageView",
            "javax.swing.text.html.InlineView",
            "javax.swing.JButton",
            "javax.swing.JCheckBox",
            "javax.swing.JCheckBoxMenuItem",
            "javax.swing.JFormattedTextField",
            "javax.swing.JLabel",
            "javax.swing.JMenu",
            "javax.swing.JMenuItem",
            "javax.swing.JPasswordField",
            "javax.swing.JPopupMenu.Separator",
            "javax.swing.JProgressBar",
            "javax.swing.JRadioButton",
            "javax.swing.JRadioButtonMenuItem",
            "javax.swing.JSeparator",
            "javax.swing.JSlider",
            "javax.swing.JTabbedPane",
            "javax.swing.JTextField",
            "javax.swing.JToggleButton",
            "javax.swing.JToolBar",
            "javax.swing.JToolBar.Separator",
            "javax.swing.text.LabelView",
            "javax.swing.text.html.ListView",
            "javax.swing.plaf.metal.MetalBorders.ToolBarBorder",
            "javax.swing.plaf.metal.MetalComboBoxButton",
            "javax.swing.plaf.metal.MetalFileChooserUI.FileRenderer",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxRenderer",
            "javax.swing.plaf.metal.MetalScrollBarUI",
            "javax.swing.plaf.metal.MetalScrollButton",
            "javax.swing.plaf.metal.MetalTabbedPaneUI",
            "javax.swing.plaf.metal.MetalToolBarUI",
            "javax.swing.text.html.ObjectView",
            "javax.swing.text.ParagraphView",
            "javax.swing.text.html.ParagraphView",
            "javax.swing.text.PasswordView",
            "javax.swing.text.PlainView",
            "javax.swing.SwingUtilities",
            "javax.swing.plaf.synth.SynthScrollBarUI",
            "javax.swing.plaf.synth.SynthTabbedPaneUI",
            "javax.swing.plaf.synth.SynthToolBarUI",
            "javax.swing.text.TableView",
            "javax.swing.text.TableView.TableCell",
            "javax.swing.text.TableView.TableRow",
            "javax.swing.text.View",
            "javax.swing.text.WrappedPlainView",
            "javax.swing.text.ZoneView"
        ],
        "Method": {}
    },
    "682": {
        "Package": "javax.swing",
        "Interface": "UIDefaults.ActiveValue",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createValue": {
                "Parameter": {
                    "table": "UIDefaults"
                },
                "Throw": []
            }
        }
    },
    "683": {
        "Package": "javax.swing",
        "Interface": "UIDefaults.LazyValue",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.UIDefaults.LazyInputMap",
            "javax.swing.UIDefaults.ProxyLazyValue"
        ],
        "Method": {
            "createValue": {
                "Parameter": {
                    "table": "UIDefaults"
                },
                "Throw": []
            }
        }
    },
    "684": {
        "Package": "javax.swing",
        "Interface": "WindowConstants",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JDialog",
            "javax.swing.JFrame",
            "javax.swing.JInternalFrame"
        ],
        "Method": {}
    },
    "685": {
        "Package": "javax.swing.border",
        "Interface": "Border",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.border.AbstractBorder",
            "javax.swing.plaf.basic.BasicBorders.ButtonBorder",
            "javax.swing.plaf.basic.BasicBorders.FieldBorder",
            "javax.swing.plaf.basic.BasicBorders.MarginBorder",
            "javax.swing.plaf.basic.BasicBorders.MenuBarBorder",
            "javax.swing.plaf.basic.BasicBorders.RadioButtonBorder",
            "javax.swing.plaf.basic.BasicBorders.RolloverButtonBorder",
            "javax.swing.plaf.basic.BasicBorders.SplitPaneBorder",
            "javax.swing.plaf.basic.BasicBorders.ToggleButtonBorder",
            "javax.swing.border.BevelBorder",
            "javax.swing.plaf.BorderUIResource",
            "javax.swing.plaf.BorderUIResource.BevelBorderUIResource",
            "javax.swing.plaf.BorderUIResource.CompoundBorderUIResource",
            "javax.swing.plaf.BorderUIResource.EmptyBorderUIResource",
            "javax.swing.plaf.BorderUIResource.EtchedBorderUIResource",
            "javax.swing.plaf.BorderUIResource.LineBorderUIResource",
            "javax.swing.plaf.BorderUIResource.MatteBorderUIResource",
            "javax.swing.plaf.BorderUIResource.TitledBorderUIResource",
            "javax.swing.border.CompoundBorder",
            "javax.swing.border.EmptyBorder",
            "javax.swing.border.EtchedBorder",
            "javax.swing.border.LineBorder",
            "javax.swing.border.MatteBorder",
            "javax.swing.plaf.metal.MetalBorders.ButtonBorder",
            "javax.swing.plaf.metal.MetalBorders.Flush3DBorder",
            "javax.swing.plaf.metal.MetalBorders.InternalFrameBorder",
            "javax.swing.plaf.metal.MetalBorders.MenuBarBorder",
            "javax.swing.plaf.metal.MetalBorders.MenuItemBorder",
            "javax.swing.plaf.metal.MetalBorders.OptionDialogBorder",
            "javax.swing.plaf.metal.MetalBorders.PaletteBorder",
            "javax.swing.plaf.metal.MetalBorders.PopupMenuBorder",
            "javax.swing.plaf.metal.MetalBorders.RolloverButtonBorder",
            "javax.swing.plaf.metal.MetalBorders.ScrollPaneBorder",
            "javax.swing.plaf.metal.MetalBorders.TableHeaderBorder",
            "javax.swing.plaf.metal.MetalBorders.TextFieldBorder",
            "javax.swing.plaf.metal.MetalBorders.ToggleButtonBorder",
            "javax.swing.plaf.metal.MetalBorders.ToolBarBorder",
            "javax.swing.border.SoftBevelBorder",
            "javax.swing.border.StrokeBorder",
            "javax.swing.border.TitledBorder"
        ],
        "Method": {
            "paintBorder": {
                "Parameter": {
                    "c": "Component",
                    "g": "Graphics",
                    "x": "int",
                    "y": "int",
                    "width": "int",
                    "height": "int"
                },
                "Throw": []
            },
            "getBorderInsets": {
                "Parameter": {
                    "c": "Component"
                },
                "Throw": []
            },
            "isBorderOpaque": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "686": {
        "Package": "javax.swing.colorchooser",
        "Interface": "ColorSelectionModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.colorchooser.DefaultColorSelectionModel"
        ],
        "Method": {
            "getSelectedColor": {
                "Parameter": {},
                "Throw": []
            },
            "setSelectedColor": {
                "Parameter": {
                    "color": "Color"
                },
                "Throw": []
            },
            "addChangeListener": {
                "Parameter": {
                    "listener": "ChangeListener"
                },
                "Throw": []
            },
            "removeChangeListener": {
                "Parameter": {
                    "listener": "ChangeListener"
                },
                "Throw": []
            }
        }
    },
    "687": {
        "Package": "javax.swing.event",
        "Interface": "AncestorListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "ancestorAdded": {
                "Parameter": {
                    "event": "AncestorEvent"
                },
                "Throw": []
            },
            "ancestorRemoved": {
                "Parameter": {
                    "event": "AncestorEvent"
                },
                "Throw": []
            },
            "ancestorMoved": {
                "Parameter": {
                    "event": "AncestorEvent"
                },
                "Throw": []
            }
        }
    },
    "688": {
        "Package": "javax.swing.event",
        "Interface": "CaretListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField"
        ],
        "Method": {
            "caretUpdate": {
                "Parameter": {
                    "e": "CaretEvent"
                },
                "Throw": []
            }
        }
    },
    "689": {
        "Package": "javax.swing.event",
        "Interface": "CellEditorListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicTreeUI.CellEditorHandler",
            "javax.swing.JTable",
            "javax.swing.JTable.AccessibleJTable"
        ],
        "Method": {
            "editingStopped": {
                "Parameter": {
                    "e": "ChangeEvent"
                },
                "Throw": []
            },
            "editingCanceled": {
                "Parameter": {
                    "e": "ChangeEvent"
                },
                "Throw": []
            }
        }
    },
    "690": {
        "Package": "javax.swing.event",
        "Interface": "ChangeListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractButton.ButtonChangeListener",
            "javax.swing.plaf.basic.BasicButtonListener",
            "javax.swing.plaf.basic.BasicMenuUI.ChangeHandler",
            "javax.swing.plaf.basic.BasicProgressBarUI.ChangeHandler",
            "javax.swing.plaf.basic.BasicScrollBarUI.ModelListener",
            "javax.swing.plaf.basic.BasicScrollPaneUI.HSBChangeListener",
            "javax.swing.plaf.basic.BasicScrollPaneUI.ViewportChangeHandler",
            "javax.swing.plaf.basic.BasicScrollPaneUI.VSBChangeListener",
            "javax.swing.plaf.basic.BasicSliderUI.ChangeHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.TabSelectionHandler",
            "javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuItem.AccessibleJMenuItem",
            "javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem",
            "javax.swing.JScrollPane.AccessibleJScrollPane",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JSpinner.DateEditor",
            "javax.swing.JSpinner.DefaultEditor",
            "javax.swing.JSpinner.ListEditor",
            "javax.swing.JSpinner.NumberEditor",
            "javax.swing.JTabbedPane.AccessibleJTabbedPane",
            "javax.swing.JTabbedPane.ModelListener",
            "javax.swing.ProgressMonitor.AccessibleProgressMonitor"
        ],
        "Method": {
            "stateChanged": {
                "Parameter": {
                    "e": "ChangeEvent"
                },
                "Throw": []
            }
        }
    },
    "691": {
        "Package": "javax.swing.event",
        "Interface": "DocumentEvent.ElementChange",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.AbstractDocument.ElementEdit"
        ],
        "Method": {
            "getElement": {
                "Parameter": {},
                "Throw": []
            },
            "getIndex": {
                "Parameter": {},
                "Throw": []
            },
            "getChildrenRemoved": {
                "Parameter": {},
                "Throw": []
            },
            "getChildrenAdded": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "692": {
        "Package": "javax.swing.event",
        "Interface": "DocumentEvent",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.AbstractDocument.DefaultDocumentEvent"
        ],
        "Method": {
            "getOffset": {
                "Parameter": {},
                "Throw": []
            },
            "getLength": {
                "Parameter": {},
                "Throw": []
            },
            "getDocument": {
                "Parameter": {},
                "Throw": []
            },
            "getType": {
                "Parameter": {},
                "Throw": []
            },
            "getChange": {
                "Parameter": {
                    "elem": "Element"
                },
                "Throw": []
            }
        }
    },
    "693": {
        "Package": "javax.swing.event",
        "Interface": "DocumentListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField"
        ],
        "Method": {
            "insertUpdate": {
                "Parameter": {
                    "e": "DocumentEvent"
                },
                "Throw": []
            },
            "removeUpdate": {
                "Parameter": {
                    "e": "DocumentEvent"
                },
                "Throw": []
            },
            "changedUpdate": {
                "Parameter": {
                    "e": "DocumentEvent"
                },
                "Throw": []
            }
        }
    },
    "694": {
        "Package": "javax.swing.event",
        "Interface": "HyperlinkListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "hyperlinkUpdate": {
                "Parameter": {
                    "e": "HyperlinkEvent"
                },
                "Throw": []
            }
        }
    },
    "695": {
        "Package": "javax.swing.event",
        "Interface": "InternalFrameListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicInternalFrameUI.BasicInternalFrameListener",
            "javax.swing.event.InternalFrameAdapter"
        ],
        "Method": {
            "internalFrameOpened": {
                "Parameter": {
                    "e": "InternalFrameEvent"
                },
                "Throw": []
            },
            "internalFrameClosing": {
                "Parameter": {
                    "e": "InternalFrameEvent"
                },
                "Throw": []
            },
            "internalFrameClosed": {
                "Parameter": {
                    "e": "InternalFrameEvent"
                },
                "Throw": []
            },
            "internalFrameIconified": {
                "Parameter": {
                    "e": "InternalFrameEvent"
                },
                "Throw": []
            },
            "internalFrameDeiconified": {
                "Parameter": {
                    "e": "InternalFrameEvent"
                },
                "Throw": []
            },
            "internalFrameActivated": {
                "Parameter": {
                    "e": "InternalFrameEvent"
                },
                "Throw": []
            },
            "internalFrameDeactivated": {
                "Parameter": {
                    "e": "InternalFrameEvent"
                },
                "Throw": []
            }
        }
    },
    "696": {
        "Package": "javax.swing.event",
        "Interface": "ListDataListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboBoxUI.ListDataHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListDataHandler",
            "javax.swing.plaf.basic.BasicListUI.ListDataHandler",
            "javax.swing.JComboBox",
            "javax.swing.JList.AccessibleJList"
        ],
        "Method": {
            "intervalAdded": {
                "Parameter": {
                    "e": "ListDataEvent"
                },
                "Throw": []
            },
            "intervalRemoved": {
                "Parameter": {
                    "e": "ListDataEvent"
                },
                "Throw": []
            },
            "contentsChanged": {
                "Parameter": {
                    "e": "ListDataEvent"
                },
                "Throw": []
            }
        }
    },
    "697": {
        "Package": "javax.swing.event",
        "Interface": "ListSelectionListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboPopup.ListSelectionHandler",
            "javax.swing.plaf.basic.BasicFileChooserUI.SelectionListener",
            "javax.swing.plaf.basic.BasicListUI.ListSelectionHandler",
            "javax.swing.table.DefaultTableColumnModel",
            "javax.swing.JList.AccessibleJList",
            "javax.swing.JTable",
            "javax.swing.JTable.AccessibleJTable"
        ],
        "Method": {
            "valueChanged": {
                "Parameter": {
                    "e": "ListSelectionEvent"
                },
                "Throw": []
            }
        }
    },
    "698": {
        "Package": "javax.swing.event",
        "Interface": "MenuDragMouseListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "menuDragMouseEntered": {
                "Parameter": {
                    "e": "MenuDragMouseEvent"
                },
                "Throw": []
            },
            "menuDragMouseExited": {
                "Parameter": {
                    "e": "MenuDragMouseEvent"
                },
                "Throw": []
            },
            "menuDragMouseDragged": {
                "Parameter": {
                    "e": "MenuDragMouseEvent"
                },
                "Throw": []
            },
            "menuDragMouseReleased": {
                "Parameter": {
                    "e": "MenuDragMouseEvent"
                },
                "Throw": []
            }
        }
    },
    "699": {
        "Package": "javax.swing.event",
        "Interface": "MenuKeyListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "menuKeyTyped": {
                "Parameter": {
                    "e": "MenuKeyEvent"
                },
                "Throw": []
            },
            "menuKeyPressed": {
                "Parameter": {
                    "e": "MenuKeyEvent"
                },
                "Throw": []
            },
            "menuKeyReleased": {
                "Parameter": {
                    "e": "MenuKeyEvent"
                },
                "Throw": []
            }
        }
    },
    "700": {
        "Package": "javax.swing.event",
        "Interface": "MenuListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "menuSelected": {
                "Parameter": {
                    "e": "MenuEvent"
                },
                "Throw": []
            },
            "menuDeselected": {
                "Parameter": {
                    "e": "MenuEvent"
                },
                "Throw": []
            },
            "menuCanceled": {
                "Parameter": {
                    "e": "MenuEvent"
                },
                "Throw": []
            }
        }
    },
    "701": {
        "Package": "javax.swing.event",
        "Interface": "MouseInputListener",
        "Superinterface": [
            "java.util.EventListener",
            "java.awt.event.MouseListener",
            "java.awt.event.MouseMotionListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.GlassPaneDispatcher",
            "javax.swing.plaf.basic.BasicListUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicMenuItemUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicMenuUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicSliderUI.TrackListener",
            "javax.swing.plaf.basic.BasicTableHeaderUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicTableUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicToolBarUI.DockingListener",
            "javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler",
            "javax.swing.plaf.metal.MetalToolBarUI.MetalDockingListener",
            "javax.swing.event.MouseInputAdapter"
        ],
        "Method": {}
    },
    "702": {
        "Package": "javax.swing.event",
        "Interface": "PopupMenuListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "popupMenuWillBecomeVisible": {
                "Parameter": {
                    "e": "PopupMenuEvent"
                },
                "Throw": []
            },
            "popupMenuWillBecomeInvisible": {
                "Parameter": {
                    "e": "PopupMenuEvent"
                },
                "Throw": []
            },
            "popupMenuCanceled": {
                "Parameter": {
                    "e": "PopupMenuEvent"
                },
                "Throw": []
            }
        }
    },
    "703": {
        "Package": "javax.swing.event",
        "Interface": "RowSorterListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JTable"
        ],
        "Method": {
            "sorterChanged": {
                "Parameter": {
                    "e": "RowSorterEvent"
                },
                "Throw": []
            }
        }
    },
    "704": {
        "Package": "javax.swing.event",
        "Interface": "TableColumnModelListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JTable",
            "javax.swing.JTable.AccessibleJTable",
            "javax.swing.table.JTableHeader"
        ],
        "Method": {
            "columnAdded": {
                "Parameter": {
                    "e": "TableColumnModelEvent"
                },
                "Throw": []
            },
            "columnRemoved": {
                "Parameter": {
                    "e": "TableColumnModelEvent"
                },
                "Throw": []
            },
            "columnMoved": {
                "Parameter": {
                    "e": "TableColumnModelEvent"
                },
                "Throw": []
            },
            "columnMarginChanged": {
                "Parameter": {
                    "e": "ChangeEvent"
                },
                "Throw": []
            },
            "columnSelectionChanged": {
                "Parameter": {
                    "e": "ListSelectionEvent"
                },
                "Throw": []
            }
        }
    },
    "705": {
        "Package": "javax.swing.event",
        "Interface": "TableModelListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JTable",
            "javax.swing.JTable.AccessibleJTable"
        ],
        "Method": {
            "tableChanged": {
                "Parameter": {
                    "e": "TableModelEvent"
                },
                "Throw": []
            }
        }
    },
    "706": {
        "Package": "javax.swing.event",
        "Interface": "TreeExpansionListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicTreeUI.TreeExpansionHandler",
            "javax.swing.JTree.AccessibleJTree"
        ],
        "Method": {
            "treeExpanded": {
                "Parameter": {
                    "event": "TreeExpansionEvent"
                },
                "Throw": []
            },
            "treeCollapsed": {
                "Parameter": {
                    "event": "TreeExpansionEvent"
                },
                "Throw": []
            }
        }
    },
    "707": {
        "Package": "javax.swing.event",
        "Interface": "TreeModelListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicTreeUI.TreeModelHandler",
            "javax.swing.JTree.AccessibleJTree",
            "javax.swing.JTree.TreeModelHandler"
        ],
        "Method": {
            "treeNodesChanged": {
                "Parameter": {
                    "e": "TreeModelEvent"
                },
                "Throw": []
            },
            "treeNodesInserted": {
                "Parameter": {
                    "e": "TreeModelEvent"
                },
                "Throw": []
            },
            "treeNodesRemoved": {
                "Parameter": {
                    "e": "TreeModelEvent"
                },
                "Throw": []
            },
            "treeStructureChanged": {
                "Parameter": {
                    "e": "TreeModelEvent"
                },
                "Throw": []
            }
        }
    },
    "708": {
        "Package": "javax.swing.event",
        "Interface": "TreeSelectionListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicTreeUI.TreeSelectionHandler",
            "javax.swing.tree.DefaultTreeCellEditor",
            "javax.swing.JTree.AccessibleJTree",
            "javax.swing.JTree.TreeSelectionRedirector"
        ],
        "Method": {
            "valueChanged": {
                "Parameter": {
                    "e": "TreeSelectionEvent"
                },
                "Throw": []
            }
        }
    },
    "709": {
        "Package": "javax.swing.event",
        "Interface": "TreeWillExpandListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "treeWillExpand": {
                "Parameter": {
                    "event": "TreeExpansionEvent"
                },
                "Throw": "javax.swing.tree.ExpandVetoException"
            },
            "treeWillCollapse": {
                "Parameter": {
                    "event": "TreeExpansionEvent"
                },
                "Throw": "javax.swing.tree.ExpandVetoException"
            }
        }
    },
    "710": {
        "Package": "javax.swing.event",
        "Interface": "UndoableEditListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.undo.UndoManager"
        ],
        "Method": {
            "undoableEditHappened": {
                "Parameter": {
                    "e": "UndoableEditEvent"
                },
                "Throw": []
            }
        }
    },
    "711": {
        "Package": "javax.swing.plaf",
        "Interface": "UIResource",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.ActionMapUIResource",
            "javax.swing.plaf.basic.BasicBorders.ButtonBorder",
            "javax.swing.plaf.basic.BasicBorders.FieldBorder",
            "javax.swing.plaf.basic.BasicBorders.MarginBorder",
            "javax.swing.plaf.basic.BasicBorders.MenuBarBorder",
            "javax.swing.plaf.basic.BasicBorders.RadioButtonBorder",
            "javax.swing.plaf.basic.BasicBorders.RolloverButtonBorder",
            "javax.swing.plaf.basic.BasicBorders.SplitPaneBorder",
            "javax.swing.plaf.basic.BasicBorders.ToggleButtonBorder",
            "javax.swing.plaf.basic.BasicComboBoxEditor.UIResource",
            "javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource",
            "javax.swing.plaf.basic.BasicTextUI.BasicCaret",
            "javax.swing.plaf.basic.BasicTextUI.BasicHighlighter",
            "javax.swing.plaf.BorderUIResource",
            "javax.swing.plaf.BorderUIResource.BevelBorderUIResource",
            "javax.swing.plaf.BorderUIResource.CompoundBorderUIResource",
            "javax.swing.plaf.BorderUIResource.EmptyBorderUIResource",
            "javax.swing.plaf.BorderUIResource.EtchedBorderUIResource",
            "javax.swing.plaf.BorderUIResource.LineBorderUIResource",
            "javax.swing.plaf.BorderUIResource.MatteBorderUIResource",
            "javax.swing.plaf.BorderUIResource.TitledBorderUIResource",
            "javax.swing.plaf.ColorUIResource",
            "javax.swing.plaf.ComponentInputMapUIResource",
            "javax.swing.DefaultListCellRenderer.UIResource",
            "javax.swing.plaf.basic.DefaultMenuLayout",
            "javax.swing.table.DefaultTableCellRenderer.UIResource",
            "javax.swing.plaf.DimensionUIResource",
            "javax.swing.plaf.FontUIResource",
            "javax.swing.plaf.IconUIResource",
            "javax.swing.plaf.InputMapUIResource",
            "javax.swing.plaf.InsetsUIResource",
            "javax.swing.JScrollPane.ScrollBar",
            "javax.swing.plaf.metal.MetalBorders.ButtonBorder",
            "javax.swing.plaf.metal.MetalBorders.Flush3DBorder",
            "javax.swing.plaf.metal.MetalBorders.InternalFrameBorder",
            "javax.swing.plaf.metal.MetalBorders.MenuBarBorder",
            "javax.swing.plaf.metal.MetalBorders.MenuItemBorder",
            "javax.swing.plaf.metal.MetalBorders.OptionDialogBorder",
            "javax.swing.plaf.metal.MetalBorders.PaletteBorder",
            "javax.swing.plaf.metal.MetalBorders.PopupMenuBorder",
            "javax.swing.plaf.metal.MetalBorders.RolloverButtonBorder",
            "javax.swing.plaf.metal.MetalBorders.ScrollPaneBorder",
            "javax.swing.plaf.metal.MetalBorders.TextFieldBorder",
            "javax.swing.plaf.metal.MetalBorders.ToggleButtonBorder",
            "javax.swing.plaf.metal.MetalBorders.ToolBarBorder",
            "javax.swing.plaf.metal.MetalCheckBoxIcon",
            "javax.swing.plaf.metal.MetalComboBoxEditor.UIResource",
            "javax.swing.plaf.metal.MetalIconFactory.PaletteCloseIcon",
            "javax.swing.ScrollPaneLayout.UIResource"
        ],
        "Method": {}
    },
    "712": {
        "Package": "javax.swing.plaf.basic",
        "Interface": "ComboPopup",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboPopup",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalComboPopup"
        ],
        "Method": {
            "show": {
                "Parameter": {},
                "Throw": []
            },
            "hide": {
                "Parameter": {},
                "Throw": []
            },
            "isVisible": {
                "Parameter": {},
                "Throw": []
            },
            "getList": {
                "Parameter": {},
                "Throw": []
            },
            "getMouseListener": {
                "Parameter": {},
                "Throw": []
            },
            "getMouseMotionListener": {
                "Parameter": {},
                "Throw": []
            },
            "getKeyListener": {
                "Parameter": {},
                "Throw": []
            },
            "uninstallingUI": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "713": {
        "Package": "javax.swing.plaf.synth",
        "Interface": "SynthConstants",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.plaf.synth.SynthUI"
        ],
        "Subinterface": [
            "javax.swing.plaf.synth.SynthButtonUI",
            "javax.swing.plaf.synth.SynthCheckBoxMenuItemUI",
            "javax.swing.plaf.synth.SynthCheckBoxUI",
            "javax.swing.plaf.synth.SynthColorChooserUI",
            "javax.swing.plaf.synth.SynthComboBoxUI",
            "javax.swing.plaf.synth.SynthDesktopIconUI",
            "javax.swing.plaf.synth.SynthDesktopPaneUI",
            "javax.swing.plaf.synth.SynthEditorPaneUI",
            "javax.swing.plaf.synth.SynthFormattedTextFieldUI",
            "javax.swing.plaf.synth.SynthInternalFrameUI",
            "javax.swing.plaf.synth.SynthLabelUI",
            "javax.swing.plaf.synth.SynthListUI",
            "javax.swing.plaf.synth.SynthMenuBarUI",
            "javax.swing.plaf.synth.SynthMenuItemUI",
            "javax.swing.plaf.synth.SynthMenuUI",
            "javax.swing.plaf.synth.SynthOptionPaneUI",
            "javax.swing.plaf.synth.SynthPanelUI",
            "javax.swing.plaf.synth.SynthPasswordFieldUI",
            "javax.swing.plaf.synth.SynthPopupMenuUI",
            "javax.swing.plaf.synth.SynthProgressBarUI",
            "javax.swing.plaf.synth.SynthRadioButtonMenuItemUI",
            "javax.swing.plaf.synth.SynthRadioButtonUI",
            "javax.swing.plaf.synth.SynthRootPaneUI",
            "javax.swing.plaf.synth.SynthScrollBarUI",
            "javax.swing.plaf.synth.SynthScrollPaneUI",
            "javax.swing.plaf.synth.SynthSeparatorUI",
            "javax.swing.plaf.synth.SynthSliderUI",
            "javax.swing.plaf.synth.SynthSpinnerUI",
            "javax.swing.plaf.synth.SynthSplitPaneUI",
            "javax.swing.plaf.synth.SynthTabbedPaneUI",
            "javax.swing.plaf.synth.SynthTableHeaderUI",
            "javax.swing.plaf.synth.SynthTableUI",
            "javax.swing.plaf.synth.SynthTextAreaUI",
            "javax.swing.plaf.synth.SynthTextFieldUI",
            "javax.swing.plaf.synth.SynthTextPaneUI",
            "javax.swing.plaf.synth.SynthToggleButtonUI",
            "javax.swing.plaf.synth.SynthToolBarUI",
            "javax.swing.plaf.synth.SynthToolTipUI",
            "javax.swing.plaf.synth.SynthTreeUI",
            "javax.swing.plaf.synth.SynthViewportUI"
        ],
        "Method": {}
    },
    "714": {
        "Package": "javax.swing.plaf.synth",
        "Interface": "SynthUI",
        "Superinterface": [
            "javax.swing.plaf.synth.SynthConstants"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.synth.SynthButtonUI",
            "javax.swing.plaf.synth.SynthCheckBoxMenuItemUI",
            "javax.swing.plaf.synth.SynthCheckBoxUI",
            "javax.swing.plaf.synth.SynthColorChooserUI",
            "javax.swing.plaf.synth.SynthComboBoxUI",
            "javax.swing.plaf.synth.SynthDesktopIconUI",
            "javax.swing.plaf.synth.SynthDesktopPaneUI",
            "javax.swing.plaf.synth.SynthEditorPaneUI",
            "javax.swing.plaf.synth.SynthFormattedTextFieldUI",
            "javax.swing.plaf.synth.SynthInternalFrameUI",
            "javax.swing.plaf.synth.SynthLabelUI",
            "javax.swing.plaf.synth.SynthListUI",
            "javax.swing.plaf.synth.SynthMenuBarUI",
            "javax.swing.plaf.synth.SynthMenuItemUI",
            "javax.swing.plaf.synth.SynthMenuUI",
            "javax.swing.plaf.synth.SynthOptionPaneUI",
            "javax.swing.plaf.synth.SynthPanelUI",
            "javax.swing.plaf.synth.SynthPasswordFieldUI",
            "javax.swing.plaf.synth.SynthPopupMenuUI",
            "javax.swing.plaf.synth.SynthProgressBarUI",
            "javax.swing.plaf.synth.SynthRadioButtonMenuItemUI",
            "javax.swing.plaf.synth.SynthRadioButtonUI",
            "javax.swing.plaf.synth.SynthRootPaneUI",
            "javax.swing.plaf.synth.SynthScrollBarUI",
            "javax.swing.plaf.synth.SynthScrollPaneUI",
            "javax.swing.plaf.synth.SynthSeparatorUI",
            "javax.swing.plaf.synth.SynthSliderUI",
            "javax.swing.plaf.synth.SynthSpinnerUI",
            "javax.swing.plaf.synth.SynthSplitPaneUI",
            "javax.swing.plaf.synth.SynthTabbedPaneUI",
            "javax.swing.plaf.synth.SynthTableHeaderUI",
            "javax.swing.plaf.synth.SynthTableUI",
            "javax.swing.plaf.synth.SynthTextAreaUI",
            "javax.swing.plaf.synth.SynthTextFieldUI",
            "javax.swing.plaf.synth.SynthTextPaneUI",
            "javax.swing.plaf.synth.SynthToggleButtonUI",
            "javax.swing.plaf.synth.SynthToolBarUI",
            "javax.swing.plaf.synth.SynthToolTipUI",
            "javax.swing.plaf.synth.SynthTreeUI",
            "javax.swing.plaf.synth.SynthViewportUI"
        ],
        "Method": {
            "getContext": {
                "Parameter": {
                    "c": "JComponent"
                },
                "Throw": []
            },
            "paintBorder": {
                "Parameter": {
                    "context": "SynthContext",
                    "g": "Graphics",
                    "x": "int",
                    "y": "int",
                    "w": "int",
                    "h": "int"
                },
                "Throw": []
            }
        }
    },
    "715": {
        "Package": "javax.swing.table",
        "Interface": "TableCellEditor",
        "Superinterface": [
            "javax.swing.CellEditor"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultCellEditor"
        ],
        "Method": {
            "getTableCellEditorComponent": {
                "Parameter": {
                    "table": "JTable",
                    "value": "Object",
                    "isSelected": "boolean",
                    "row": "int",
                    "column": "int"
                },
                "Throw": []
            }
        }
    },
    "716": {
        "Package": "javax.swing.table",
        "Interface": "TableCellRenderer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.table.DefaultTableCellRenderer",
            "javax.swing.table.DefaultTableCellRenderer.UIResource"
        ],
        "Method": {
            "getTableCellRendererComponent": {
                "Parameter": {
                    "table": "JTable",
                    "value": "Object",
                    "isSelected": "boolean",
                    "hasFocus": "boolean",
                    "row": "int",
                    "column": "int"
                },
                "Throw": []
            }
        }
    },
    "717": {
        "Package": "javax.swing.table",
        "Interface": "TableColumnModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.table.DefaultTableColumnModel"
        ],
        "Method": {
            "addColumn": {
                "Parameter": {
                    "aColumn": "TableColumn"
                },
                "Throw": []
            },
            "removeColumn": {
                "Parameter": {
                    "column": "TableColumn"
                },
                "Throw": []
            },
            "moveColumn": {
                "Parameter": {
                    "columnIndex": "int",
                    "newIndex": "int"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "setColumnMargin": {
                "Parameter": {
                    "newMargin": "int"
                },
                "Throw": []
            },
            "getColumnCount": {
                "Parameter": {},
                "Throw": []
            },
            "getColumns": {
                "Parameter": {},
                "Throw": []
            },
            "getColumnIndex": {
                "Parameter": {
                    "columnIdentifier": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getColumn": {
                "Parameter": {
                    "columnIndex": "int"
                },
                "Throw": []
            },
            "getColumnMargin": {
                "Parameter": {},
                "Throw": []
            },
            "getColumnIndexAtX": {
                "Parameter": {
                    "xPosition": "int"
                },
                "Throw": []
            },
            "getTotalColumnWidth": {
                "Parameter": {},
                "Throw": []
            },
            "setColumnSelectionAllowed": {
                "Parameter": {
                    "flag": "boolean"
                },
                "Throw": []
            },
            "getColumnSelectionAllowed": {
                "Parameter": {},
                "Throw": []
            },
            "getSelectedColumns": {
                "Parameter": {},
                "Throw": []
            },
            "getSelectedColumnCount": {
                "Parameter": {},
                "Throw": []
            },
            "setSelectionModel": {
                "Parameter": {
                    "newModel": "ListSelectionModel"
                },
                "Throw": []
            },
            "getSelectionModel": {
                "Parameter": {},
                "Throw": []
            },
            "addColumnModelListener": {
                "Parameter": {
                    "x": "TableColumnModelListener"
                },
                "Throw": []
            },
            "removeColumnModelListener": {
                "Parameter": {
                    "x": "TableColumnModelListener"
                },
                "Throw": []
            }
        }
    },
    "718": {
        "Package": "javax.swing.table",
        "Interface": "TableModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.table.AbstractTableModel",
            "javax.swing.table.DefaultTableModel"
        ],
        "Method": {
            "getRowCount": {
                "Parameter": {},
                "Throw": []
            },
            "getColumnCount": {
                "Parameter": {},
                "Throw": []
            },
            "getColumnName": {
                "Parameter": {
                    "columnIndex": "int"
                },
                "Throw": []
            },
            "getColumnClass": {
                "Parameter": {
                    "columnIndex": "int"
                },
                "Throw": []
            },
            "isCellEditable": {
                "Parameter": {
                    "rowIndex": "int",
                    "columnIndex": "int"
                },
                "Throw": []
            },
            "getValueAt": {
                "Parameter": {
                    "rowIndex": "int",
                    "columnIndex": "int"
                },
                "Throw": []
            },
            "setValueAt": {
                "Parameter": {
                    "aValue": "Object",
                    "rowIndex": "int",
                    "columnIndex": "int"
                },
                "Throw": []
            },
            "addTableModelListener": {
                "Parameter": {
                    "l": "TableModelListener"
                },
                "Throw": []
            },
            "removeTableModelListener": {
                "Parameter": {
                    "l": "TableModelListener"
                },
                "Throw": []
            }
        }
    },
    "719": {
        "Package": "javax.swing.text",
        "Interface": "AbstractDocument.AttributeContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.StyleContext",
            "javax.swing.text.html.StyleSheet"
        ],
        "Method": {
            "addAttribute": {
                "Parameter": {
                    "old": "AttributeSet",
                    "name": "Object",
                    "value": "Object"
                },
                "Throw": []
            },
            "addAttributes": {
                "Parameter": {
                    "old": "AttributeSet",
                    "attr": "AttributeSet"
                },
                "Throw": []
            },
            "removeAttribute": {
                "Parameter": {
                    "old": "AttributeSet",
                    "name": "Object"
                },
                "Throw": []
            },
            "removeAttributes": {
                "Parameter": {
                    "old": "AttributeSet",
                    "attrs": "AttributeSet"
                },
                "Throw": []
            },
            "getEmptySet": {
                "Parameter": {},
                "Throw": []
            },
            "reclaim": {
                "Parameter": {
                    "a": "AttributeSet"
                },
                "Throw": []
            }
        }
    },
    "720": {
        "Package": "javax.swing.text",
        "Interface": "AbstractDocument.Content",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.GapContent",
            "javax.swing.text.StringContent"
        ],
        "Method": {
            "createPosition": {
                "Parameter": {
                    "offset": "int"
                },
                "Throw": "javax.swing.text.BadLocationException"
            },
            "length": {
                "Parameter": {},
                "Throw": []
            },
            "insertString": {
                "Parameter": {
                    "where": "int",
                    "str": "String"
                },
                "Throw": "javax.swing.text.BadLocationException"
            },
            "remove": {
                "Parameter": {
                    "where": "int",
                    "nitems": "int"
                },
                "Throw": "javax.swing.text.BadLocationException"
            },
            "getString": {
                "Parameter": {
                    "where": "int",
                    "len": "int"
                },
                "Throw": "javax.swing.text.BadLocationException"
            },
            "getChars": {
                "Parameter": {
                    "where": "int",
                    "len": "int",
                    "txt": "Segment"
                },
                "Throw": "javax.swing.text.BadLocationException"
            }
        }
    },
    "721": {
        "Package": "javax.swing.text",
        "Interface": "AttributeSet.CharacterAttribute",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.StyleConstants.CharacterConstants",
            "javax.swing.text.StyleConstants.ColorConstants",
            "javax.swing.text.StyleConstants.FontConstants"
        ],
        "Method": {}
    },
    "722": {
        "Package": "javax.swing.text",
        "Interface": "AttributeSet.ColorAttribute",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.StyleConstants.ColorConstants"
        ],
        "Method": {}
    },
    "723": {
        "Package": "javax.swing.text",
        "Interface": "AttributeSet.FontAttribute",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.StyleConstants.FontConstants"
        ],
        "Method": {}
    },
    "724": {
        "Package": "javax.swing.text",
        "Interface": "AttributeSet",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.text.MutableAttributeSet",
            "javax.swing.text.Style"
        ],
        "Subinterface": [
            "javax.swing.text.AbstractDocument.AbstractElement",
            "javax.swing.text.AbstractDocument.BranchElement",
            "javax.swing.text.AbstractDocument.LeafElement",
            "javax.swing.text.DefaultStyledDocument.SectionElement",
            "javax.swing.text.html.HTMLDocument.BlockElement",
            "javax.swing.text.html.HTMLDocument.RunElement",
            "javax.swing.text.SimpleAttributeSet",
            "javax.swing.text.StyleContext.NamedStyle",
            "javax.swing.text.StyleContext.SmallAttributeSet"
        ],
        "Method": {
            "getAttributeCount": {
                "Parameter": {},
                "Throw": []
            },
            "isDefined": {
                "Parameter": {
                    "attrName": "Object"
                },
                "Throw": []
            },
            "isEqual": {
                "Parameter": {
                    "attr": "AttributeSet"
                },
                "Throw": []
            },
            "copyAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "getAttribute": {
                "Parameter": {
                    "key": "Object"
                },
                "Throw": []
            },
            "getAttributeNames": {
                "Parameter": {},
                "Throw": []
            },
            "containsAttribute": {
                "Parameter": {
                    "name": "Object",
                    "value": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "containsAttributes": {
                "Parameter": {
                    "attributes": "AttributeSet"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getResolveParent": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "725": {
        "Package": "javax.swing.text",
        "Interface": "AttributeSet.ParagraphAttribute",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.StyleConstants.ParagraphConstants"
        ],
        "Method": {}
    },
    "726": {
        "Package": "javax.swing.text",
        "Interface": "Caret",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicTextUI.BasicCaret",
            "javax.swing.text.DefaultCaret"
        ],
        "Method": {
            "install": {
                "Parameter": {
                    "c": "JTextComponent"
                },
                "Throw": []
            },
            "deinstall": {
                "Parameter": {
                    "c": "JTextComponent"
                },
                "Throw": []
            },
            "paint": {
                "Parameter": {
                    "g": "Graphics"
                },
                "Throw": []
            },
            "addChangeListener": {
                "Parameter": {
                    "l": "ChangeListener"
                },
                "Throw": []
            },
            "removeChangeListener": {
                "Parameter": {
                    "l": "ChangeListener"
                },
                "Throw": []
            },
            "isVisible": {
                "Parameter": {},
                "Throw": []
            },
            "setVisible": {
                "Parameter": {
                    "v": "boolean"
                },
                "Throw": []
            },
            "isSelectionVisible": {
                "Parameter": {},
                "Throw": []
            },
            "setSelectionVisible": {
                "Parameter": {
                    "v": "boolean"
                },
                "Throw": []
            },
            "setMagicCaretPosition": {
                "Parameter": {
                    "p": "Point"
                },
                "Throw": []
            },
            "getMagicCaretPosition": {
                "Parameter": {},
                "Throw": []
            },
            "setBlinkRate": {
                "Parameter": {
                    "rate": "int"
                },
                "Throw": []
            },
            "getBlinkRate": {
                "Parameter": {},
                "Throw": []
            },
            "getDot": {
                "Parameter": {},
                "Throw": []
            },
            "getMark": {
                "Parameter": {},
                "Throw": []
            },
            "setDot": {
                "Parameter": {
                    "dot": "int"
                },
                "Throw": []
            },
            "moveDot": {
                "Parameter": {
                    "dot": "int"
                },
                "Throw": []
            }
        }
    },
    "727": {
        "Package": "javax.swing.text",
        "Interface": "Document",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.text.StyledDocument"
        ],
        "Subinterface": [
            "javax.swing.text.AbstractDocument",
            "javax.swing.text.DefaultStyledDocument",
            "javax.swing.text.html.HTMLDocument",
            "javax.swing.text.PlainDocument"
        ],
        "Method": {
            "getLength": {
                "Parameter": {},
                "Throw": []
            },
            "addDocumentListener": {
                "Parameter": {
                    "listener": "DocumentListener"
                },
                "Throw": []
            },
            "removeDocumentListener": {
                "Parameter": {
                    "listener": "DocumentListener"
                },
                "Throw": []
            },
            "addUndoableEditListener": {
                "Parameter": {
                    "listener": "UndoableEditListener"
                },
                "Throw": []
            },
            "removeUndoableEditListener": {
                "Parameter": {
                    "listener": "UndoableEditListener"
                },
                "Throw": []
            },
            "getProperty": {
                "Parameter": {
                    "key": "Object"
                },
                "Throw": []
            },
            "putProperty": {
                "Parameter": {
                    "key": "Object",
                    "value": "Object"
                },
                "Throw": []
            },
            "remove": {
                "Parameter": {
                    "offs": "int",
                    "len": "int"
                },
                "Throw": "javax.swing.text.BadLocationException"
            },
            "insertString": {
                "Parameter": {
                    "offset": "int",
                    "str": "String",
                    "a": "AttributeSet"
                },
                "Throw": "javax.swing.text.BadLocationException"
            },
            "getText": {
                "Parameter": {
                    "offset": "int",
                    "length": "int",
                    "txt": "Segment"
                },
                "Throw": "javax.swing.text.BadLocationException"
            },
            "getStartPosition": {
                "Parameter": {},
                "Throw": []
            },
            "getEndPosition": {
                "Parameter": {},
                "Throw": []
            },
            "createPosition": {
                "Parameter": {
                    "offs": "int"
                },
                "Throw": "javax.swing.text.BadLocationException"
            },
            "getRootElements": {
                "Parameter": {},
                "Throw": []
            },
            "getDefaultRootElement": {
                "Parameter": {},
                "Throw": []
            },
            "render": {
                "Parameter": {
                    "r": "Runnable"
                },
                "Throw": []
            }
        }
    },
    "728": {
        "Package": "javax.swing.text",
        "Interface": "Element",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.AbstractDocument.AbstractElement",
            "javax.swing.text.AbstractDocument.BranchElement",
            "javax.swing.text.AbstractDocument.LeafElement",
            "javax.swing.text.DefaultStyledDocument.SectionElement",
            "javax.swing.text.html.HTMLDocument.BlockElement",
            "javax.swing.text.html.HTMLDocument.RunElement"
        ],
        "Method": {
            "getDocument": {
                "Parameter": {},
                "Throw": []
            },
            "getParentElement": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "getStartOffset": {
                "Parameter": {},
                "Throw": []
            },
            "getEndOffset": {
                "Parameter": {},
                "Throw": []
            },
            "getElementIndex": {
                "Parameter": {
                    "offset": "int"
                },
                "Throw": []
            },
            "getElementCount": {
                "Parameter": {},
                "Throw": []
            },
            "getElement": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "isLeaf": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "729": {
        "Package": "javax.swing.text",
        "Interface": "Highlighter.Highlight",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getStartOffset": {
                "Parameter": {},
                "Throw": []
            },
            "getEndOffset": {
                "Parameter": {},
                "Throw": []
            },
            "getPainter": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "730": {
        "Package": "javax.swing.text",
        "Interface": "Highlighter.HighlightPainter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.DefaultHighlighter.DefaultHighlightPainter",
            "javax.swing.text.LayeredHighlighter.LayerPainter"
        ],
        "Method": {
            "paint": {
                "Parameter": {
                    "g": "Graphics",
                    "p": "int",
                    "bounds": "Shape",
                    "c": "JTextComponent"
                },
                "Throw": []
            }
        }
    },
    "731": {
        "Package": "javax.swing.text",
        "Interface": "Highlighter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicTextUI.BasicHighlighter",
            "javax.swing.text.DefaultHighlighter",
            "javax.swing.text.LayeredHighlighter"
        ],
        "Method": {
            "install": {
                "Parameter": {
                    "c": "JTextComponent"
                },
                "Throw": []
            },
            "deinstall": {
                "Parameter": {
                    "c": "JTextComponent"
                },
                "Throw": []
            },
            "paint": {
                "Parameter": {
                    "g": "Graphics"
                },
                "Throw": []
            },
            "addHighlight": {
                "Parameter": {
                    "p": "Highlighter.HighlightPainter"
                },
                "Throw": "javax.swing.text.BadLocationException"
            },
            "removeHighlight": {
                "Parameter": {
                    "tag": "Object"
                },
                "Throw": []
            },
            "removeAllHighlights": {
                "Parameter": {},
                "Throw": []
            },
            "changeHighlight": {
                "Parameter": {
                    "tag": "Object",
                    "p": "int"
                },
                "Throw": "javax.swing.text.BadLocationException"
            },
            "getHighlights": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "732": {
        "Package": "javax.swing.text",
        "Interface": "Keymap",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getDefaultAction": {
                "Parameter": {},
                "Throw": []
            },
            "setDefaultAction": {
                "Parameter": {
                    "a": "Action"
                },
                "Throw": []
            },
            "getAction": {
                "Parameter": {
                    "key": "KeyStroke"
                },
                "Throw": []
            },
            "getBoundKeyStrokes": {
                "Parameter": {},
                "Throw": []
            },
            "getBoundActions": {
                "Parameter": {},
                "Throw": []
            },
            "getKeyStrokesForAction": {
                "Parameter": {
                    "a": "Action"
                },
                "Throw": []
            },
            "isLocallyDefined": {
                "Parameter": {
                    "key": "KeyStroke"
                },
                "Throw": []
            },
            "addActionForKeyStroke": {
                "Parameter": {
                    "key": "KeyStroke",
                    "a": "Action"
                },
                "Throw": []
            },
            "removeKeyStrokeBinding": {
                "Parameter": {
                    "keys": "KeyStroke"
                },
                "Throw": []
            },
            "removeBindings": {
                "Parameter": {},
                "Throw": []
            },
            "getResolveParent": {
                "Parameter": {},
                "Throw": []
            },
            "setResolveParent": {
                "Parameter": {
                    "parent": "Keymap"
                },
                "Throw": []
            }
        }
    },
    "733": {
        "Package": "javax.swing.text",
        "Interface": "MutableAttributeSet",
        "Superinterface": [
            "javax.swing.text.AttributeSet"
        ],
        "Implementing Class": [
            "javax.swing.text.Style"
        ],
        "Subinterface": [
            "javax.swing.text.AbstractDocument.AbstractElement",
            "javax.swing.text.AbstractDocument.BranchElement",
            "javax.swing.text.AbstractDocument.LeafElement",
            "javax.swing.text.DefaultStyledDocument.SectionElement",
            "javax.swing.text.html.HTMLDocument.BlockElement",
            "javax.swing.text.html.HTMLDocument.RunElement",
            "javax.swing.text.SimpleAttributeSet",
            "javax.swing.text.StyleContext.NamedStyle"
        ],
        "Method": {
            "addAttribute": {
                "Parameter": {
                    "name": "Object",
                    "value": "Object"
                },
                "Throw": []
            },
            "addAttributes": {
                "Parameter": {
                    "attributes": "AttributeSet"
                },
                "Throw": []
            },
            "removeAttribute": {
                "Parameter": {
                    "name": "Object"
                },
                "Throw": []
            },
            "removeAttributes": {
                "Parameter": {
                    "attributes": "AttributeSet"
                },
                "Throw": []
            },
            "setResolveParent": {
                "Parameter": {
                    "parent": "AttributeSet"
                },
                "Throw": []
            }
        }
    },
    "734": {
        "Package": "javax.swing.text",
        "Interface": "Position",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getOffset": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "735": {
        "Package": "javax.swing.text",
        "Interface": "Style",
        "Superinterface": [
            "javax.swing.text.AttributeSet",
            "javax.swing.text.MutableAttributeSet"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.StyleContext.NamedStyle"
        ],
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "addChangeListener": {
                "Parameter": {
                    "l": "ChangeListener"
                },
                "Throw": []
            },
            "removeChangeListener": {
                "Parameter": {
                    "l": "ChangeListener"
                },
                "Throw": []
            }
        }
    },
    "736": {
        "Package": "javax.swing.text",
        "Interface": "StyledDocument",
        "Superinterface": [
            "javax.swing.text.Document"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.DefaultStyledDocument",
            "javax.swing.text.html.HTMLDocument"
        ],
        "Method": {
            "addStyle": {
                "Parameter": {
                    "nm": "String",
                    "parent": "Style"
                },
                "Throw": []
            },
            "removeStyle": {
                "Parameter": {
                    "nm": "String"
                },
                "Throw": []
            },
            "getStyle": {
                "Parameter": {
                    "nm": "String"
                },
                "Throw": []
            },
            "setCharacterAttributes": {
                "Parameter": {
                    "offset": "int",
                    "length": "int",
                    "s": "AttributeSet",
                    "replace": "boolean"
                },
                "Throw": []
            },
            "setParagraphAttributes": {
                "Parameter": {
                    "offset": "int",
                    "length": "int",
                    "s": "AttributeSet",
                    "replace": "boolean"
                },
                "Throw": []
            },
            "setLogicalStyle": {
                "Parameter": {
                    "pos": "int",
                    "s": "Style"
                },
                "Throw": []
            },
            "getLogicalStyle": {
                "Parameter": {
                    "p": "int"
                },
                "Throw": []
            },
            "getParagraphElement": {
                "Parameter": {
                    "pos": "int"
                },
                "Throw": []
            },
            "getCharacterElement": {
                "Parameter": {
                    "pos": "int"
                },
                "Throw": []
            },
            "getForeground": {
                "Parameter": {
                    "attr": "AttributeSet"
                },
                "Throw": []
            },
            "getBackground": {
                "Parameter": {
                    "attr": "AttributeSet"
                },
                "Throw": []
            },
            "getFont": {
                "Parameter": {
                    "attr": "AttributeSet"
                },
                "Throw": []
            }
        }
    },
    "737": {
        "Package": "javax.swing.text",
        "Interface": "TabableView",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.GlyphView",
            "javax.swing.text.html.InlineView",
            "javax.swing.text.LabelView"
        ],
        "Method": {
            "getTabbedSpan": {
                "Parameter": {
                    "x": "float",
                    "e": "TabExpander"
                },
                "Throw": []
            },
            "getPartialSpan": {
                "Parameter": {
                    "p": "int"
                },
                "Throw": []
            }
        }
    },
    "738": {
        "Package": "javax.swing.text",
        "Interface": "TabExpander",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.FieldView",
            "javax.swing.text.ParagraphView",
            "javax.swing.text.html.ParagraphView",
            "javax.swing.text.PasswordView",
            "javax.swing.text.PlainView",
            "javax.swing.text.WrappedPlainView"
        ],
        "Method": {
            "nextTabStop": {
                "Parameter": {
                    "x": "float",
                    "tabOffset": "int"
                },
                "Throw": []
            }
        }
    },
    "739": {
        "Package": "javax.swing.text",
        "Interface": "ViewFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicEditorPaneUI",
            "javax.swing.plaf.basic.BasicFormattedTextFieldUI",
            "javax.swing.plaf.basic.BasicPasswordFieldUI",
            "javax.swing.plaf.basic.BasicTextAreaUI",
            "javax.swing.plaf.basic.BasicTextFieldUI",
            "javax.swing.plaf.basic.BasicTextPaneUI",
            "javax.swing.plaf.basic.BasicTextUI",
            "javax.swing.text.DefaultTextUI",
            "javax.swing.text.html.HTMLEditorKit.HTMLFactory",
            "javax.swing.plaf.metal.MetalTextFieldUI",
            "javax.swing.plaf.synth.SynthEditorPaneUI",
            "javax.swing.plaf.synth.SynthFormattedTextFieldUI",
            "javax.swing.plaf.synth.SynthPasswordFieldUI",
            "javax.swing.plaf.synth.SynthTextAreaUI",
            "javax.swing.plaf.synth.SynthTextFieldUI",
            "javax.swing.plaf.synth.SynthTextPaneUI"
        ],
        "Method": {
            "create": {
                "Parameter": {
                    "elem": "Element"
                },
                "Throw": []
            }
        }
    },
    "740": {
        "Package": "javax.swing.text.html.parser",
        "Interface": "DTDConstants",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.html.parser.AttributeList",
            "javax.swing.text.html.parser.DocumentParser",
            "javax.swing.text.html.parser.DTD",
            "javax.swing.text.html.parser.Element",
            "javax.swing.text.html.parser.Entity",
            "javax.swing.text.html.parser.Parser"
        ],
        "Method": {}
    },
    "741": {
        "Package": "javax.swing.tree",
        "Interface": "MutableTreeNode",
        "Superinterface": [
            "javax.swing.tree.TreeNode"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.tree.DefaultMutableTreeNode",
            "javax.swing.JTree.DynamicUtilTreeNode"
        ],
        "Method": {
            "insert": {
                "Parameter": {
                    "child": "MutableTreeNode",
                    "index": "int"
                },
                "Throw": []
            },
            "remove": {
                "Parameter": {
                    "node": "MutableTreeNode"
                },
                "Throw": []
            },
            "setUserObject": {
                "Parameter": {
                    "object": "Object"
                },
                "Throw": []
            },
            "removeFromParent": {
                "Parameter": {},
                "Throw": []
            },
            "setParent": {
                "Parameter": {
                    "newParent": "MutableTreeNode"
                },
                "Throw": []
            }
        }
    },
    "742": {
        "Package": "javax.swing.tree",
        "Interface": "RowMapper",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.tree.AbstractLayoutCache",
            "javax.swing.tree.FixedHeightLayoutCache",
            "javax.swing.tree.VariableHeightLayoutCache"
        ],
        "Method": {
            "getRowsForPaths": {
                "Parameter": {
                    "path": "TreePath"
                },
                "Throw": []
            }
        }
    },
    "743": {
        "Package": "javax.swing.tree",
        "Interface": "TreeCellEditor",
        "Superinterface": [
            "javax.swing.CellEditor"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultCellEditor",
            "javax.swing.tree.DefaultTreeCellEditor"
        ],
        "Method": {
            "getTreeCellEditorComponent": {
                "Parameter": {
                    "tree": "JTree",
                    "value": "Object",
                    "isSelected": "boolean",
                    "expanded": "boolean",
                    "leaf": "boolean",
                    "row": "int"
                },
                "Throw": []
            }
        }
    },
    "744": {
        "Package": "javax.swing.tree",
        "Interface": "TreeCellRenderer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.tree.DefaultTreeCellRenderer"
        ],
        "Method": {
            "getTreeCellRendererComponent": {
                "Parameter": {
                    "tree": "JTree",
                    "value": "Object",
                    "selected": "boolean",
                    "expanded": "boolean",
                    "leaf": "boolean",
                    "row": "int",
                    "hasFocus": "boolean"
                },
                "Throw": []
            }
        }
    },
    "745": {
        "Package": "javax.swing.tree",
        "Interface": "TreeModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.tree.DefaultTreeModel"
        ],
        "Method": {
            "getRoot": {
                "Parameter": {},
                "Throw": []
            },
            "getChild": {
                "Parameter": {
                    "parent": "Object",
                    "index": "int"
                },
                "Throw": []
            },
            "getChildCount": {
                "Parameter": {
                    "parent": "Object"
                },
                "Throw": []
            },
            "isLeaf": {
                "Parameter": {
                    "node": "Object"
                },
                "Throw": []
            },
            "valueForPathChanged": {
                "Parameter": {
                    "path": "TreePath",
                    "newValue": "Object"
                },
                "Throw": []
            },
            "getIndexOfChild": {
                "Parameter": {
                    "parent": "Object",
                    "child": "Object"
                },
                "Throw": []
            },
            "addTreeModelListener": {
                "Parameter": {
                    "l": "TreeModelListener"
                },
                "Throw": []
            },
            "removeTreeModelListener": {
                "Parameter": {
                    "l": "TreeModelListener"
                },
                "Throw": []
            }
        }
    },
    "746": {
        "Package": "javax.swing.tree",
        "Interface": "TreeNode",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.tree.MutableTreeNode"
        ],
        "Subinterface": [
            "javax.swing.text.AbstractDocument.AbstractElement",
            "javax.swing.text.AbstractDocument.BranchElement",
            "javax.swing.text.AbstractDocument.LeafElement",
            "javax.swing.tree.DefaultMutableTreeNode",
            "javax.swing.text.DefaultStyledDocument.SectionElement",
            "javax.swing.text.html.HTMLDocument.BlockElement",
            "javax.swing.text.html.HTMLDocument.RunElement",
            "javax.swing.JTree.DynamicUtilTreeNode"
        ],
        "Method": {
            "getChildAt": {
                "Parameter": {
                    "childIndex": "int"
                },
                "Throw": []
            },
            "getChildCount": {
                "Parameter": {},
                "Throw": []
            },
            "getParent": {
                "Parameter": {},
                "Throw": []
            },
            "getIndex": {
                "Parameter": {
                    "node": "TreeNode"
                },
                "Throw": []
            },
            "getAllowsChildren": {
                "Parameter": {},
                "Throw": []
            },
            "isLeaf": {
                "Parameter": {},
                "Throw": []
            },
            "children": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "747": {
        "Package": "javax.swing.tree",
        "Interface": "TreeSelectionModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.tree.DefaultTreeSelectionModel",
            "javax.swing.JTree.EmptySelectionModel"
        ],
        "Method": {
            "setSelectionMode": {
                "Parameter": {
                    "mode": "int"
                },
                "Throw": []
            },
            "getSelectionMode": {
                "Parameter": {},
                "Throw": []
            },
            "setSelectionPath": {
                "Parameter": {
                    "path": "TreePath"
                },
                "Throw": []
            },
            "setSelectionPaths": {
                "Parameter": {
                    "paths": "TreePath"
                },
                "Throw": []
            },
            "addSelectionPath": {
                "Parameter": {
                    "path": "TreePath"
                },
                "Throw": []
            },
            "addSelectionPaths": {
                "Parameter": {
                    "paths": "TreePath"
                },
                "Throw": []
            },
            "removeSelectionPath": {
                "Parameter": {
                    "path": "TreePath"
                },
                "Throw": []
            },
            "removeSelectionPaths": {
                "Parameter": {
                    "paths": "TreePath"
                },
                "Throw": []
            },
            "getSelectionPath": {
                "Parameter": {},
                "Throw": []
            },
            "getSelectionPaths": {
                "Parameter": {},
                "Throw": []
            },
            "getSelectionCount": {
                "Parameter": {},
                "Throw": []
            },
            "isPathSelected": {
                "Parameter": {
                    "path": "TreePath"
                },
                "Throw": []
            },
            "isSelectionEmpty": {
                "Parameter": {},
                "Throw": []
            },
            "clearSelection": {
                "Parameter": {},
                "Throw": []
            },
            "setRowMapper": {
                "Parameter": {
                    "newMapper": "RowMapper"
                },
                "Throw": []
            },
            "getRowMapper": {
                "Parameter": {},
                "Throw": []
            },
            "getSelectionRows": {
                "Parameter": {},
                "Throw": []
            },
            "getMinSelectionRow": {
                "Parameter": {},
                "Throw": []
            },
            "getMaxSelectionRow": {
                "Parameter": {},
                "Throw": []
            },
            "isRowSelected": {
                "Parameter": {
                    "row": "int"
                },
                "Throw": []
            },
            "resetRowSelection": {
                "Parameter": {},
                "Throw": []
            },
            "getLeadSelectionRow": {
                "Parameter": {},
                "Throw": []
            },
            "getLeadSelectionPath": {
                "Parameter": {},
                "Throw": []
            },
            "addPropertyChangeListener": {
                "Parameter": {
                    "listener": "PropertyChangeListener"
                },
                "Throw": []
            },
            "removePropertyChangeListener": {
                "Parameter": {
                    "listener": "PropertyChangeListener"
                },
                "Throw": []
            },
            "addTreeSelectionListener": {
                "Parameter": {
                    "x": "TreeSelectionListener"
                },
                "Throw": []
            },
            "removeTreeSelectionListener": {
                "Parameter": {
                    "x": "TreeSelectionListener"
                },
                "Throw": []
            }
        }
    },
    "748": {
        "Package": "javax.swing.undo",
        "Interface": "StateEditable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "storeState": {
                "Parameter": {
                    "": "Hashtable"
                },
                "Throw": []
            },
            "restoreState": {
                "Parameter": {
                    "": "Hashtable"
                },
                "Throw": []
            }
        }
    },
    "749": {
        "Package": "javax.swing.undo",
        "Interface": "UndoableEdit",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.AbstractDocument.DefaultDocumentEvent",
            "javax.swing.text.AbstractDocument.ElementEdit",
            "javax.swing.undo.AbstractUndoableEdit",
            "javax.swing.undo.CompoundEdit",
            "javax.swing.text.DefaultStyledDocument.AttributeUndoableEdit",
            "javax.swing.undo.StateEdit",
            "javax.swing.undo.UndoManager"
        ],
        "Method": {
            "undo": {
                "Parameter": {},
                "Throw": "javax.swing.undo.CannotUndoException"
            },
            "canUndo": {
                "Parameter": {},
                "Throw": []
            },
            "redo": {
                "Parameter": {},
                "Throw": "javax.swing.undo.CannotRedoException"
            },
            "canRedo": {
                "Parameter": {},
                "Throw": []
            },
            "die": {
                "Parameter": {},
                "Throw": []
            },
            "addEdit": {
                "Parameter": {
                    "anEdit": "UndoableEdit"
                },
                "Throw": []
            },
            "replaceEdit": {
                "Parameter": {
                    "anEdit": "UndoableEdit"
                },
                "Throw": []
            },
            "isSignificant": {
                "Parameter": {},
                "Throw": []
            },
            "getPresentationName": {
                "Parameter": {},
                "Throw": []
            },
            "getUndoPresentationName": {
                "Parameter": {},
                "Throw": []
            },
            "getRedoPresentationName": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "750": {
        "Package": "javax.tools",
        "Interface": "Diagnostic",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getKind": {
                "Parameter": {},
                "Throw": []
            },
            "getSource": {
                "Parameter": {},
                "Throw": []
            },
            "getPosition": {
                "Parameter": {},
                "Throw": []
            },
            "getStartPosition": {
                "Parameter": {},
                "Throw": []
            },
            "getEndPosition": {
                "Parameter": {},
                "Throw": []
            },
            "getLineNumber": {
                "Parameter": {},
                "Throw": []
            },
            "getColumnNumber": {
                "Parameter": {},
                "Throw": []
            },
            "getCode": {
                "Parameter": {},
                "Throw": []
            },
            "getMessage": {
                "Parameter": {
                    "locale": "Locale"
                },
                "Throw": []
            }
        }
    },
    "751": {
        "Package": "javax.tools",
        "Interface": "DiagnosticListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.tools.DiagnosticCollector"
        ],
        "Method": {
            "report": {
                "Parameter": {
                    "": "Diagnostic"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "752": {
        "Package": "javax.tools",
        "Interface": "DocumentationTool.DocumentationTask",
        "Superinterface": [
            "java.util.concurrent.Callable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setLocale": {
                "Parameter": {
                    "locale": "Locale"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "call": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            }
        }
    },
    "753": {
        "Package": "javax.tools",
        "Interface": "DocumentationTool",
        "Superinterface": [
            "javax.tools.OptionChecker",
            "javax.tools.Tool"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getTask": {
                "Parameter": {
                    "out": "Writer",
                    "fileManager": "JavaFileManager",
                    "": "Iterable"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getStandardFileManager": {
                "Parameter": {
                    "": "DiagnosticListener",
                    "locale": "Locale",
                    "charset": "Charset"
                },
                "Throw": []
            }
        }
    },
    "754": {
        "Package": "javax.tools",
        "Interface": "FileObject",
        "Superinterface": null,
        "Implementing Class": [
            "javax.tools.JavaFileObject"
        ],
        "Subinterface": [
            "javax.tools.ForwardingFileObject",
            "javax.tools.ForwardingJavaFileObject",
            "javax.tools.SimpleJavaFileObject"
        ],
        "Method": {
            "toUri": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "openInputStream": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "openOutputStream": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "openReader": {
                "Parameter": {
                    "ignoreEncodingErrors": "boolean"
                },
                "Throw": "java.io.IOException"
            },
            "getCharContent": {
                "Parameter": {
                    "ignoreEncodingErrors": "boolean"
                },
                "Throw": "java.io.IOException"
            },
            "openWriter": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "getLastModified": {
                "Parameter": {},
                "Throw": []
            },
            "delete": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "755": {
        "Package": "javax.tools",
        "Interface": "JavaCompiler.CompilationTask",
        "Superinterface": [
            "java.util.concurrent.Callable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setProcessors": {
                "Parameter": {
                    "": "Iterable"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "setLocale": {
                "Parameter": {
                    "locale": "Locale"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "call": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            }
        }
    },
    "756": {
        "Package": "javax.tools",
        "Interface": "JavaCompiler",
        "Superinterface": [
            "javax.tools.OptionChecker",
            "javax.tools.Tool"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getTask": {
                "Parameter": {
                    "out": "Writer",
                    "fileManager": "JavaFileManager",
                    "": "Iterable"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getStandardFileManager": {
                "Parameter": {
                    "": "DiagnosticListener",
                    "locale": "Locale",
                    "charset": "Charset"
                },
                "Throw": []
            }
        }
    },
    "757": {
        "Package": "javax.tools",
        "Interface": "JavaFileManager",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.io.Flushable",
            "javax.tools.OptionChecker"
        ],
        "Implementing Class": [
            "javax.tools.StandardJavaFileManager"
        ],
        "Subinterface": [
            "javax.tools.ForwardingJavaFileManager"
        ],
        "Method": {
            "getClassLoader": {
                "Parameter": {
                    "location": "JavaFileManager.Location"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "list": {
                "Parameter": {
                    "location": "JavaFileManager.Location",
                    "packageName": "String",
                    "": "Set",
                    "recurse": "boolean"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "inferBinaryName": {
                "Parameter": {
                    "location": "JavaFileManager.Location",
                    "file": "JavaFileObject"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "isSameFile": {
                "Parameter": {
                    "a": "FileObject",
                    "b": "FileObject"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "handleOption": {
                "Parameter": {
                    "current": "String",
                    "": "Iterator"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "hasLocation": {
                "Parameter": {
                    "location": "JavaFileManager.Location"
                },
                "Throw": []
            },
            "getJavaFileForInput": {
                "Parameter": {
                    "location": "JavaFileManager.Location",
                    "className": "String",
                    "kind": "JavaFileObject.Kind"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getJavaFileForOutput": {
                "Parameter": {
                    "location": "JavaFileManager.Location",
                    "className": "String",
                    "kind": "JavaFileObject.Kind",
                    "sibling": "FileObject"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getFileForInput": {
                "Parameter": {
                    "location": "JavaFileManager.Location",
                    "packageName": "String",
                    "relativeName": "String"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getFileForOutput": {
                "Parameter": {
                    "location": "JavaFileManager.Location",
                    "packageName": "String",
                    "relativeName": "String",
                    "sibling": "FileObject"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "flush": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            },
            "close": {
                "Parameter": {},
                "Throw": "java.io.IOException"
            }
        }
    },
    "758": {
        "Package": "javax.tools",
        "Interface": "JavaFileManager.Location",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "isOutputLocation": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "759": {
        "Package": "javax.tools",
        "Interface": "JavaFileObject",
        "Superinterface": [
            "javax.tools.FileObject"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.tools.ForwardingJavaFileObject",
            "javax.tools.SimpleJavaFileObject"
        ],
        "Method": {
            "getKind": {
                "Parameter": {},
                "Throw": []
            },
            "isNameCompatible": {
                "Parameter": {
                    "simpleName": "String",
                    "kind": "JavaFileObject.Kind"
                },
                "Throw": []
            },
            "getNestingKind": {
                "Parameter": {},
                "Throw": []
            },
            "getAccessLevel": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "760": {
        "Package": "javax.tools",
        "Interface": "OptionChecker",
        "Superinterface": null,
        "Implementing Class": [
            "javax.tools.DocumentationTool",
            "javax.tools.JavaCompiler",
            "javax.tools.JavaFileManager",
            "javax.tools.StandardJavaFileManager"
        ],
        "Subinterface": [
            "javax.tools.ForwardingJavaFileManager"
        ],
        "Method": {
            "isSupportedOption": {
                "Parameter": {
                    "option": "String"
                },
                "Throw": []
            }
        }
    },
    "761": {
        "Package": "javax.tools",
        "Interface": "StandardJavaFileManager",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.io.Flushable",
            "javax.tools.JavaFileManager",
            "javax.tools.OptionChecker"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "isSameFile": {
                "Parameter": {
                    "a": "FileObject",
                    "b": "FileObject"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getJavaFileObjectsFromFiles": {
                "Parameter": {
                    "": "Iterable"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getJavaFileObjects": {
                "Parameter": {
                    "names": "String"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getJavaFileObjectsFromStrings": {
                "Parameter": {
                    "": "Iterable"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "setLocation": {
                "Parameter": {
                    "location": "JavaFileManager.Location",
                    "": "Iterable"
                },
                "Throw": "java.io.IOException"
            },
            "getLocation": {
                "Parameter": {
                    "location": "JavaFileManager.Location"
                },
                "Throw": []
            }
        }
    },
    "762": {
        "Package": "javax.tools",
        "Interface": "Tool",
        "Superinterface": null,
        "Implementing Class": [
            "javax.tools.DocumentationTool",
            "javax.tools.JavaCompiler"
        ],
        "Subinterface": null,
        "Method": {
            "run": {
                "Parameter": {
                    "in": "InputStream",
                    "out": "OutputStream",
                    "err": "OutputStream",
                    "arguments": "String"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getSourceVersions": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "763": {
        "Package": "javax.transaction.xa",
        "Interface": "XAResource",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "commit": {
                "Parameter": {
                    "xid": "Xid",
                    "onePhase": "boolean"
                },
                "Throw": "javax.transaction.xa.XAException"
            },
            "end": {
                "Parameter": {
                    "xid": "Xid",
                    "flags": "int"
                },
                "Throw": "javax.transaction.xa.XAException"
            },
            "forget": {
                "Parameter": {
                    "xid": "Xid"
                },
                "Throw": "javax.transaction.xa.XAException"
            },
            "getTransactionTimeout": {
                "Parameter": {},
                "Throw": "javax.transaction.xa.XAException"
            },
            "isSameRM": {
                "Parameter": {
                    "xares": "XAResource"
                },
                "Throw": "javax.transaction.xa.XAException"
            },
            "prepare": {
                "Parameter": {
                    "xid": "Xid"
                },
                "Throw": "javax.transaction.xa.XAException"
            },
            "recover": {
                "Parameter": {
                    "flag": "int"
                },
                "Throw": "javax.transaction.xa.XAException"
            },
            "rollback": {
                "Parameter": {
                    "xid": "Xid"
                },
                "Throw": "javax.transaction.xa.XAException"
            },
            "setTransactionTimeout": {
                "Parameter": {
                    "seconds": "int"
                },
                "Throw": "javax.transaction.xa.XAException"
            },
            "start": {
                "Parameter": {
                    "xid": "Xid",
                    "flags": "int"
                },
                "Throw": "javax.transaction.xa.XAException"
            }
        }
    },
    "764": {
        "Package": "javax.transaction.xa",
        "Interface": "Xid",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getFormatId": {
                "Parameter": {},
                "Throw": []
            },
            "getGlobalTransactionId": {
                "Parameter": {},
                "Throw": []
            },
            "getBranchQualifier": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "765": {
        "Package": "javax.xml.bind",
        "Interface": "DatatypeConverterInterface",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "parseString": {
                "Parameter": {
                    "lexicalXSDString": "String"
                },
                "Throw": []
            },
            "parseInteger": {
                "Parameter": {
                    "lexicalXSDInteger": "String"
                },
                "Throw": "java.lang.NumberFormatException"
            },
            "parseInt": {
                "Parameter": {
                    "lexicalXSDInt": "String"
                },
                "Throw": "java.lang.NumberFormatException"
            },
            "parseLong": {
                "Parameter": {
                    "lexicalXSDLong": "String"
                },
                "Throw": "java.lang.NumberFormatException"
            },
            "parseShort": {
                "Parameter": {
                    "lexicalXSDShort": "String"
                },
                "Throw": "java.lang.NumberFormatException"
            },
            "parseDecimal": {
                "Parameter": {
                    "lexicalXSDDecimal": "String"
                },
                "Throw": "java.lang.NumberFormatException"
            },
            "parseFloat": {
                "Parameter": {
                    "lexicalXSDFloat": "String"
                },
                "Throw": "java.lang.NumberFormatException"
            },
            "parseDouble": {
                "Parameter": {
                    "lexicalXSDDouble": "String"
                },
                "Throw": "java.lang.NumberFormatException"
            },
            "parseBoolean": {
                "Parameter": {
                    "lexicalXSDBoolean": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "parseByte": {
                "Parameter": {
                    "lexicalXSDByte": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "parseQName": {
                "Parameter": {
                    "lexicalXSDQName": "String",
                    "nsc": "NamespaceContext"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "parseDateTime": {
                "Parameter": {
                    "lexicalXSDDateTime": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "parseBase64Binary": {
                "Parameter": {
                    "lexicalXSDBaseBinary": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "parseHexBinary": {
                "Parameter": {
                    "lexicalXSDHexBinary": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "parseUnsignedInt": {
                "Parameter": {
                    "lexicalXSDUnsignedInt": "String"
                },
                "Throw": "java.lang.NumberFormatException"
            },
            "parseUnsignedShort": {
                "Parameter": {
                    "lexicalXSDUnsignedShort": "String"
                },
                "Throw": "java.lang.NumberFormatException"
            },
            "parseTime": {
                "Parameter": {
                    "lexicalXSDTime": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "parseDate": {
                "Parameter": {
                    "lexicalXSDDate": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "parseAnySimpleType": {
                "Parameter": {
                    "lexicalXSDAnySimpleType": "String"
                },
                "Throw": []
            },
            "printString": {
                "Parameter": {
                    "val": "String"
                },
                "Throw": []
            },
            "printInteger": {
                "Parameter": {
                    "val": "BigInteger"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "printInt": {
                "Parameter": {
                    "val": "int"
                },
                "Throw": []
            },
            "printLong": {
                "Parameter": {
                    "val": "long"
                },
                "Throw": []
            },
            "printShort": {
                "Parameter": {
                    "val": "short"
                },
                "Throw": []
            },
            "printDecimal": {
                "Parameter": {
                    "val": "BigDecimal"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "printFloat": {
                "Parameter": {
                    "val": "float"
                },
                "Throw": []
            },
            "printDouble": {
                "Parameter": {
                    "val": "double"
                },
                "Throw": []
            },
            "printBoolean": {
                "Parameter": {
                    "val": "boolean"
                },
                "Throw": []
            },
            "printByte": {
                "Parameter": {
                    "val": "byte"
                },
                "Throw": []
            },
            "printQName": {
                "Parameter": {
                    "val": "QName",
                    "nsc": "NamespaceContext"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "printDateTime": {
                "Parameter": {
                    "val": "Calendar"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "printBase64Binary": {
                "Parameter": {
                    "val": "byte"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "printHexBinary": {
                "Parameter": {
                    "val": "byte"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "printUnsignedInt": {
                "Parameter": {
                    "val": "long"
                },
                "Throw": []
            },
            "printUnsignedShort": {
                "Parameter": {
                    "val": "int"
                },
                "Throw": []
            },
            "printTime": {
                "Parameter": {
                    "val": "Calendar"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "printDate": {
                "Parameter": {
                    "val": "Calendar"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "printAnySimpleType": {
                "Parameter": {
                    "val": "String"
                },
                "Throw": []
            }
        }
    },
    "766": {
        "Package": "javax.xml.bind",
        "Interface": "Element",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "767": {
        "Package": "javax.xml.bind",
        "Interface": "Marshaller",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.bind.helpers.AbstractMarshallerImpl"
        ],
        "Method": {
            "marshal": {
                "Parameter": {
                    "jaxbElement": "Object",
                    "writer": "XMLEventWriter"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getNode": {
                "Parameter": {
                    "contentTree": "Object"
                },
                "Throw": "javax.xml.bind.JAXBException"
            },
            "setProperty": {
                "Parameter": {
                    "name": "String",
                    "value": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getProperty": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "setEventHandler": {
                "Parameter": {
                    "handler": "ValidationEventHandler"
                },
                "Throw": "javax.xml.bind.JAXBException"
            },
            "getEventHandler": {
                "Parameter": {},
                "Throw": "javax.xml.bind.JAXBException"
            },
            "setAdapter": {
                "Parameter": {
                    "": "Class",
                    "adapter": "A"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getAdapter": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "setAttachmentMarshaller": {
                "Parameter": {
                    "am": "AttachmentMarshaller"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getAttachmentMarshaller": {
                "Parameter": {},
                "Throw": []
            },
            "setSchema": {
                "Parameter": {
                    "schema": "Schema"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getSchema": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "setListener": {
                "Parameter": {
                    "listener": "Marshaller.Listener"
                },
                "Throw": []
            },
            "getListener": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "768": {
        "Package": "javax.xml.bind",
        "Interface": "NotIdentifiableEvent",
        "Superinterface": [
            "javax.xml.bind.ValidationEvent"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.bind.helpers.NotIdentifiableEventImpl"
        ],
        "Method": {}
    },
    "769": {
        "Package": "javax.xml.bind",
        "Interface": "ParseConversionEvent",
        "Superinterface": [
            "javax.xml.bind.ValidationEvent"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.bind.helpers.ParseConversionEventImpl"
        ],
        "Method": {}
    },
    "770": {
        "Package": "javax.xml.bind",
        "Interface": "PrintConversionEvent",
        "Superinterface": [
            "javax.xml.bind.ValidationEvent"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.bind.helpers.PrintConversionEventImpl"
        ],
        "Method": {}
    },
    "771": {
        "Package": "javax.xml.bind",
        "Interface": "Unmarshaller",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.bind.helpers.AbstractUnmarshallerImpl"
        ],
        "Method": {
            "unmarshal": {
                "Parameter": {
                    "reader": "XMLEventReader",
                    "": "Class"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getUnmarshallerHandler": {
                "Parameter": {},
                "Throw": []
            },
            "setValidating": {
                "Parameter": {
                    "validating": "boolean"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "isValidating": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "setEventHandler": {
                "Parameter": {
                    "handler": "ValidationEventHandler"
                },
                "Throw": "javax.xml.bind.JAXBException"
            },
            "getEventHandler": {
                "Parameter": {},
                "Throw": "javax.xml.bind.JAXBException"
            },
            "setProperty": {
                "Parameter": {
                    "name": "String",
                    "value": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getProperty": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "setSchema": {
                "Parameter": {
                    "schema": "Schema"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getSchema": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "setAdapter": {
                "Parameter": {
                    "": "Class",
                    "adapter": "A"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getAdapter": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "setAttachmentUnmarshaller": {
                "Parameter": {
                    "au": "AttachmentUnmarshaller"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getAttachmentUnmarshaller": {
                "Parameter": {},
                "Throw": []
            },
            "setListener": {
                "Parameter": {
                    "listener": "Unmarshaller.Listener"
                },
                "Throw": []
            },
            "getListener": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "772": {
        "Package": "javax.xml.bind",
        "Interface": "UnmarshallerHandler",
        "Superinterface": [
            "org.xml.sax.ContentHandler"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getResult": {
                "Parameter": {},
                "Throw": "javax.xml.bind.JAXBException"
            }
        }
    },
    "773": {
        "Package": "javax.xml.bind",
        "Interface": "ValidationEvent",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.bind.NotIdentifiableEvent",
            "javax.xml.bind.ParseConversionEvent",
            "javax.xml.bind.PrintConversionEvent"
        ],
        "Subinterface": [
            "javax.xml.bind.helpers.NotIdentifiableEventImpl",
            "javax.xml.bind.helpers.ParseConversionEventImpl",
            "javax.xml.bind.helpers.PrintConversionEventImpl",
            "javax.xml.bind.helpers.ValidationEventImpl"
        ],
        "Method": {
            "getSeverity": {
                "Parameter": {},
                "Throw": []
            },
            "getMessage": {
                "Parameter": {},
                "Throw": []
            },
            "getLinkedException": {
                "Parameter": {},
                "Throw": []
            },
            "getLocator": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "774": {
        "Package": "javax.xml.bind",
        "Interface": "ValidationEventHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.bind.helpers.DefaultValidationEventHandler",
            "javax.xml.bind.util.ValidationEventCollector"
        ],
        "Method": {
            "handleEvent": {
                "Parameter": {
                    "event": "ValidationEvent"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "775": {
        "Package": "javax.xml.bind",
        "Interface": "ValidationEventLocator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.bind.helpers.ValidationEventLocatorImpl"
        ],
        "Method": {
            "getURL": {
                "Parameter": {},
                "Throw": []
            },
            "getOffset": {
                "Parameter": {},
                "Throw": []
            },
            "getLineNumber": {
                "Parameter": {},
                "Throw": []
            },
            "getColumnNumber": {
                "Parameter": {},
                "Throw": []
            },
            "getObject": {
                "Parameter": {},
                "Throw": []
            },
            "getNode": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "776": {
        "Package": "javax.xml.bind",
        "Interface": "Validator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setEventHandler": {
                "Parameter": {
                    "handler": "ValidationEventHandler"
                },
                "Throw": "javax.xml.bind.JAXBException"
            },
            "getEventHandler": {
                "Parameter": {},
                "Throw": "javax.xml.bind.JAXBException"
            },
            "validate": {
                "Parameter": {
                    "subrootObj": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "validateRoot": {
                "Parameter": {
                    "rootObj": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "setProperty": {
                "Parameter": {
                    "name": "String",
                    "value": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getProperty": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "777": {
        "Package": "javax.xml.bind.annotation",
        "Interface": "DomHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.bind.annotation.W3CDomHandler"
        ],
        "Method": {
            "createUnmarshaller": {
                "Parameter": {
                    "errorHandler": "ValidationEventHandler"
                },
                "Throw": []
            },
            "getElement": {
                "Parameter": {
                    "rt": "ResultT"
                },
                "Throw": []
            },
            "marshal": {
                "Parameter": {
                    "n": "ElementT",
                    "errorHandler": "ValidationEventHandler"
                },
                "Throw": []
            }
        }
    },
    "778": {
        "Package": "javax.xml.crypto",
        "Interface": "AlgorithmMethod",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.crypto.dsig.CanonicalizationMethod",
            "javax.xml.crypto.dsig.DigestMethod",
            "javax.xml.crypto.dsig.SignatureMethod",
            "javax.xml.crypto.dsig.Transform"
        ],
        "Subinterface": [
            "javax.xml.crypto.dsig.TransformService"
        ],
        "Method": {
            "getAlgorithm": {
                "Parameter": {},
                "Throw": []
            },
            "getParameterSpec": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "779": {
        "Package": "javax.xml.crypto",
        "Interface": "Data",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.crypto.NodeSetData"
        ],
        "Subinterface": [
            "javax.xml.crypto.OctetStreamData"
        ],
        "Method": {}
    },
    "780": {
        "Package": "javax.xml.crypto",
        "Interface": "KeySelectorResult",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getKey": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "781": {
        "Package": "javax.xml.crypto",
        "Interface": "NodeSetData",
        "Superinterface": [
            "javax.xml.crypto.Data"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "iterator": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "782": {
        "Package": "javax.xml.crypto",
        "Interface": "URIDereferencer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "dereference": {
                "Parameter": {
                    "uriReference": "URIReference",
                    "context": "XMLCryptoContext"
                },
                "Throw": "javax.xml.crypto.URIReferenceException"
            }
        }
    },
    "783": {
        "Package": "javax.xml.crypto",
        "Interface": "URIReference",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.crypto.dom.DOMURIReference",
            "javax.xml.crypto.dsig.Reference",
            "javax.xml.crypto.dsig.keyinfo.RetrievalMethod"
        ],
        "Subinterface": null,
        "Method": {
            "getURI": {
                "Parameter": {},
                "Throw": []
            },
            "getType": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "784": {
        "Package": "javax.xml.crypto",
        "Interface": "XMLCryptoContext",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.crypto.dsig.XMLSignContext",
            "javax.xml.crypto.dsig.XMLValidateContext"
        ],
        "Subinterface": [
            "javax.xml.crypto.dom.DOMCryptoContext",
            "javax.xml.crypto.dsig.dom.DOMSignContext",
            "javax.xml.crypto.dsig.dom.DOMValidateContext"
        ],
        "Method": {
            "getBaseURI": {
                "Parameter": {},
                "Throw": []
            },
            "setBaseURI": {
                "Parameter": {
                    "baseURI": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getKeySelector": {
                "Parameter": {},
                "Throw": []
            },
            "setKeySelector": {
                "Parameter": {
                    "ks": "KeySelector"
                },
                "Throw": []
            },
            "getURIDereferencer": {
                "Parameter": {},
                "Throw": []
            },
            "setURIDereferencer": {
                "Parameter": {
                    "dereferencer": "URIDereferencer"
                },
                "Throw": []
            },
            "getNamespacePrefix": {
                "Parameter": {
                    "namespaceURI": "String",
                    "defaultPrefix": "String"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "putNamespacePrefix": {
                "Parameter": {
                    "namespaceURI": "String",
                    "prefix": "String"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getDefaultNamespacePrefix": {
                "Parameter": {},
                "Throw": []
            },
            "setDefaultNamespacePrefix": {
                "Parameter": {
                    "defaultPrefix": "String"
                },
                "Throw": []
            },
            "setProperty": {
                "Parameter": {
                    "name": "String",
                    "value": "Object"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getProperty": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "get": {
                "Parameter": {
                    "key": "Object"
                },
                "Throw": []
            },
            "put": {
                "Parameter": {
                    "key": "Object",
                    "value": "Object"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "785": {
        "Package": "javax.xml.crypto",
        "Interface": "XMLStructure",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.crypto.dsig.CanonicalizationMethod",
            "javax.xml.crypto.dsig.DigestMethod",
            "javax.xml.crypto.dsig.keyinfo.KeyInfo",
            "javax.xml.crypto.dsig.keyinfo.KeyName",
            "javax.xml.crypto.dsig.keyinfo.KeyValue",
            "javax.xml.crypto.dsig.Manifest",
            "javax.xml.crypto.dsig.keyinfo.PGPData",
            "javax.xml.crypto.dsig.Reference",
            "javax.xml.crypto.dsig.keyinfo.RetrievalMethod",
            "javax.xml.crypto.dsig.SignatureMethod",
            "javax.xml.crypto.dsig.SignatureProperties",
            "javax.xml.crypto.dsig.SignatureProperty",
            "javax.xml.crypto.dsig.SignedInfo",
            "javax.xml.crypto.dsig.Transform",
            "javax.xml.crypto.dsig.keyinfo.X509Data",
            "javax.xml.crypto.dsig.keyinfo.X509IssuerSerial",
            "javax.xml.crypto.dsig.XMLObject",
            "javax.xml.crypto.dsig.XMLSignature",
            "javax.xml.crypto.dsig.XMLSignature.SignatureValue"
        ],
        "Subinterface": [
            "javax.xml.crypto.dom.DOMStructure",
            "javax.xml.crypto.dsig.TransformService"
        ],
        "Method": {
            "isFeatureSupported": {
                "Parameter": {
                    "feature": "String"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "786": {
        "Package": "javax.xml.crypto.dom",
        "Interface": "DOMURIReference",
        "Superinterface": [
            "javax.xml.crypto.URIReference"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getHere": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "787": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "CanonicalizationMethod",
        "Superinterface": [
            "javax.xml.crypto.AlgorithmMethod",
            "javax.xml.crypto.dsig.Transform",
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getParameterSpec": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "788": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "DigestMethod",
        "Superinterface": [
            "javax.xml.crypto.AlgorithmMethod",
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getParameterSpec": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "789": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "Manifest",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getId": {
                "Parameter": {},
                "Throw": []
            },
            "getReferences": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "790": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "Reference",
        "Superinterface": [
            "javax.xml.crypto.URIReference",
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getTransforms": {
                "Parameter": {},
                "Throw": []
            },
            "getDigestMethod": {
                "Parameter": {},
                "Throw": []
            },
            "getId": {
                "Parameter": {},
                "Throw": []
            },
            "getDigestValue": {
                "Parameter": {},
                "Throw": []
            },
            "getCalculatedDigestValue": {
                "Parameter": {},
                "Throw": []
            },
            "validate": {
                "Parameter": {
                    "validateContext": "XMLValidateContext"
                },
                "Throw": "javax.xml.crypto.dsig.XMLSignatureException"
            },
            "getDereferencedData": {
                "Parameter": {},
                "Throw": []
            },
            "getDigestInputStream": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "791": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "SignatureMethod",
        "Superinterface": [
            "javax.xml.crypto.AlgorithmMethod",
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getParameterSpec": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "792": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "SignatureProperties",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getId": {
                "Parameter": {},
                "Throw": []
            },
            "getProperties": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "793": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "SignatureProperty",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getTarget": {
                "Parameter": {},
                "Throw": []
            },
            "getId": {
                "Parameter": {},
                "Throw": []
            },
            "getContent": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "794": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "SignedInfo",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getCanonicalizationMethod": {
                "Parameter": {},
                "Throw": []
            },
            "getSignatureMethod": {
                "Parameter": {},
                "Throw": []
            },
            "getReferences": {
                "Parameter": {},
                "Throw": []
            },
            "getId": {
                "Parameter": {},
                "Throw": []
            },
            "getCanonicalizedData": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "795": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "Transform",
        "Superinterface": [
            "javax.xml.crypto.AlgorithmMethod",
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": [
            "javax.xml.crypto.dsig.CanonicalizationMethod"
        ],
        "Subinterface": [
            "javax.xml.crypto.dsig.TransformService"
        ],
        "Method": {
            "getParameterSpec": {
                "Parameter": {},
                "Throw": []
            },
            "transform": {
                "Parameter": {
                    "data": "Data",
                    "context": "XMLCryptoContext",
                    "os": "OutputStream"
                },
                "Throw": "javax.xml.crypto.dsig.TransformException"
            }
        }
    },
    "796": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "XMLObject",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getContent": {
                "Parameter": {},
                "Throw": []
            },
            "getId": {
                "Parameter": {},
                "Throw": []
            },
            "getMimeType": {
                "Parameter": {},
                "Throw": []
            },
            "getEncoding": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "797": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "XMLSignature",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "validate": {
                "Parameter": {
                    "validateContext": "XMLValidateContext"
                },
                "Throw": "javax.xml.crypto.dsig.XMLSignatureException"
            },
            "getKeyInfo": {
                "Parameter": {},
                "Throw": []
            },
            "getSignedInfo": {
                "Parameter": {},
                "Throw": []
            },
            "getObjects": {
                "Parameter": {},
                "Throw": []
            },
            "getId": {
                "Parameter": {},
                "Throw": []
            },
            "getSignatureValue": {
                "Parameter": {},
                "Throw": []
            },
            "sign": {
                "Parameter": {
                    "signContext": "XMLSignContext"
                },
                "Throw": "javax.xml.crypto.dsig.XMLSignatureException"
            },
            "getKeySelectorResult": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "798": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "XMLSignature.SignatureValue",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getId": {
                "Parameter": {},
                "Throw": []
            },
            "getValue": {
                "Parameter": {},
                "Throw": []
            },
            "validate": {
                "Parameter": {
                    "validateContext": "XMLValidateContext"
                },
                "Throw": "javax.xml.crypto.dsig.XMLSignatureException"
            }
        }
    },
    "799": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "XMLSignContext",
        "Superinterface": [
            "javax.xml.crypto.XMLCryptoContext"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.crypto.dsig.dom.DOMSignContext"
        ],
        "Method": {}
    },
    "800": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "XMLValidateContext",
        "Superinterface": [
            "javax.xml.crypto.XMLCryptoContext"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.crypto.dsig.dom.DOMValidateContext"
        ],
        "Method": {}
    },
    "801": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "KeyInfo",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getContent": {
                "Parameter": {},
                "Throw": []
            },
            "getId": {
                "Parameter": {},
                "Throw": []
            },
            "marshal": {
                "Parameter": {
                    "parent": "XMLStructure",
                    "context": "XMLCryptoContext"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "802": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "KeyName",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "803": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "KeyValue",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPublicKey": {
                "Parameter": {},
                "Throw": "java.security.KeyException"
            }
        }
    },
    "804": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "PGPData",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getKeyId": {
                "Parameter": {},
                "Throw": []
            },
            "getKeyPacket": {
                "Parameter": {},
                "Throw": []
            },
            "getExternalElements": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "805": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "RetrievalMethod",
        "Superinterface": [
            "javax.xml.crypto.URIReference",
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getTransforms": {
                "Parameter": {},
                "Throw": []
            },
            "getURI": {
                "Parameter": {},
                "Throw": []
            },
            "dereference": {
                "Parameter": {
                    "context": "XMLCryptoContext"
                },
                "Throw": "javax.xml.crypto.URIReferenceException"
            }
        }
    },
    "806": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "X509Data",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getContent": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "807": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "X509IssuerSerial",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getIssuerName": {
                "Parameter": {},
                "Throw": []
            },
            "getSerialNumber": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "808": {
        "Package": "javax.xml.crypto.dsig.spec",
        "Interface": "C14NMethodParameterSpec",
        "Superinterface": [
            "java.security.spec.AlgorithmParameterSpec",
            "javax.xml.crypto.dsig.spec.TransformParameterSpec"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.crypto.dsig.spec.ExcC14NParameterSpec"
        ],
        "Method": {}
    },
    "809": {
        "Package": "javax.xml.crypto.dsig.spec",
        "Interface": "DigestMethodParameterSpec",
        "Superinterface": [
            "java.security.spec.AlgorithmParameterSpec"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "810": {
        "Package": "javax.xml.crypto.dsig.spec",
        "Interface": "SignatureMethodParameterSpec",
        "Superinterface": [
            "java.security.spec.AlgorithmParameterSpec"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.crypto.dsig.spec.HMACParameterSpec"
        ],
        "Method": {}
    },
    "811": {
        "Package": "javax.xml.crypto.dsig.spec",
        "Interface": "TransformParameterSpec",
        "Superinterface": [
            "java.security.spec.AlgorithmParameterSpec"
        ],
        "Implementing Class": [
            "javax.xml.crypto.dsig.spec.C14NMethodParameterSpec"
        ],
        "Subinterface": [
            "javax.xml.crypto.dsig.spec.ExcC14NParameterSpec",
            "javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec",
            "javax.xml.crypto.dsig.spec.XPathFilterParameterSpec",
            "javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec"
        ],
        "Method": {}
    },
    "812": {
        "Package": "javax.xml.namespace",
        "Interface": "NamespaceContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getNamespaceURI": {
                "Parameter": {
                    "prefix": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getPrefix": {
                "Parameter": {
                    "namespaceURI": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getPrefixes": {
                "Parameter": {
                    "namespaceURI": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "813": {
        "Package": "javax.xml.soap",
        "Interface": "Detail",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.Node",
            "javax.xml.soap.SOAPElement",
            "javax.xml.soap.SOAPFaultElement"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "addDetailEntry": {
                "Parameter": {
                    "qname": "QName"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "getDetailEntries": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "814": {
        "Package": "javax.xml.soap",
        "Interface": "DetailEntry",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.Node",
            "javax.xml.soap.SOAPElement"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "815": {
        "Package": "javax.xml.soap",
        "Interface": "Name",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getLocalName": {
                "Parameter": {},
                "Throw": []
            },
            "getQualifiedName": {
                "Parameter": {},
                "Throw": []
            },
            "getPrefix": {
                "Parameter": {},
                "Throw": []
            },
            "getURI": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "816": {
        "Package": "javax.xml.soap",
        "Interface": "Node",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": [
            "javax.xml.soap.Detail",
            "javax.xml.soap.DetailEntry",
            "javax.xml.soap.SOAPBody",
            "javax.xml.soap.SOAPBodyElement",
            "javax.xml.soap.SOAPElement",
            "javax.xml.soap.SOAPEnvelope",
            "javax.xml.soap.SOAPFault",
            "javax.xml.soap.SOAPFaultElement",
            "javax.xml.soap.SOAPHeader",
            "javax.xml.soap.SOAPHeaderElement",
            "javax.xml.soap.Text"
        ],
        "Subinterface": null,
        "Method": {
            "getValue": {
                "Parameter": {},
                "Throw": []
            },
            "setValue": {
                "Parameter": {
                    "value": "String"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "setParentElement": {
                "Parameter": {
                    "parent": "SOAPElement"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "getParentElement": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "detachNode": {
                "Parameter": {},
                "Throw": []
            },
            "recycleNode": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "817": {
        "Package": "javax.xml.soap",
        "Interface": "SOAPBody",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.Node",
            "javax.xml.soap.SOAPElement"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "addFault": {
                "Parameter": {
                    "faultCode": "QName",
                    "faultString": "String"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "hasFault": {
                "Parameter": {},
                "Throw": []
            },
            "getFault": {
                "Parameter": {},
                "Throw": []
            },
            "addBodyElement": {
                "Parameter": {
                    "qname": "QName"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "addDocument": {
                "Parameter": {
                    "document": "Document"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "extractContentAsDocument": {
                "Parameter": {},
                "Throw": "javax.xml.soap.SOAPException"
            }
        }
    },
    "818": {
        "Package": "javax.xml.soap",
        "Interface": "SOAPBodyElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.Node",
            "javax.xml.soap.SOAPElement"
        ],
        "Implementing Class": [
            "javax.xml.soap.SOAPFault"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "819": {
        "Package": "javax.xml.soap",
        "Interface": "SOAPConstants",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "820": {
        "Package": "javax.xml.soap",
        "Interface": "SOAPElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": [
            "javax.xml.soap.Detail",
            "javax.xml.soap.DetailEntry",
            "javax.xml.soap.SOAPBody",
            "javax.xml.soap.SOAPBodyElement",
            "javax.xml.soap.SOAPEnvelope",
            "javax.xml.soap.SOAPFault",
            "javax.xml.soap.SOAPFaultElement",
            "javax.xml.soap.SOAPHeader",
            "javax.xml.soap.SOAPHeaderElement"
        ],
        "Subinterface": null,
        "Method": {
            "addChildElement": {
                "Parameter": {
                    "element": "SOAPElement"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "removeContents": {
                "Parameter": {},
                "Throw": []
            },
            "addTextNode": {
                "Parameter": {
                    "text": "String"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "addAttribute": {
                "Parameter": {
                    "qname": "QName",
                    "value": "String"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "addNamespaceDeclaration": {
                "Parameter": {
                    "prefix": "String",
                    "uri": "String"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "getAttributeValue": {
                "Parameter": {
                    "qname": "QName"
                },
                "Throw": []
            },
            "getAllAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "getAllAttributesAsQNames": {
                "Parameter": {},
                "Throw": []
            },
            "getNamespaceURI": {
                "Parameter": {
                    "prefix": "String"
                },
                "Throw": []
            },
            "getNamespacePrefixes": {
                "Parameter": {},
                "Throw": []
            },
            "getVisibleNamespacePrefixes": {
                "Parameter": {},
                "Throw": []
            },
            "createQName": {
                "Parameter": {
                    "localName": "String",
                    "prefix": "String"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "getElementName": {
                "Parameter": {},
                "Throw": []
            },
            "getElementQName": {
                "Parameter": {},
                "Throw": []
            },
            "setElementQName": {
                "Parameter": {
                    "newName": "QName"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "removeAttribute": {
                "Parameter": {
                    "qname": "QName"
                },
                "Throw": []
            },
            "removeNamespaceDeclaration": {
                "Parameter": {
                    "prefix": "String"
                },
                "Throw": []
            },
            "getChildElements": {
                "Parameter": {
                    "qname": "QName"
                },
                "Throw": []
            },
            "setEncodingStyle": {
                "Parameter": {
                    "encodingStyle": "String"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "getEncodingStyle": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "821": {
        "Package": "javax.xml.soap",
        "Interface": "SOAPEnvelope",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.Node",
            "javax.xml.soap.SOAPElement"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createName": {
                "Parameter": {
                    "localName": "String"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "getHeader": {
                "Parameter": {},
                "Throw": "javax.xml.soap.SOAPException"
            },
            "getBody": {
                "Parameter": {},
                "Throw": "javax.xml.soap.SOAPException"
            },
            "addHeader": {
                "Parameter": {},
                "Throw": "javax.xml.soap.SOAPException"
            },
            "addBody": {
                "Parameter": {},
                "Throw": "javax.xml.soap.SOAPException"
            }
        }
    },
    "822": {
        "Package": "javax.xml.soap",
        "Interface": "SOAPFault",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.Node",
            "javax.xml.soap.SOAPBodyElement",
            "javax.xml.soap.SOAPElement"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setFaultCode": {
                "Parameter": {
                    "faultCode": "String"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "getFaultCodeAsName": {
                "Parameter": {},
                "Throw": []
            },
            "getFaultCodeAsQName": {
                "Parameter": {},
                "Throw": []
            },
            "getFaultSubcodes": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "removeAllFaultSubcodes": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "appendFaultSubcode": {
                "Parameter": {
                    "subcode": "QName"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getFaultCode": {
                "Parameter": {},
                "Throw": []
            },
            "setFaultActor": {
                "Parameter": {
                    "faultActor": "String"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "getFaultActor": {
                "Parameter": {},
                "Throw": []
            },
            "setFaultString": {
                "Parameter": {
                    "faultString": "String",
                    "locale": "Locale"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "getFaultString": {
                "Parameter": {},
                "Throw": []
            },
            "getFaultStringLocale": {
                "Parameter": {},
                "Throw": []
            },
            "hasDetail": {
                "Parameter": {},
                "Throw": []
            },
            "getDetail": {
                "Parameter": {},
                "Throw": []
            },
            "addDetail": {
                "Parameter": {},
                "Throw": "javax.xml.soap.SOAPException"
            },
            "getFaultReasonLocales": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getFaultReasonTexts": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getFaultReasonText": {
                "Parameter": {
                    "locale": "Locale"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "addFaultReasonText": {
                "Parameter": {
                    "text": "String",
                    "locale": "Locale"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getFaultNode": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "setFaultNode": {
                "Parameter": {
                    "uri": "String"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getFaultRole": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "setFaultRole": {
                "Parameter": {
                    "uri": "String"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            }
        }
    },
    "823": {
        "Package": "javax.xml.soap",
        "Interface": "SOAPFaultElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.Node",
            "javax.xml.soap.SOAPElement"
        ],
        "Implementing Class": [
            "javax.xml.soap.Detail"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "824": {
        "Package": "javax.xml.soap",
        "Interface": "SOAPHeader",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.Node",
            "javax.xml.soap.SOAPElement"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "addHeaderElement": {
                "Parameter": {
                    "qname": "QName"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "examineMustUnderstandHeaderElements": {
                "Parameter": {
                    "actor": "String"
                },
                "Throw": []
            },
            "examineHeaderElements": {
                "Parameter": {
                    "actor": "String"
                },
                "Throw": []
            },
            "extractHeaderElements": {
                "Parameter": {
                    "actor": "String"
                },
                "Throw": []
            },
            "addNotUnderstoodHeaderElement": {
                "Parameter": {
                    "name": "QName"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "addUpgradeHeaderElement": {
                "Parameter": {
                    "supportedSoapUri": "String"
                },
                "Throw": "javax.xml.soap.SOAPException"
            },
            "examineAllHeaderElements": {
                "Parameter": {},
                "Throw": []
            },
            "extractAllHeaderElements": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "825": {
        "Package": "javax.xml.soap",
        "Interface": "SOAPHeaderElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.Node",
            "javax.xml.soap.SOAPElement"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setActor": {
                "Parameter": {
                    "actorURI": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "setRole": {
                "Parameter": {
                    "uri": "String"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getActor": {
                "Parameter": {},
                "Throw": []
            },
            "getRole": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "setMustUnderstand": {
                "Parameter": {
                    "mustUnderstand": "boolean"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getMustUnderstand": {
                "Parameter": {},
                "Throw": []
            },
            "setRelay": {
                "Parameter": {
                    "relay": "boolean"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getRelay": {
                "Parameter": {},
                "Throw": "java.lang.UnsupportedOperationException"
            }
        }
    },
    "826": {
        "Package": "javax.xml.soap",
        "Interface": "Text",
        "Superinterface": [
            "org.w3c.dom.CharacterData",
            "org.w3c.dom.Node",
            "org.w3c.dom.Text"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "isComment": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "827": {
        "Package": "javax.xml.stream",
        "Interface": "EventFilter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "event": "XMLEvent"
                },
                "Throw": []
            }
        }
    },
    "828": {
        "Package": "javax.xml.stream",
        "Interface": "Location",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getLineNumber": {
                "Parameter": {},
                "Throw": []
            },
            "getColumnNumber": {
                "Parameter": {},
                "Throw": []
            },
            "getCharacterOffset": {
                "Parameter": {},
                "Throw": []
            },
            "getPublicId": {
                "Parameter": {},
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "829": {
        "Package": "javax.xml.stream",
        "Interface": "StreamFilter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "accept": {
                "Parameter": {
                    "reader": "XMLStreamReader"
                },
                "Throw": []
            }
        }
    },
    "830": {
        "Package": "javax.xml.stream",
        "Interface": "XMLEventReader",
        "Superinterface": [
            "java.util.Iterator"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.stream.util.EventReaderDelegate"
        ],
        "Method": {
            "nextEvent": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "hasNext": {
                "Parameter": {},
                "Throw": []
            },
            "peek": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "getElementText": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "nextTag": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "getProperty": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "close": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            }
        }
    },
    "831": {
        "Package": "javax.xml.stream",
        "Interface": "XMLEventWriter",
        "Superinterface": [
            "javax.xml.stream.util.XMLEventConsumer"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "flush": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "close": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "add": {
                "Parameter": {
                    "reader": "XMLEventReader"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "getPrefix": {
                "Parameter": {
                    "uri": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "setPrefix": {
                "Parameter": {
                    "prefix": "String",
                    "uri": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "setDefaultNamespace": {
                "Parameter": {
                    "uri": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "setNamespaceContext": {
                "Parameter": {
                    "context": "NamespaceContext"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "getNamespaceContext": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "832": {
        "Package": "javax.xml.stream",
        "Interface": "XMLReporter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "report": {
                "Parameter": {
                    "message": "String",
                    "errorType": "String",
                    "relatedInformation": "Object",
                    "location": "Location"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            }
        }
    },
    "833": {
        "Package": "javax.xml.stream",
        "Interface": "XMLResolver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "resolveEntity": {
                "Parameter": {
                    "publicID": "String",
                    "systemID": "String",
                    "baseURI": "String",
                    "namespace": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            }
        }
    },
    "834": {
        "Package": "javax.xml.stream",
        "Interface": "XMLStreamConstants",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.stream.events.Attribute",
            "javax.xml.stream.events.Characters",
            "javax.xml.stream.events.Comment",
            "javax.xml.stream.events.DTD",
            "javax.xml.stream.events.EndDocument",
            "javax.xml.stream.events.EndElement",
            "javax.xml.stream.events.EntityDeclaration",
            "javax.xml.stream.events.EntityReference",
            "javax.xml.stream.events.Namespace",
            "javax.xml.stream.events.NotationDeclaration",
            "javax.xml.stream.events.ProcessingInstruction",
            "javax.xml.stream.events.StartDocument",
            "javax.xml.stream.events.StartElement",
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamReader"
        ],
        "Subinterface": [
            "javax.xml.stream.util.StreamReaderDelegate"
        ],
        "Method": {}
    },
    "835": {
        "Package": "javax.xml.stream",
        "Interface": "XMLStreamReader",
        "Superinterface": [
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.stream.util.StreamReaderDelegate"
        ],
        "Method": {
            "getProperty": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "next": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "require": {
                "Parameter": {
                    "type": "int",
                    "namespaceURI": "String",
                    "localName": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "getElementText": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "nextTag": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "hasNext": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "close": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "getNamespaceURI": {
                "Parameter": {},
                "Throw": []
            },
            "isStartElement": {
                "Parameter": {},
                "Throw": []
            },
            "isEndElement": {
                "Parameter": {},
                "Throw": []
            },
            "isCharacters": {
                "Parameter": {},
                "Throw": []
            },
            "isWhiteSpace": {
                "Parameter": {},
                "Throw": []
            },
            "getAttributeValue": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getAttributeCount": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "getAttributeName": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getAttributeNamespace": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getAttributeLocalName": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getAttributePrefix": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getAttributeType": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "isAttributeSpecified": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getNamespaceCount": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "getNamespacePrefix": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getNamespaceContext": {
                "Parameter": {},
                "Throw": []
            },
            "getEventType": {
                "Parameter": {},
                "Throw": []
            },
            "getText": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "getTextCharacters": {
                "Parameter": {
                    "sourceStart": "int",
                    "target": "char",
                    "targetStart": "int",
                    "length": "int"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getTextStart": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "getTextLength": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "getEncoding": {
                "Parameter": {},
                "Throw": []
            },
            "hasText": {
                "Parameter": {},
                "Throw": []
            },
            "getLocation": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "getLocalName": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "hasName": {
                "Parameter": {},
                "Throw": []
            },
            "getPrefix": {
                "Parameter": {},
                "Throw": []
            },
            "getVersion": {
                "Parameter": {},
                "Throw": []
            },
            "isStandalone": {
                "Parameter": {},
                "Throw": []
            },
            "standaloneSet": {
                "Parameter": {},
                "Throw": []
            },
            "getCharacterEncodingScheme": {
                "Parameter": {},
                "Throw": []
            },
            "getPITarget": {
                "Parameter": {},
                "Throw": []
            },
            "getPIData": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "836": {
        "Package": "javax.xml.stream",
        "Interface": "XMLStreamWriter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "writeStartElement": {
                "Parameter": {
                    "prefix": "String",
                    "localName": "String",
                    "namespaceURI": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "writeEmptyElement": {
                "Parameter": {
                    "localName": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "writeEndElement": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "writeEndDocument": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "close": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "flush": {
                "Parameter": {},
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "writeAttribute": {
                "Parameter": {
                    "namespaceURI": "String",
                    "localName": "String",
                    "value": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "writeNamespace": {
                "Parameter": {
                    "prefix": "String",
                    "namespaceURI": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "writeDefaultNamespace": {
                "Parameter": {
                    "namespaceURI": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "writeComment": {
                "Parameter": {
                    "data": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "writeProcessingInstruction": {
                "Parameter": {
                    "target": "String",
                    "data": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "writeCData": {
                "Parameter": {
                    "data": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "writeDTD": {
                "Parameter": {
                    "dtd": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "writeEntityRef": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "writeStartDocument": {
                "Parameter": {
                    "encoding": "String",
                    "version": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "writeCharacters": {
                "Parameter": {
                    "text": "char",
                    "start": "int",
                    "len": "int"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "getPrefix": {
                "Parameter": {
                    "uri": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "setPrefix": {
                "Parameter": {
                    "prefix": "String",
                    "uri": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "setDefaultNamespace": {
                "Parameter": {
                    "uri": "String"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "setNamespaceContext": {
                "Parameter": {
                    "context": "NamespaceContext"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            },
            "getNamespaceContext": {
                "Parameter": {},
                "Throw": []
            },
            "getProperty": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "837": {
        "Package": "javax.xml.stream.events",
        "Interface": "Attribute",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": [
            "javax.xml.stream.events.Namespace"
        ],
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getValue": {
                "Parameter": {},
                "Throw": []
            },
            "getDTDType": {
                "Parameter": {},
                "Throw": []
            },
            "isSpecified": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "838": {
        "Package": "javax.xml.stream.events",
        "Interface": "Characters",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getData": {
                "Parameter": {},
                "Throw": []
            },
            "isWhiteSpace": {
                "Parameter": {},
                "Throw": []
            },
            "isCData": {
                "Parameter": {},
                "Throw": []
            },
            "isIgnorableWhiteSpace": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "839": {
        "Package": "javax.xml.stream.events",
        "Interface": "Comment",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getText": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "840": {
        "Package": "javax.xml.stream.events",
        "Interface": "DTD",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getDocumentTypeDeclaration": {
                "Parameter": {},
                "Throw": []
            },
            "getProcessedDTD": {
                "Parameter": {},
                "Throw": []
            },
            "getNotations": {
                "Parameter": {},
                "Throw": []
            },
            "getEntities": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "841": {
        "Package": "javax.xml.stream.events",
        "Interface": "EndDocument",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "842": {
        "Package": "javax.xml.stream.events",
        "Interface": "EndElement",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getNamespaces": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "843": {
        "Package": "javax.xml.stream.events",
        "Interface": "EntityDeclaration",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPublicId": {
                "Parameter": {},
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getNotationName": {
                "Parameter": {},
                "Throw": []
            },
            "getReplacementText": {
                "Parameter": {},
                "Throw": []
            },
            "getBaseURI": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "844": {
        "Package": "javax.xml.stream.events",
        "Interface": "EntityReference",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getDeclaration": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "845": {
        "Package": "javax.xml.stream.events",
        "Interface": "Namespace",
        "Superinterface": [
            "javax.xml.stream.events.Attribute",
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPrefix": {
                "Parameter": {},
                "Throw": []
            },
            "getNamespaceURI": {
                "Parameter": {},
                "Throw": []
            },
            "isDefaultNamespaceDeclaration": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "846": {
        "Package": "javax.xml.stream.events",
        "Interface": "NotationDeclaration",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getPublicId": {
                "Parameter": {},
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "847": {
        "Package": "javax.xml.stream.events",
        "Interface": "ProcessingInstruction",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getTarget": {
                "Parameter": {},
                "Throw": []
            },
            "getData": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "848": {
        "Package": "javax.xml.stream.events",
        "Interface": "StartDocument",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            },
            "getCharacterEncodingScheme": {
                "Parameter": {},
                "Throw": []
            },
            "encodingSet": {
                "Parameter": {},
                "Throw": []
            },
            "isStandalone": {
                "Parameter": {},
                "Throw": []
            },
            "standaloneSet": {
                "Parameter": {},
                "Throw": []
            },
            "getVersion": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "849": {
        "Package": "javax.xml.stream.events",
        "Interface": "StartElement",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "getNamespaces": {
                "Parameter": {},
                "Throw": []
            },
            "getAttributeByName": {
                "Parameter": {
                    "name": "QName"
                },
                "Throw": []
            },
            "getNamespaceContext": {
                "Parameter": {},
                "Throw": []
            },
            "getNamespaceURI": {
                "Parameter": {
                    "prefix": "String"
                },
                "Throw": []
            }
        }
    },
    "850": {
        "Package": "javax.xml.stream.events",
        "Interface": "XMLEvent",
        "Superinterface": [
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": [
            "javax.xml.stream.events.Attribute",
            "javax.xml.stream.events.Characters",
            "javax.xml.stream.events.Comment",
            "javax.xml.stream.events.DTD",
            "javax.xml.stream.events.EndDocument",
            "javax.xml.stream.events.EndElement",
            "javax.xml.stream.events.EntityDeclaration",
            "javax.xml.stream.events.EntityReference",
            "javax.xml.stream.events.Namespace",
            "javax.xml.stream.events.NotationDeclaration",
            "javax.xml.stream.events.ProcessingInstruction",
            "javax.xml.stream.events.StartDocument",
            "javax.xml.stream.events.StartElement"
        ],
        "Subinterface": null,
        "Method": {
            "getEventType": {
                "Parameter": {},
                "Throw": []
            },
            "getLocation": {
                "Parameter": {},
                "Throw": []
            },
            "isStartElement": {
                "Parameter": {},
                "Throw": []
            },
            "isAttribute": {
                "Parameter": {},
                "Throw": []
            },
            "isNamespace": {
                "Parameter": {},
                "Throw": []
            },
            "isEndElement": {
                "Parameter": {},
                "Throw": []
            },
            "isEntityReference": {
                "Parameter": {},
                "Throw": []
            },
            "isProcessingInstruction": {
                "Parameter": {},
                "Throw": []
            },
            "isCharacters": {
                "Parameter": {},
                "Throw": []
            },
            "isStartDocument": {
                "Parameter": {},
                "Throw": []
            },
            "isEndDocument": {
                "Parameter": {},
                "Throw": []
            },
            "asStartElement": {
                "Parameter": {},
                "Throw": []
            },
            "asEndElement": {
                "Parameter": {},
                "Throw": []
            },
            "asCharacters": {
                "Parameter": {},
                "Throw": []
            },
            "getSchemaType": {
                "Parameter": {},
                "Throw": []
            },
            "writeAsEncodedUnicode": {
                "Parameter": {
                    "writer": "Writer"
                },
                "Throw": []
            }
        }
    },
    "851": {
        "Package": "javax.xml.stream.util",
        "Interface": "XMLEventAllocator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "newInstance": {
                "Parameter": {},
                "Throw": []
            },
            "allocate": {
                "Parameter": {
                    "reader": "XMLStreamReader",
                    "consumer": "XMLEventConsumer"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            }
        }
    },
    "852": {
        "Package": "javax.xml.stream.util",
        "Interface": "XMLEventConsumer",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.stream.XMLEventWriter"
        ],
        "Subinterface": null,
        "Method": {
            "add": {
                "Parameter": {
                    "event": "XMLEvent"
                },
                "Throw": "javax.xml.stream.XMLStreamException"
            }
        }
    },
    "853": {
        "Package": "javax.xml.transform",
        "Interface": "ErrorListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "warning": {
                "Parameter": {
                    "exception": "TransformerException"
                },
                "Throw": "javax.xml.transform.TransformerException"
            },
            "error": {
                "Parameter": {
                    "exception": "TransformerException"
                },
                "Throw": "javax.xml.transform.TransformerException"
            },
            "fatalError": {
                "Parameter": {
                    "exception": "TransformerException"
                },
                "Throw": "javax.xml.transform.TransformerException"
            }
        }
    },
    "854": {
        "Package": "javax.xml.transform",
        "Interface": "Result",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.transform.dom.DOMResult",
            "javax.xml.bind.util.JAXBResult",
            "javax.xml.soap.SAAJResult",
            "javax.xml.transform.sax.SAXResult",
            "javax.xml.transform.stax.StAXResult",
            "javax.xml.transform.stream.StreamResult"
        ],
        "Method": {
            "setSystemId": {
                "Parameter": {
                    "systemId": "String"
                },
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "855": {
        "Package": "javax.xml.transform",
        "Interface": "Source",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.transform.dom.DOMSource",
            "javax.xml.bind.util.JAXBSource",
            "javax.xml.transform.sax.SAXSource",
            "javax.xml.transform.stax.StAXSource",
            "javax.xml.transform.stream.StreamSource"
        ],
        "Method": {
            "setSystemId": {
                "Parameter": {
                    "systemId": "String"
                },
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "856": {
        "Package": "javax.xml.transform",
        "Interface": "SourceLocator",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.transform.dom.DOMLocator"
        ],
        "Subinterface": null,
        "Method": {
            "getPublicId": {
                "Parameter": {},
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            },
            "getLineNumber": {
                "Parameter": {},
                "Throw": []
            },
            "getColumnNumber": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "857": {
        "Package": "javax.xml.transform",
        "Interface": "Templates",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "newTransformer": {
                "Parameter": {},
                "Throw": "javax.xml.transform.TransformerConfigurationException"
            },
            "getOutputProperties": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "858": {
        "Package": "javax.xml.transform",
        "Interface": "URIResolver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "resolve": {
                "Parameter": {
                    "href": "String",
                    "base": "String"
                },
                "Throw": "javax.xml.transform.TransformerException"
            }
        }
    },
    "859": {
        "Package": "javax.xml.transform.dom",
        "Interface": "DOMLocator",
        "Superinterface": [
            "javax.xml.transform.SourceLocator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getOriginatingNode": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "860": {
        "Package": "javax.xml.transform.sax",
        "Interface": "TemplatesHandler",
        "Superinterface": [
            "org.xml.sax.ContentHandler"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getTemplates": {
                "Parameter": {},
                "Throw": []
            },
            "setSystemId": {
                "Parameter": {
                    "systemID": "String"
                },
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "861": {
        "Package": "javax.xml.transform.sax",
        "Interface": "TransformerHandler",
        "Superinterface": [
            "org.xml.sax.ContentHandler",
            "org.xml.sax.DTDHandler",
            "org.xml.sax.ext.LexicalHandler"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setResult": {
                "Parameter": {
                    "result": "Result"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "setSystemId": {
                "Parameter": {
                    "systemID": "String"
                },
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            },
            "getTransformer": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "862": {
        "Package": "javax.xml.ws",
        "Interface": "AsyncHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "handleResponse": {
                "Parameter": {
                    "": "Response"
                },
                "Throw": []
            }
        }
    },
    "863": {
        "Package": "javax.xml.ws",
        "Interface": "Binding",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.ws.http.HTTPBinding",
            "javax.xml.ws.soap.SOAPBinding"
        ],
        "Subinterface": null,
        "Method": {
            "getHandlerChain": {
                "Parameter": {},
                "Throw": []
            },
            "setHandlerChain": {
                "Parameter": {
                    "": "List"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getBindingID": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "864": {
        "Package": "javax.xml.ws",
        "Interface": "BindingProvider",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.ws.Dispatch"
        ],
        "Subinterface": null,
        "Method": {
            "getRequestContext": {
                "Parameter": {},
                "Throw": []
            },
            "getResponseContext": {
                "Parameter": {},
                "Throw": []
            },
            "getBinding": {
                "Parameter": {},
                "Throw": []
            },
            "getEndpointReference": {
                "Parameter": {
                    "": "Class"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            }
        }
    },
    "865": {
        "Package": "javax.xml.ws",
        "Interface": "Dispatch",
        "Superinterface": [
            "javax.xml.ws.BindingProvider"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "invoke": {
                "Parameter": {
                    "msg": "T"
                },
                "Throw": "javax.xml.ws.WebServiceException"
            },
            "invokeAsync": {
                "Parameter": {
                    "msg": "T",
                    "": "AsyncHandler"
                },
                "Throw": "javax.xml.ws.WebServiceException"
            },
            "invokeOneWay": {
                "Parameter": {
                    "msg": "T"
                },
                "Throw": "javax.xml.ws.WebServiceException"
            }
        }
    },
    "866": {
        "Package": "javax.xml.ws",
        "Interface": "LogicalMessage",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPayload": {
                "Parameter": {
                    "context": "JAXBContext"
                },
                "Throw": "javax.xml.ws.WebServiceException"
            },
            "setPayload": {
                "Parameter": {
                    "payload": "Object",
                    "context": "JAXBContext"
                },
                "Throw": "javax.xml.ws.WebServiceException"
            }
        }
    },
    "867": {
        "Package": "javax.xml.ws",
        "Interface": "Provider",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "invoke": {
                "Parameter": {
                    "request": "T"
                },
                "Throw": "javax.xml.ws.WebServiceException"
            }
        }
    },
    "868": {
        "Package": "javax.xml.ws",
        "Interface": "Response",
        "Superinterface": [
            "java.util.concurrent.Future"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getContext": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "869": {
        "Package": "javax.xml.ws",
        "Interface": "WebServiceContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getMessageContext": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "getUserPrincipal": {
                "Parameter": {},
                "Throw": "java.lang.IllegalStateException"
            },
            "isUserInRole": {
                "Parameter": {
                    "role": "String"
                },
                "Throw": "java.lang.IllegalStateException"
            },
            "getEndpointReference": {
                "Parameter": {
                    "": "Class",
                    "referenceParameters": "Element"
                },
                "Throw": "javax.xml.ws.WebServiceException"
            }
        }
    },
    "870": {
        "Package": "javax.xml.ws.handler",
        "Interface": "Handler",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.ws.handler.LogicalHandler",
            "javax.xml.ws.handler.soap.SOAPHandler"
        ],
        "Subinterface": null,
        "Method": {
            "handleMessage": {
                "Parameter": {
                    "context": "C"
                },
                "Throw": []
            },
            "handleFault": {
                "Parameter": {
                    "context": "C"
                },
                "Throw": []
            },
            "close": {
                "Parameter": {
                    "context": "MessageContext"
                },
                "Throw": []
            }
        }
    },
    "871": {
        "Package": "javax.xml.ws.handler",
        "Interface": "HandlerResolver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getHandlerChain": {
                "Parameter": {
                    "portInfo": "PortInfo"
                },
                "Throw": []
            }
        }
    },
    "872": {
        "Package": "javax.xml.ws.handler",
        "Interface": "LogicalHandler",
        "Superinterface": [
            "javax.xml.ws.handler.Handler"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "873": {
        "Package": "javax.xml.ws.handler",
        "Interface": "LogicalMessageContext",
        "Superinterface": [
            "java.util.Map",
            "javax.xml.ws.handler.String"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getMessage": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "874": {
        "Package": "javax.xml.ws.handler",
        "Interface": "MessageContext",
        "Superinterface": [
            "java.util.Map"
        ],
        "Implementing Class": [
            "javax.xml.ws.handler.LogicalMessageContext",
            "javax.xml.ws.handler.soap.SOAPMessageContext"
        ],
        "Subinterface": null,
        "Method": {
            "setScope": {
                "Parameter": {
                    "name": "String",
                    "scope": "MessageContext.Scope"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "getScope": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "875": {
        "Package": "javax.xml.ws.handler",
        "Interface": "PortInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getServiceName": {
                "Parameter": {},
                "Throw": []
            },
            "getPortName": {
                "Parameter": {},
                "Throw": []
            },
            "getBindingID": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "876": {
        "Package": "javax.xml.ws.handler.soap",
        "Interface": "SOAPHandler",
        "Superinterface": [
            "javax.xml.ws.handler.Handler"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getHeaders": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "877": {
        "Package": "javax.xml.ws.handler.soap",
        "Interface": "SOAPMessageContext",
        "Superinterface": [
            "java.util.Map",
            "javax.xml.ws.handler.String"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getMessage": {
                "Parameter": {},
                "Throw": []
            },
            "setMessage": {
                "Parameter": {
                    "message": "SOAPMessage"
                },
                "Throw": "java.lang.UnsupportedOperationException"
            },
            "getHeaders": {
                "Parameter": {
                    "header": "QName",
                    "context": "JAXBContext",
                    "allRoles": "boolean"
                },
                "Throw": []
            },
            "getRoles": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "878": {
        "Package": "javax.xml.ws.http",
        "Interface": "HTTPBinding",
        "Superinterface": [
            "javax.xml.ws.Binding"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "879": {
        "Package": "javax.xml.ws.soap",
        "Interface": "SOAPBinding",
        "Superinterface": [
            "javax.xml.ws.Binding"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getRoles": {
                "Parameter": {},
                "Throw": []
            },
            "setRoles": {
                "Parameter": {
                    "": "Set"
                },
                "Throw": []
            },
            "isMTOMEnabled": {
                "Parameter": {},
                "Throw": []
            },
            "setMTOMEnabled": {
                "Parameter": {
                    "flag": "boolean"
                },
                "Throw": []
            },
            "getSOAPFactory": {
                "Parameter": {},
                "Throw": []
            },
            "getMessageFactory": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "880": {
        "Package": "javax.xml.xpath",
        "Interface": "XPath",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "reset": {
                "Parameter": {},
                "Throw": []
            },
            "setXPathVariableResolver": {
                "Parameter": {
                    "resolver": "XPathVariableResolver"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getXPathVariableResolver": {
                "Parameter": {},
                "Throw": []
            },
            "setXPathFunctionResolver": {
                "Parameter": {
                    "resolver": "XPathFunctionResolver"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getXPathFunctionResolver": {
                "Parameter": {},
                "Throw": []
            },
            "setNamespaceContext": {
                "Parameter": {
                    "nsContext": "NamespaceContext"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "getNamespaceContext": {
                "Parameter": {},
                "Throw": []
            },
            "compile": {
                "Parameter": {
                    "expression": "String"
                },
                "Throw": "java.lang.NullPointerException"
            },
            "evaluate": {
                "Parameter": {
                    "expression": "String",
                    "source": "InputSource"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "881": {
        "Package": "javax.xml.xpath",
        "Interface": "XPathExpression",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "evaluate": {
                "Parameter": {
                    "source": "InputSource"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "882": {
        "Package": "javax.xml.xpath",
        "Interface": "XPathFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "evaluate": {
                "Parameter": {
                    "args": "List"
                },
                "Throw": "javax.xml.xpath.XPathFunctionException"
            }
        }
    },
    "883": {
        "Package": "javax.xml.xpath",
        "Interface": "XPathFunctionResolver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "resolveFunction": {
                "Parameter": {
                    "functionName": "QName",
                    "arity": "int"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "884": {
        "Package": "javax.xml.xpath",
        "Interface": "XPathVariableResolver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "resolveVariable": {
                "Parameter": {
                    "variableName": "QName"
                },
                "Throw": "java.lang.NullPointerException"
            }
        }
    },
    "885": {
        "Package": "org.ietf.jgss",
        "Interface": "GSSContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "initSecContext": {
                "Parameter": {
                    "inStream": "InputStream",
                    "outStream": "OutputStream"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "acceptSecContext": {
                "Parameter": {
                    "inStream": "InputStream",
                    "outStream": "OutputStream"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "isEstablished": {
                "Parameter": {},
                "Throw": []
            },
            "dispose": {
                "Parameter": {},
                "Throw": "org.ietf.jgss.GSSException"
            },
            "getWrapSizeLimit": {
                "Parameter": {
                    "qop": "int",
                    "confReq": "boolean",
                    "maxTokenSize": "int"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "wrap": {
                "Parameter": {
                    "inStream": "InputStream",
                    "outStream": "OutputStream",
                    "msgProp": "MessageProp"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "unwrap": {
                "Parameter": {
                    "inStream": "InputStream",
                    "outStream": "OutputStream",
                    "msgProp": "MessageProp"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "getMIC": {
                "Parameter": {
                    "inStream": "InputStream",
                    "outStream": "OutputStream",
                    "msgProp": "MessageProp"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "verifyMIC": {
                "Parameter": {
                    "tokStream": "InputStream",
                    "msgStream": "InputStream",
                    "msgProp": "MessageProp"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "export": {
                "Parameter": {},
                "Throw": "org.ietf.jgss.GSSException"
            },
            "requestMutualAuth": {
                "Parameter": {
                    "state": "boolean"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "requestReplayDet": {
                "Parameter": {
                    "state": "boolean"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "requestSequenceDet": {
                "Parameter": {
                    "state": "boolean"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "requestCredDeleg": {
                "Parameter": {
                    "state": "boolean"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "requestAnonymity": {
                "Parameter": {
                    "state": "boolean"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "requestConf": {
                "Parameter": {
                    "state": "boolean"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "requestInteg": {
                "Parameter": {
                    "state": "boolean"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "requestLifetime": {
                "Parameter": {
                    "lifetime": "int"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "setChannelBinding": {
                "Parameter": {
                    "cb": "ChannelBinding"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "getCredDelegState": {
                "Parameter": {},
                "Throw": []
            },
            "getMutualAuthState": {
                "Parameter": {},
                "Throw": []
            },
            "getReplayDetState": {
                "Parameter": {},
                "Throw": []
            },
            "getSequenceDetState": {
                "Parameter": {},
                "Throw": []
            },
            "getAnonymityState": {
                "Parameter": {},
                "Throw": []
            },
            "isTransferable": {
                "Parameter": {},
                "Throw": "org.ietf.jgss.GSSException"
            },
            "isProtReady": {
                "Parameter": {},
                "Throw": []
            },
            "getConfState": {
                "Parameter": {},
                "Throw": []
            },
            "getIntegState": {
                "Parameter": {},
                "Throw": []
            },
            "getLifetime": {
                "Parameter": {},
                "Throw": []
            },
            "getSrcName": {
                "Parameter": {},
                "Throw": "org.ietf.jgss.GSSException"
            },
            "getTargName": {
                "Parameter": {},
                "Throw": "org.ietf.jgss.GSSException"
            },
            "getMech": {
                "Parameter": {},
                "Throw": "org.ietf.jgss.GSSException"
            },
            "getDelegCred": {
                "Parameter": {},
                "Throw": "org.ietf.jgss.GSSException"
            },
            "isInitiator": {
                "Parameter": {},
                "Throw": "org.ietf.jgss.GSSException"
            }
        }
    },
    "886": {
        "Package": "org.ietf.jgss",
        "Interface": "GSSCredential",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "dispose": {
                "Parameter": {},
                "Throw": "org.ietf.jgss.GSSException"
            },
            "getName": {
                "Parameter": {
                    "mech": "Oid"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "getRemainingLifetime": {
                "Parameter": {},
                "Throw": "org.ietf.jgss.GSSException"
            },
            "getRemainingInitLifetime": {
                "Parameter": {
                    "mech": "Oid"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "getRemainingAcceptLifetime": {
                "Parameter": {
                    "mech": "Oid"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "getUsage": {
                "Parameter": {
                    "mech": "Oid"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "getMechs": {
                "Parameter": {},
                "Throw": "org.ietf.jgss.GSSException"
            },
            "add": {
                "Parameter": {
                    "name": "GSSName",
                    "initLifetime": "int",
                    "acceptLifetime": "int",
                    "mech": "Oid",
                    "usage": "int"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "equals": {
                "Parameter": {
                    "another": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "887": {
        "Package": "org.ietf.jgss",
        "Interface": "GSSName",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "equals": {
                "Parameter": {
                    "another": "Object"
                },
                "Throw": []
            },
            "hashCode": {
                "Parameter": {},
                "Throw": []
            },
            "canonicalize": {
                "Parameter": {
                    "mech": "Oid"
                },
                "Throw": "org.ietf.jgss.GSSException"
            },
            "export": {
                "Parameter": {},
                "Throw": "org.ietf.jgss.GSSException"
            },
            "toString": {
                "Parameter": {},
                "Throw": []
            },
            "getStringNameType": {
                "Parameter": {},
                "Throw": "org.ietf.jgss.GSSException"
            },
            "isAnonymous": {
                "Parameter": {},
                "Throw": []
            },
            "isMN": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "888": {
        "Package": "org.omg.CORBA",
        "Interface": "ARG_IN",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "889": {
        "Package": "org.omg.CORBA",
        "Interface": "ARG_INOUT",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "890": {
        "Package": "org.omg.CORBA",
        "Interface": "ARG_OUT",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "891": {
        "Package": "org.omg.CORBA",
        "Interface": "BAD_POLICY",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "892": {
        "Package": "org.omg.CORBA",
        "Interface": "BAD_POLICY_TYPE",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "893": {
        "Package": "org.omg.CORBA",
        "Interface": "BAD_POLICY_VALUE",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "894": {
        "Package": "org.omg.CORBA",
        "Interface": "CTX_RESTRICT_SCOPE",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "895": {
        "Package": "org.omg.CORBA",
        "Interface": "Current",
        "Superinterface": [
            "org.omg.CORBA.CurrentOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.Current",
            "org.omg.PortableInterceptor.Current"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "896": {
        "Package": "org.omg.CORBA",
        "Interface": "CurrentOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.CORBA.Current",
            "org.omg.PortableServer.Current",
            "org.omg.PortableInterceptor.Current",
            "org.omg.PortableServer.CurrentOperations",
            "org.omg.PortableInterceptor.CurrentOperations"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "897": {
        "Package": "org.omg.CORBA",
        "Interface": "CustomMarshal",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.CORBA.portable.CustomValue"
        ],
        "Subinterface": null,
        "Method": {
            "marshal": {
                "Parameter": {
                    "os": "DataOutputStream"
                },
                "Throw": []
            },
            "unmarshal": {
                "Parameter": {
                    "is": "DataInputStream"
                },
                "Throw": []
            }
        }
    },
    "898": {
        "Package": "org.omg.CORBA",
        "Interface": "DataInputStream",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "java.io.Serializable",
            "org.omg.CORBA.portable.ValueBase"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "read_any": {
                "Parameter": {},
                "Throw": []
            },
            "read_boolean": {
                "Parameter": {},
                "Throw": []
            },
            "read_char": {
                "Parameter": {},
                "Throw": []
            },
            "read_wchar": {
                "Parameter": {},
                "Throw": []
            },
            "read_octet": {
                "Parameter": {},
                "Throw": []
            },
            "read_short": {
                "Parameter": {},
                "Throw": []
            },
            "read_ushort": {
                "Parameter": {},
                "Throw": []
            },
            "read_long": {
                "Parameter": {},
                "Throw": []
            },
            "read_ulong": {
                "Parameter": {},
                "Throw": []
            },
            "read_longlong": {
                "Parameter": {},
                "Throw": []
            },
            "read_ulonglong": {
                "Parameter": {},
                "Throw": []
            },
            "read_float": {
                "Parameter": {},
                "Throw": []
            },
            "read_double": {
                "Parameter": {},
                "Throw": []
            },
            "read_string": {
                "Parameter": {},
                "Throw": []
            },
            "read_wstring": {
                "Parameter": {},
                "Throw": []
            },
            "read_Object": {
                "Parameter": {},
                "Throw": []
            },
            "read_Abstract": {
                "Parameter": {},
                "Throw": []
            },
            "read_Value": {
                "Parameter": {},
                "Throw": []
            },
            "read_TypeCode": {
                "Parameter": {},
                "Throw": []
            },
            "read_any_array": {
                "Parameter": {
                    "seq": "AnySeqHolder",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "read_boolean_array": {
                "Parameter": {
                    "seq": "BooleanSeqHolder",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "read_char_array": {
                "Parameter": {
                    "seq": "CharSeqHolder",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "read_wchar_array": {
                "Parameter": {
                    "seq": "WCharSeqHolder",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "read_octet_array": {
                "Parameter": {
                    "seq": "OctetSeqHolder",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "read_short_array": {
                "Parameter": {
                    "seq": "ShortSeqHolder",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "read_ushort_array": {
                "Parameter": {
                    "seq": "UShortSeqHolder",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "read_long_array": {
                "Parameter": {
                    "seq": "LongSeqHolder",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "read_ulong_array": {
                "Parameter": {
                    "seq": "ULongSeqHolder",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "read_ulonglong_array": {
                "Parameter": {
                    "seq": "ULongLongSeqHolder",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "read_longlong_array": {
                "Parameter": {
                    "seq": "LongLongSeqHolder",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "read_float_array": {
                "Parameter": {
                    "seq": "FloatSeqHolder",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "read_double_array": {
                "Parameter": {
                    "seq": "DoubleSeqHolder",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            }
        }
    },
    "899": {
        "Package": "org.omg.CORBA",
        "Interface": "DataOutputStream",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "java.io.Serializable",
            "org.omg.CORBA.portable.ValueBase"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "write_any": {
                "Parameter": {
                    "value": "Any"
                },
                "Throw": []
            },
            "write_boolean": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": []
            },
            "write_char": {
                "Parameter": {
                    "value": "char"
                },
                "Throw": []
            },
            "write_wchar": {
                "Parameter": {
                    "value": "char"
                },
                "Throw": []
            },
            "write_octet": {
                "Parameter": {
                    "value": "byte"
                },
                "Throw": []
            },
            "write_short": {
                "Parameter": {
                    "value": "short"
                },
                "Throw": []
            },
            "write_ushort": {
                "Parameter": {
                    "value": "short"
                },
                "Throw": []
            },
            "write_long": {
                "Parameter": {
                    "value": "int"
                },
                "Throw": []
            },
            "write_ulong": {
                "Parameter": {
                    "value": "int"
                },
                "Throw": []
            },
            "write_longlong": {
                "Parameter": {
                    "value": "long"
                },
                "Throw": []
            },
            "write_ulonglong": {
                "Parameter": {
                    "value": "long"
                },
                "Throw": []
            },
            "write_float": {
                "Parameter": {
                    "value": "float"
                },
                "Throw": []
            },
            "write_double": {
                "Parameter": {
                    "value": "double"
                },
                "Throw": []
            },
            "write_string": {
                "Parameter": {
                    "value": "String"
                },
                "Throw": []
            },
            "write_wstring": {
                "Parameter": {
                    "value": "String"
                },
                "Throw": []
            },
            "write_Object": {
                "Parameter": {
                    "value": "Object"
                },
                "Throw": []
            },
            "write_Abstract": {
                "Parameter": {
                    "value": "Object"
                },
                "Throw": []
            },
            "write_Value": {
                "Parameter": {
                    "value": "Serializable"
                },
                "Throw": []
            },
            "write_TypeCode": {
                "Parameter": {
                    "value": "TypeCode"
                },
                "Throw": []
            },
            "write_any_array": {
                "Parameter": {
                    "seq": "Any",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "write_boolean_array": {
                "Parameter": {
                    "seq": "boolean",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "write_char_array": {
                "Parameter": {
                    "seq": "char",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "write_wchar_array": {
                "Parameter": {
                    "seq": "char",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "write_octet_array": {
                "Parameter": {
                    "seq": "byte",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "write_short_array": {
                "Parameter": {
                    "seq": "short",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "write_ushort_array": {
                "Parameter": {
                    "seq": "short",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "write_long_array": {
                "Parameter": {
                    "seq": "int",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "write_ulong_array": {
                "Parameter": {
                    "seq": "int",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "write_ulonglong_array": {
                "Parameter": {
                    "seq": "long",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "write_longlong_array": {
                "Parameter": {
                    "seq": "long",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "write_float_array": {
                "Parameter": {
                    "seq": "float",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            },
            "write_double_array": {
                "Parameter": {
                    "seq": "double",
                    "offset": "int",
                    "length": "int"
                },
                "Throw": []
            }
        }
    },
    "900": {
        "Package": "org.omg.CORBA",
        "Interface": "DomainManager",
        "Superinterface": [
            "org.omg.CORBA.DomainManagerOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "901": {
        "Package": "org.omg.CORBA",
        "Interface": "DomainManagerOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.CORBA.DomainManager"
        ],
        "Subinterface": null,
        "Method": {
            "get_domain_policy": {
                "Parameter": {
                    "policytype": "int"
                },
                "Throw": []
            }
        }
    },
    "902": {
        "Package": "org.omg.CORBA",
        "Interface": "DynAny",
        "Superinterface": [
            "org.omg.CORBA.Object"
        ],
        "Implementing Class": [
            "org.omg.CORBA.DynArray",
            "org.omg.CORBA.DynEnum",
            "org.omg.CORBA.DynFixed",
            "org.omg.CORBA.DynSequence",
            "org.omg.CORBA.DynStruct",
            "org.omg.CORBA.DynUnion",
            "org.omg.CORBA.DynValue"
        ],
        "Subinterface": null,
        "Method": {
            "type": {
                "Parameter": {},
                "Throw": []
            },
            "assign": {
                "Parameter": {
                    "dynany": "DynAny"
                },
                "Throw": []
            },
            "from_any": {
                "Parameter": {
                    "value": "Any"
                },
                "Throw": []
            },
            "to_any": {
                "Parameter": {},
                "Throw": []
            },
            "destroy": {
                "Parameter": {},
                "Throw": []
            },
            "copy": {
                "Parameter": {},
                "Throw": []
            },
            "insert_boolean": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_octet": {
                "Parameter": {
                    "value": "byte"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_char": {
                "Parameter": {
                    "value": "char"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_short": {
                "Parameter": {
                    "value": "short"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_ushort": {
                "Parameter": {
                    "value": "short"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_long": {
                "Parameter": {
                    "value": "int"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_ulong": {
                "Parameter": {
                    "value": "int"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_float": {
                "Parameter": {
                    "value": "float"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_double": {
                "Parameter": {
                    "value": "double"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_string": {
                "Parameter": {
                    "value": "String"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_reference": {
                "Parameter": {
                    "value": "Object"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_typecode": {
                "Parameter": {
                    "value": "TypeCode"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_longlong": {
                "Parameter": {
                    "value": "long"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_ulonglong": {
                "Parameter": {
                    "value": "long"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_wchar": {
                "Parameter": {
                    "value": "char"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_wstring": {
                "Parameter": {
                    "value": "String"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_any": {
                "Parameter": {
                    "value": "Any"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "insert_val": {
                "Parameter": {
                    "value": "Serializable"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            },
            "get_val": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_boolean": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_octet": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_char": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_short": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_ushort": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_long": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_ulong": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_float": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_double": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_string": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_reference": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_typecode": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_longlong": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_ulonglong": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_wchar": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_wstring": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "get_any": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.DynAnyPackage.TypeMismatch"
            },
            "current_component": {
                "Parameter": {},
                "Throw": []
            },
            "next": {
                "Parameter": {},
                "Throw": []
            },
            "seek": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "rewind": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "903": {
        "Package": "org.omg.CORBA",
        "Interface": "DynArray",
        "Superinterface": [
            "org.omg.CORBA.DynAny",
            "org.omg.CORBA.Object"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "get_elements": {
                "Parameter": {},
                "Throw": []
            },
            "set_elements": {
                "Parameter": {
                    "value": "Any"
                },
                "Throw": []
            }
        }
    },
    "904": {
        "Package": "org.omg.CORBA",
        "Interface": "DynEnum",
        "Superinterface": [
            "org.omg.CORBA.DynAny",
            "org.omg.CORBA.Object"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "value_as_string": {
                "Parameter": {
                    "arg": "String"
                },
                "Throw": []
            },
            "value_as_ulong": {
                "Parameter": {
                    "arg": "int"
                },
                "Throw": []
            }
        }
    },
    "905": {
        "Package": "org.omg.CORBA",
        "Interface": "DynFixed",
        "Superinterface": [
            "org.omg.CORBA.DynAny",
            "org.omg.CORBA.Object"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "get_value": {
                "Parameter": {},
                "Throw": []
            },
            "set_value": {
                "Parameter": {
                    "val": "byte"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidValue"
            }
        }
    },
    "906": {
        "Package": "org.omg.CORBA",
        "Interface": "DynSequence",
        "Superinterface": [
            "org.omg.CORBA.DynAny",
            "org.omg.CORBA.Object"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "length": {
                "Parameter": {
                    "arg": "int"
                },
                "Throw": []
            },
            "get_elements": {
                "Parameter": {},
                "Throw": []
            },
            "set_elements": {
                "Parameter": {
                    "value": "Any"
                },
                "Throw": []
            }
        }
    },
    "907": {
        "Package": "org.omg.CORBA",
        "Interface": "DynStruct",
        "Superinterface": [
            "org.omg.CORBA.DynAny",
            "org.omg.CORBA.Object"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "current_member_name": {
                "Parameter": {},
                "Throw": []
            },
            "current_member_kind": {
                "Parameter": {},
                "Throw": []
            },
            "get_members": {
                "Parameter": {},
                "Throw": []
            },
            "set_members": {
                "Parameter": {
                    "value": "NameValuePair"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidSeq"
            }
        }
    },
    "908": {
        "Package": "org.omg.CORBA",
        "Interface": "DynUnion",
        "Superinterface": [
            "org.omg.CORBA.DynAny",
            "org.omg.CORBA.Object"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "set_as_default": {
                "Parameter": {
                    "arg": "boolean"
                },
                "Throw": []
            },
            "discriminator": {
                "Parameter": {},
                "Throw": []
            },
            "discriminator_kind": {
                "Parameter": {},
                "Throw": []
            },
            "member": {
                "Parameter": {},
                "Throw": []
            },
            "member_name": {
                "Parameter": {
                    "arg": "String"
                },
                "Throw": []
            },
            "member_kind": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "909": {
        "Package": "org.omg.CORBA",
        "Interface": "DynValue",
        "Superinterface": [
            "org.omg.CORBA.DynAny",
            "org.omg.CORBA.Object"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "current_member_name": {
                "Parameter": {},
                "Throw": []
            },
            "current_member_kind": {
                "Parameter": {},
                "Throw": []
            },
            "get_members": {
                "Parameter": {},
                "Throw": []
            },
            "set_members": {
                "Parameter": {
                    "value": "NameValuePair"
                },
                "Throw": "org.omg.CORBA.DynAnyPackage.InvalidSeq"
            }
        }
    },
    "910": {
        "Package": "org.omg.CORBA",
        "Interface": "IDLType",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.IDLTypeOperations",
            "org.omg.CORBA.IRObject",
            "org.omg.CORBA.IRObjectOperations",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.CORBA._IDLTypeStub"
        ],
        "Method": {}
    },
    "911": {
        "Package": "org.omg.CORBA",
        "Interface": "IDLTypeOperations",
        "Superinterface": [
            "org.omg.CORBA.IRObjectOperations"
        ],
        "Implementing Class": [
            "org.omg.CORBA.IDLType"
        ],
        "Subinterface": [
            "org.omg.CORBA._IDLTypeStub"
        ],
        "Method": {
            "type": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "912": {
        "Package": "org.omg.CORBA",
        "Interface": "IRObject",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.IRObjectOperations",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "org.omg.CORBA.IDLType"
        ],
        "Subinterface": [
            "org.omg.CORBA._IDLTypeStub"
        ],
        "Method": {}
    },
    "913": {
        "Package": "org.omg.CORBA",
        "Interface": "IRObjectOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.CORBA.IDLType",
            "org.omg.CORBA.IDLTypeOperations",
            "org.omg.CORBA.IRObject"
        ],
        "Subinterface": [
            "org.omg.CORBA._IDLTypeStub"
        ],
        "Method": {
            "def_kind": {
                "Parameter": {},
                "Throw": []
            },
            "destroy": {
                "Parameter": {},
                "Throw": "org.omg.CORBA.BAD_INV_ORDER"
            }
        }
    },
    "914": {
        "Package": "org.omg.CORBA",
        "Interface": "Object",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.PortableServer.AdapterActivator",
            "org.omg.CosNaming.BindingIterator",
            "org.omg.PortableInterceptor.ClientRequestInfo",
            "org.omg.PortableInterceptor.ClientRequestInterceptor",
            "org.omg.IOP.Codec",
            "org.omg.IOP.CodecFactory",
            "org.omg.CORBA.Current",
            "org.omg.PortableServer.Current",
            "org.omg.PortableInterceptor.Current",
            "org.omg.CORBA.DomainManager",
            "org.omg.CORBA.DynAny",
            "org.omg.DynamicAny.DynAny",
            "org.omg.DynamicAny.DynAnyFactory",
            "org.omg.CORBA.DynArray",
            "org.omg.DynamicAny.DynArray",
            "org.omg.CORBA.DynEnum",
            "org.omg.DynamicAny.DynEnum",
            "org.omg.CORBA.DynFixed",
            "org.omg.DynamicAny.DynFixed",
            "org.omg.CORBA.DynSequence",
            "org.omg.DynamicAny.DynSequence",
            "org.omg.CORBA.DynStruct",
            "org.omg.DynamicAny.DynStruct",
            "org.omg.CORBA.DynUnion",
            "org.omg.DynamicAny.DynUnion",
            "org.omg.CORBA.DynValue",
            "org.omg.DynamicAny.DynValue",
            "org.omg.DynamicAny.DynValueBox",
            "org.omg.DynamicAny.DynValueCommon",
            "org.omg.PortableServer.IdAssignmentPolicy",
            "org.omg.CORBA.IDLType",
            "org.omg.PortableServer.IdUniquenessPolicy",
            "org.omg.PortableServer.ImplicitActivationPolicy",
            "org.omg.PortableInterceptor.Interceptor",
            "org.omg.PortableInterceptor.IORInfo",
            "org.omg.PortableInterceptor.IORInterceptor",
            "org.omg.PortableInterceptor.IORInterceptor_3_0",
            "org.omg.CORBA.IRObject",
            "org.omg.PortableServer.LifespanPolicy",
            "org.omg.CosNaming.NamingContext",
            "org.omg.CosNaming.NamingContextExt",
            "org.omg.PortableInterceptor.ORBInitializer",
            "org.omg.PortableInterceptor.ORBInitInfo",
            "org.omg.PortableServer.POA",
            "org.omg.PortableServer.POAManager",
            "org.omg.CORBA.Policy",
            "org.omg.PortableInterceptor.PolicyFactory",
            "org.omg.PortableInterceptor.RequestInfo",
            "org.omg.PortableServer.RequestProcessingPolicy",
            "org.omg.SendingContext.RunTime",
            "org.omg.PortableServer.ServantActivator",
            "org.omg.PortableServer.ServantLocator",
            "org.omg.PortableServer.ServantManager",
            "org.omg.PortableServer.ServantRetentionPolicy",
            "org.omg.PortableInterceptor.ServerRequestInfo",
            "org.omg.PortableInterceptor.ServerRequestInterceptor",
            "org.omg.PortableServer.ThreadPolicy"
        ],
        "Subinterface": [
            "org.omg.CosNaming._BindingIteratorImplBase",
            "org.omg.CosNaming._BindingIteratorStub",
            "org.omg.DynamicAny._DynAnyFactoryStub",
            "org.omg.DynamicAny._DynAnyStub",
            "org.omg.DynamicAny._DynArrayStub",
            "org.omg.DynamicAny._DynEnumStub",
            "org.omg.DynamicAny._DynFixedStub",
            "org.omg.DynamicAny._DynSequenceStub",
            "org.omg.DynamicAny._DynStructStub",
            "org.omg.DynamicAny._DynUnionStub",
            "org.omg.DynamicAny._DynValueStub",
            "org.omg.CORBA._IDLTypeStub",
            "org.omg.CosNaming._NamingContextExtStub",
            "org.omg.CosNaming._NamingContextImplBase",
            "org.omg.CosNaming._NamingContextStub",
            "org.omg.CORBA._PolicyStub",
            "org.omg.stub.java.rmi._Remote_Stub",
            "org.omg.PortableServer._ServantActivatorStub",
            "org.omg.PortableServer._ServantLocatorStub",
            "org.omg.CORBA.DynamicImplementation",
            "org.omg.CORBA.LocalObject",
            "org.omg.CORBA.portable.ObjectImpl",
            "org.omg.CORBA_2_3.portable.ObjectImpl",
            "javax.rmi.CORBA.Stub"
        ],
        "Method": {
            "_is_a": {
                "Parameter": {
                    "repositoryIdentifier": "String"
                },
                "Throw": []
            },
            "_is_equivalent": {
                "Parameter": {
                    "other": "Object"
                },
                "Throw": []
            },
            "_non_existent": {
                "Parameter": {},
                "Throw": []
            },
            "_hash": {
                "Parameter": {
                    "maximum": "int"
                },
                "Throw": []
            },
            "_duplicate": {
                "Parameter": {},
                "Throw": []
            },
            "_release": {
                "Parameter": {},
                "Throw": []
            },
            "_get_interface_def": {
                "Parameter": {},
                "Throw": []
            },
            "_request": {
                "Parameter": {
                    "operation": "String"
                },
                "Throw": []
            },
            "_create_request": {
                "Parameter": {
                    "ctx": "Context",
                    "operation": "String",
                    "arglist": "NVList",
                    "result": "NamedValue",
                    "exclist": "ExceptionList",
                    "ctxlist": "ContextList"
                },
                "Throw": []
            },
            "_get_policy": {
                "Parameter": {
                    "policytype": "int"
                },
                "Throw": "org.omg.CORBA.BAD_PARAM"
            },
            "_get_domain_managers": {
                "Parameter": {},
                "Throw": []
            },
            "_set_policy_override": {
                "Parameter": {
                    "policies": "Policy",
                    "setadd": "SetOverrideType"
                },
                "Throw": []
            }
        }
    },
    "915": {
        "Package": "org.omg.CORBA",
        "Interface": "OMGVMCID",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "916": {
        "Package": "org.omg.CORBA",
        "Interface": "Policy",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.CORBA.PolicyOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.IdAssignmentPolicy",
            "org.omg.PortableServer.IdUniquenessPolicy",
            "org.omg.PortableServer.ImplicitActivationPolicy",
            "org.omg.PortableServer.LifespanPolicy",
            "org.omg.PortableServer.RequestProcessingPolicy",
            "org.omg.PortableServer.ServantRetentionPolicy",
            "org.omg.PortableServer.ThreadPolicy"
        ],
        "Subinterface": [
            "org.omg.CORBA._PolicyStub"
        ],
        "Method": {}
    },
    "917": {
        "Package": "org.omg.CORBA",
        "Interface": "PolicyOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.PortableServer.IdAssignmentPolicy",
            "org.omg.PortableServer.IdAssignmentPolicyOperations",
            "org.omg.PortableServer.IdUniquenessPolicy",
            "org.omg.PortableServer.IdUniquenessPolicyOperations",
            "org.omg.PortableServer.ImplicitActivationPolicy",
            "org.omg.PortableServer.ImplicitActivationPolicyOperations",
            "org.omg.PortableServer.LifespanPolicy",
            "org.omg.PortableServer.LifespanPolicyOperations",
            "org.omg.CORBA.Policy",
            "org.omg.PortableServer.RequestProcessingPolicy",
            "org.omg.PortableServer.RequestProcessingPolicyOperations",
            "org.omg.PortableServer.ServantRetentionPolicy",
            "org.omg.PortableServer.ServantRetentionPolicyOperations",
            "org.omg.PortableServer.ThreadPolicy",
            "org.omg.PortableServer.ThreadPolicyOperations"
        ],
        "Subinterface": [
            "org.omg.CORBA._PolicyStub"
        ],
        "Method": {
            "policy_type": {
                "Parameter": {},
                "Throw": []
            },
            "copy": {
                "Parameter": {},
                "Throw": []
            },
            "destroy": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "918": {
        "Package": "org.omg.CORBA",
        "Interface": "PRIVATE_MEMBER",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "919": {
        "Package": "org.omg.CORBA",
        "Interface": "PUBLIC_MEMBER",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "920": {
        "Package": "org.omg.CORBA",
        "Interface": "UNSUPPORTED_POLICY",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "921": {
        "Package": "org.omg.CORBA",
        "Interface": "UNSUPPORTED_POLICY_VALUE",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "922": {
        "Package": "org.omg.CORBA",
        "Interface": "VM_ABSTRACT",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "923": {
        "Package": "org.omg.CORBA",
        "Interface": "VM_CUSTOM",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "924": {
        "Package": "org.omg.CORBA",
        "Interface": "VM_NONE",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "925": {
        "Package": "org.omg.CORBA",
        "Interface": "VM_TRUNCATABLE",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "926": {
        "Package": "org.omg.CORBA.portable",
        "Interface": "BoxedValueHelper",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.CORBA.StringValueHelper",
            "org.omg.CORBA.WStringValueHelper"
        ],
        "Method": {
            "read_value": {
                "Parameter": {
                    "is": "InputStream"
                },
                "Throw": []
            },
            "write_value": {
                "Parameter": {
                    "os": "OutputStream",
                    "value": "Serializable"
                },
                "Throw": []
            },
            "get_id": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "927": {
        "Package": "org.omg.CORBA.portable",
        "Interface": "CustomValue",
        "Superinterface": [
            "org.omg.CORBA.CustomMarshal",
            "org.omg.CORBA.portable.IDLEntity",
            "java.io.Serializable",
            "org.omg.CORBA.portable.ValueBase"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "928": {
        "Package": "org.omg.CORBA.portable",
        "Interface": "IDLEntity",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.AdapterActivator",
            "org.omg.CosNaming.BindingIterator",
            "org.omg.PortableInterceptor.ClientRequestInfo",
            "org.omg.PortableInterceptor.ClientRequestInterceptor",
            "org.omg.IOP.Codec",
            "org.omg.IOP.CodecFactory",
            "org.omg.CORBA.Current",
            "org.omg.PortableServer.Current",
            "org.omg.PortableInterceptor.Current",
            "org.omg.CORBA.portable.CustomValue",
            "org.omg.CORBA.DataInputStream",
            "org.omg.CORBA.DataOutputStream",
            "org.omg.CORBA.DomainManager",
            "org.omg.DynamicAny.DynAny",
            "org.omg.DynamicAny.DynAnyFactory",
            "org.omg.DynamicAny.DynArray",
            "org.omg.DynamicAny.DynEnum",
            "org.omg.DynamicAny.DynFixed",
            "org.omg.DynamicAny.DynSequence",
            "org.omg.DynamicAny.DynStruct",
            "org.omg.DynamicAny.DynUnion",
            "org.omg.DynamicAny.DynValue",
            "org.omg.DynamicAny.DynValueBox",
            "org.omg.DynamicAny.DynValueCommon",
            "org.omg.PortableServer.IdAssignmentPolicy",
            "org.omg.CORBA.IDLType",
            "org.omg.PortableServer.IdUniquenessPolicy",
            "org.omg.PortableServer.ImplicitActivationPolicy",
            "org.omg.PortableInterceptor.Interceptor",
            "org.omg.PortableInterceptor.IORInfo",
            "org.omg.PortableInterceptor.IORInterceptor",
            "org.omg.PortableInterceptor.IORInterceptor_3_0",
            "org.omg.CORBA.IRObject",
            "org.omg.PortableServer.LifespanPolicy",
            "org.omg.CosNaming.NamingContext",
            "org.omg.CosNaming.NamingContextExt",
            "org.omg.PortableInterceptor.ObjectReferenceFactory",
            "org.omg.PortableInterceptor.ObjectReferenceTemplate",
            "org.omg.PortableInterceptor.ORBInitializer",
            "org.omg.PortableInterceptor.ORBInitInfo",
            "org.omg.PortableServer.POA",
            "org.omg.PortableServer.POAManager",
            "org.omg.CORBA.Policy",
            "org.omg.PortableInterceptor.PolicyFactory",
            "org.omg.PortableInterceptor.RequestInfo",
            "org.omg.PortableServer.RequestProcessingPolicy",
            "org.omg.SendingContext.RunTime",
            "org.omg.PortableServer.ServantActivator",
            "org.omg.PortableServer.ServantLocator",
            "org.omg.PortableServer.ServantManager",
            "org.omg.PortableServer.ServantRetentionPolicy",
            "org.omg.PortableInterceptor.ServerRequestInfo",
            "org.omg.PortableInterceptor.ServerRequestInterceptor",
            "org.omg.CORBA.portable.StreamableValue",
            "org.omg.PortableServer.ThreadPolicy",
            "org.omg.CORBA.portable.ValueBase"
        ],
        "Subinterface": [
            "org.omg.CosNaming._BindingIteratorImplBase",
            "org.omg.CosNaming._BindingIteratorStub",
            "org.omg.DynamicAny._DynAnyFactoryStub",
            "org.omg.DynamicAny._DynAnyStub",
            "org.omg.DynamicAny._DynArrayStub",
            "org.omg.DynamicAny._DynEnumStub",
            "org.omg.DynamicAny._DynFixedStub",
            "org.omg.DynamicAny._DynSequenceStub",
            "org.omg.DynamicAny._DynStructStub",
            "org.omg.DynamicAny._DynUnionStub",
            "org.omg.DynamicAny._DynValueStub",
            "org.omg.CORBA._IDLTypeStub",
            "org.omg.CosNaming._NamingContextExtStub",
            "org.omg.CosNaming._NamingContextImplBase",
            "org.omg.CosNaming._NamingContextStub",
            "org.omg.CORBA._PolicyStub",
            "org.omg.PortableServer._ServantActivatorStub",
            "org.omg.PortableServer._ServantLocatorStub",
            "org.omg.PortableServer.POAPackage.AdapterAlreadyExists",
            "org.omg.PortableServer.POAManagerPackage.AdapterInactive",
            "org.omg.PortableServer.POAPackage.AdapterNonExistent",
            "org.omg.CosNaming.NamingContextPackage.AlreadyBound",
            "org.omg.CORBA.Any",
            "org.omg.CORBA.TypeCodePackage.BadKind",
            "org.omg.CosNaming.Binding",
            "org.omg.CosNaming.BindingType",
            "org.omg.CORBA.Bounds",
            "org.omg.CORBA.TypeCodePackage.Bounds",
            "org.omg.CosNaming.NamingContextPackage.CannotProceed",
            "org.omg.CORBA.CompletionStatus",
            "org.omg.CORBA.DefinitionKind",
            "org.omg.PortableInterceptor.ORBInitInfoPackage.DuplicateName",
            "org.omg.IOP.Encoding",
            "org.omg.IOP.CodecPackage.FormatMismatch",
            "org.omg.PortableServer.ForwardRequest",
            "org.omg.PortableInterceptor.ForwardRequest",
            "org.omg.PortableServer.IdAssignmentPolicyValue",
            "org.omg.PortableServer.IdUniquenessPolicyValue",
            "org.omg.PortableServer.ImplicitActivationPolicyValue",
            "org.omg.CORBA.ORBPackage.InconsistentTypeCode",
            "org.omg.DynamicAny.DynAnyFactoryPackage.InconsistentTypeCode",
            "org.omg.CORBA.DynAnyPackage.Invalid",
            "org.omg.CosNaming.NamingContextExtPackage.InvalidAddress",
            "org.omg.CORBA.ORBPackage.InvalidName",
            "org.omg.CosNaming.NamingContextPackage.InvalidName",
            "org.omg.PortableInterceptor.ORBInitInfoPackage.InvalidName",
            "org.omg.PortableServer.POAPackage.InvalidPolicy",
            "org.omg.CORBA.DynAnyPackage.InvalidSeq",
            "org.omg.PortableInterceptor.InvalidSlot",
            "org.omg.IOP.CodecPackage.InvalidTypeForEncoding",
            "org.omg.CORBA.DynAnyPackage.InvalidValue",
            "org.omg.DynamicAny.DynAnyPackage.InvalidValue",
            "org.omg.IOP.IOR",
            "org.omg.PortableServer.LifespanPolicyValue",
            "org.omg.CosNaming.NameComponent",
            "org.omg.DynamicAny.NameDynAnyPair",
            "org.omg.CORBA.NameValuePair",
            "org.omg.DynamicAny.NameValuePair",
            "org.omg.PortableServer.CurrentPackage.NoContext",
            "org.omg.PortableServer.POAPackage.NoServant",
            "org.omg.CosNaming.NamingContextPackage.NotEmpty",
            "org.omg.CosNaming.NamingContextPackage.NotFound",
            "org.omg.CosNaming.NamingContextPackage.NotFoundReason",
            "org.omg.PortableServer.POAPackage.ObjectAlreadyActive",
            "org.omg.PortableServer.POAPackage.ObjectNotActive",
            "org.omg.Dynamic.Parameter",
            "org.omg.CORBA.ParameterMode",
            "org.omg.CORBA.PolicyError",
            "org.omg.PortableServer.RequestProcessingPolicyValue",
            "org.omg.PortableServer.POAPackage.ServantAlreadyActive",
            "org.omg.PortableServer.POAPackage.ServantNotActive",
            "org.omg.PortableServer.ServantRetentionPolicyValue",
            "org.omg.IOP.ServiceContext",
            "org.omg.CORBA.ServiceDetail",
            "org.omg.CORBA.ServiceInformation",
            "org.omg.CORBA.SetOverrideType",
            "org.omg.PortableServer.POAManagerPackage.State",
            "org.omg.CORBA.StructMember",
            "org.omg.IOP.TaggedComponent",
            "org.omg.IOP.TaggedProfile",
            "org.omg.PortableServer.ThreadPolicyValue",
            "org.omg.CORBA.TypeCode",
            "org.omg.CORBA.DynAnyPackage.TypeMismatch",
            "org.omg.IOP.CodecPackage.TypeMismatch",
            "org.omg.DynamicAny.DynAnyPackage.TypeMismatch",
            "org.omg.CORBA.UnionMember",
            "org.omg.IOP.CodecFactoryPackage.UnknownEncoding",
            "org.omg.CORBA.UnknownUserException",
            "org.omg.CORBA.UserException",
            "org.omg.CORBA.ValueMember",
            "org.omg.PortableServer.POAPackage.WrongAdapter",
            "org.omg.PortableServer.POAPackage.WrongPolicy",
            "org.omg.CORBA.WrongTransaction"
        ],
        "Method": {}
    },
    "929": {
        "Package": "org.omg.CORBA.portable",
        "Interface": "InvokeHandler",
        "Superinterface": null,
        "Implementing Class": [
            "javax.rmi.CORBA.Tie"
        ],
        "Subinterface": [
            "org.omg.CosNaming.BindingIteratorPOA",
            "org.omg.CosNaming.NamingContextExtPOA",
            "org.omg.CosNaming.NamingContextPOA",
            "org.omg.PortableServer.ServantActivatorPOA",
            "org.omg.PortableServer.ServantLocatorPOA"
        ],
        "Method": {
            "_invoke": {
                "Parameter": {
                    "method": "String",
                    "input": "InputStream",
                    "handler": "ResponseHandler"
                },
                "Throw": []
            }
        }
    },
    "930": {
        "Package": "org.omg.CORBA.portable",
        "Interface": "ResponseHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createReply": {
                "Parameter": {},
                "Throw": []
            },
            "createExceptionReply": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "931": {
        "Package": "org.omg.CORBA.portable",
        "Interface": "Streamable",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.CORBA.portable.StreamableValue"
        ],
        "Subinterface": [
            "org.omg.CosNaming.NamingContextPackage.AlreadyBoundHolder",
            "org.omg.CORBA.AnyHolder",
            "org.omg.CORBA.AnySeqHolder",
            "org.omg.CosNaming.BindingHolder",
            "org.omg.CosNaming.BindingIteratorHolder",
            "org.omg.CosNaming.BindingListHolder",
            "org.omg.CosNaming.BindingTypeHolder",
            "org.omg.CORBA.BooleanHolder",
            "org.omg.CORBA.BooleanSeqHolder",
            "org.omg.CORBA.ByteHolder",
            "org.omg.CosNaming.NamingContextPackage.CannotProceedHolder",
            "org.omg.CORBA.CharHolder",
            "org.omg.CORBA.CharSeqHolder",
            "org.omg.PortableServer.ServantLocatorPackage.CookieHolder",
            "org.omg.CORBA.CurrentHolder",
            "org.omg.CORBA.DoubleHolder",
            "org.omg.CORBA.DoubleSeqHolder",
            "org.omg.CORBA.FixedHolder",
            "org.omg.CORBA.FloatHolder",
            "org.omg.CORBA.FloatSeqHolder",
            "org.omg.CORBA.IntHolder",
            "org.omg.CosNaming.NamingContextExtPackage.InvalidAddressHolder",
            "org.omg.CosNaming.NamingContextPackage.InvalidNameHolder",
            "org.omg.IOP.IORHolder",
            "org.omg.PortableInterceptor.IORInterceptor_3_0Holder",
            "org.omg.CORBA.LongHolder",
            "org.omg.CORBA.LongLongSeqHolder",
            "org.omg.CORBA.LongSeqHolder",
            "org.omg.IOP.MultipleComponentProfileHolder",
            "org.omg.CosNaming.NameComponentHolder",
            "org.omg.CosNaming.NameHolder",
            "org.omg.CosNaming.NamingContextExtHolder",
            "org.omg.CosNaming.NamingContextHolder",
            "org.omg.CosNaming.NamingContextPackage.NotEmptyHolder",
            "org.omg.CosNaming.NamingContextPackage.NotFoundHolder",
            "org.omg.CosNaming.NamingContextPackage.NotFoundReasonHolder",
            "org.omg.CORBA.ObjectHolder",
            "org.omg.PortableInterceptor.ObjectReferenceFactoryHolder",
            "org.omg.PortableInterceptor.ObjectReferenceTemplateHolder",
            "org.omg.PortableInterceptor.ObjectReferenceTemplateSeqHolder",
            "org.omg.CORBA.OctetSeqHolder",
            "org.omg.CORBA.ParameterModeHolder",
            "org.omg.CORBA.PolicyErrorHolder",
            "org.omg.CORBA.PolicyHolder",
            "org.omg.CORBA.PolicyListHolder",
            "org.omg.CORBA.PrincipalHolder",
            "org.omg.IOP.ServiceContextHolder",
            "org.omg.IOP.ServiceContextListHolder",
            "org.omg.CORBA.ServiceInformationHolder",
            "org.omg.CORBA.ShortHolder",
            "org.omg.CORBA.ShortSeqHolder",
            "org.omg.CORBA.StringHolder",
            "org.omg.CORBA.StringSeqHolder",
            "org.omg.IOP.TaggedComponentHolder",
            "org.omg.IOP.TaggedProfileHolder",
            "org.omg.CORBA.TypeCodeHolder",
            "org.omg.CORBA.ULongLongSeqHolder",
            "org.omg.CORBA.ULongSeqHolder",
            "org.omg.CORBA.UnknownUserExceptionHolder",
            "org.omg.CORBA.UShortSeqHolder",
            "org.omg.CORBA.ValueBaseHolder",
            "org.omg.CORBA.WCharSeqHolder",
            "org.omg.CORBA.WrongTransactionHolder",
            "org.omg.CORBA.WStringSeqHolder"
        ],
        "Method": {
            "_read": {
                "Parameter": {
                    "istream": "InputStream"
                },
                "Throw": []
            },
            "_write": {
                "Parameter": {
                    "ostream": "OutputStream"
                },
                "Throw": []
            },
            "_type": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "932": {
        "Package": "org.omg.CORBA.portable",
        "Interface": "StreamableValue",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "java.io.Serializable",
            "org.omg.CORBA.portable.Streamable",
            "org.omg.CORBA.portable.ValueBase"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "933": {
        "Package": "org.omg.CORBA.portable",
        "Interface": "ValueBase",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "org.omg.CORBA.portable.CustomValue",
            "org.omg.CORBA.DataInputStream",
            "org.omg.CORBA.DataOutputStream",
            "org.omg.PortableInterceptor.ObjectReferenceFactory",
            "org.omg.PortableInterceptor.ObjectReferenceTemplate",
            "org.omg.CORBA.portable.StreamableValue"
        ],
        "Subinterface": null,
        "Method": {
            "_truncatable_ids": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "934": {
        "Package": "org.omg.CORBA.portable",
        "Interface": "ValueFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "read_value": {
                "Parameter": {
                    "is": "InputStream"
                },
                "Throw": []
            }
        }
    },
    "935": {
        "Package": "org.omg.CORBA.portable",
        "Interface": "ValueInputStream",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "start_value": {
                "Parameter": {},
                "Throw": []
            },
            "end_value": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "936": {
        "Package": "org.omg.CORBA.portable",
        "Interface": "ValueOutputStream",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "start_value": {
                "Parameter": {
                    "repid": "String"
                },
                "Throw": []
            },
            "end_value": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "937": {
        "Package": "org.omg.CosNaming",
        "Interface": "BindingIterator",
        "Superinterface": [
            "org.omg.CosNaming.BindingIteratorOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.CosNaming._BindingIteratorImplBase",
            "org.omg.CosNaming._BindingIteratorStub"
        ],
        "Method": {}
    },
    "938": {
        "Package": "org.omg.CosNaming",
        "Interface": "BindingIteratorOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.CosNaming.BindingIterator"
        ],
        "Subinterface": [
            "org.omg.CosNaming._BindingIteratorImplBase",
            "org.omg.CosNaming._BindingIteratorStub",
            "org.omg.CosNaming.BindingIteratorPOA"
        ],
        "Method": {
            "next_one": {
                "Parameter": {
                    "b": "BindingHolder"
                },
                "Throw": []
            },
            "next_n": {
                "Parameter": {
                    "howmany": "int",
                    "bl": "BindingListHolder"
                },
                "Throw": []
            },
            "destroy": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "939": {
        "Package": "org.omg.CosNaming",
        "Interface": "NamingContext",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CosNaming.NamingContextOperations",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "org.omg.CosNaming.NamingContextExt"
        ],
        "Subinterface": [
            "org.omg.CosNaming._NamingContextExtStub",
            "org.omg.CosNaming._NamingContextImplBase",
            "org.omg.CosNaming._NamingContextStub"
        ],
        "Method": {}
    },
    "940": {
        "Package": "org.omg.CosNaming",
        "Interface": "NamingContextExt",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CosNaming.NamingContext",
            "org.omg.CosNaming.NamingContextExtOperations",
            "org.omg.CosNaming.NamingContextOperations",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.CosNaming._NamingContextExtStub"
        ],
        "Method": {}
    },
    "941": {
        "Package": "org.omg.CosNaming",
        "Interface": "NamingContextExtOperations",
        "Superinterface": [
            "org.omg.CosNaming.NamingContextOperations"
        ],
        "Implementing Class": [
            "org.omg.CosNaming.NamingContextExt"
        ],
        "Subinterface": [
            "org.omg.CosNaming._NamingContextExtStub",
            "org.omg.CosNaming.NamingContextExtPOA"
        ],
        "Method": {
            "to_string": {
                "Parameter": {
                    "n": "NameComponent"
                },
                "Throw": "org.omg.CosNaming.NamingContextPackage.InvalidName"
            },
            "to_name": {
                "Parameter": {
                    "sn": "String"
                },
                "Throw": "org.omg.CosNaming.NamingContextPackage.InvalidName"
            },
            "to_url": {
                "Parameter": {
                    "addr": "String",
                    "sn": "String"
                },
                "Throw": "org.omg.CosNaming.NamingContextPackage.InvalidName"
            },
            "resolve_str": {
                "Parameter": {
                    "sn": "String"
                },
                "Throw": "org.omg.CosNaming.NamingContextPackage.InvalidName"
            }
        }
    },
    "942": {
        "Package": "org.omg.CosNaming",
        "Interface": "NamingContextOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.CosNaming.NamingContext",
            "org.omg.CosNaming.NamingContextExt",
            "org.omg.CosNaming.NamingContextExtOperations"
        ],
        "Subinterface": [
            "org.omg.CosNaming._NamingContextExtStub",
            "org.omg.CosNaming._NamingContextImplBase",
            "org.omg.CosNaming._NamingContextStub",
            "org.omg.CosNaming.NamingContextExtPOA",
            "org.omg.CosNaming.NamingContextPOA"
        ],
        "Method": {
            "bind": {
                "Parameter": {
                    "n": "NameComponent",
                    "obj": "Object"
                },
                "Throw": "org.omg.CosNaming.NamingContextPackage.AlreadyBound"
            },
            "bind_context": {
                "Parameter": {
                    "n": "NameComponent",
                    "nc": "NamingContext"
                },
                "Throw": "org.omg.CosNaming.NamingContextPackage.AlreadyBound"
            },
            "rebind": {
                "Parameter": {
                    "n": "NameComponent",
                    "obj": "Object"
                },
                "Throw": "org.omg.CosNaming.NamingContextPackage.InvalidName"
            },
            "rebind_context": {
                "Parameter": {
                    "n": "NameComponent",
                    "nc": "NamingContext"
                },
                "Throw": "org.omg.CosNaming.NamingContextPackage.InvalidName"
            },
            "resolve": {
                "Parameter": {
                    "n": "NameComponent"
                },
                "Throw": "org.omg.CosNaming.NamingContextPackage.InvalidName"
            },
            "unbind": {
                "Parameter": {
                    "n": "NameComponent"
                },
                "Throw": "org.omg.CosNaming.NamingContextPackage.InvalidName"
            },
            "list": {
                "Parameter": {
                    "howmany": "int",
                    "bl": "BindingListHolder",
                    "bi": "BindingIteratorHolder"
                },
                "Throw": []
            },
            "new_context": {
                "Parameter": {},
                "Throw": []
            },
            "bind_new_context": {
                "Parameter": {
                    "n": "NameComponent"
                },
                "Throw": "org.omg.CosNaming.NamingContextPackage.InvalidName"
            },
            "destroy": {
                "Parameter": {},
                "Throw": "org.omg.CosNaming.NamingContextPackage.NotEmpty"
            }
        }
    },
    "943": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynAny",
        "Superinterface": [
            "org.omg.DynamicAny.DynAnyOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "org.omg.DynamicAny.DynArray",
            "org.omg.DynamicAny.DynEnum",
            "org.omg.DynamicAny.DynFixed",
            "org.omg.DynamicAny.DynSequence",
            "org.omg.DynamicAny.DynStruct",
            "org.omg.DynamicAny.DynUnion",
            "org.omg.DynamicAny.DynValue",
            "org.omg.DynamicAny.DynValueBox",
            "org.omg.DynamicAny.DynValueCommon"
        ],
        "Subinterface": [
            "org.omg.DynamicAny._DynAnyStub",
            "org.omg.DynamicAny._DynArrayStub",
            "org.omg.DynamicAny._DynEnumStub",
            "org.omg.DynamicAny._DynFixedStub",
            "org.omg.DynamicAny._DynSequenceStub",
            "org.omg.DynamicAny._DynStructStub",
            "org.omg.DynamicAny._DynUnionStub",
            "org.omg.DynamicAny._DynValueStub"
        ],
        "Method": {}
    },
    "944": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynAnyFactory",
        "Superinterface": [
            "org.omg.DynamicAny.DynAnyFactoryOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.DynamicAny._DynAnyFactoryStub"
        ],
        "Method": {}
    },
    "945": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynAnyFactoryOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.DynamicAny.DynAnyFactory"
        ],
        "Subinterface": [
            "org.omg.DynamicAny._DynAnyFactoryStub"
        ],
        "Method": {
            "create_dyn_any": {
                "Parameter": {
                    "value": "Any"
                },
                "Throw": []
            },
            "create_dyn_any_from_type_code": {
                "Parameter": {
                    "type": "TypeCode"
                },
                "Throw": "org.omg.DynamicAny.DynAnyFactoryPackage.InconsistentTypeCode"
            }
        }
    },
    "946": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynAnyOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.DynamicAny.DynAny",
            "org.omg.DynamicAny.DynArray",
            "org.omg.DynamicAny.DynArrayOperations",
            "org.omg.DynamicAny.DynEnum",
            "org.omg.DynamicAny.DynEnumOperations",
            "org.omg.DynamicAny.DynFixed",
            "org.omg.DynamicAny.DynFixedOperations",
            "org.omg.DynamicAny.DynSequence",
            "org.omg.DynamicAny.DynSequenceOperations",
            "org.omg.DynamicAny.DynStruct",
            "org.omg.DynamicAny.DynStructOperations",
            "org.omg.DynamicAny.DynUnion",
            "org.omg.DynamicAny.DynUnionOperations",
            "org.omg.DynamicAny.DynValue",
            "org.omg.DynamicAny.DynValueBox",
            "org.omg.DynamicAny.DynValueBoxOperations",
            "org.omg.DynamicAny.DynValueCommon",
            "org.omg.DynamicAny.DynValueCommonOperations",
            "org.omg.DynamicAny.DynValueOperations"
        ],
        "Subinterface": [
            "org.omg.DynamicAny._DynAnyStub",
            "org.omg.DynamicAny._DynArrayStub",
            "org.omg.DynamicAny._DynEnumStub",
            "org.omg.DynamicAny._DynFixedStub",
            "org.omg.DynamicAny._DynSequenceStub",
            "org.omg.DynamicAny._DynStructStub",
            "org.omg.DynamicAny._DynUnionStub",
            "org.omg.DynamicAny._DynValueStub"
        ],
        "Method": {
            "type": {
                "Parameter": {},
                "Throw": []
            },
            "assign": {
                "Parameter": {
                    "dynany": "DynAny"
                },
                "Throw": []
            },
            "from_any": {
                "Parameter": {
                    "value": "Any"
                },
                "Throw": []
            },
            "to_any": {
                "Parameter": {},
                "Throw": []
            },
            "equal": {
                "Parameter": {
                    "dynany": "DynAny"
                },
                "Throw": []
            },
            "destroy": {
                "Parameter": {},
                "Throw": []
            },
            "copy": {
                "Parameter": {},
                "Throw": []
            },
            "insert_boolean": {
                "Parameter": {
                    "value": "boolean"
                },
                "Throw": []
            },
            "insert_octet": {
                "Parameter": {
                    "value": "byte"
                },
                "Throw": []
            },
            "insert_char": {
                "Parameter": {
                    "value": "char"
                },
                "Throw": []
            },
            "insert_short": {
                "Parameter": {
                    "value": "short"
                },
                "Throw": []
            },
            "insert_ushort": {
                "Parameter": {
                    "value": "short"
                },
                "Throw": []
            },
            "insert_long": {
                "Parameter": {
                    "value": "int"
                },
                "Throw": []
            },
            "insert_ulong": {
                "Parameter": {
                    "value": "int"
                },
                "Throw": []
            },
            "insert_float": {
                "Parameter": {
                    "value": "float"
                },
                "Throw": []
            },
            "insert_double": {
                "Parameter": {
                    "value": "double"
                },
                "Throw": []
            },
            "insert_string": {
                "Parameter": {
                    "value": "String"
                },
                "Throw": []
            },
            "insert_reference": {
                "Parameter": {
                    "value": "Object"
                },
                "Throw": []
            },
            "insert_typecode": {
                "Parameter": {
                    "value": "TypeCode"
                },
                "Throw": []
            },
            "insert_longlong": {
                "Parameter": {
                    "value": "long"
                },
                "Throw": []
            },
            "insert_ulonglong": {
                "Parameter": {
                    "value": "long"
                },
                "Throw": []
            },
            "insert_wchar": {
                "Parameter": {
                    "value": "char"
                },
                "Throw": []
            },
            "insert_wstring": {
                "Parameter": {
                    "value": "String"
                },
                "Throw": "org.omg.DynamicAny.DynAnyPackage.TypeMismatch"
            },
            "insert_any": {
                "Parameter": {
                    "value": "Any"
                },
                "Throw": []
            },
            "insert_dyn_any": {
                "Parameter": {
                    "value": "DynAny"
                },
                "Throw": []
            },
            "insert_val": {
                "Parameter": {
                    "value": "Serializable"
                },
                "Throw": []
            },
            "get_boolean": {
                "Parameter": {},
                "Throw": []
            },
            "get_octet": {
                "Parameter": {},
                "Throw": []
            },
            "get_char": {
                "Parameter": {},
                "Throw": []
            },
            "get_short": {
                "Parameter": {},
                "Throw": []
            },
            "get_ushort": {
                "Parameter": {},
                "Throw": []
            },
            "get_long": {
                "Parameter": {},
                "Throw": []
            },
            "get_ulong": {
                "Parameter": {},
                "Throw": []
            },
            "get_float": {
                "Parameter": {},
                "Throw": []
            },
            "get_double": {
                "Parameter": {},
                "Throw": []
            },
            "get_string": {
                "Parameter": {},
                "Throw": []
            },
            "get_reference": {
                "Parameter": {},
                "Throw": []
            },
            "get_typecode": {
                "Parameter": {},
                "Throw": []
            },
            "get_longlong": {
                "Parameter": {},
                "Throw": []
            },
            "get_ulonglong": {
                "Parameter": {},
                "Throw": []
            },
            "get_wchar": {
                "Parameter": {},
                "Throw": []
            },
            "get_wstring": {
                "Parameter": {},
                "Throw": "org.omg.DynamicAny.DynAnyPackage.InvalidValue"
            },
            "get_any": {
                "Parameter": {},
                "Throw": []
            },
            "get_dyn_any": {
                "Parameter": {},
                "Throw": []
            },
            "get_val": {
                "Parameter": {},
                "Throw": []
            },
            "seek": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "rewind": {
                "Parameter": {},
                "Throw": []
            },
            "next": {
                "Parameter": {},
                "Throw": []
            },
            "component_count": {
                "Parameter": {},
                "Throw": []
            },
            "current_component": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "947": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynArray",
        "Superinterface": [
            "org.omg.DynamicAny.DynAny",
            "org.omg.DynamicAny.DynAnyOperations",
            "org.omg.DynamicAny.DynArrayOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.DynamicAny._DynArrayStub"
        ],
        "Method": {}
    },
    "948": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynArrayOperations",
        "Superinterface": [
            "org.omg.DynamicAny.DynAnyOperations"
        ],
        "Implementing Class": [
            "org.omg.DynamicAny.DynArray"
        ],
        "Subinterface": [
            "org.omg.DynamicAny._DynArrayStub"
        ],
        "Method": {
            "get_elements": {
                "Parameter": {},
                "Throw": []
            },
            "set_elements": {
                "Parameter": {
                    "value": "Any"
                },
                "Throw": []
            },
            "get_elements_as_dyn_any": {
                "Parameter": {},
                "Throw": []
            },
            "set_elements_as_dyn_any": {
                "Parameter": {
                    "value": "DynAny"
                },
                "Throw": []
            }
        }
    },
    "949": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynEnum",
        "Superinterface": [
            "org.omg.DynamicAny.DynAny",
            "org.omg.DynamicAny.DynAnyOperations",
            "org.omg.DynamicAny.DynEnumOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.DynamicAny._DynEnumStub"
        ],
        "Method": {}
    },
    "950": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynEnumOperations",
        "Superinterface": [
            "org.omg.DynamicAny.DynAnyOperations"
        ],
        "Implementing Class": [
            "org.omg.DynamicAny.DynEnum"
        ],
        "Subinterface": [
            "org.omg.DynamicAny._DynEnumStub"
        ],
        "Method": {
            "get_as_string": {
                "Parameter": {},
                "Throw": []
            },
            "set_as_string": {
                "Parameter": {
                    "value": "String"
                },
                "Throw": []
            },
            "get_as_ulong": {
                "Parameter": {},
                "Throw": []
            },
            "set_as_ulong": {
                "Parameter": {
                    "value": "int"
                },
                "Throw": []
            }
        }
    },
    "951": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynFixed",
        "Superinterface": [
            "org.omg.DynamicAny.DynAny",
            "org.omg.DynamicAny.DynAnyOperations",
            "org.omg.DynamicAny.DynFixedOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.DynamicAny._DynFixedStub"
        ],
        "Method": {}
    },
    "952": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynFixedOperations",
        "Superinterface": [
            "org.omg.DynamicAny.DynAnyOperations"
        ],
        "Implementing Class": [
            "org.omg.DynamicAny.DynFixed"
        ],
        "Subinterface": [
            "org.omg.DynamicAny._DynFixedStub"
        ],
        "Method": {
            "get_value": {
                "Parameter": {},
                "Throw": []
            },
            "set_value": {
                "Parameter": {
                    "val": "String"
                },
                "Throw": []
            }
        }
    },
    "953": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynSequence",
        "Superinterface": [
            "org.omg.DynamicAny.DynAny",
            "org.omg.DynamicAny.DynAnyOperations",
            "org.omg.DynamicAny.DynSequenceOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.DynamicAny._DynSequenceStub"
        ],
        "Method": {}
    },
    "954": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynSequenceOperations",
        "Superinterface": [
            "org.omg.DynamicAny.DynAnyOperations"
        ],
        "Implementing Class": [
            "org.omg.DynamicAny.DynSequence"
        ],
        "Subinterface": [
            "org.omg.DynamicAny._DynSequenceStub"
        ],
        "Method": {
            "get_length": {
                "Parameter": {},
                "Throw": []
            },
            "set_length": {
                "Parameter": {
                    "len": "int"
                },
                "Throw": []
            },
            "get_elements": {
                "Parameter": {},
                "Throw": []
            },
            "set_elements": {
                "Parameter": {
                    "value": "Any"
                },
                "Throw": []
            },
            "get_elements_as_dyn_any": {
                "Parameter": {},
                "Throw": []
            },
            "set_elements_as_dyn_any": {
                "Parameter": {
                    "value": "DynAny"
                },
                "Throw": []
            }
        }
    },
    "955": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynStruct",
        "Superinterface": [
            "org.omg.DynamicAny.DynAny",
            "org.omg.DynamicAny.DynAnyOperations",
            "org.omg.DynamicAny.DynStructOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.DynamicAny._DynStructStub"
        ],
        "Method": {}
    },
    "956": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynStructOperations",
        "Superinterface": [
            "org.omg.DynamicAny.DynAnyOperations"
        ],
        "Implementing Class": [
            "org.omg.DynamicAny.DynStruct"
        ],
        "Subinterface": [
            "org.omg.DynamicAny._DynStructStub"
        ],
        "Method": {
            "current_member_name": {
                "Parameter": {},
                "Throw": []
            },
            "current_member_kind": {
                "Parameter": {},
                "Throw": []
            },
            "get_members": {
                "Parameter": {},
                "Throw": []
            },
            "set_members": {
                "Parameter": {
                    "value": "NameValuePair"
                },
                "Throw": []
            },
            "get_members_as_dyn_any": {
                "Parameter": {},
                "Throw": []
            },
            "set_members_as_dyn_any": {
                "Parameter": {
                    "value": "NameDynAnyPair"
                },
                "Throw": []
            }
        }
    },
    "957": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynUnion",
        "Superinterface": [
            "org.omg.DynamicAny.DynAny",
            "org.omg.DynamicAny.DynAnyOperations",
            "org.omg.DynamicAny.DynUnionOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.DynamicAny._DynUnionStub"
        ],
        "Method": {}
    },
    "958": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynUnionOperations",
        "Superinterface": [
            "org.omg.DynamicAny.DynAnyOperations"
        ],
        "Implementing Class": [
            "org.omg.DynamicAny.DynUnion"
        ],
        "Subinterface": [
            "org.omg.DynamicAny._DynUnionStub"
        ],
        "Method": {
            "get_discriminator": {
                "Parameter": {},
                "Throw": []
            },
            "set_discriminator": {
                "Parameter": {
                    "d": "DynAny"
                },
                "Throw": []
            },
            "set_to_default_member": {
                "Parameter": {},
                "Throw": []
            },
            "set_to_no_active_member": {
                "Parameter": {},
                "Throw": []
            },
            "has_no_active_member": {
                "Parameter": {},
                "Throw": []
            },
            "discriminator_kind": {
                "Parameter": {},
                "Throw": []
            },
            "member_kind": {
                "Parameter": {},
                "Throw": []
            },
            "member": {
                "Parameter": {},
                "Throw": []
            },
            "member_name": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "959": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynValue",
        "Superinterface": [
            "org.omg.DynamicAny.DynAny",
            "org.omg.DynamicAny.DynAnyOperations",
            "org.omg.DynamicAny.DynValueCommon",
            "org.omg.DynamicAny.DynValueCommonOperations",
            "org.omg.DynamicAny.DynValueOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.DynamicAny._DynValueStub"
        ],
        "Method": {}
    },
    "960": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynValueBox",
        "Superinterface": [
            "org.omg.DynamicAny.DynAny",
            "org.omg.DynamicAny.DynAnyOperations",
            "org.omg.DynamicAny.DynValueBoxOperations",
            "org.omg.DynamicAny.DynValueCommon",
            "org.omg.DynamicAny.DynValueCommonOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "961": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynValueBoxOperations",
        "Superinterface": [
            "org.omg.DynamicAny.DynAnyOperations",
            "org.omg.DynamicAny.DynValueCommonOperations"
        ],
        "Implementing Class": [
            "org.omg.DynamicAny.DynValueBox"
        ],
        "Subinterface": null,
        "Method": {
            "get_boxed_value": {
                "Parameter": {},
                "Throw": []
            },
            "set_boxed_value": {
                "Parameter": {
                    "boxed": "Any"
                },
                "Throw": []
            },
            "get_boxed_value_as_dyn_any": {
                "Parameter": {},
                "Throw": []
            },
            "set_boxed_value_as_dyn_any": {
                "Parameter": {
                    "boxed": "DynAny"
                },
                "Throw": []
            }
        }
    },
    "962": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynValueCommon",
        "Superinterface": [
            "org.omg.DynamicAny.DynAny",
            "org.omg.DynamicAny.DynAnyOperations",
            "org.omg.DynamicAny.DynValueCommonOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "org.omg.DynamicAny.DynValue",
            "org.omg.DynamicAny.DynValueBox"
        ],
        "Subinterface": [
            "org.omg.DynamicAny._DynValueStub"
        ],
        "Method": {}
    },
    "963": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynValueCommonOperations",
        "Superinterface": [
            "org.omg.DynamicAny.DynAnyOperations"
        ],
        "Implementing Class": [
            "org.omg.DynamicAny.DynValue",
            "org.omg.DynamicAny.DynValueBox",
            "org.omg.DynamicAny.DynValueBoxOperations",
            "org.omg.DynamicAny.DynValueCommon",
            "org.omg.DynamicAny.DynValueOperations"
        ],
        "Subinterface": [
            "org.omg.DynamicAny._DynValueStub"
        ],
        "Method": {
            "is_null": {
                "Parameter": {},
                "Throw": []
            },
            "set_to_null": {
                "Parameter": {},
                "Throw": []
            },
            "set_to_value": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "964": {
        "Package": "org.omg.DynamicAny",
        "Interface": "DynValueOperations",
        "Superinterface": [
            "org.omg.DynamicAny.DynAnyOperations",
            "org.omg.DynamicAny.DynValueCommonOperations"
        ],
        "Implementing Class": [
            "org.omg.DynamicAny.DynValue"
        ],
        "Subinterface": [
            "org.omg.DynamicAny._DynValueStub"
        ],
        "Method": {
            "current_member_name": {
                "Parameter": {},
                "Throw": []
            },
            "current_member_kind": {
                "Parameter": {},
                "Throw": []
            },
            "get_members": {
                "Parameter": {},
                "Throw": []
            },
            "set_members": {
                "Parameter": {
                    "value": "NameValuePair"
                },
                "Throw": []
            },
            "get_members_as_dyn_any": {
                "Parameter": {},
                "Throw": []
            },
            "set_members_as_dyn_any": {
                "Parameter": {
                    "value": "NameDynAnyPair"
                },
                "Throw": []
            }
        }
    },
    "965": {
        "Package": "org.omg.IOP",
        "Interface": "Codec",
        "Superinterface": [
            "org.omg.IOP.CodecOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "966": {
        "Package": "org.omg.IOP",
        "Interface": "CodecFactory",
        "Superinterface": [
            "org.omg.IOP.CodecFactoryOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "967": {
        "Package": "org.omg.IOP",
        "Interface": "CodecFactoryOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.IOP.CodecFactory"
        ],
        "Subinterface": null,
        "Method": {
            "create_codec": {
                "Parameter": {
                    "enc": "Encoding"
                },
                "Throw": []
            }
        }
    },
    "968": {
        "Package": "org.omg.IOP",
        "Interface": "CodecOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.IOP.Codec"
        ],
        "Subinterface": null,
        "Method": {
            "encode": {
                "Parameter": {
                    "data": "Any"
                },
                "Throw": []
            },
            "decode": {
                "Parameter": {
                    "data": "byte"
                },
                "Throw": []
            },
            "encode_value": {
                "Parameter": {
                    "data": "Any"
                },
                "Throw": []
            },
            "decode_value": {
                "Parameter": {
                    "data": "byte",
                    "tc": "TypeCode"
                },
                "Throw": "org.omg.IOP.CodecPackage.TypeMismatch"
            }
        }
    },
    "969": {
        "Package": "org.omg.IOP",
        "Interface": "CodeSets",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "970": {
        "Package": "org.omg.IOP",
        "Interface": "ENCODING_CDR_ENCAPS",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "971": {
        "Package": "org.omg.IOP",
        "Interface": "ExceptionDetailMessage",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "972": {
        "Package": "org.omg.IOP",
        "Interface": "RMICustomMaxStreamFormat",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "973": {
        "Package": "org.omg.IOP",
        "Interface": "TAG_ALTERNATE_IIOP_ADDRESS",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "974": {
        "Package": "org.omg.IOP",
        "Interface": "TAG_CODE_SETS",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "975": {
        "Package": "org.omg.IOP",
        "Interface": "TAG_INTERNET_IOP",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "976": {
        "Package": "org.omg.IOP",
        "Interface": "TAG_JAVA_CODEBASE",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "977": {
        "Package": "org.omg.IOP",
        "Interface": "TAG_MULTIPLE_COMPONENTS",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "978": {
        "Package": "org.omg.IOP",
        "Interface": "TAG_ORB_TYPE",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "979": {
        "Package": "org.omg.IOP",
        "Interface": "TAG_POLICIES",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "980": {
        "Package": "org.omg.IOP",
        "Interface": "TAG_RMI_CUSTOM_MAX_STREAM_FORMAT",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "981": {
        "Package": "org.omg.IOP",
        "Interface": "TransactionService",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "982": {
        "Package": "org.omg.Messaging",
        "Interface": "SYNC_WITH_TRANSPORT",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "983": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ACTIVE",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "984": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ClientRequestInfo",
        "Superinterface": [
            "org.omg.PortableInterceptor.ClientRequestInfoOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.PortableInterceptor.RequestInfo",
            "org.omg.PortableInterceptor.RequestInfoOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "985": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ClientRequestInfoOperations",
        "Superinterface": [
            "org.omg.PortableInterceptor.RequestInfoOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableInterceptor.ClientRequestInfo"
        ],
        "Subinterface": null,
        "Method": {
            "target": {
                "Parameter": {},
                "Throw": []
            },
            "effective_target": {
                "Parameter": {},
                "Throw": []
            },
            "effective_profile": {
                "Parameter": {},
                "Throw": []
            },
            "received_exception": {
                "Parameter": {},
                "Throw": []
            },
            "received_exception_id": {
                "Parameter": {},
                "Throw": []
            },
            "get_effective_component": {
                "Parameter": {
                    "id": "int"
                },
                "Throw": []
            },
            "get_effective_components": {
                "Parameter": {
                    "id": "int"
                },
                "Throw": []
            },
            "get_request_policy": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": []
            },
            "add_request_service_context": {
                "Parameter": {
                    "servicecontext": "ServiceContext",
                    "replace": "boolean"
                },
                "Throw": []
            }
        }
    },
    "986": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ClientRequestInterceptor",
        "Superinterface": [
            "org.omg.PortableInterceptor.ClientRequestInterceptorOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.PortableInterceptor.Interceptor",
            "org.omg.PortableInterceptor.InterceptorOperations",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "987": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ClientRequestInterceptorOperations",
        "Superinterface": [
            "org.omg.PortableInterceptor.InterceptorOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableInterceptor.ClientRequestInterceptor"
        ],
        "Subinterface": null,
        "Method": {
            "send_request": {
                "Parameter": {
                    "ri": "ClientRequestInfo"
                },
                "Throw": "org.omg.PortableInterceptor.ForwardRequest"
            },
            "send_poll": {
                "Parameter": {
                    "ri": "ClientRequestInfo"
                },
                "Throw": []
            },
            "receive_reply": {
                "Parameter": {
                    "ri": "ClientRequestInfo"
                },
                "Throw": []
            },
            "receive_exception": {
                "Parameter": {
                    "ri": "ClientRequestInfo"
                },
                "Throw": "org.omg.PortableInterceptor.ForwardRequest"
            },
            "receive_other": {
                "Parameter": {
                    "ri": "ClientRequestInfo"
                },
                "Throw": "org.omg.PortableInterceptor.ForwardRequest"
            }
        }
    },
    "988": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "Current",
        "Superinterface": [
            "org.omg.CORBA.Current",
            "org.omg.CORBA.CurrentOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "989": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "CurrentOperations",
        "Superinterface": [
            "org.omg.CORBA.CurrentOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableInterceptor.Current"
        ],
        "Subinterface": null,
        "Method": {
            "get_slot": {
                "Parameter": {
                    "id": "int"
                },
                "Throw": "org.omg.PortableInterceptor.InvalidSlot"
            },
            "set_slot": {
                "Parameter": {
                    "id": "int",
                    "data": "Any"
                },
                "Throw": "org.omg.PortableInterceptor.InvalidSlot"
            }
        }
    },
    "990": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "DISCARDING",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "991": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "HOLDING",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "992": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "INACTIVE",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "993": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "Interceptor",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.PortableInterceptor.InterceptorOperations",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "org.omg.PortableInterceptor.ClientRequestInterceptor",
            "org.omg.PortableInterceptor.IORInterceptor",
            "org.omg.PortableInterceptor.IORInterceptor_3_0",
            "org.omg.PortableInterceptor.ServerRequestInterceptor"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "994": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "InterceptorOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.PortableInterceptor.ClientRequestInterceptor",
            "org.omg.PortableInterceptor.ClientRequestInterceptorOperations",
            "org.omg.PortableInterceptor.Interceptor",
            "org.omg.PortableInterceptor.IORInterceptor",
            "org.omg.PortableInterceptor.IORInterceptor_3_0",
            "org.omg.PortableInterceptor.IORInterceptor_3_0Operations",
            "org.omg.PortableInterceptor.IORInterceptorOperations",
            "org.omg.PortableInterceptor.ServerRequestInterceptor",
            "org.omg.PortableInterceptor.ServerRequestInterceptorOperations"
        ],
        "Subinterface": null,
        "Method": {
            "name": {
                "Parameter": {},
                "Throw": []
            },
            "destroy": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "995": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "IORInfo",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.PortableInterceptor.IORInfoOperations",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "996": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "IORInfoOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.PortableInterceptor.IORInfo"
        ],
        "Subinterface": null,
        "Method": {
            "get_effective_policy": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": []
            },
            "add_ior_component": {
                "Parameter": {
                    "taggedcomponent": "TaggedComponent"
                },
                "Throw": []
            },
            "add_ior_component_to_profile": {
                "Parameter": {
                    "taggedcomponent": "TaggedComponent",
                    "profileid": "int"
                },
                "Throw": []
            },
            "manager_id": {
                "Parameter": {},
                "Throw": []
            },
            "state": {
                "Parameter": {},
                "Throw": []
            },
            "adapter_template": {
                "Parameter": {},
                "Throw": []
            },
            "current_factory": {
                "Parameter": {
                    "newCurrentfactory": "ObjectReferenceFactory"
                },
                "Throw": []
            }
        }
    },
    "997": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "IORInterceptor",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.PortableInterceptor.Interceptor",
            "org.omg.PortableInterceptor.InterceptorOperations",
            "org.omg.PortableInterceptor.IORInterceptorOperations",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "org.omg.PortableInterceptor.IORInterceptor_3_0"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "998": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "IORInterceptorOperations",
        "Superinterface": [
            "org.omg.PortableInterceptor.InterceptorOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableInterceptor.IORInterceptor",
            "org.omg.PortableInterceptor.IORInterceptor_3_0",
            "org.omg.PortableInterceptor.IORInterceptor_3_0Operations"
        ],
        "Subinterface": null,
        "Method": {
            "establish_components": {
                "Parameter": {
                    "info": "IORInfo"
                },
                "Throw": []
            }
        }
    },
    "999": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "IORInterceptor_3_0",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.PortableInterceptor.Interceptor",
            "org.omg.PortableInterceptor.InterceptorOperations",
            "org.omg.PortableInterceptor.IORInterceptor",
            "org.omg.PortableInterceptor.IORInterceptor_3_0Operations",
            "org.omg.PortableInterceptor.IORInterceptorOperations",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1000": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "IORInterceptor_3_0Operations",
        "Superinterface": [
            "org.omg.PortableInterceptor.InterceptorOperations",
            "org.omg.PortableInterceptor.IORInterceptorOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableInterceptor.IORInterceptor_3_0"
        ],
        "Subinterface": null,
        "Method": {
            "components_established": {
                "Parameter": {
                    "info": "IORInfo"
                },
                "Throw": []
            },
            "adapter_manager_state_changed": {
                "Parameter": {
                    "id": "int",
                    "state": "short"
                },
                "Throw": []
            },
            "adapter_state_changed": {
                "Parameter": {
                    "templates": "ObjectReferenceTemplate",
                    "state": "short"
                },
                "Throw": []
            }
        }
    },
    "1001": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "LOCATION_FORWARD",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1002": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "NON_EXISTENT",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1003": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ObjectReferenceFactory",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "java.io.Serializable",
            "org.omg.CORBA.portable.ValueBase"
        ],
        "Implementing Class": [
            "org.omg.PortableInterceptor.ObjectReferenceTemplate"
        ],
        "Subinterface": null,
        "Method": {
            "make_object": {
                "Parameter": {
                    "repositoryId": "String",
                    "objectid": "byte"
                },
                "Throw": []
            }
        }
    },
    "1004": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ObjectReferenceTemplate",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.PortableInterceptor.ObjectReferenceFactory",
            "java.io.Serializable",
            "org.omg.CORBA.portable.ValueBase"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "server_id": {
                "Parameter": {},
                "Throw": []
            },
            "orb_id": {
                "Parameter": {},
                "Throw": []
            },
            "adapter_name": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1005": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ORBInitializer",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.PortableInterceptor.ORBInitializerOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1006": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ORBInitializerOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.PortableInterceptor.ORBInitializer"
        ],
        "Subinterface": null,
        "Method": {
            "pre_init": {
                "Parameter": {
                    "info": "ORBInitInfo"
                },
                "Throw": []
            },
            "post_init": {
                "Parameter": {
                    "info": "ORBInitInfo"
                },
                "Throw": []
            }
        }
    },
    "1007": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ORBInitInfo",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.PortableInterceptor.ORBInitInfoOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1008": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ORBInitInfoOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.PortableInterceptor.ORBInitInfo"
        ],
        "Subinterface": null,
        "Method": {
            "arguments": {
                "Parameter": {},
                "Throw": []
            },
            "orb_id": {
                "Parameter": {},
                "Throw": []
            },
            "codec_factory": {
                "Parameter": {},
                "Throw": []
            },
            "register_initial_reference": {
                "Parameter": {
                    "id": "String",
                    "obj": "Object"
                },
                "Throw": "org.omg.PortableInterceptor.ORBInitInfoPackage.InvalidName"
            },
            "resolve_initial_references": {
                "Parameter": {
                    "id": "String"
                },
                "Throw": "org.omg.PortableInterceptor.ORBInitInfoPackage.InvalidName"
            },
            "add_client_request_interceptor": {
                "Parameter": {
                    "interceptor": "ClientRequestInterceptor"
                },
                "Throw": []
            },
            "add_server_request_interceptor": {
                "Parameter": {
                    "interceptor": "ServerRequestInterceptor"
                },
                "Throw": []
            },
            "add_ior_interceptor": {
                "Parameter": {
                    "interceptor": "IORInterceptor"
                },
                "Throw": []
            },
            "allocate_slot_id": {
                "Parameter": {},
                "Throw": []
            },
            "register_policy_factory": {
                "Parameter": {
                    "type": "int",
                    "policyfactory": "PolicyFactory"
                },
                "Throw": []
            }
        }
    },
    "1009": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "PolicyFactory",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.PortableInterceptor.PolicyFactoryOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1010": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "PolicyFactoryOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.PortableInterceptor.PolicyFactory"
        ],
        "Subinterface": null,
        "Method": {
            "create_policy": {
                "Parameter": {
                    "type": "int",
                    "value": "Any"
                },
                "Throw": "org.omg.CORBA.PolicyError"
            }
        }
    },
    "1011": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "RequestInfo",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.PortableInterceptor.RequestInfoOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "org.omg.PortableInterceptor.ClientRequestInfo",
            "org.omg.PortableInterceptor.ServerRequestInfo"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "1012": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "RequestInfoOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.PortableInterceptor.ClientRequestInfo",
            "org.omg.PortableInterceptor.ClientRequestInfoOperations",
            "org.omg.PortableInterceptor.RequestInfo",
            "org.omg.PortableInterceptor.ServerRequestInfo",
            "org.omg.PortableInterceptor.ServerRequestInfoOperations"
        ],
        "Subinterface": null,
        "Method": {
            "request_id": {
                "Parameter": {},
                "Throw": []
            },
            "operation": {
                "Parameter": {},
                "Throw": []
            },
            "arguments": {
                "Parameter": {},
                "Throw": []
            },
            "exceptions": {
                "Parameter": {},
                "Throw": []
            },
            "contexts": {
                "Parameter": {},
                "Throw": []
            },
            "operation_context": {
                "Parameter": {},
                "Throw": []
            },
            "result": {
                "Parameter": {},
                "Throw": []
            },
            "response_expected": {
                "Parameter": {},
                "Throw": []
            },
            "sync_scope": {
                "Parameter": {},
                "Throw": []
            },
            "reply_status": {
                "Parameter": {},
                "Throw": []
            },
            "forward_reference": {
                "Parameter": {},
                "Throw": []
            },
            "get_slot": {
                "Parameter": {
                    "id": "int"
                },
                "Throw": "org.omg.PortableInterceptor.InvalidSlot"
            },
            "get_request_service_context": {
                "Parameter": {
                    "id": "int"
                },
                "Throw": []
            },
            "get_reply_service_context": {
                "Parameter": {
                    "id": "int"
                },
                "Throw": []
            }
        }
    },
    "1013": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ServerRequestInfo",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.PortableInterceptor.RequestInfo",
            "org.omg.PortableInterceptor.RequestInfoOperations",
            "java.io.Serializable",
            "org.omg.PortableInterceptor.ServerRequestInfoOperations"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1014": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ServerRequestInfoOperations",
        "Superinterface": [
            "org.omg.PortableInterceptor.RequestInfoOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableInterceptor.ServerRequestInfo"
        ],
        "Subinterface": null,
        "Method": {
            "sending_exception": {
                "Parameter": {},
                "Throw": []
            },
            "object_id": {
                "Parameter": {},
                "Throw": []
            },
            "adapter_id": {
                "Parameter": {},
                "Throw": []
            },
            "server_id": {
                "Parameter": {},
                "Throw": []
            },
            "orb_id": {
                "Parameter": {},
                "Throw": []
            },
            "adapter_name": {
                "Parameter": {},
                "Throw": []
            },
            "target_most_derived_interface": {
                "Parameter": {},
                "Throw": []
            },
            "get_server_policy": {
                "Parameter": {
                    "type": "int"
                },
                "Throw": []
            },
            "set_slot": {
                "Parameter": {
                    "id": "int",
                    "data": "Any"
                },
                "Throw": "org.omg.PortableInterceptor.InvalidSlot"
            },
            "target_is_a": {
                "Parameter": {
                    "id": "String"
                },
                "Throw": []
            },
            "add_reply_service_context": {
                "Parameter": {
                    "servicecontext": "ServiceContext",
                    "replace": "boolean"
                },
                "Throw": []
            }
        }
    },
    "1015": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ServerRequestInterceptor",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.PortableInterceptor.Interceptor",
            "org.omg.PortableInterceptor.InterceptorOperations",
            "org.omg.CORBA.Object",
            "java.io.Serializable",
            "org.omg.PortableInterceptor.ServerRequestInterceptorOperations"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1016": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "ServerRequestInterceptorOperations",
        "Superinterface": [
            "org.omg.PortableInterceptor.InterceptorOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableInterceptor.ServerRequestInterceptor"
        ],
        "Subinterface": null,
        "Method": {
            "receive_request_service_contexts": {
                "Parameter": {
                    "ri": "ServerRequestInfo"
                },
                "Throw": "org.omg.PortableInterceptor.ForwardRequest"
            },
            "receive_request": {
                "Parameter": {
                    "ri": "ServerRequestInfo"
                },
                "Throw": "org.omg.PortableInterceptor.ForwardRequest"
            },
            "send_reply": {
                "Parameter": {
                    "ri": "ServerRequestInfo"
                },
                "Throw": []
            },
            "send_exception": {
                "Parameter": {
                    "ri": "ServerRequestInfo"
                },
                "Throw": "org.omg.PortableInterceptor.ForwardRequest"
            },
            "send_other": {
                "Parameter": {
                    "ri": "ServerRequestInfo"
                },
                "Throw": "org.omg.PortableInterceptor.ForwardRequest"
            }
        }
    },
    "1017": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "SUCCESSFUL",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1018": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "SYSTEM_EXCEPTION",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1019": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "TRANSPORT_RETRY",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1020": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "UNKNOWN",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1021": {
        "Package": "org.omg.PortableInterceptor",
        "Interface": "USER_EXCEPTION",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1022": {
        "Package": "org.omg.PortableServer",
        "Interface": "AdapterActivator",
        "Superinterface": [
            "org.omg.PortableServer.AdapterActivatorOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1023": {
        "Package": "org.omg.PortableServer",
        "Interface": "AdapterActivatorOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.PortableServer.AdapterActivator"
        ],
        "Subinterface": null,
        "Method": {
            "unknown_adapter": {
                "Parameter": {
                    "parent": "POA",
                    "name": "String"
                },
                "Throw": []
            }
        }
    },
    "1024": {
        "Package": "org.omg.PortableServer",
        "Interface": "Current",
        "Superinterface": [
            "org.omg.CORBA.Current",
            "org.omg.CORBA.CurrentOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1025": {
        "Package": "org.omg.PortableServer",
        "Interface": "CurrentOperations",
        "Superinterface": [
            "org.omg.CORBA.CurrentOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.Current"
        ],
        "Subinterface": null,
        "Method": {
            "get_POA": {
                "Parameter": {},
                "Throw": []
            },
            "get_object_id": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1026": {
        "Package": "org.omg.PortableServer",
        "Interface": "IdAssignmentPolicy",
        "Superinterface": [
            "org.omg.PortableServer.IdAssignmentPolicyOperations",
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.CORBA.Policy",
            "org.omg.CORBA.PolicyOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1027": {
        "Package": "org.omg.PortableServer",
        "Interface": "IdAssignmentPolicyOperations",
        "Superinterface": [
            "org.omg.CORBA.PolicyOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.IdAssignmentPolicy"
        ],
        "Subinterface": null,
        "Method": {
            "value": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1028": {
        "Package": "org.omg.PortableServer",
        "Interface": "IdUniquenessPolicy",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.PortableServer.IdUniquenessPolicyOperations",
            "org.omg.CORBA.Object",
            "org.omg.CORBA.Policy",
            "org.omg.CORBA.PolicyOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1029": {
        "Package": "org.omg.PortableServer",
        "Interface": "IdUniquenessPolicyOperations",
        "Superinterface": [
            "org.omg.CORBA.PolicyOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.IdUniquenessPolicy"
        ],
        "Subinterface": null,
        "Method": {
            "value": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1030": {
        "Package": "org.omg.PortableServer",
        "Interface": "ID_ASSIGNMENT_POLICY_ID",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1031": {
        "Package": "org.omg.PortableServer",
        "Interface": "ID_UNIQUENESS_POLICY_ID",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1032": {
        "Package": "org.omg.PortableServer",
        "Interface": "ImplicitActivationPolicy",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.PortableServer.ImplicitActivationPolicyOperations",
            "org.omg.CORBA.Object",
            "org.omg.CORBA.Policy",
            "org.omg.CORBA.PolicyOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1033": {
        "Package": "org.omg.PortableServer",
        "Interface": "ImplicitActivationPolicyOperations",
        "Superinterface": [
            "org.omg.CORBA.PolicyOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.ImplicitActivationPolicy"
        ],
        "Subinterface": null,
        "Method": {
            "value": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1034": {
        "Package": "org.omg.PortableServer",
        "Interface": "IMPLICIT_ACTIVATION_POLICY_ID",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1035": {
        "Package": "org.omg.PortableServer",
        "Interface": "LifespanPolicy",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.PortableServer.LifespanPolicyOperations",
            "org.omg.CORBA.Object",
            "org.omg.CORBA.Policy",
            "org.omg.CORBA.PolicyOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1036": {
        "Package": "org.omg.PortableServer",
        "Interface": "LifespanPolicyOperations",
        "Superinterface": [
            "org.omg.CORBA.PolicyOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.LifespanPolicy"
        ],
        "Subinterface": null,
        "Method": {
            "value": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1037": {
        "Package": "org.omg.PortableServer",
        "Interface": "LIFESPAN_POLICY_ID",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1038": {
        "Package": "org.omg.PortableServer",
        "Interface": "POA",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.PortableServer.POAOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1039": {
        "Package": "org.omg.PortableServer",
        "Interface": "POAManager",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.PortableServer.POAManagerOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1040": {
        "Package": "org.omg.PortableServer",
        "Interface": "POAManagerOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.PortableServer.POAManager"
        ],
        "Subinterface": null,
        "Method": {
            "activate": {
                "Parameter": {},
                "Throw": []
            },
            "hold_requests": {
                "Parameter": {
                    "waitforcompletion": "boolean"
                },
                "Throw": []
            },
            "discard_requests": {
                "Parameter": {
                    "waitforcompletion": "boolean"
                },
                "Throw": []
            },
            "deactivate": {
                "Parameter": {
                    "etherealizeobjects": "boolean",
                    "waitforcompletion": "boolean"
                },
                "Throw": []
            },
            "get_state": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1041": {
        "Package": "org.omg.PortableServer",
        "Interface": "POAOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.PortableServer.POA"
        ],
        "Subinterface": null,
        "Method": {
            "create_POA": {
                "Parameter": {
                    "adaptername": "String",
                    "aPOAManager": "POAManager",
                    "policies": "Policy"
                },
                "Throw": []
            },
            "find_POA": {
                "Parameter": {
                    "adaptername": "String",
                    "activateit": "boolean"
                },
                "Throw": "org.omg.PortableServer.POAPackage.AdapterNonExistent"
            },
            "destroy": {
                "Parameter": {
                    "etherealizeobjects": "boolean",
                    "waitforcompletion": "boolean"
                },
                "Throw": []
            },
            "create_thread_policy": {
                "Parameter": {
                    "value": "ThreadPolicyValue"
                },
                "Throw": []
            },
            "create_lifespan_policy": {
                "Parameter": {
                    "value": "LifespanPolicyValue"
                },
                "Throw": []
            },
            "create_id_uniqueness_policy": {
                "Parameter": {
                    "value": "IdUniquenessPolicyValue"
                },
                "Throw": []
            },
            "create_id_assignment_policy": {
                "Parameter": {
                    "value": "IdAssignmentPolicyValue"
                },
                "Throw": []
            },
            "create_implicit_activation_policy": {
                "Parameter": {
                    "value": "ImplicitActivationPolicyValue"
                },
                "Throw": []
            },
            "create_servant_retention_policy": {
                "Parameter": {
                    "value": "ServantRetentionPolicyValue"
                },
                "Throw": []
            },
            "create_request_processing_policy": {
                "Parameter": {
                    "value": "RequestProcessingPolicyValue"
                },
                "Throw": []
            },
            "the_name": {
                "Parameter": {},
                "Throw": []
            },
            "the_parent": {
                "Parameter": {},
                "Throw": []
            },
            "the_children": {
                "Parameter": {},
                "Throw": []
            },
            "the_POAManager": {
                "Parameter": {},
                "Throw": []
            },
            "the_activator": {
                "Parameter": {
                    "newTheactivator": "AdapterActivator"
                },
                "Throw": []
            },
            "get_servant_manager": {
                "Parameter": {},
                "Throw": []
            },
            "set_servant_manager": {
                "Parameter": {
                    "imgr": "ServantManager"
                },
                "Throw": []
            },
            "get_servant": {
                "Parameter": {},
                "Throw": []
            },
            "set_servant": {
                "Parameter": {
                    "pservant": "Servant"
                },
                "Throw": []
            },
            "activate_object": {
                "Parameter": {
                    "pservant": "Servant"
                },
                "Throw": []
            },
            "activate_object_with_id": {
                "Parameter": {
                    "id": "byte",
                    "pservant": "Servant"
                },
                "Throw": []
            },
            "deactivate_object": {
                "Parameter": {
                    "oid": "byte"
                },
                "Throw": []
            },
            "create_reference": {
                "Parameter": {
                    "intf": "String"
                },
                "Throw": []
            },
            "create_reference_with_id": {
                "Parameter": {
                    "oid": "byte",
                    "intf": "String"
                },
                "Throw": []
            },
            "servant_to_id": {
                "Parameter": {
                    "pservant": "Servant"
                },
                "Throw": []
            },
            "servant_to_reference": {
                "Parameter": {
                    "pservant": "Servant"
                },
                "Throw": []
            },
            "reference_to_servant": {
                "Parameter": {
                    "reference": "Object"
                },
                "Throw": []
            },
            "reference_to_id": {
                "Parameter": {
                    "reference": "Object"
                },
                "Throw": []
            },
            "id_to_servant": {
                "Parameter": {
                    "oid": "byte"
                },
                "Throw": []
            },
            "id_to_reference": {
                "Parameter": {
                    "oid": "byte"
                },
                "Throw": []
            },
            "id": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1042": {
        "Package": "org.omg.PortableServer",
        "Interface": "RequestProcessingPolicy",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.CORBA.Policy",
            "org.omg.CORBA.PolicyOperations",
            "org.omg.PortableServer.RequestProcessingPolicyOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1043": {
        "Package": "org.omg.PortableServer",
        "Interface": "RequestProcessingPolicyOperations",
        "Superinterface": [
            "org.omg.CORBA.PolicyOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.RequestProcessingPolicy"
        ],
        "Subinterface": null,
        "Method": {
            "value": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1044": {
        "Package": "org.omg.PortableServer",
        "Interface": "REQUEST_PROCESSING_POLICY_ID",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1045": {
        "Package": "org.omg.PortableServer",
        "Interface": "ServantActivator",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable",
            "org.omg.PortableServer.ServantActivatorOperations",
            "org.omg.PortableServer.ServantManager",
            "org.omg.PortableServer.ServantManagerOperations"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.PortableServer._ServantActivatorStub"
        ],
        "Method": {}
    },
    "1046": {
        "Package": "org.omg.PortableServer",
        "Interface": "ServantActivatorOperations",
        "Superinterface": [
            "org.omg.PortableServer.ServantManagerOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.ServantActivator"
        ],
        "Subinterface": [
            "org.omg.PortableServer._ServantActivatorStub",
            "org.omg.PortableServer.ServantActivatorPOA"
        ],
        "Method": {
            "incarnate": {
                "Parameter": {
                    "oid": "byte",
                    "adapter": "POA"
                },
                "Throw": "org.omg.PortableServer.ForwardRequest"
            },
            "etherealize": {
                "Parameter": {
                    "oid": "byte",
                    "adapter": "POA",
                    "serv": "Servant",
                    "cleanupinprogress": "boolean",
                    "remainingactivations": "boolean"
                },
                "Throw": []
            }
        }
    },
    "1047": {
        "Package": "org.omg.PortableServer",
        "Interface": "ServantLocator",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable",
            "org.omg.PortableServer.ServantLocatorOperations",
            "org.omg.PortableServer.ServantManager",
            "org.omg.PortableServer.ServantManagerOperations"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.omg.PortableServer._ServantLocatorStub"
        ],
        "Method": {}
    },
    "1048": {
        "Package": "org.omg.PortableServer",
        "Interface": "ServantLocatorOperations",
        "Superinterface": [
            "org.omg.PortableServer.ServantManagerOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.ServantLocator"
        ],
        "Subinterface": [
            "org.omg.PortableServer._ServantLocatorStub",
            "org.omg.PortableServer.ServantLocatorPOA"
        ],
        "Method": {
            "preinvoke": {
                "Parameter": {
                    "oid": "byte",
                    "adapter": "POA",
                    "operation": "String",
                    "thecookie": "CookieHolder"
                },
                "Throw": "org.omg.PortableServer.ForwardRequest"
            },
            "postinvoke": {
                "Parameter": {
                    "oid": "byte",
                    "adapter": "POA",
                    "operation": "String",
                    "thecookie": "Object",
                    "theservant": "Servant"
                },
                "Throw": []
            }
        }
    },
    "1049": {
        "Package": "org.omg.PortableServer",
        "Interface": "ServantManager",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "java.io.Serializable",
            "org.omg.PortableServer.ServantManagerOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.ServantActivator",
            "org.omg.PortableServer.ServantLocator"
        ],
        "Subinterface": [
            "org.omg.PortableServer._ServantActivatorStub",
            "org.omg.PortableServer._ServantLocatorStub"
        ],
        "Method": {}
    },
    "1050": {
        "Package": "org.omg.PortableServer",
        "Interface": "ServantManagerOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.PortableServer.ServantActivator",
            "org.omg.PortableServer.ServantActivatorOperations",
            "org.omg.PortableServer.ServantLocator",
            "org.omg.PortableServer.ServantLocatorOperations",
            "org.omg.PortableServer.ServantManager"
        ],
        "Subinterface": [
            "org.omg.PortableServer._ServantActivatorStub",
            "org.omg.PortableServer._ServantLocatorStub",
            "org.omg.PortableServer.ServantActivatorPOA",
            "org.omg.PortableServer.ServantLocatorPOA"
        ],
        "Method": {}
    },
    "1051": {
        "Package": "org.omg.PortableServer",
        "Interface": "ServantRetentionPolicy",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.CORBA.Policy",
            "org.omg.CORBA.PolicyOperations",
            "java.io.Serializable",
            "org.omg.PortableServer.ServantRetentionPolicyOperations"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1052": {
        "Package": "org.omg.PortableServer",
        "Interface": "ServantRetentionPolicyOperations",
        "Superinterface": [
            "org.omg.CORBA.PolicyOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.ServantRetentionPolicy"
        ],
        "Subinterface": null,
        "Method": {
            "value": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1053": {
        "Package": "org.omg.PortableServer",
        "Interface": "SERVANT_RETENTION_POLICY_ID",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1054": {
        "Package": "org.omg.PortableServer",
        "Interface": "ThreadPolicy",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.CORBA.Policy",
            "org.omg.CORBA.PolicyOperations",
            "java.io.Serializable",
            "org.omg.PortableServer.ThreadPolicyOperations"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1055": {
        "Package": "org.omg.PortableServer",
        "Interface": "ThreadPolicyOperations",
        "Superinterface": [
            "org.omg.CORBA.PolicyOperations"
        ],
        "Implementing Class": [
            "org.omg.PortableServer.ThreadPolicy"
        ],
        "Subinterface": null,
        "Method": {
            "value": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1056": {
        "Package": "org.omg.PortableServer",
        "Interface": "THREAD_POLICY_ID",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1057": {
        "Package": "org.omg.PortableServer.portable",
        "Interface": "Delegate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "orb": {
                "Parameter": {
                    "Self": "Servant"
                },
                "Throw": []
            },
            "this_object": {
                "Parameter": {
                    "Self": "Servant"
                },
                "Throw": []
            },
            "poa": {
                "Parameter": {
                    "Self": "Servant"
                },
                "Throw": []
            },
            "object_id": {
                "Parameter": {
                    "Self": "Servant"
                },
                "Throw": []
            },
            "default_POA": {
                "Parameter": {
                    "Self": "Servant"
                },
                "Throw": []
            },
            "is_a": {
                "Parameter": {
                    "Self": "Servant",
                    "RepositoryId": "String"
                },
                "Throw": []
            },
            "non_existent": {
                "Parameter": {
                    "Self": "Servant"
                },
                "Throw": []
            },
            "get_interface_def": {
                "Parameter": {
                    "self": "Servant"
                },
                "Throw": []
            }
        }
    },
    "1058": {
        "Package": "org.omg.SendingContext",
        "Interface": "RunTime",
        "Superinterface": [
            "org.omg.CORBA.portable.IDLEntity",
            "org.omg.CORBA.Object",
            "org.omg.SendingContext.RunTimeOperations",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1059": {
        "Package": "org.omg.SendingContext",
        "Interface": "RunTimeOperations",
        "Superinterface": null,
        "Implementing Class": [
            "org.omg.SendingContext.RunTime"
        ],
        "Subinterface": null,
        "Method": {}
    },
    "1060": {
        "Package": "org.w3c.dom",
        "Interface": "CDATASection",
        "Superinterface": [
            "org.w3c.dom.CharacterData",
            "org.w3c.dom.Node",
            "org.w3c.dom.Text"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1061": {
        "Package": "org.w3c.dom",
        "Interface": "CharacterData",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": [
            "org.w3c.dom.CDATASection",
            "org.w3c.dom.Comment",
            "org.w3c.dom.Text",
            "javax.xml.soap.Text"
        ],
        "Subinterface": null,
        "Method": {
            "getData": {
                "Parameter": {},
                "Throw": "org.w3c.dom.DOMException"
            },
            "setData": {
                "Parameter": {
                    "data": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getLength": {
                "Parameter": {},
                "Throw": []
            },
            "substringData": {
                "Parameter": {
                    "offset": "int",
                    "count": "int"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "appendData": {
                "Parameter": {
                    "arg": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "insertData": {
                "Parameter": {
                    "offset": "int",
                    "arg": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "deleteData": {
                "Parameter": {
                    "offset": "int",
                    "count": "int"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "replaceData": {
                "Parameter": {
                    "offset": "int",
                    "count": "int",
                    "arg": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            }
        }
    },
    "1062": {
        "Package": "org.w3c.dom",
        "Interface": "Comment",
        "Superinterface": [
            "org.w3c.dom.CharacterData",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1063": {
        "Package": "org.w3c.dom",
        "Interface": "Document",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.soap.SOAPPart"
        ],
        "Method": {
            "getDoctype": {
                "Parameter": {},
                "Throw": []
            },
            "getImplementation": {
                "Parameter": {},
                "Throw": []
            },
            "getDocumentElement": {
                "Parameter": {},
                "Throw": []
            },
            "createElement": {
                "Parameter": {
                    "tagName": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "createDocumentFragment": {
                "Parameter": {},
                "Throw": []
            },
            "createTextNode": {
                "Parameter": {
                    "data": "String"
                },
                "Throw": []
            },
            "createComment": {
                "Parameter": {
                    "data": "String"
                },
                "Throw": []
            },
            "createCDATASection": {
                "Parameter": {
                    "data": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "createProcessingInstruction": {
                "Parameter": {
                    "target": "String",
                    "data": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "createAttribute": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "createEntityReference": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getElementsByTagName": {
                "Parameter": {
                    "tagname": "String"
                },
                "Throw": []
            },
            "importNode": {
                "Parameter": {
                    "importedNode": "Node",
                    "deep": "boolean"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "createElementNS": {
                "Parameter": {
                    "namespaceURI": "String",
                    "qualifiedName": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "createAttributeNS": {
                "Parameter": {
                    "namespaceURI": "String",
                    "qualifiedName": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getElementsByTagNameNS": {
                "Parameter": {
                    "namespaceURI": "String",
                    "localName": "String"
                },
                "Throw": []
            },
            "getElementById": {
                "Parameter": {
                    "elementId": "String"
                },
                "Throw": []
            },
            "getInputEncoding": {
                "Parameter": {},
                "Throw": []
            },
            "getXmlEncoding": {
                "Parameter": {},
                "Throw": []
            },
            "getXmlStandalone": {
                "Parameter": {},
                "Throw": []
            },
            "setXmlStandalone": {
                "Parameter": {
                    "xmlStandalone": "boolean"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getXmlVersion": {
                "Parameter": {},
                "Throw": []
            },
            "setXmlVersion": {
                "Parameter": {
                    "xmlVersion": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getStrictErrorChecking": {
                "Parameter": {},
                "Throw": []
            },
            "setStrictErrorChecking": {
                "Parameter": {
                    "strictErrorChecking": "boolean"
                },
                "Throw": []
            },
            "getDocumentURI": {
                "Parameter": {},
                "Throw": []
            },
            "setDocumentURI": {
                "Parameter": {
                    "documentURI": "String"
                },
                "Throw": []
            },
            "adoptNode": {
                "Parameter": {
                    "source": "Node"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getDomConfig": {
                "Parameter": {},
                "Throw": []
            },
            "normalizeDocument": {
                "Parameter": {},
                "Throw": []
            },
            "renameNode": {
                "Parameter": {
                    "n": "Node",
                    "namespaceURI": "String",
                    "qualifiedName": "String"
                },
                "Throw": []
            }
        }
    },
    "1064": {
        "Package": "org.w3c.dom",
        "Interface": "DocumentFragment",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1065": {
        "Package": "org.w3c.dom",
        "Interface": "DocumentType",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {},
                "Throw": []
            },
            "getEntities": {
                "Parameter": {},
                "Throw": []
            },
            "getNotations": {
                "Parameter": {},
                "Throw": []
            },
            "getPublicId": {
                "Parameter": {},
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            },
            "getInternalSubset": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1066": {
        "Package": "org.w3c.dom",
        "Interface": "DOMConfiguration",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "setParameter": {
                "Parameter": {
                    "name": "String",
                    "value": "Object"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getParameter": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "canSetParameter": {
                "Parameter": {
                    "name": "String",
                    "value": "Object"
                },
                "Throw": []
            },
            "getParameterNames": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1067": {
        "Package": "org.w3c.dom",
        "Interface": "DOMError",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getSeverity": {
                "Parameter": {},
                "Throw": []
            },
            "getMessage": {
                "Parameter": {},
                "Throw": []
            },
            "getType": {
                "Parameter": {},
                "Throw": []
            },
            "getRelatedException": {
                "Parameter": {},
                "Throw": []
            },
            "getRelatedData": {
                "Parameter": {},
                "Throw": []
            },
            "getLocation": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1068": {
        "Package": "org.w3c.dom",
        "Interface": "DOMErrorHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "handleError": {
                "Parameter": {
                    "error": "DOMError"
                },
                "Throw": []
            }
        }
    },
    "1069": {
        "Package": "org.w3c.dom",
        "Interface": "DOMImplementation",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "hasFeature": {
                "Parameter": {
                    "feature": "String",
                    "version": "String"
                },
                "Throw": []
            },
            "createDocumentType": {
                "Parameter": {
                    "qualifiedName": "String",
                    "publicId": "String",
                    "systemId": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "createDocument": {
                "Parameter": {
                    "namespaceURI": "String",
                    "qualifiedName": "String",
                    "doctype": "DocumentType"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getFeature": {
                "Parameter": {
                    "feature": "String",
                    "version": "String"
                },
                "Throw": []
            }
        }
    },
    "1070": {
        "Package": "org.w3c.dom",
        "Interface": "DOMImplementationList",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "item": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getLength": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1071": {
        "Package": "org.w3c.dom",
        "Interface": "DOMImplementationSource",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getDOMImplementation": {
                "Parameter": {
                    "features": "String"
                },
                "Throw": []
            },
            "getDOMImplementationList": {
                "Parameter": {
                    "features": "String"
                },
                "Throw": []
            }
        }
    },
    "1072": {
        "Package": "org.w3c.dom",
        "Interface": "DOMLocator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getLineNumber": {
                "Parameter": {},
                "Throw": []
            },
            "getColumnNumber": {
                "Parameter": {},
                "Throw": []
            },
            "getByteOffset": {
                "Parameter": {},
                "Throw": []
            },
            "getUtf16Offset": {
                "Parameter": {},
                "Throw": []
            },
            "getRelatedNode": {
                "Parameter": {},
                "Throw": []
            },
            "getUri": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1073": {
        "Package": "org.w3c.dom",
        "Interface": "DOMStringList",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "item": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getLength": {
                "Parameter": {},
                "Throw": []
            },
            "contains": {
                "Parameter": {
                    "str": "String"
                },
                "Throw": []
            }
        }
    },
    "1074": {
        "Package": "org.w3c.dom",
        "Interface": "Element",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": [
            "javax.xml.soap.Detail",
            "javax.xml.soap.DetailEntry",
            "javax.xml.soap.SOAPBody",
            "javax.xml.soap.SOAPBodyElement",
            "javax.xml.soap.SOAPElement",
            "javax.xml.soap.SOAPEnvelope",
            "javax.xml.soap.SOAPFault",
            "javax.xml.soap.SOAPFaultElement",
            "javax.xml.soap.SOAPHeader",
            "javax.xml.soap.SOAPHeaderElement"
        ],
        "Subinterface": [
            "javax.imageio.metadata.IIOMetadataNode"
        ],
        "Method": {
            "getTagName": {
                "Parameter": {},
                "Throw": []
            },
            "getAttribute": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            },
            "setAttribute": {
                "Parameter": {
                    "name": "String",
                    "value": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "removeAttribute": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getAttributeNode": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            },
            "setAttributeNode": {
                "Parameter": {
                    "newAttr": "Attr"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "removeAttributeNode": {
                "Parameter": {
                    "oldAttr": "Attr"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getElementsByTagName": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            },
            "getAttributeNS": {
                "Parameter": {
                    "namespaceURI": "String",
                    "localName": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "setAttributeNS": {
                "Parameter": {
                    "namespaceURI": "String",
                    "qualifiedName": "String",
                    "value": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "removeAttributeNS": {
                "Parameter": {
                    "namespaceURI": "String",
                    "localName": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getAttributeNodeNS": {
                "Parameter": {
                    "namespaceURI": "String",
                    "localName": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "setAttributeNodeNS": {
                "Parameter": {
                    "newAttr": "Attr"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getElementsByTagNameNS": {
                "Parameter": {
                    "namespaceURI": "String",
                    "localName": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "hasAttribute": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            },
            "hasAttributeNS": {
                "Parameter": {
                    "namespaceURI": "String",
                    "localName": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getSchemaTypeInfo": {
                "Parameter": {},
                "Throw": []
            },
            "setIdAttribute": {
                "Parameter": {
                    "name": "String",
                    "isId": "boolean"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "setIdAttributeNS": {
                "Parameter": {
                    "namespaceURI": "String",
                    "localName": "String",
                    "isId": "boolean"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "setIdAttributeNode": {
                "Parameter": {
                    "idAttr": "Attr",
                    "isId": "boolean"
                },
                "Throw": "org.w3c.dom.DOMException"
            }
        }
    },
    "1075": {
        "Package": "org.w3c.dom",
        "Interface": "Entity",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPublicId": {
                "Parameter": {},
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            },
            "getNotationName": {
                "Parameter": {},
                "Throw": []
            },
            "getInputEncoding": {
                "Parameter": {},
                "Throw": []
            },
            "getXmlEncoding": {
                "Parameter": {},
                "Throw": []
            },
            "getXmlVersion": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1076": {
        "Package": "org.w3c.dom",
        "Interface": "EntityReference",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {}
    },
    "1077": {
        "Package": "org.w3c.dom",
        "Interface": "NamedNodeMap",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getNamedItem": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            },
            "setNamedItem": {
                "Parameter": {
                    "arg": "Node"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "removeNamedItem": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "item": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getLength": {
                "Parameter": {},
                "Throw": []
            },
            "getNamedItemNS": {
                "Parameter": {
                    "namespaceURI": "String",
                    "localName": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "setNamedItemNS": {
                "Parameter": {
                    "arg": "Node"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "removeNamedItemNS": {
                "Parameter": {
                    "namespaceURI": "String",
                    "localName": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            }
        }
    },
    "1078": {
        "Package": "org.w3c.dom",
        "Interface": "NameList",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getName": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getNamespaceURI": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getLength": {
                "Parameter": {},
                "Throw": []
            },
            "contains": {
                "Parameter": {
                    "str": "String"
                },
                "Throw": []
            },
            "containsNS": {
                "Parameter": {
                    "namespaceURI": "String",
                    "name": "String"
                },
                "Throw": []
            }
        }
    },
    "1079": {
        "Package": "org.w3c.dom",
        "Interface": "Node",
        "Superinterface": null,
        "Implementing Class": [
            "org.w3c.dom.Attr",
            "org.w3c.dom.CDATASection",
            "org.w3c.dom.CharacterData",
            "org.w3c.dom.Comment",
            "javax.xml.soap.Detail",
            "javax.xml.soap.DetailEntry",
            "org.w3c.dom.Document",
            "org.w3c.dom.DocumentFragment",
            "org.w3c.dom.DocumentType",
            "org.w3c.dom.Element",
            "org.w3c.dom.Entity",
            "org.w3c.dom.EntityReference",
            "javax.xml.soap.Node",
            "org.w3c.dom.Notation",
            "org.w3c.dom.ProcessingInstruction",
            "javax.xml.soap.SOAPBody",
            "javax.xml.soap.SOAPBodyElement",
            "javax.xml.soap.SOAPElement",
            "javax.xml.soap.SOAPEnvelope",
            "javax.xml.soap.SOAPFault",
            "javax.xml.soap.SOAPFaultElement",
            "javax.xml.soap.SOAPHeader",
            "javax.xml.soap.SOAPHeaderElement",
            "org.w3c.dom.Text",
            "javax.xml.soap.Text"
        ],
        "Subinterface": [
            "javax.imageio.metadata.IIOMetadataNode",
            "javax.xml.soap.SOAPPart"
        ],
        "Method": {
            "getNodeName": {
                "Parameter": {},
                "Throw": []
            },
            "getNodeValue": {
                "Parameter": {},
                "Throw": "org.w3c.dom.DOMException"
            },
            "setNodeValue": {
                "Parameter": {
                    "nodeValue": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getNodeType": {
                "Parameter": {},
                "Throw": []
            },
            "getParentNode": {
                "Parameter": {},
                "Throw": []
            },
            "getChildNodes": {
                "Parameter": {},
                "Throw": []
            },
            "getFirstChild": {
                "Parameter": {},
                "Throw": []
            },
            "getLastChild": {
                "Parameter": {},
                "Throw": []
            },
            "getPreviousSibling": {
                "Parameter": {},
                "Throw": []
            },
            "getNextSibling": {
                "Parameter": {},
                "Throw": []
            },
            "getAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "getOwnerDocument": {
                "Parameter": {},
                "Throw": []
            },
            "insertBefore": {
                "Parameter": {
                    "newChild": "Node",
                    "refChild": "Node"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "replaceChild": {
                "Parameter": {
                    "newChild": "Node",
                    "oldChild": "Node"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "removeChild": {
                "Parameter": {
                    "oldChild": "Node"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "appendChild": {
                "Parameter": {
                    "newChild": "Node"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "hasChildNodes": {
                "Parameter": {},
                "Throw": []
            },
            "cloneNode": {
                "Parameter": {
                    "deep": "boolean"
                },
                "Throw": []
            },
            "normalize": {
                "Parameter": {},
                "Throw": []
            },
            "isSupported": {
                "Parameter": {
                    "feature": "String",
                    "version": "String"
                },
                "Throw": []
            },
            "getNamespaceURI": {
                "Parameter": {},
                "Throw": []
            },
            "getPrefix": {
                "Parameter": {},
                "Throw": []
            },
            "setPrefix": {
                "Parameter": {
                    "prefix": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getLocalName": {
                "Parameter": {},
                "Throw": []
            },
            "hasAttributes": {
                "Parameter": {},
                "Throw": []
            },
            "getBaseURI": {
                "Parameter": {},
                "Throw": []
            },
            "compareDocumentPosition": {
                "Parameter": {
                    "other": "Node"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "getTextContent": {
                "Parameter": {},
                "Throw": "org.w3c.dom.DOMException"
            },
            "setTextContent": {
                "Parameter": {
                    "textContent": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "isSameNode": {
                "Parameter": {
                    "other": "Node"
                },
                "Throw": []
            },
            "lookupPrefix": {
                "Parameter": {
                    "namespaceURI": "String"
                },
                "Throw": []
            },
            "isDefaultNamespace": {
                "Parameter": {
                    "namespaceURI": "String"
                },
                "Throw": []
            },
            "lookupNamespaceURI": {
                "Parameter": {
                    "prefix": "String"
                },
                "Throw": []
            },
            "isEqualNode": {
                "Parameter": {
                    "arg": "Node"
                },
                "Throw": []
            },
            "getFeature": {
                "Parameter": {
                    "feature": "String",
                    "version": "String"
                },
                "Throw": []
            },
            "setUserData": {
                "Parameter": {
                    "key": "String",
                    "data": "Object",
                    "handler": "UserDataHandler"
                },
                "Throw": []
            },
            "getUserData": {
                "Parameter": {
                    "key": "String"
                },
                "Throw": []
            }
        }
    },
    "1080": {
        "Package": "org.w3c.dom",
        "Interface": "NodeList",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.imageio.metadata.IIOMetadataNode"
        ],
        "Method": {
            "item": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getLength": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1081": {
        "Package": "org.w3c.dom",
        "Interface": "Notation",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getPublicId": {
                "Parameter": {},
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1082": {
        "Package": "org.w3c.dom",
        "Interface": "ProcessingInstruction",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getTarget": {
                "Parameter": {},
                "Throw": []
            },
            "getData": {
                "Parameter": {},
                "Throw": []
            },
            "setData": {
                "Parameter": {
                    "data": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            }
        }
    },
    "1083": {
        "Package": "org.w3c.dom",
        "Interface": "Text",
        "Superinterface": [
            "org.w3c.dom.CharacterData",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": [
            "org.w3c.dom.CDATASection",
            "javax.xml.soap.Text"
        ],
        "Subinterface": null,
        "Method": {
            "splitText": {
                "Parameter": {
                    "offset": "int"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "isElementContentWhitespace": {
                "Parameter": {},
                "Throw": []
            },
            "getWholeText": {
                "Parameter": {},
                "Throw": []
            },
            "replaceWholeText": {
                "Parameter": {
                    "content": "String"
                },
                "Throw": []
            }
        }
    },
    "1084": {
        "Package": "org.w3c.dom",
        "Interface": "TypeInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getTypeName": {
                "Parameter": {},
                "Throw": []
            },
            "getTypeNamespace": {
                "Parameter": {},
                "Throw": []
            },
            "isDerivedFrom": {
                "Parameter": {
                    "typeNamespaceArg": "String",
                    "typeNameArg": "String",
                    "derivationMethod": "int"
                },
                "Throw": []
            }
        }
    },
    "1085": {
        "Package": "org.w3c.dom",
        "Interface": "UserDataHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "handle": {
                "Parameter": {
                    "operation": "short",
                    "key": "String",
                    "data": "Object",
                    "src": "Node",
                    "dst": "Node"
                },
                "Throw": []
            }
        }
    },
    "1086": {
        "Package": "org.w3c.dom.events",
        "Interface": "DocumentEvent",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createEvent": {
                "Parameter": {
                    "eventType": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            }
        }
    },
    "1087": {
        "Package": "org.w3c.dom.events",
        "Interface": "Event",
        "Superinterface": null,
        "Implementing Class": [
            "org.w3c.dom.ls.LSLoadEvent",
            "org.w3c.dom.ls.LSProgressEvent",
            "org.w3c.dom.events.MouseEvent",
            "org.w3c.dom.events.MutationEvent",
            "org.w3c.dom.events.UIEvent"
        ],
        "Subinterface": null,
        "Method": {
            "getType": {
                "Parameter": {},
                "Throw": []
            },
            "getTarget": {
                "Parameter": {},
                "Throw": []
            },
            "getCurrentTarget": {
                "Parameter": {},
                "Throw": []
            },
            "getEventPhase": {
                "Parameter": {},
                "Throw": []
            },
            "getBubbles": {
                "Parameter": {},
                "Throw": []
            },
            "getCancelable": {
                "Parameter": {},
                "Throw": []
            },
            "getTimeStamp": {
                "Parameter": {},
                "Throw": []
            },
            "stopPropagation": {
                "Parameter": {},
                "Throw": []
            },
            "preventDefault": {
                "Parameter": {},
                "Throw": []
            },
            "initEvent": {
                "Parameter": {
                    "eventTypeArg": "String",
                    "canBubbleArg": "boolean",
                    "cancelableArg": "boolean"
                },
                "Throw": []
            }
        }
    },
    "1088": {
        "Package": "org.w3c.dom.events",
        "Interface": "EventListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "handleEvent": {
                "Parameter": {
                    "evt": "Event"
                },
                "Throw": []
            }
        }
    },
    "1089": {
        "Package": "org.w3c.dom.events",
        "Interface": "EventTarget",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "addEventListener": {
                "Parameter": {
                    "type": "String",
                    "listener": "EventListener",
                    "useCapture": "boolean"
                },
                "Throw": []
            },
            "removeEventListener": {
                "Parameter": {
                    "type": "String",
                    "listener": "EventListener",
                    "useCapture": "boolean"
                },
                "Throw": []
            },
            "dispatchEvent": {
                "Parameter": {
                    "evt": "Event"
                },
                "Throw": "org.w3c.dom.events.EventException"
            }
        }
    },
    "1090": {
        "Package": "org.w3c.dom.events",
        "Interface": "MouseEvent",
        "Superinterface": [
            "org.w3c.dom.events.Event",
            "org.w3c.dom.events.UIEvent"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getScreenX": {
                "Parameter": {},
                "Throw": []
            },
            "getScreenY": {
                "Parameter": {},
                "Throw": []
            },
            "getClientX": {
                "Parameter": {},
                "Throw": []
            },
            "getClientY": {
                "Parameter": {},
                "Throw": []
            },
            "getCtrlKey": {
                "Parameter": {},
                "Throw": []
            },
            "getShiftKey": {
                "Parameter": {},
                "Throw": []
            },
            "getAltKey": {
                "Parameter": {},
                "Throw": []
            },
            "getMetaKey": {
                "Parameter": {},
                "Throw": []
            },
            "getButton": {
                "Parameter": {},
                "Throw": []
            },
            "getRelatedTarget": {
                "Parameter": {},
                "Throw": []
            },
            "initMouseEvent": {
                "Parameter": {
                    "typeArg": "String",
                    "canBubbleArg": "boolean",
                    "cancelableArg": "boolean",
                    "viewArg": "AbstractView",
                    "detailArg": "int",
                    "screenXArg": "int",
                    "screenYArg": "int",
                    "clientXArg": "int",
                    "clientYArg": "int",
                    "ctrlKeyArg": "boolean",
                    "altKeyArg": "boolean",
                    "shiftKeyArg": "boolean",
                    "metaKeyArg": "boolean",
                    "buttonArg": "short",
                    "relatedTargetArg": "EventTarget"
                },
                "Throw": []
            }
        }
    },
    "1091": {
        "Package": "org.w3c.dom.events",
        "Interface": "MutationEvent",
        "Superinterface": [
            "org.w3c.dom.events.Event"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getRelatedNode": {
                "Parameter": {},
                "Throw": []
            },
            "getPrevValue": {
                "Parameter": {},
                "Throw": []
            },
            "getNewValue": {
                "Parameter": {},
                "Throw": []
            },
            "getAttrName": {
                "Parameter": {},
                "Throw": []
            },
            "getAttrChange": {
                "Parameter": {},
                "Throw": []
            },
            "initMutationEvent": {
                "Parameter": {
                    "typeArg": "String",
                    "canBubbleArg": "boolean",
                    "cancelableArg": "boolean",
                    "relatedNodeArg": "Node",
                    "prevValueArg": "String",
                    "newValueArg": "String",
                    "attrNameArg": "String",
                    "attrChangeArg": "short"
                },
                "Throw": []
            }
        }
    },
    "1092": {
        "Package": "org.w3c.dom.events",
        "Interface": "UIEvent",
        "Superinterface": [
            "org.w3c.dom.events.Event"
        ],
        "Implementing Class": [
            "org.w3c.dom.events.MouseEvent"
        ],
        "Subinterface": null,
        "Method": {
            "getView": {
                "Parameter": {},
                "Throw": []
            },
            "getDetail": {
                "Parameter": {},
                "Throw": []
            },
            "initUIEvent": {
                "Parameter": {
                    "typeArg": "String",
                    "canBubbleArg": "boolean",
                    "cancelableArg": "boolean",
                    "viewArg": "AbstractView",
                    "detailArg": "int"
                },
                "Throw": []
            }
        }
    },
    "1093": {
        "Package": "org.w3c.dom.ls",
        "Interface": "DOMImplementationLS",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "createLSParser": {
                "Parameter": {
                    "mode": "short",
                    "schemaType": "String"
                },
                "Throw": "org.w3c.dom.DOMException"
            },
            "createLSSerializer": {
                "Parameter": {},
                "Throw": []
            },
            "createLSInput": {
                "Parameter": {},
                "Throw": []
            },
            "createLSOutput": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1094": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSInput",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getCharacterStream": {
                "Parameter": {},
                "Throw": []
            },
            "setCharacterStream": {
                "Parameter": {
                    "characterStream": "Reader"
                },
                "Throw": []
            },
            "getByteStream": {
                "Parameter": {},
                "Throw": []
            },
            "setByteStream": {
                "Parameter": {
                    "byteStream": "InputStream"
                },
                "Throw": []
            },
            "getStringData": {
                "Parameter": {},
                "Throw": []
            },
            "setStringData": {
                "Parameter": {
                    "stringData": "String"
                },
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            },
            "setSystemId": {
                "Parameter": {
                    "systemId": "String"
                },
                "Throw": []
            },
            "getPublicId": {
                "Parameter": {},
                "Throw": []
            },
            "setPublicId": {
                "Parameter": {
                    "publicId": "String"
                },
                "Throw": []
            },
            "getBaseURI": {
                "Parameter": {},
                "Throw": []
            },
            "setBaseURI": {
                "Parameter": {
                    "baseURI": "String"
                },
                "Throw": []
            },
            "getEncoding": {
                "Parameter": {},
                "Throw": []
            },
            "setEncoding": {
                "Parameter": {
                    "encoding": "String"
                },
                "Throw": []
            },
            "getCertifiedText": {
                "Parameter": {},
                "Throw": []
            },
            "setCertifiedText": {
                "Parameter": {
                    "certifiedText": "boolean"
                },
                "Throw": []
            }
        }
    },
    "1095": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSLoadEvent",
        "Superinterface": [
            "org.w3c.dom.events.Event"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getNewDocument": {
                "Parameter": {},
                "Throw": []
            },
            "getInput": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1096": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSOutput",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getCharacterStream": {
                "Parameter": {},
                "Throw": []
            },
            "setCharacterStream": {
                "Parameter": {
                    "characterStream": "Writer"
                },
                "Throw": []
            },
            "getByteStream": {
                "Parameter": {},
                "Throw": []
            },
            "setByteStream": {
                "Parameter": {
                    "byteStream": "OutputStream"
                },
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            },
            "setSystemId": {
                "Parameter": {
                    "systemId": "String"
                },
                "Throw": []
            },
            "getEncoding": {
                "Parameter": {},
                "Throw": []
            },
            "setEncoding": {
                "Parameter": {
                    "encoding": "String"
                },
                "Throw": []
            }
        }
    },
    "1097": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSParser",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getDomConfig": {
                "Parameter": {},
                "Throw": []
            },
            "getFilter": {
                "Parameter": {},
                "Throw": []
            },
            "setFilter": {
                "Parameter": {
                    "filter": "LSParserFilter"
                },
                "Throw": []
            },
            "getAsync": {
                "Parameter": {},
                "Throw": []
            },
            "getBusy": {
                "Parameter": {},
                "Throw": []
            },
            "parse": {
                "Parameter": {
                    "input": "LSInput"
                },
                "Throw": "org.w3c.dom.ls.LSException"
            },
            "parseURI": {
                "Parameter": {
                    "uri": "String"
                },
                "Throw": "org.w3c.dom.ls.LSException"
            },
            "parseWithContext": {
                "Parameter": {
                    "input": "LSInput",
                    "contextArg": "Node",
                    "action": "short"
                },
                "Throw": "org.w3c.dom.ls.LSException"
            },
            "abort": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1098": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSParserFilter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "startElement": {
                "Parameter": {
                    "elementArg": "Element"
                },
                "Throw": []
            },
            "acceptNode": {
                "Parameter": {
                    "nodeArg": "Node"
                },
                "Throw": []
            },
            "getWhatToShow": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1099": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSProgressEvent",
        "Superinterface": [
            "org.w3c.dom.events.Event"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getInput": {
                "Parameter": {},
                "Throw": []
            },
            "getPosition": {
                "Parameter": {},
                "Throw": []
            },
            "getTotalSize": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1100": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSResourceResolver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "resolveResource": {
                "Parameter": {
                    "type": "String",
                    "namespaceURI": "String",
                    "publicId": "String",
                    "systemId": "String",
                    "baseURI": "String"
                },
                "Throw": []
            }
        }
    },
    "1101": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSSerializerFilter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getWhatToShow": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1102": {
        "Package": "org.w3c.dom.views",
        "Interface": "AbstractView",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getDocument": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1103": {
        "Package": "org.w3c.dom.views",
        "Interface": "DocumentView",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": {
            "getDefaultView": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1104": {
        "Package": "org.xml.sax",
        "Interface": "AttributeList",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.helpers.AttributeListImpl"
        ],
        "Method": {
            "getLength": {
                "Parameter": {},
                "Throw": []
            },
            "getName": {
                "Parameter": {
                    "i": "int"
                },
                "Throw": []
            },
            "getType": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            },
            "getValue": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            }
        }
    },
    "1105": {
        "Package": "org.xml.sax",
        "Interface": "Attributes",
        "Superinterface": null,
        "Implementing Class": [
            "org.xml.sax.ext.Attributes2"
        ],
        "Subinterface": [
            "org.xml.sax.ext.Attributes2Impl",
            "org.xml.sax.helpers.AttributesImpl"
        ],
        "Method": {
            "getLength": {
                "Parameter": {},
                "Throw": []
            },
            "getURI": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getLocalName": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getQName": {
                "Parameter": {
                    "index": "int"
                },
                "Throw": []
            },
            "getType": {
                "Parameter": {
                    "qName": "String"
                },
                "Throw": []
            },
            "getValue": {
                "Parameter": {
                    "qName": "String"
                },
                "Throw": []
            },
            "getIndex": {
                "Parameter": {
                    "qName": "String"
                },
                "Throw": []
            }
        }
    },
    "1106": {
        "Package": "org.xml.sax",
        "Interface": "ContentHandler",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.transform.sax.TemplatesHandler",
            "javax.xml.transform.sax.TransformerHandler",
            "javax.xml.bind.UnmarshallerHandler"
        ],
        "Subinterface": [
            "org.xml.sax.helpers.DefaultHandler",
            "org.xml.sax.ext.DefaultHandler2",
            "javax.xml.validation.ValidatorHandler",
            "org.xml.sax.helpers.XMLFilterImpl",
            "org.xml.sax.helpers.XMLReaderAdapter"
        ],
        "Method": {
            "setDocumentLocator": {
                "Parameter": {
                    "locator": "Locator"
                },
                "Throw": []
            },
            "startDocument": {
                "Parameter": {},
                "Throw": "org.xml.sax.SAXException"
            },
            "endDocument": {
                "Parameter": {},
                "Throw": "org.xml.sax.SAXException"
            },
            "startPrefixMapping": {
                "Parameter": {
                    "prefix": "String",
                    "uri": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "endPrefixMapping": {
                "Parameter": {
                    "prefix": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "startElement": {
                "Parameter": {
                    "uri": "String",
                    "localName": "String",
                    "qName": "String",
                    "atts": "Attributes"
                },
                "Throw": []
            },
            "endElement": {
                "Parameter": {
                    "uri": "String",
                    "localName": "String",
                    "qName": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "characters": {
                "Parameter": {
                    "ch": "char",
                    "start": "int",
                    "length": "int"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "ignorableWhitespace": {
                "Parameter": {
                    "ch": "char",
                    "start": "int",
                    "length": "int"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "processingInstruction": {
                "Parameter": {
                    "target": "String",
                    "data": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "skippedEntity": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            }
        }
    },
    "1107": {
        "Package": "org.xml.sax",
        "Interface": "DocumentHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.HandlerBase",
            "org.xml.sax.helpers.ParserAdapter"
        ],
        "Method": {
            "setDocumentLocator": {
                "Parameter": {
                    "locator": "Locator"
                },
                "Throw": []
            },
            "startDocument": {
                "Parameter": {},
                "Throw": "org.xml.sax.SAXException"
            },
            "endDocument": {
                "Parameter": {},
                "Throw": "org.xml.sax.SAXException"
            },
            "startElement": {
                "Parameter": {
                    "name": "String",
                    "atts": "AttributeList"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "endElement": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "characters": {
                "Parameter": {
                    "ch": "char",
                    "start": "int",
                    "length": "int"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "ignorableWhitespace": {
                "Parameter": {
                    "ch": "char",
                    "start": "int",
                    "length": "int"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "processingInstruction": {
                "Parameter": {
                    "target": "String",
                    "data": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            }
        }
    },
    "1108": {
        "Package": "org.xml.sax",
        "Interface": "DTDHandler",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.transform.sax.TransformerHandler"
        ],
        "Subinterface": [
            "org.xml.sax.helpers.DefaultHandler",
            "org.xml.sax.ext.DefaultHandler2",
            "org.xml.sax.HandlerBase",
            "org.xml.sax.helpers.XMLFilterImpl"
        ],
        "Method": {
            "notationDecl": {
                "Parameter": {
                    "name": "String",
                    "publicId": "String",
                    "systemId": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "unparsedEntityDecl": {
                "Parameter": {
                    "name": "String",
                    "publicId": "String",
                    "systemId": "String",
                    "notationName": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            }
        }
    },
    "1109": {
        "Package": "org.xml.sax",
        "Interface": "EntityResolver",
        "Superinterface": null,
        "Implementing Class": [
            "org.xml.sax.ext.EntityResolver2"
        ],
        "Subinterface": [
            "org.xml.sax.helpers.DefaultHandler",
            "org.xml.sax.ext.DefaultHandler2",
            "org.xml.sax.HandlerBase",
            "org.xml.sax.helpers.XMLFilterImpl"
        ],
        "Method": {
            "resolveEntity": {
                "Parameter": {
                    "publicId": "String",
                    "systemId": "String"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "1110": {
        "Package": "org.xml.sax",
        "Interface": "ErrorHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.helpers.DefaultHandler",
            "org.xml.sax.ext.DefaultHandler2",
            "org.xml.sax.HandlerBase",
            "org.xml.sax.helpers.XMLFilterImpl"
        ],
        "Method": {
            "warning": {
                "Parameter": {
                    "exception": "SAXParseException"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "error": {
                "Parameter": {
                    "exception": "SAXParseException"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "fatalError": {
                "Parameter": {
                    "exception": "SAXParseException"
                },
                "Throw": "org.xml.sax.SAXException"
            }
        }
    },
    "1111": {
        "Package": "org.xml.sax",
        "Interface": "Locator",
        "Superinterface": null,
        "Implementing Class": [
            "org.xml.sax.ext.Locator2"
        ],
        "Subinterface": [
            "org.xml.sax.ext.Locator2Impl",
            "org.xml.sax.helpers.LocatorImpl"
        ],
        "Method": {
            "getPublicId": {
                "Parameter": {},
                "Throw": []
            },
            "getSystemId": {
                "Parameter": {},
                "Throw": []
            },
            "getLineNumber": {
                "Parameter": {},
                "Throw": []
            },
            "getColumnNumber": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1112": {
        "Package": "org.xml.sax",
        "Interface": "Parser",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.helpers.XMLReaderAdapter"
        ],
        "Method": {
            "setLocale": {
                "Parameter": {
                    "locale": "Locale"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "setEntityResolver": {
                "Parameter": {
                    "resolver": "EntityResolver"
                },
                "Throw": []
            },
            "setDTDHandler": {
                "Parameter": {
                    "handler": "DTDHandler"
                },
                "Throw": []
            },
            "setDocumentHandler": {
                "Parameter": {
                    "handler": "DocumentHandler"
                },
                "Throw": []
            },
            "setErrorHandler": {
                "Parameter": {
                    "handler": "ErrorHandler"
                },
                "Throw": []
            },
            "parse": {
                "Parameter": {
                    "systemId": "String"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "1113": {
        "Package": "org.xml.sax",
        "Interface": "XMLFilter",
        "Superinterface": [
            "org.xml.sax.XMLReader"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.helpers.XMLFilterImpl"
        ],
        "Method": {
            "setParent": {
                "Parameter": {
                    "parent": "XMLReader"
                },
                "Throw": []
            },
            "getParent": {
                "Parameter": {},
                "Throw": []
            }
        }
    },
    "1114": {
        "Package": "org.xml.sax",
        "Interface": "XMLReader",
        "Superinterface": null,
        "Implementing Class": [
            "org.xml.sax.XMLFilter"
        ],
        "Subinterface": [
            "org.xml.sax.helpers.ParserAdapter",
            "org.xml.sax.helpers.XMLFilterImpl"
        ],
        "Method": {
            "getFeature": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "org.xml.sax.SAXNotSupportedException"
            },
            "setFeature": {
                "Parameter": {
                    "name": "String",
                    "value": "boolean"
                },
                "Throw": "org.xml.sax.SAXNotSupportedException"
            },
            "getProperty": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "org.xml.sax.SAXNotSupportedException"
            },
            "setProperty": {
                "Parameter": {
                    "name": "String",
                    "value": "Object"
                },
                "Throw": "org.xml.sax.SAXNotSupportedException"
            },
            "setEntityResolver": {
                "Parameter": {
                    "resolver": "EntityResolver"
                },
                "Throw": []
            },
            "getEntityResolver": {
                "Parameter": {},
                "Throw": []
            },
            "setDTDHandler": {
                "Parameter": {
                    "handler": "DTDHandler"
                },
                "Throw": []
            },
            "getDTDHandler": {
                "Parameter": {},
                "Throw": []
            },
            "setContentHandler": {
                "Parameter": {
                    "handler": "ContentHandler"
                },
                "Throw": []
            },
            "getContentHandler": {
                "Parameter": {},
                "Throw": []
            },
            "setErrorHandler": {
                "Parameter": {
                    "handler": "ErrorHandler"
                },
                "Throw": []
            },
            "getErrorHandler": {
                "Parameter": {},
                "Throw": []
            },
            "parse": {
                "Parameter": {
                    "systemId": "String"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "1115": {
        "Package": "org.xml.sax.ext",
        "Interface": "Attributes2",
        "Superinterface": [
            "org.xml.sax.Attributes"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.ext.Attributes2Impl"
        ],
        "Method": {
            "isDeclared": {
                "Parameter": {
                    "uri": "String",
                    "localName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            },
            "isSpecified": {
                "Parameter": {
                    "qName": "String"
                },
                "Throw": "java.lang.IllegalArgumentException"
            }
        }
    },
    "1116": {
        "Package": "org.xml.sax.ext",
        "Interface": "DeclHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.ext.DefaultHandler2"
        ],
        "Method": {
            "elementDecl": {
                "Parameter": {
                    "name": "String",
                    "model": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "attributeDecl": {
                "Parameter": {
                    "eName": "String",
                    "aName": "String",
                    "type": "String",
                    "mode": "String",
                    "value": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "internalEntityDecl": {
                "Parameter": {
                    "name": "String",
                    "value": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "externalEntityDecl": {
                "Parameter": {
                    "name": "String",
                    "publicId": "String",
                    "systemId": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            }
        }
    },
    "1117": {
        "Package": "org.xml.sax.ext",
        "Interface": "EntityResolver2",
        "Superinterface": [
            "org.xml.sax.EntityResolver"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.ext.DefaultHandler2"
        ],
        "Method": {
            "getExternalSubset": {
                "Parameter": {
                    "name": "String",
                    "baseURI": "String"
                },
                "Throw": "java.io.IOException"
            },
            "resolveEntity": {
                "Parameter": {
                    "name": "String",
                    "publicId": "String",
                    "baseURI": "String",
                    "systemId": "String"
                },
                "Throw": "java.io.IOException"
            }
        }
    },
    "1118": {
        "Package": "org.xml.sax.ext",
        "Interface": "LexicalHandler",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.transform.sax.TransformerHandler"
        ],
        "Subinterface": [
            "org.xml.sax.ext.DefaultHandler2"
        ],
        "Method": {
            "startDTD": {
                "Parameter": {
                    "name": "String",
                    "publicId": "String",
                    "systemId": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "endDTD": {
                "Parameter": {},
                "Throw": "org.xml.sax.SAXException"
            },
            "startEntity": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": []
            },
            "endEntity": {
                "Parameter": {
                    "name": "String"
                },
                "Throw": "org.xml.sax.SAXException"
            },
            "startCDATA": {
                "Parameter": {},
                "Throw": "org.xml.sax.SAXException"
            },
            "endCDATA": {
                "Parameter": {},
                "Throw": "org.xml.sax.SAXException"
            },
            "comment": {
                "Parameter": {
                    "ch": "char",
                    "start": "int",
                    "length": "int"
                },
                "Throw": "org.xml.sax.SAXException"
            }
        }
    },
    "1119": {
        "Package": "org.xml.sax.ext",
        "Interface": "Locator2",
        "Superinterface": [
            "org.xml.sax.Locator"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.ext.Locator2Impl"
        ],
        "Method": {
            "getXMLVersion": {
                "Parameter": {},
                "Throw": []
            },
            "getEncoding": {
                "Parameter": {},
                "Throw": []
            }
        }
    }
}