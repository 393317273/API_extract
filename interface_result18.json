{
    "0": {
        "Package": "java.io",
        "Interface": "Closeable",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": [
            "java.nio.channels.AsynchronousByteChannel",
            "java.nio.channels.AsynchronousChannel",
            "java.nio.channels.ByteChannel",
            "java.nio.channels.Channel",
            "java.nio.file.DirectoryStream",
            "java.nio.channels.GatheringByteChannel",
            "javax.imageio.stream.ImageInputStream",
            "javax.imageio.stream.ImageOutputStream",
            "java.nio.channels.InterruptibleChannel",
            "javax.tools.JavaFileManager",
            "javax.management.remote.JMXConnector",
            "java.lang.module.ModuleReader",
            "java.nio.channels.MulticastChannel",
            "java.nio.channels.NetworkChannel",
            "java.nio.channels.ReadableByteChannel",
            "javax.management.remote.rmi.RMIConnection",
            "java.nio.channels.ScatteringByteChannel",
            "java.nio.file.SecureDirectoryStream",
            "java.nio.channels.SeekableByteChannel",
            "javax.tools.StandardJavaFileManager",
            "java.nio.file.WatchService",
            "java.nio.channels.WritableByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.spi.AbstractInterruptibleChannel",
            "java.nio.channels.spi.AbstractSelectableChannel",
            "java.nio.channels.spi.AbstractSelector",
            "java.nio.channels.AsynchronousFileChannel",
            "java.nio.channels.AsynchronousServerSocketChannel",
            "java.nio.channels.AsynchronousSocketChannel",
            "javax.sound.sampled.AudioInputStream",
            "java.io.BufferedInputStream",
            "java.io.BufferedOutputStream",
            "java.io.BufferedReader",
            "java.io.BufferedWriter",
            "java.io.ByteArrayInputStream",
            "java.io.ByteArrayOutputStream",
            "java.io.CharArrayReader",
            "java.io.CharArrayWriter",
            "java.util.zip.CheckedInputStream",
            "java.util.zip.CheckedOutputStream",
            "javax.crypto.CipherInputStream",
            "javax.crypto.CipherOutputStream",
            "java.nio.channels.DatagramChannel",
            "java.net.DatagramSocket",
            "java.io.DataInputStream",
            "java.io.DataOutputStream",
            "java.util.zip.DeflaterInputStream",
            "java.util.zip.DeflaterOutputStream",
            "java.security.DigestInputStream",
            "java.security.DigestOutputStream",
            "javax.imageio.stream.FileCacheImageInputStream",
            "javax.imageio.stream.FileCacheImageOutputStream",
            "java.nio.channels.FileChannel",
            "javax.imageio.stream.FileImageInputStream",
            "javax.imageio.stream.FileImageOutputStream",
            "java.io.FileInputStream",
            "java.io.FileOutputStream",
            "java.io.FileReader",
            "java.nio.file.FileSystem",
            "java.io.FileWriter",
            "java.io.FilterInputStream",
            "java.io.FilterOutputStream",
            "java.io.FilterReader",
            "java.io.FilterWriter",
            "java.util.Formatter",
            "javax.tools.ForwardingJavaFileManager",
            "java.util.zip.GZIPInputStream",
            "java.util.zip.GZIPOutputStream",
            "javax.imageio.stream.ImageInputStreamImpl",
            "javax.imageio.stream.ImageOutputStreamImpl",
            "java.util.zip.InflaterInputStream",
            "java.util.zip.InflaterOutputStream",
            "java.io.InputStream",
            "java.io.InputStreamReader",
            "java.util.jar.JarFile",
            "java.util.jar.JarInputStream",
            "java.util.jar.JarOutputStream",
            "java.io.LineNumberInputStream",
            "java.io.LineNumberReader",
            "java.rmi.server.LogStream",
            "javax.imageio.stream.MemoryCacheImageInputStream",
            "javax.imageio.stream.MemoryCacheImageOutputStream",
            "javax.management.loading.MLet",
            "java.net.MulticastSocket",
            "java.io.ObjectInputStream",
            "java.io.ObjectOutputStream",
            "java.io.OutputStream",
            "java.io.OutputStreamWriter",
            "java.nio.channels.Pipe.SinkChannel",
            "java.nio.channels.Pipe.SourceChannel",
            "java.io.PipedInputStream",
            "java.io.PipedOutputStream",
            "java.io.PipedReader",
            "java.io.PipedWriter",
            "java.io.PrintStream",
            "java.io.PrintWriter",
            "javax.management.loading.PrivateMLet",
            "javax.swing.ProgressMonitorInputStream",
            "java.io.PushbackInputStream",
            "java.io.PushbackReader",
            "java.io.RandomAccessFile",
            "java.io.Reader",
            "jdk.jfr.Recording",
            "jdk.jfr.consumer.RecordingFile",
            "javax.management.remote.rmi.RMIConnectionImpl",
            "javax.management.remote.rmi.RMIConnectionImpl_Stub",
            "javax.management.remote.rmi.RMIConnector",
            "javax.management.remote.rmi.RMIIIOPServerImpl",
            "javax.management.remote.rmi.RMIJRMPServerImpl",
            "javax.management.remote.rmi.RMIServerImpl",
            "java.util.Scanner",
            "com.sun.nio.sctp.SctpChannel",
            "com.sun.nio.sctp.SctpMultiChannel",
            "com.sun.nio.sctp.SctpServerChannel",
            "java.nio.channels.SelectableChannel",
            "java.nio.channels.Selector",
            "java.io.SequenceInputStream",
            "java.net.ServerSocket",
            "java.nio.channels.ServerSocketChannel",
            "java.net.Socket",
            "java.nio.channels.SocketChannel",
            "javax.net.ssl.SSLServerSocket",
            "javax.net.ssl.SSLSocket",
            "java.io.StringBufferInputStream",
            "java.io.StringReader",
            "java.io.StringWriter",
            "java.net.URLClassLoader",
            "java.io.Writer",
            "java.util.zip.ZipFile",
            "java.util.zip.ZipInputStream",
            "java.util.zip.ZipOutputStream"
        ],
        "Method": [
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "1": {
        "Package": "java.io",
        "Interface": "DataInput",
        "Superinterface": null,
        "Implementing Class": [
            "javax.imageio.stream.ImageInputStream",
            "javax.imageio.stream.ImageOutputStream",
            "java.io.ObjectInput"
        ],
        "Subinterface": [
            "java.io.DataInputStream",
            "javax.imageio.stream.FileCacheImageInputStream",
            "javax.imageio.stream.FileCacheImageOutputStream",
            "javax.imageio.stream.FileImageInputStream",
            "javax.imageio.stream.FileImageOutputStream",
            "javax.imageio.stream.ImageInputStreamImpl",
            "javax.imageio.stream.ImageOutputStreamImpl",
            "javax.imageio.stream.MemoryCacheImageInputStream",
            "javax.imageio.stream.MemoryCacheImageOutputStream",
            "java.io.ObjectInputStream",
            "java.io.RandomAccessFile"
        ],
        "Method": [
            {
                "readFully": {
                    "Parameter": {
                        "b": "byte"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readFully": {
                    "Parameter": {
                        "b": "byte",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "skipBytes": {
                    "Parameter": {
                        "n": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readBoolean": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readByte": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readUnsignedByte": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readShort": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readUnsignedShort": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readChar": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readInt": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readLong": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readFloat": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readDouble": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readLine": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readUTF": {
                    "Parameter": {},
                    "Throw": "java.io.UTFDataFormatException"
                }
            }
        ]
    },
    "2": {
        "Package": "java.io",
        "Interface": "DataOutput",
        "Superinterface": null,
        "Implementing Class": [
            "javax.imageio.stream.ImageOutputStream",
            "java.io.ObjectOutput"
        ],
        "Subinterface": [
            "java.io.DataOutputStream",
            "javax.imageio.stream.FileCacheImageOutputStream",
            "javax.imageio.stream.FileImageOutputStream",
            "javax.imageio.stream.ImageOutputStreamImpl",
            "javax.imageio.stream.MemoryCacheImageOutputStream",
            "java.io.ObjectOutputStream",
            "java.io.RandomAccessFile"
        ],
        "Method": [
            {
                "write": {
                    "Parameter": {
                        "b": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "write": {
                    "Parameter": {
                        "b": "byte"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "write": {
                    "Parameter": {
                        "b": "byte",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "writeBoolean": {
                    "Parameter": {
                        "v": "boolean"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeByte": {
                    "Parameter": {
                        "v": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeShort": {
                    "Parameter": {
                        "v": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeChar": {
                    "Parameter": {
                        "v": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeInt": {
                    "Parameter": {
                        "v": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeLong": {
                    "Parameter": {
                        "v": "long"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeFloat": {
                    "Parameter": {
                        "v": "float"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeDouble": {
                    "Parameter": {
                        "v": "double"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeBytes": {
                    "Parameter": {
                        "s": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeChars": {
                    "Parameter": {
                        "s": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeUTF": {
                    "Parameter": {
                        "s": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "3": {
        "Package": "java.io",
        "Interface": "Externalizable",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "java.rmi.server.RemoteRef",
            "java.rmi.server.ServerRef"
        ],
        "Subinterface": [
            "java.awt.datatransfer.DataFlavor",
            "javax.management.loading.MLet",
            "javax.management.loading.PrivateMLet"
        ],
        "Method": [
            {
                "writeExternal": {
                    "Parameter": {
                        "out": "ObjectOutput"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readExternal": {
                    "Parameter": {
                        "in": "ObjectInput"
                    },
                    "Throw": "java.lang.ClassNotFoundException"
                }
            }
        ]
    },
    "4": {
        "Package": "java.io",
        "Interface": "FileFilter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "accept": {
                    "Parameter": {
                        "pathname": "File"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "5": {
        "Package": "java.io",
        "Interface": "FilenameFilter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "accept": {
                    "Parameter": {
                        "dir": "File",
                        "name": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "6": {
        "Package": "java.io",
        "Interface": "Flushable",
        "Superinterface": null,
        "Implementing Class": [
            "javax.tools.JavaFileManager",
            "javax.tools.StandardJavaFileManager"
        ],
        "Subinterface": [
            "java.io.BufferedOutputStream",
            "java.io.BufferedWriter",
            "java.io.ByteArrayOutputStream",
            "java.io.CharArrayWriter",
            "java.util.zip.CheckedOutputStream",
            "javax.crypto.CipherOutputStream",
            "java.io.Console",
            "java.io.DataOutputStream",
            "java.util.zip.DeflaterOutputStream",
            "java.security.DigestOutputStream",
            "java.io.FileOutputStream",
            "java.io.FileWriter",
            "java.io.FilterOutputStream",
            "java.io.FilterWriter",
            "java.util.Formatter",
            "javax.tools.ForwardingJavaFileManager",
            "java.util.zip.GZIPOutputStream",
            "java.util.zip.InflaterOutputStream",
            "java.util.jar.JarOutputStream",
            "java.rmi.server.LogStream",
            "java.io.ObjectOutputStream",
            "java.io.OutputStream",
            "java.io.OutputStreamWriter",
            "java.io.PipedOutputStream",
            "java.io.PipedWriter",
            "java.io.PrintStream",
            "java.io.PrintWriter",
            "java.io.StringWriter",
            "java.io.Writer",
            "java.util.zip.ZipOutputStream"
        ],
        "Method": [
            {
                "flush": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "7": {
        "Package": "java.io",
        "Interface": "ObjectInput",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.DataInput"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.io.ObjectInputStream"
        ],
        "Method": [
            {
                "readObject": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "read": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "read": {
                    "Parameter": {
                        "b": "byte"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "read": {
                    "Parameter": {
                        "b": "byte",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "skip": {
                    "Parameter": {
                        "n": "long"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "available": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "8": {
        "Package": "java.io",
        "Interface": "ObjectInputFilter.FilterInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "serialClass": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "arrayLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "depth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "references": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "streamBytes": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "9": {
        "Package": "java.io",
        "Interface": "ObjectInputFilter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "checkInput": {
                    "Parameter": {
                        "filterInfo": "ObjectInputFilter.FilterInfo"
                    },
                    "Throw": []
                }
            },
            {
                "allowFilter": {
                    "Parameter": {
                        "": "Predicate",
                        "otherStatus": "ObjectInputFilter.Status"
                    },
                    "Throw": []
                }
            },
            {
                "rejectFilter": {
                    "Parameter": {
                        "": "Predicate",
                        "otherStatus": "ObjectInputFilter.Status"
                    },
                    "Throw": []
                }
            },
            {
                "merge": {
                    "Parameter": {
                        "filter": "ObjectInputFilter",
                        "anotherFilter": "ObjectInputFilter"
                    },
                    "Throw": []
                }
            },
            {
                "rejectUndecidedClass": {
                    "Parameter": {
                        "filter": "ObjectInputFilter"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "10": {
        "Package": "java.io",
        "Interface": "ObjectInputValidation",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "validateObject": {
                    "Parameter": {},
                    "Throw": "java.io.InvalidObjectException"
                }
            }
        ]
    },
    "11": {
        "Package": "java.io",
        "Interface": "ObjectOutput",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.DataOutput"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.io.ObjectOutputStream"
        ],
        "Method": [
            {
                "writeObject": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "write": {
                    "Parameter": {
                        "b": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "write": {
                    "Parameter": {
                        "b": "byte"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "write": {
                    "Parameter": {
                        "b": "byte",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "flush": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "12": {
        "Package": "java.lang",
        "Interface": "Appendable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.io.BufferedWriter",
            "java.io.CharArrayWriter",
            "java.nio.CharBuffer",
            "java.io.FileWriter",
            "java.io.FilterWriter",
            "java.rmi.server.LogStream",
            "java.io.OutputStreamWriter",
            "java.io.PipedWriter",
            "java.io.PrintStream",
            "java.io.PrintWriter",
            "java.lang.StringBuffer",
            "java.lang.StringBuilder",
            "java.io.StringWriter",
            "java.io.Writer"
        ],
        "Method": [
            {
                "append": {
                    "Parameter": {
                        "csq": "CharSequence"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "append": {
                    "Parameter": {
                        "csq": "CharSequence",
                        "start": "int",
                        "end": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "append": {
                    "Parameter": {
                        "c": "char"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "13": {
        "Package": "java.lang",
        "Interface": "AutoCloseable",
        "Superinterface": null,
        "Implementing Class": [
            "java.nio.channels.AsynchronousByteChannel",
            "java.nio.channels.AsynchronousChannel",
            "java.util.stream.BaseStream",
            "java.nio.channels.ByteChannel",
            "javax.sql.rowset.CachedRowSet",
            "java.sql.CallableStatement",
            "java.nio.channels.Channel",
            "javax.sound.sampled.Clip",
            "java.io.Closeable",
            "java.sql.Connection",
            "javax.sound.sampled.DataLine",
            "java.nio.file.DirectoryStream",
            "java.util.stream.DoubleStream",
            "jdk.jfr.consumer.EventStream",
            "jdk.jshell.spi.ExecutionControl",
            "javax.sql.rowset.FilteredRowSet",
            "java.nio.channels.GatheringByteChannel",
            "javax.imageio.stream.ImageInputStream",
            "javax.imageio.stream.ImageOutputStream",
            "java.nio.channels.InterruptibleChannel",
            "java.util.stream.IntStream",
            "javax.tools.JavaFileManager",
            "javax.sql.rowset.JdbcRowSet",
            "javax.management.remote.JMXConnector",
            "javax.sql.rowset.JoinRowSet",
            "javax.sound.sampled.Line",
            "java.util.stream.LongStream",
            "javax.sound.midi.MidiDevice",
            "javax.sound.midi.MidiDeviceReceiver",
            "javax.sound.midi.MidiDeviceTransmitter",
            "javax.sound.sampled.Mixer",
            "java.lang.module.ModuleReader",
            "java.nio.channels.MulticastChannel",
            "java.nio.channels.NetworkChannel",
            "java.io.ObjectInput",
            "java.io.ObjectOutput",
            "javax.sound.sampled.Port",
            "java.sql.PreparedStatement",
            "java.nio.channels.ReadableByteChannel",
            "javax.sound.midi.Receiver",
            "jdk.incubator.foreign.ResourceScope",
            "java.sql.ResultSet",
            "javax.management.remote.rmi.RMIConnection",
            "javax.sql.RowSet",
            "java.nio.channels.ScatteringByteChannel",
            "java.nio.file.SecureDirectoryStream",
            "java.nio.channels.SeekableByteChannel",
            "javax.sound.midi.Sequencer",
            "javax.sound.sampled.SourceDataLine",
            "javax.tools.StandardJavaFileManager",
            "java.sql.Statement",
            "java.util.stream.Stream",
            "javax.sql.rowset.spi.SyncResolver",
            "javax.sound.midi.Synthesizer",
            "javax.sound.sampled.TargetDataLine",
            "javax.sound.midi.Transmitter",
            "java.nio.file.WatchService",
            "javax.sql.rowset.WebRowSet",
            "java.nio.channels.WritableByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.spi.AbstractInterruptibleChannel",
            "java.nio.channels.spi.AbstractSelectableChannel",
            "java.nio.channels.spi.AbstractSelector",
            "java.nio.channels.AsynchronousFileChannel",
            "java.nio.channels.AsynchronousServerSocketChannel",
            "java.nio.channels.AsynchronousSocketChannel",
            "javax.sound.sampled.AudioInputStream",
            "java.io.BufferedInputStream",
            "java.io.BufferedOutputStream",
            "java.io.BufferedReader",
            "java.io.BufferedWriter",
            "java.io.ByteArrayInputStream",
            "java.io.ByteArrayOutputStream",
            "java.io.CharArrayReader",
            "java.io.CharArrayWriter",
            "java.util.zip.CheckedInputStream",
            "java.util.zip.CheckedOutputStream",
            "javax.crypto.CipherInputStream",
            "javax.crypto.CipherOutputStream",
            "java.nio.channels.DatagramChannel",
            "java.net.DatagramSocket",
            "java.io.DataInputStream",
            "java.io.DataOutputStream",
            "java.util.zip.DeflaterInputStream",
            "java.util.zip.DeflaterOutputStream",
            "java.security.DigestInputStream",
            "java.security.DigestOutputStream",
            "jdk.jshell.execution.DirectExecutionControl",
            "javax.imageio.stream.FileCacheImageInputStream",
            "javax.imageio.stream.FileCacheImageOutputStream",
            "java.nio.channels.FileChannel",
            "javax.imageio.stream.FileImageInputStream",
            "javax.imageio.stream.FileImageOutputStream",
            "java.io.FileInputStream",
            "java.nio.channels.FileLock",
            "java.io.FileOutputStream",
            "java.io.FileReader",
            "java.nio.file.FileSystem",
            "java.io.FileWriter",
            "java.io.FilterInputStream",
            "java.io.FilterOutputStream",
            "java.io.FilterReader",
            "java.io.FilterWriter",
            "java.util.Formatter",
            "javax.tools.ForwardingJavaFileManager",
            "java.util.zip.GZIPInputStream",
            "java.util.zip.GZIPOutputStream",
            "com.sun.net.httpserver.HttpExchange",
            "com.sun.net.httpserver.HttpsExchange",
            "javax.imageio.stream.ImageInputStreamImpl",
            "javax.imageio.stream.ImageOutputStreamImpl",
            "java.util.zip.InflaterInputStream",
            "java.util.zip.InflaterOutputStream",
            "java.io.InputStream",
            "java.io.InputStreamReader",
            "java.util.jar.JarFile",
            "java.util.jar.JarInputStream",
            "java.util.jar.JarOutputStream",
            "jdk.jshell.execution.JdiDefaultExecutionControl",
            "jdk.jshell.execution.JdiExecutionControl",
            "jdk.jshell.JShell",
            "java.io.LineNumberInputStream",
            "java.io.LineNumberReader",
            "jdk.jshell.execution.LocalExecutionControl",
            "java.rmi.server.LogStream",
            "javax.imageio.stream.MemoryCacheImageInputStream",
            "javax.imageio.stream.MemoryCacheImageOutputStream",
            "javax.management.loading.MLet",
            "java.net.MulticastSocket",
            "java.io.ObjectInputStream",
            "java.io.ObjectOutputStream",
            "java.io.OutputStream",
            "java.io.OutputStreamWriter",
            "java.nio.channels.Pipe.SinkChannel",
            "java.nio.channels.Pipe.SourceChannel",
            "java.io.PipedInputStream",
            "java.io.PipedOutputStream",
            "java.io.PipedReader",
            "java.io.PipedWriter",
            "java.io.PrintStream",
            "java.io.PrintWriter",
            "javax.management.loading.PrivateMLet",
            "javax.swing.ProgressMonitorInputStream",
            "java.io.PushbackInputStream",
            "java.io.PushbackReader",
            "java.io.RandomAccessFile",
            "java.io.Reader",
            "jdk.jfr.Recording",
            "jdk.jfr.consumer.RecordingFile",
            "jdk.jfr.consumer.RecordingStream",
            "jdk.jshell.execution.RemoteExecutionControl",
            "jdk.management.jfr.RemoteRecordingStream",
            "javax.management.remote.rmi.RMIConnectionImpl",
            "javax.management.remote.rmi.RMIConnectionImpl_Stub",
            "javax.management.remote.rmi.RMIConnector",
            "javax.management.remote.rmi.RMIIIOPServerImpl",
            "javax.management.remote.rmi.RMIJRMPServerImpl",
            "javax.management.remote.rmi.RMIServerImpl",
            "java.util.Scanner",
            "com.sun.nio.sctp.SctpChannel",
            "com.sun.nio.sctp.SctpMultiChannel",
            "com.sun.nio.sctp.SctpServerChannel",
            "java.nio.channels.SelectableChannel",
            "java.nio.channels.Selector",
            "java.io.SequenceInputStream",
            "java.net.ServerSocket",
            "java.nio.channels.ServerSocketChannel",
            "java.net.Socket",
            "java.nio.channels.SocketChannel",
            "javax.net.ssl.SSLServerSocket",
            "javax.net.ssl.SSLSocket",
            "jdk.jshell.execution.StreamingExecutionControl",
            "java.io.StringBufferInputStream",
            "java.io.StringReader",
            "java.io.StringWriter",
            "java.util.concurrent.SubmissionPublisher",
            "java.net.URLClassLoader",
            "java.io.Writer",
            "java.beans.XMLDecoder",
            "java.beans.XMLEncoder",
            "java.util.zip.ZipFile",
            "java.util.zip.ZipInputStream",
            "java.util.zip.ZipOutputStream"
        ],
        "Method": [
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.lang.Exception"
                }
            }
        ]
    },
    "14": {
        "Package": "java.lang",
        "Interface": "CharSequence",
        "Superinterface": null,
        "Implementing Class": [
            "javax.lang.model.element.Name"
        ],
        "Subinterface": [
            "java.nio.CharBuffer",
            "javax.swing.text.Segment",
            "java.lang.String",
            "java.lang.StringBuffer",
            "java.lang.StringBuilder"
        ],
        "Method": [
            {
                "length": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "charAt": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "isEmpty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "subSequence": {
                    "Parameter": {
                        "start": "int",
                        "end": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "chars": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "codePoints": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "compare": {
                    "Parameter": {
                        "cs": "CharSequence"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "15": {
        "Package": "java.lang",
        "Interface": "Comparable",
        "Superinterface": null,
        "Implementing Class": [
            "com.sun.jdi.ArrayType",
            "com.sun.jdi.ByteValue",
            "com.sun.jdi.CharValue",
            "java.time.chrono.ChronoLocalDate",
            "java.time.chrono.ChronoLocalDateTime",
            "java.time.chrono.Chronology",
            "java.time.chrono.ChronoZonedDateTime",
            "com.sun.jdi.ClassType",
            "java.util.concurrent.Delayed",
            "com.sun.jdi.DoubleValue",
            "com.sun.jdi.Field",
            "com.sun.jdi.FloatValue",
            "com.sun.jdi.IntegerValue",
            "com.sun.jdi.InterfaceType",
            "com.sun.jdi.LocalVariable",
            "com.sun.jdi.Location",
            "com.sun.jdi.LongValue",
            "com.sun.jdi.Method",
            "javax.naming.Name",
            "java.nio.file.Path",
            "java.lang.ProcessHandle",
            "com.sun.jdi.ReferenceType",
            "java.util.concurrent.RunnableScheduledFuture",
            "java.util.concurrent.ScheduledFuture",
            "com.sun.jdi.ShortValue"
        ],
        "Subinterface": [
            "java.time.chrono.AbstractChronology",
            "java.math.AbstractRegionPainter.PaintContext.CacheMode",
            "java.math.AccessMode",
            "java.lang.AclEntryFlag",
            "java.lang.AclEntryPermission",
            "java.nio.AclEntryType",
            "java.util.AssociationChangeNotification.AssocChangeEvent",
            "java.lang.AttributeTree.ValueKind",
            "java.nio.Authenticator.RequestorType",
            "java.nio.charset.BigDecimal",
            "java.text.BigInteger",
            "javax.naming.Boolean",
            "javax.naming.Byte",
            "java.sql.ByteBuffer",
            "java.util.Calendar",
            "java.lang.CardTerminals.State",
            "java.nio.CaseTree.CaseKind",
            "java.time.CatalogFeatures.Feature",
            "java.lang.CertPathValidatorException.BasicReason",
            "java.io.Character",
            "java.nio.file.attribute.Character.UnicodeScript",
            "java.lang.CharBuffer",
            "java.nio.Charset",
            "java.util.ChronoField",
            "java.time.chrono.ChronoUnit",
            "java.time.chrono.ClientInfoStatus",
            "java.time.CollationKey",
            "java.nio.Collector.Characteristics",
            "java.lang.Component.BaselineResizeBehavior",
            "java.time.chrono.CompositeName",
            "java.time.chrono.CompoundName",
            "java.time.chrono.ConversionComparator.Comparison",
            "javax.naming.ldap.CRLReason",
            "java.time.CryptoPrimitive",
            "java.time.Date",
            "java.time.Date",
            "java.lang.DayOfWeek",
            "java.nio.Desktop.Action",
            "java.nio.Diagnostic.Kind",
            "java.time.chrono.Dialog.ModalExclusionType",
            "java.time.chrono.Dialog.ModalityType",
            "java.lang.module.DirectMethodHandleDesc.Kind",
            "java.lang.module.Doclet.Option.Kind",
            "java.lang.module.DocletEnvironment.ModuleMode",
            "java.lang.module.DocTree.Kind",
            "java.lang.module.DocumentationTool.Location",
            "java.lang.module.Double",
            "java.time.DoubleBuffer",
            "javax.management.DrbgParameters.Capability",
            "java.io.DropMode",
            "java.time.Duration",
            "java.time.ElementKind",
            "javax.naming.ldap.Elements.Origin",
            "java.lang.ElementType",
            "java.lang.Enum",
            "java.nio.File",
            "java.lang.FileTime",
            "java.lang.FileVisitOption",
            "java.lang.FileVisitResult",
            "java.time.chrono.Float",
            "java.time.chrono.FloatBuffer",
            "java.sql.FocusEvent.Cause",
            "java.sql.FormatStyle",
            "java.net.Formatter.BigDecimalLayoutForm",
            "java.util.FormSubmitEvent.MethodType",
            "java.time.GraphicsDevice.WindowTranslucency",
            "java.time.GregorianCalendar",
            "java.time.GroupLayout.Alignment",
            "java.time.HandlerResult",
            "java.time.zone.HijrahChronology"
        ],
        "Method": []
    },
    "16": {
        "Package": "java.lang",
        "Interface": "Iterable",
        "Superinterface": null,
        "Implementing Class": [
            "java.beans.beancontext.BeanContext",
            "java.beans.beancontext.BeanContextServices",
            "java.util.concurrent.BlockingDeque",
            "java.util.concurrent.BlockingQueue",
            "java.util.Collection",
            "java.util.Deque",
            "java.nio.file.DirectoryStream",
            "com.sun.jdi.event.EventSet",
            "java.util.List",
            "java.util.NavigableSet",
            "javax.xml.crypto.NodeSetData",
            "java.nio.file.Path",
            "java.util.Queue",
            "java.nio.file.SecureDirectoryStream",
            "java.util.Set",
            "java.util.SortedSet",
            "java.util.concurrent.TransferQueue",
            "javax.xml.xpath.XPathNodes"
        ],
        "Subinterface": [
            "java.util.AbstractCollection",
            "java.util.AbstractList",
            "java.util.AbstractQueue",
            "java.util.AbstractSequentialList",
            "java.util.AbstractSet",
            "java.util.concurrent.ArrayBlockingQueue",
            "java.util.ArrayDeque",
            "java.util.ArrayList",
            "javax.management.AttributeList",
            "java.sql.BatchUpdateException",
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport",
            "java.util.concurrent.ConcurrentHashMap.KeySetView",
            "java.util.concurrent.ConcurrentLinkedDeque",
            "java.util.concurrent.ConcurrentLinkedQueue",
            "java.util.concurrent.ConcurrentSkipListSet",
            "java.util.concurrent.CopyOnWriteArrayList",
            "java.util.concurrent.CopyOnWriteArraySet",
            "java.sql.DataTruncation",
            "java.util.concurrent.DelayQueue",
            "com.sun.source.util.DocTreePath",
            "java.util.EnumSet",
            "java.util.HashSet",
            "javax.print.attribute.standard.JobStateReasons",
            "java.util.concurrent.LinkedBlockingDeque",
            "java.util.concurrent.LinkedBlockingQueue",
            "java.util.LinkedHashSet",
            "java.util.LinkedList",
            "java.util.concurrent.LinkedTransferQueue",
            "java.util.concurrent.PriorityBlockingQueue",
            "java.util.PriorityQueue",
            "javax.management.relation.RoleList",
            "javax.management.relation.RoleUnresolvedList",
            "javax.sql.rowset.RowSetWarning",
            "javax.sql.rowset.serial.SerialException",
            "java.util.ServiceLoader",
            "java.sql.SQLClientInfoException",
            "java.sql.SQLDataException",
            "java.sql.SQLException",
            "java.sql.SQLFeatureNotSupportedException",
            "java.sql.SQLIntegrityConstraintViolationException",
            "java.sql.SQLInvalidAuthorizationSpecException",
            "java.sql.SQLNonTransientConnectionException",
            "java.sql.SQLNonTransientException",
            "java.sql.SQLRecoverableException",
            "java.sql.SQLSyntaxErrorException",
            "java.sql.SQLTimeoutException",
            "java.sql.SQLTransactionRollbackException",
            "java.sql.SQLTransientConnectionException",
            "java.sql.SQLTransientException",
            "java.sql.SQLWarning",
            "java.util.Stack",
            "javax.sql.rowset.spi.SyncFactoryException",
            "java.util.concurrent.SynchronousQueue",
            "javax.sql.rowset.spi.SyncProviderException",
            "com.sun.source.util.TreePath",
            "java.util.TreeSet",
            "java.util.Vector"
        ],
        "Method": [
            {
                "iterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "forEach": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "spliterator": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "17": {
        "Package": "java.lang",
        "Interface": "ProcessHandle",
        "Superinterface": [
            "java.lang.Comparable",
            "java.lang.ProcessHandle"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "pid": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "of": {
                    "Parameter": {
                        "pid": "long"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "current": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "parent": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "children": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "descendants": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "allProcesses": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "info": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "onExit": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "supportsNormalTermination": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "destroy": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "destroyForcibly": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "isAlive": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "other": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "compareTo": {
                    "Parameter": {
                        "other": "ProcessHandle"
                    },
                    "Throw": "java.lang.ClassCastException"
                }
            }
        ]
    },
    "18": {
        "Package": "java.lang",
        "Interface": "ProcessHandle.Info",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "command": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "commandLine": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "arguments": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "startInstant": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "totalCpuDuration": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "user": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "19": {
        "Package": "java.lang",
        "Interface": "Readable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.io.BufferedReader",
            "java.io.CharArrayReader",
            "java.nio.CharBuffer",
            "java.io.FileReader",
            "java.io.FilterReader",
            "java.io.InputStreamReader",
            "java.io.LineNumberReader",
            "java.io.PipedReader",
            "java.io.PushbackReader",
            "java.io.Reader",
            "java.io.StringReader"
        ],
        "Method": [
            {
                "read": {
                    "Parameter": {
                        "cb": "CharBuffer"
                    },
                    "Throw": "java.nio.ReadOnlyBufferException"
                }
            }
        ]
    },
    "20": {
        "Package": "java.lang",
        "Interface": "Runnable",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.concurrent.RunnableFuture",
            "java.util.concurrent.RunnableScheduledFuture"
        ],
        "Subinterface": [
            "javax.swing.text.AsyncBoxView.ChildState",
            "java.util.concurrent.ForkJoinWorkerThread",
            "java.util.concurrent.FutureTask",
            "java.awt.image.renderable.RenderableImageProducer",
            "javax.swing.SwingWorker",
            "java.lang.Thread",
            "java.util.TimerTask"
        ],
        "Method": [
            {
                "run": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "21": {
        "Package": "java.lang",
        "Interface": "StackWalker.StackFrame",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getClassName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMethodName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDeclaringClass": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getMethodType": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getDescriptor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getByteCodeIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFileName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLineNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isNativeMethod": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toStackTraceElement": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "22": {
        "Package": "java.lang",
        "Interface": "System.Logger",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isLoggable": {
                    "Parameter": {
                        "level": "System.Logger.Level"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "log": {
                    "Parameter": {
                        "level": "System.Logger.Level",
                        "msg": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "log": {
                    "Parameter": {
                        "level": "System.Logger.Level",
                        "": "Supplier"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "log": {
                    "Parameter": {
                        "level": "System.Logger.Level",
                        "obj": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "log": {
                    "Parameter": {
                        "level": "System.Logger.Level",
                        "msg": "String",
                        "thrown": "Throwable"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "log": {
                    "Parameter": {
                        "level": "System.Logger.Level",
                        "": "Supplier",
                        "thrown": "Throwable"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "log": {
                    "Parameter": {
                        "level": "System.Logger.Level",
                        "format": "String",
                        "params": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "log": {
                    "Parameter": {
                        "level": "System.Logger.Level",
                        "bundle": "ResourceBundle",
                        "msg": "String",
                        "thrown": "Throwable"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "log": {
                    "Parameter": {
                        "level": "System.Logger.Level",
                        "bundle": "ResourceBundle",
                        "format": "String",
                        "params": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "23": {
        "Package": "java.lang",
        "Interface": "Thread.UncaughtExceptionHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.lang.ThreadGroup"
        ],
        "Method": [
            {
                "uncaughtException": {
                    "Parameter": {
                        "t": "Thread",
                        "e": "Throwable"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "24": {
        "Package": "java.lang.annotation",
        "Interface": "Annotation",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "annotationType": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "25": {
        "Package": "java.lang.constant",
        "Interface": "ClassDesc",
        "Superinterface": [
            "java.lang.constant.ConstantDesc",
            "java.lang.invoke.TypeDescriptor",
            "java.lang.invoke.TypeDescriptor.OfField",
            "java.lang.constant.ClassDesc"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "of": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "of": {
                    "Parameter": {
                        "packageName": "String",
                        "className": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "ofDescriptor": {
                    "Parameter": {
                        "descriptor": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "arrayType": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "arrayType": {
                    "Parameter": {
                        "rank": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "nested": {
                    "Parameter": {
                        "nestedName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "nested": {
                    "Parameter": {
                        "firstNestedName": "String",
                        "moreNestedNames": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "isArray": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isPrimitive": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isClassOrInterface": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "componentType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "packageName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "displayName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "descriptorString": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "26": {
        "Package": "java.lang.constant",
        "Interface": "Constable",
        "Superinterface": null,
        "Implementing Class": [
            "jdk.incubator.foreign.MemoryLayout"
        ],
        "Subinterface": null,
        "Method": [
            {
                "describeConstable": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "27": {
        "Package": "java.lang.constant",
        "Interface": "ConstantDesc",
        "Superinterface": null,
        "Implementing Class": [
            "java.lang.constant.ClassDesc",
            "java.lang.constant.DirectMethodHandleDesc",
            "java.lang.constant.MethodHandleDesc",
            "java.lang.constant.MethodTypeDesc"
        ],
        "Subinterface": null,
        "Method": [
            {
                "resolveConstantDesc": {
                    "Parameter": {
                        "lookup": "MethodHandles.Lookup"
                    },
                    "Throw": "java.lang.LinkageError"
                }
            }
        ]
    },
    "28": {
        "Package": "java.lang.constant",
        "Interface": "DirectMethodHandleDesc",
        "Superinterface": [
            "java.lang.constant.ConstantDesc",
            "java.lang.constant.MethodHandleDesc"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "kind": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "refKind": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isOwnerInterface": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "owner": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "methodName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "lookupDescriptor": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "29": {
        "Package": "java.lang.constant",
        "Interface": "MethodHandleDesc",
        "Superinterface": [
            "java.lang.constant.ConstantDesc"
        ],
        "Implementing Class": [
            "java.lang.constant.DirectMethodHandleDesc"
        ],
        "Subinterface": null,
        "Method": [
            {
                "of": {
                    "Parameter": {
                        "kind": "DirectMethodHandleDesc.Kind",
                        "owner": "ClassDesc",
                        "name": "String",
                        "lookupDescriptor": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "ofMethod": {
                    "Parameter": {
                        "kind": "DirectMethodHandleDesc.Kind",
                        "owner": "ClassDesc",
                        "name": "String",
                        "lookupMethodType": "MethodTypeDesc"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "ofField": {
                    "Parameter": {
                        "kind": "DirectMethodHandleDesc.Kind",
                        "owner": "ClassDesc",
                        "fieldName": "String",
                        "fieldType": "ClassDesc"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "ofConstructor": {
                    "Parameter": {
                        "owner": "ClassDesc",
                        "paramTypes": "ClassDesc"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "asType": {
                    "Parameter": {
                        "type": "MethodTypeDesc"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "invocationType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "30": {
        "Package": "java.lang.constant",
        "Interface": "MethodTypeDesc",
        "Superinterface": [
            "java.lang.constant.ConstantDesc",
            "java.lang.invoke.TypeDescriptor",
            "java.lang.invoke.TypeDescriptor.OfMethod",
            "java.lang.constant.ClassDesc",
            "java.lang.constant.MethodTypeDesc"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "ofDescriptor": {
                    "Parameter": {
                        "descriptor": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "of": {
                    "Parameter": {
                        "returnDesc": "ClassDesc",
                        "paramDescs": "ClassDesc"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "returnType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "parameterCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "parameterType": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "parameterList": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "parameterArray": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "changeReturnType": {
                    "Parameter": {
                        "returnType": "ClassDesc"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "changeParameterType": {
                    "Parameter": {
                        "index": "int",
                        "paramType": "ClassDesc"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "dropParameterTypes": {
                    "Parameter": {
                        "start": "int",
                        "end": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "insertParameterTypes": {
                    "Parameter": {
                        "pos": "int",
                        "paramTypes": "ClassDesc"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "descriptorString": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "displayDescriptor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "31": {
        "Package": "java.lang.invoke",
        "Interface": "MethodHandleInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getReferenceKind": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDeclaringClass": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMethodType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "reflectAs": {
                    "Parameter": {
                        "Texpected": "Class",
                        "lookup": "MethodHandles.Lookup"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getModifiers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isVarArgs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "referenceKindToString": {
                    "Parameter": {
                        "referenceKind": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "toString": {
                    "Parameter": {
                        "kind": "int",
                        "defc": "Class",
                        "name": "String",
                        "type": "MethodType"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "32": {
        "Package": "java.lang.invoke",
        "Interface": "TypeDescriptor",
        "Superinterface": null,
        "Implementing Class": [
            "java.lang.constant.ClassDesc",
            "java.lang.constant.MethodTypeDesc",
            "java.lang.invoke.TypeDescriptor.OfField",
            "java.lang.invoke.TypeDescriptor.OfMethod"
        ],
        "Subinterface": [
            "java.lang.Class",
            "java.lang.invoke.MethodType"
        ],
        "Method": [
            {
                "descriptorString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "33": {
        "Package": "java.lang.invoke",
        "Interface": "TypeDescriptor.OfField",
        "Superinterface": [
            "java.lang.invoke.TypeDescriptor"
        ],
        "Implementing Class": [
            "java.lang.constant.ClassDesc"
        ],
        "Subinterface": [
            "java.lang.Class"
        ],
        "Method": [
            {
                "isArray": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isPrimitive": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "componentType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "arrayType": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "34": {
        "Package": "java.lang.invoke",
        "Interface": "TypeDescriptor.OfMethod",
        "Superinterface": [
            "java.lang.invoke.TypeDescriptor"
        ],
        "Implementing Class": [
            "java.lang.constant.MethodTypeDesc"
        ],
        "Subinterface": [
            "java.lang.invoke.MethodType"
        ],
        "Method": [
            {
                "parameterCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "parameterType": {
                    "Parameter": {
                        "i": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "returnType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "parameterArray": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "parameterList": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "dropParameterTypes": {
                    "Parameter": {
                        "start": "int",
                        "end": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            }
        ]
    },
    "35": {
        "Package": "java.lang.module",
        "Interface": "ModuleFinder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "find": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "findAll": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "ofSystem": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "of": {
                    "Parameter": {
                        "entries": "Path"
                    },
                    "Throw": []
                }
            },
            {
                "compose": {
                    "Parameter": {
                        "finders": "ModuleFinder"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "36": {
        "Package": "java.lang.module",
        "Interface": "ModuleReader",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "find": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "open": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "read": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.OutOfMemoryError"
                }
            },
            {
                "release": {
                    "Parameter": {
                        "bb": "ByteBuffer"
                    },
                    "Throw": []
                }
            },
            {
                "list": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "37": {
        "Package": "java.lang.ref",
        "Interface": "Cleaner.Cleanable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "clean": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "38": {
        "Package": "java.lang.reflect",
        "Interface": "AnnotatedArrayType",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement",
            "java.lang.reflect.AnnotatedType"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAnnotatedGenericComponentType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotatedOwnerType": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "39": {
        "Package": "java.lang.reflect",
        "Interface": "AnnotatedElement",
        "Superinterface": null,
        "Implementing Class": [
            "java.lang.reflect.AnnotatedArrayType",
            "java.lang.reflect.AnnotatedParameterizedType",
            "java.lang.reflect.AnnotatedType",
            "java.lang.reflect.AnnotatedTypeVariable",
            "java.lang.reflect.AnnotatedWildcardType",
            "java.lang.reflect.GenericDeclaration",
            "java.lang.reflect.TypeVariable"
        ],
        "Subinterface": [
            "java.lang.reflect.AccessibleObject",
            "java.lang.Class",
            "java.lang.reflect.Constructor",
            "java.lang.reflect.Executable",
            "java.lang.reflect.Field",
            "java.lang.reflect.Method",
            "java.lang.Module",
            "java.lang.Package",
            "java.lang.reflect.Parameter",
            "java.lang.reflect.RecordComponent"
        ],
        "Method": [
            {
                "isAnnotationPresent": {
                    "Parameter": {
                        "extends": "Class"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getAnnotation": {
                    "Parameter": {
                        "TannotationClass": "Class"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getAnnotations": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotationsByType": {
                    "Parameter": {
                        "TannotationClass": "Class"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getDeclaredAnnotation": {
                    "Parameter": {
                        "TannotationClass": "Class"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getDeclaredAnnotationsByType": {
                    "Parameter": {
                        "TannotationClass": "Class"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getDeclaredAnnotations": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "40": {
        "Package": "java.lang.reflect",
        "Interface": "AnnotatedParameterizedType",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement",
            "java.lang.reflect.AnnotatedType"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAnnotatedActualTypeArguments": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotatedOwnerType": {
                    "Parameter": {},
                    "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
                }
            }
        ]
    },
    "41": {
        "Package": "java.lang.reflect",
        "Interface": "AnnotatedType",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement"
        ],
        "Implementing Class": [
            "java.lang.reflect.AnnotatedArrayType",
            "java.lang.reflect.AnnotatedParameterizedType",
            "java.lang.reflect.AnnotatedTypeVariable",
            "java.lang.reflect.AnnotatedWildcardType"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getAnnotatedOwnerType": {
                    "Parameter": {},
                    "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotation": {
                    "Parameter": {
                        "TannotationClass": "Class"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getAnnotations": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDeclaredAnnotations": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "42": {
        "Package": "java.lang.reflect",
        "Interface": "AnnotatedTypeVariable",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement",
            "java.lang.reflect.AnnotatedType"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAnnotatedBounds": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotatedOwnerType": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "43": {
        "Package": "java.lang.reflect",
        "Interface": "AnnotatedWildcardType",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement",
            "java.lang.reflect.AnnotatedType"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAnnotatedLowerBounds": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotatedUpperBounds": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotatedOwnerType": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "44": {
        "Package": "java.lang.reflect",
        "Interface": "GenericArrayType",
        "Superinterface": [
            "java.lang.reflect.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getGenericComponentType": {
                    "Parameter": {},
                    "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
                }
            }
        ]
    },
    "45": {
        "Package": "java.lang.reflect",
        "Interface": "GenericDeclaration",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.lang.Class",
            "java.lang.reflect.Constructor",
            "java.lang.reflect.Executable",
            "java.lang.reflect.Method"
        ],
        "Method": [
            {
                "getTypeParameters": {
                    "Parameter": {},
                    "Throw": "java.lang.reflect.GenericSignatureFormatError"
                }
            }
        ]
    },
    "46": {
        "Package": "java.lang.reflect",
        "Interface": "InvocationHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.CompositeDataInvocationHandler",
            "java.beans.EventHandler",
            "javax.management.MBeanServerInvocationHandler",
            "java.rmi.server.RemoteObjectInvocationHandler"
        ],
        "Method": [
            {
                "invoke": {
                    "Parameter": {
                        "proxy": "Object",
                        "method": "Method",
                        "args": "Object"
                    },
                    "Throw": "java.lang.Throwable"
                }
            },
            {
                "invokeDefault": {
                    "Parameter": {
                        "proxy": "Object",
                        "method": "Method",
                        "args": "Object"
                    },
                    "Throw": "java.lang.Throwable"
                }
            }
        ]
    },
    "47": {
        "Package": "java.lang.reflect",
        "Interface": "Member",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.lang.reflect.Constructor",
            "java.lang.reflect.Executable",
            "java.lang.reflect.Field",
            "java.lang.reflect.Method"
        ],
        "Method": [
            {
                "getDeclaringClass": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getModifiers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSynthetic": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "48": {
        "Package": "java.lang.reflect",
        "Interface": "ParameterizedType",
        "Superinterface": [
            "java.lang.reflect.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getActualTypeArguments": {
                    "Parameter": {},
                    "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
                }
            },
            {
                "getRawType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getOwnerType": {
                    "Parameter": {},
                    "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
                }
            }
        ]
    },
    "49": {
        "Package": "java.lang.reflect",
        "Interface": "Type",
        "Superinterface": null,
        "Implementing Class": [
            "java.lang.reflect.GenericArrayType",
            "java.lang.reflect.ParameterizedType",
            "java.lang.reflect.TypeVariable",
            "java.lang.reflect.WildcardType"
        ],
        "Subinterface": [
            "java.lang.Class"
        ],
        "Method": [
            {
                "getTypeName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "50": {
        "Package": "java.lang.reflect",
        "Interface": "TypeVariable",
        "Superinterface": [
            "java.lang.reflect.AnnotatedElement",
            "java.lang.reflect.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBounds": {
                    "Parameter": {},
                    "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
                }
            },
            {
                "getGenericDeclaration": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotatedBounds": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "51": {
        "Package": "java.lang.reflect",
        "Interface": "WildcardType",
        "Superinterface": [
            "java.lang.reflect.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getUpperBounds": {
                    "Parameter": {},
                    "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
                }
            },
            {
                "getLowerBounds": {
                    "Parameter": {},
                    "Throw": "java.lang.reflect.MalformedParameterizedTypeException"
                }
            }
        ]
    },
    "52": {
        "Package": "java.net",
        "Interface": "ContentHandlerFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createContentHandler": {
                    "Parameter": {
                        "mimetype": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "53": {
        "Package": "java.net",
        "Interface": "CookiePolicy",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "shouldAccept": {
                    "Parameter": {
                        "uri": "URI",
                        "cookie": "HttpCookie"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "54": {
        "Package": "java.net",
        "Interface": "CookieStore",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "add": {
                    "Parameter": {
                        "uri": "URI",
                        "cookie": "HttpCookie"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "uri": "URI"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getCookies": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getURIs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "uri": "URI",
                        "cookie": "HttpCookie"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "removeAll": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "55": {
        "Package": "java.net",
        "Interface": "DatagramSocketImplFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createDatagramSocketImpl": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "56": {
        "Package": "java.net",
        "Interface": "FileNameMap",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getContentTypeFor": {
                    "Parameter": {
                        "fileName": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "57": {
        "Package": "java.net",
        "Interface": "ProtocolFamily",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "58": {
        "Package": "java.net",
        "Interface": "SocketImplFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createSocketImpl": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "59": {
        "Package": "java.net",
        "Interface": "SocketOption",
        "Superinterface": null,
        "Implementing Class": [
            "com.sun.nio.sctp.SctpSocketOption"
        ],
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "type": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "60": {
        "Package": "java.net",
        "Interface": "SocketOptions",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.net.DatagramSocketImpl",
            "java.net.SocketImpl"
        ],
        "Method": [
            {
                "setOption": {
                    "Parameter": {
                        "optID": "int",
                        "value": "Object"
                    },
                    "Throw": "java.net.SocketException"
                }
            },
            {
                "getOption": {
                    "Parameter": {
                        "optID": "int"
                    },
                    "Throw": "java.net.SocketException"
                }
            }
        ]
    },
    "61": {
        "Package": "java.net",
        "Interface": "URLStreamHandlerFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.net.spi.URLStreamHandlerProvider"
        ],
        "Method": [
            {
                "createURLStreamHandler": {
                    "Parameter": {
                        "protocol": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "62": {
        "Package": "java.net.spi",
        "Interface": "InetAddressResolver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "lookupByName": {
                    "Parameter": {
                        "host": "String",
                        "lookupPolicy": "InetAddressResolver.LookupPolicy"
                    },
                    "Throw": "java.net.UnknownHostException"
                }
            },
            {
                "lookupByAddress": {
                    "Parameter": {
                        "addr": "byte"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "63": {
        "Package": "java.net.spi",
        "Interface": "InetAddressResolverProvider.Configuration",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "builtinResolver": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "lookupLocalHostName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "64": {
        "Package": "java.nio.channels",
        "Interface": "AsynchronousByteChannel",
        "Superinterface": [
            "java.nio.channels.AsynchronousChannel",
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.channels.AsynchronousSocketChannel"
        ],
        "Method": [
            {
                "read": {
                    "Parameter": {
                        "dst": "ByteBuffer"
                    },
                    "Throw": "java.nio.channels.ReadPendingException"
                }
            },
            {
                "write": {
                    "Parameter": {
                        "src": "ByteBuffer"
                    },
                    "Throw": "java.nio.channels.WritePendingException"
                }
            }
        ]
    },
    "65": {
        "Package": "java.nio.channels",
        "Interface": "AsynchronousChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable"
        ],
        "Implementing Class": [
            "java.nio.channels.AsynchronousByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.AsynchronousFileChannel",
            "java.nio.channels.AsynchronousServerSocketChannel",
            "java.nio.channels.AsynchronousSocketChannel"
        ],
        "Method": [
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "66": {
        "Package": "java.nio.channels",
        "Interface": "ByteChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable",
            "java.nio.channels.ReadableByteChannel",
            "java.nio.channels.WritableByteChannel"
        ],
        "Implementing Class": [
            "java.nio.channels.SeekableByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": []
    },
    "67": {
        "Package": "java.nio.channels",
        "Interface": "Channel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable"
        ],
        "Implementing Class": [
            "java.nio.channels.AsynchronousByteChannel",
            "java.nio.channels.AsynchronousChannel",
            "java.nio.channels.ByteChannel",
            "java.nio.channels.GatheringByteChannel",
            "java.nio.channels.InterruptibleChannel",
            "java.nio.channels.MulticastChannel",
            "java.nio.channels.NetworkChannel",
            "java.nio.channels.ReadableByteChannel",
            "java.nio.channels.ScatteringByteChannel",
            "java.nio.channels.SeekableByteChannel",
            "java.nio.channels.WritableByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.spi.AbstractInterruptibleChannel",
            "java.nio.channels.spi.AbstractSelectableChannel",
            "java.nio.channels.AsynchronousFileChannel",
            "java.nio.channels.AsynchronousServerSocketChannel",
            "java.nio.channels.AsynchronousSocketChannel",
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.Pipe.SinkChannel",
            "java.nio.channels.Pipe.SourceChannel",
            "com.sun.nio.sctp.SctpChannel",
            "com.sun.nio.sctp.SctpMultiChannel",
            "com.sun.nio.sctp.SctpServerChannel",
            "java.nio.channels.SelectableChannel",
            "java.nio.channels.ServerSocketChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": [
            {
                "isOpen": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "68": {
        "Package": "java.nio.channels",
        "Interface": "CompletionHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "69": {
        "Package": "java.nio.channels",
        "Interface": "GatheringByteChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable",
            "java.nio.channels.WritableByteChannel"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.Pipe.SinkChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": [
            {
                "write": {
                    "Parameter": {
                        "srcs": "ByteBuffer",
                        "offset": "int",
                        "length": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "write": {
                    "Parameter": {
                        "srcs": "ByteBuffer"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "70": {
        "Package": "java.nio.channels",
        "Interface": "InterruptibleChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.channels.spi.AbstractInterruptibleChannel",
            "java.nio.channels.spi.AbstractSelectableChannel",
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.Pipe.SinkChannel",
            "java.nio.channels.Pipe.SourceChannel",
            "com.sun.nio.sctp.SctpChannel",
            "com.sun.nio.sctp.SctpMultiChannel",
            "com.sun.nio.sctp.SctpServerChannel",
            "java.nio.channels.SelectableChannel",
            "java.nio.channels.ServerSocketChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": [
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "71": {
        "Package": "java.nio.channels",
        "Interface": "MulticastChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable",
            "java.nio.channels.NetworkChannel"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.channels.DatagramChannel"
        ],
        "Method": [
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "join": {
                    "Parameter": {
                        "group": "InetAddress",
                        "interf": "NetworkInterface"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "join": {
                    "Parameter": {
                        "group": "InetAddress",
                        "interf": "NetworkInterface",
                        "source": "InetAddress"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "72": {
        "Package": "java.nio.channels",
        "Interface": "NetworkChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable"
        ],
        "Implementing Class": [
            "java.nio.channels.MulticastChannel"
        ],
        "Subinterface": [
            "java.nio.channels.AsynchronousServerSocketChannel",
            "java.nio.channels.AsynchronousSocketChannel",
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.ServerSocketChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": [
            {
                "bind": {
                    "Parameter": {
                        "local": "SocketAddress"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getLocalAddress": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getOption": {
                    "Parameter": {
                        "Tname": "SocketOption"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "supportedOptions": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "73": {
        "Package": "java.nio.channels",
        "Interface": "ReadableByteChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable"
        ],
        "Implementing Class": [
            "java.nio.channels.ByteChannel",
            "java.nio.channels.ScatteringByteChannel",
            "java.nio.channels.SeekableByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.Pipe.SourceChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": [
            {
                "read": {
                    "Parameter": {
                        "dst": "ByteBuffer"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "74": {
        "Package": "java.nio.channels",
        "Interface": "ScatteringByteChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable",
            "java.nio.channels.ReadableByteChannel"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.Pipe.SourceChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": [
            {
                "read": {
                    "Parameter": {
                        "dsts": "ByteBuffer",
                        "offset": "int",
                        "length": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "read": {
                    "Parameter": {
                        "dsts": "ByteBuffer"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "75": {
        "Package": "java.nio.channels",
        "Interface": "SeekableByteChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.ByteChannel",
            "java.nio.channels.Channel",
            "java.io.Closeable",
            "java.nio.channels.ReadableByteChannel",
            "java.nio.channels.WritableByteChannel"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.channels.FileChannel"
        ],
        "Method": [
            {
                "read": {
                    "Parameter": {
                        "dst": "ByteBuffer"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "write": {
                    "Parameter": {
                        "src": "ByteBuffer"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "position": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "position": {
                    "Parameter": {
                        "newPosition": "long"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "size": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "truncate": {
                    "Parameter": {
                        "size": "long"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "76": {
        "Package": "java.nio.channels",
        "Interface": "WritableByteChannel",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.nio.channels.Channel",
            "java.io.Closeable"
        ],
        "Implementing Class": [
            "java.nio.channels.ByteChannel",
            "java.nio.channels.GatheringByteChannel",
            "java.nio.channels.SeekableByteChannel"
        ],
        "Subinterface": [
            "java.nio.channels.DatagramChannel",
            "java.nio.channels.FileChannel",
            "java.nio.channels.Pipe.SinkChannel",
            "java.nio.channels.SocketChannel"
        ],
        "Method": [
            {
                "write": {
                    "Parameter": {
                        "src": "ByteBuffer"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "77": {
        "Package": "java.nio.file",
        "Interface": "DirectoryStream.Filter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "78": {
        "Package": "java.nio.file",
        "Interface": "DirectoryStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.lang.Iterable"
        ],
        "Implementing Class": [
            "java.nio.file.SecureDirectoryStream"
        ],
        "Subinterface": null,
        "Method": [
            {
                "iterator": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            }
        ]
    },
    "79": {
        "Package": "java.nio.file",
        "Interface": "FileVisitor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.nio.file.SimpleFileVisitor"
        ],
        "Method": []
    },
    "80": {
        "Package": "java.nio.file",
        "Interface": "Path",
        "Superinterface": [
            "java.lang.Comparable",
            "java.nio.file.Path",
            "java.lang.Iterable",
            "java.nio.file.Path",
            "java.nio.file.Watchable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "of": {
                    "Parameter": {
                        "first": "String",
                        "more": "String"
                    },
                    "Throw": "java.nio.file.InvalidPathException"
                }
            },
            {
                "of": {
                    "Parameter": {
                        "uri": "URI"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getFileSystem": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isAbsolute": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRoot": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFileName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNameCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "subpath": {
                    "Parameter": {
                        "beginIndex": "int",
                        "endIndex": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "startsWith": {
                    "Parameter": {
                        "other": "Path"
                    },
                    "Throw": []
                }
            },
            {
                "startsWith": {
                    "Parameter": {
                        "other": "String"
                    },
                    "Throw": "java.nio.file.InvalidPathException"
                }
            },
            {
                "endsWith": {
                    "Parameter": {
                        "other": "Path"
                    },
                    "Throw": []
                }
            },
            {
                "endsWith": {
                    "Parameter": {
                        "other": "String"
                    },
                    "Throw": "java.nio.file.InvalidPathException"
                }
            },
            {
                "normalize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "resolve": {
                    "Parameter": {
                        "other": "Path"
                    },
                    "Throw": []
                }
            },
            {
                "resolve": {
                    "Parameter": {
                        "other": "String"
                    },
                    "Throw": "java.nio.file.InvalidPathException"
                }
            },
            {
                "resolveSibling": {
                    "Parameter": {
                        "other": "Path"
                    },
                    "Throw": []
                }
            },
            {
                "resolveSibling": {
                    "Parameter": {
                        "other": "String"
                    },
                    "Throw": "java.nio.file.InvalidPathException"
                }
            },
            {
                "relativize": {
                    "Parameter": {
                        "other": "Path"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "toUri": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "toAbsolutePath": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "toRealPath": {
                    "Parameter": {
                        "options": "LinkOption"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "toFile": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "register": {
                    "Parameter": {
                        "watcher": "WatchService",
                        "events": "WatchEvent.Kind",
                        "modifiers": "WatchEvent.Modifier"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "register": {
                    "Parameter": {
                        "watcher": "WatchService",
                        "events": "WatchEvent.Kind"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "iterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "compareTo": {
                    "Parameter": {
                        "other": "Path"
                    },
                    "Throw": "java.lang.ClassCastException"
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "other": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "81": {
        "Package": "java.nio.file",
        "Interface": "PathMatcher",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "matches": {
                    "Parameter": {
                        "path": "Path"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "82": {
        "Package": "java.nio.file",
        "Interface": "SecureDirectoryStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.nio.file.DirectoryStream",
            "java.lang.Iterable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getFileAttributeView": {
                    "Parameter": {
                        "Vtype": "Class"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "83": {
        "Package": "java.nio.file",
        "Interface": "Watchable",
        "Superinterface": null,
        "Implementing Class": [
            "java.nio.file.Path"
        ],
        "Subinterface": null,
        "Method": [
            {
                "register": {
                    "Parameter": {
                        "watcher": "WatchService",
                        "events": "WatchEvent.Kind",
                        "modifiers": "WatchEvent.Modifier"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "register": {
                    "Parameter": {
                        "watcher": "WatchService",
                        "events": "WatchEvent.Kind"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "84": {
        "Package": "java.nio.file",
        "Interface": "WatchEvent",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "kind": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "count": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "context": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "85": {
        "Package": "java.nio.file",
        "Interface": "WatchEvent.Kind",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "type": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "86": {
        "Package": "java.nio.file",
        "Interface": "WatchEvent.Modifier",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "87": {
        "Package": "java.nio.file",
        "Interface": "WatchKey",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isValid": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "pollEvents": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "reset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "cancel": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "watchable": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "88": {
        "Package": "java.nio.file",
        "Interface": "WatchService",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "poll": {
                    "Parameter": {},
                    "Throw": "java.nio.file.ClosedWatchServiceException"
                }
            },
            {
                "poll": {
                    "Parameter": {
                        "timeout": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "take": {
                    "Parameter": {},
                    "Throw": "java.lang.InterruptedException"
                }
            }
        ]
    },
    "89": {
        "Package": "java.nio.file.attribute",
        "Interface": "AclFileAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView",
            "java.nio.file.attribute.FileAttributeView",
            "java.nio.file.attribute.FileOwnerAttributeView"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAcl": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setAcl": {
                    "Parameter": {
                        "": "List"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "90": {
        "Package": "java.nio.file.attribute",
        "Interface": "AttributeView",
        "Superinterface": null,
        "Implementing Class": [
            "java.nio.file.attribute.AclFileAttributeView",
            "java.nio.file.attribute.BasicFileAttributeView",
            "java.nio.file.attribute.DosFileAttributeView",
            "java.nio.file.attribute.FileAttributeView",
            "java.nio.file.attribute.FileOwnerAttributeView",
            "java.nio.file.attribute.FileStoreAttributeView",
            "java.nio.file.attribute.PosixFileAttributeView",
            "java.nio.file.attribute.UserDefinedFileAttributeView"
        ],
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "91": {
        "Package": "java.nio.file.attribute",
        "Interface": "BasicFileAttributes",
        "Superinterface": null,
        "Implementing Class": [
            "java.nio.file.attribute.DosFileAttributes",
            "java.nio.file.attribute.PosixFileAttributes"
        ],
        "Subinterface": null,
        "Method": [
            {
                "lastModifiedTime": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "lastAccessTime": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "creationTime": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isRegularFile": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDirectory": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSymbolicLink": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isOther": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "fileKey": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "92": {
        "Package": "java.nio.file.attribute",
        "Interface": "BasicFileAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView",
            "java.nio.file.attribute.FileAttributeView"
        ],
        "Implementing Class": [
            "java.nio.file.attribute.DosFileAttributeView",
            "java.nio.file.attribute.PosixFileAttributeView"
        ],
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "readAttributes": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setTimes": {
                    "Parameter": {
                        "lastModifiedTime": "FileTime",
                        "lastAccessTime": "FileTime",
                        "createTime": "FileTime"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "93": {
        "Package": "java.nio.file.attribute",
        "Interface": "DosFileAttributes",
        "Superinterface": [
            "java.nio.file.attribute.BasicFileAttributes"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isReadOnly": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isHidden": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isArchive": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSystem": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "94": {
        "Package": "java.nio.file.attribute",
        "Interface": "DosFileAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView",
            "java.nio.file.attribute.BasicFileAttributeView",
            "java.nio.file.attribute.FileAttributeView"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "readAttributes": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setReadOnly": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setHidden": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setSystem": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setArchive": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "95": {
        "Package": "java.nio.file.attribute",
        "Interface": "FileAttribute",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "value": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "96": {
        "Package": "java.nio.file.attribute",
        "Interface": "FileAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView"
        ],
        "Implementing Class": [
            "java.nio.file.attribute.AclFileAttributeView",
            "java.nio.file.attribute.BasicFileAttributeView",
            "java.nio.file.attribute.DosFileAttributeView",
            "java.nio.file.attribute.FileOwnerAttributeView",
            "java.nio.file.attribute.PosixFileAttributeView",
            "java.nio.file.attribute.UserDefinedFileAttributeView"
        ],
        "Subinterface": null,
        "Method": []
    },
    "97": {
        "Package": "java.nio.file.attribute",
        "Interface": "FileOwnerAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView",
            "java.nio.file.attribute.FileAttributeView"
        ],
        "Implementing Class": [
            "java.nio.file.attribute.AclFileAttributeView",
            "java.nio.file.attribute.PosixFileAttributeView"
        ],
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getOwner": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setOwner": {
                    "Parameter": {
                        "owner": "UserPrincipal"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "98": {
        "Package": "java.nio.file.attribute",
        "Interface": "FileStoreAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "99": {
        "Package": "java.nio.file.attribute",
        "Interface": "GroupPrincipal",
        "Superinterface": [
            "java.security.Principal",
            "java.nio.file.attribute.UserPrincipal"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "100": {
        "Package": "java.nio.file.attribute",
        "Interface": "PosixFileAttributes",
        "Superinterface": [
            "java.nio.file.attribute.BasicFileAttributes"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "owner": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "group": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "permissions": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "101": {
        "Package": "java.nio.file.attribute",
        "Interface": "PosixFileAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView",
            "java.nio.file.attribute.BasicFileAttributeView",
            "java.nio.file.attribute.FileAttributeView",
            "java.nio.file.attribute.FileOwnerAttributeView"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "readAttributes": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setPermissions": {
                    "Parameter": {
                        "": "Set"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setGroup": {
                    "Parameter": {
                        "group": "GroupPrincipal"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "102": {
        "Package": "java.nio.file.attribute",
        "Interface": "UserDefinedFileAttributeView",
        "Superinterface": [
            "java.nio.file.attribute.AttributeView",
            "java.nio.file.attribute.FileAttributeView"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "list": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "size": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "read": {
                    "Parameter": {
                        "name": "String",
                        "dst": "ByteBuffer"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "write": {
                    "Parameter": {
                        "name": "String",
                        "src": "ByteBuffer"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "delete": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "103": {
        "Package": "java.nio.file.attribute",
        "Interface": "UserPrincipal",
        "Superinterface": [
            "java.security.Principal"
        ],
        "Implementing Class": [
            "java.nio.file.attribute.GroupPrincipal"
        ],
        "Subinterface": null,
        "Method": []
    },
    "104": {
        "Package": "java.security",
        "Interface": "AlgorithmConstraints",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "permits": {
                    "Parameter": {
                        "": "Set",
                        "algorithm": "String",
                        "parameters": "AlgorithmParameters"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "permits": {
                    "Parameter": {
                        "": "Set",
                        "key": "Key"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "permits": {
                    "Parameter": {
                        "": "Set",
                        "algorithm": "String",
                        "key": "Key",
                        "parameters": "AlgorithmParameters"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "105": {
        "Package": "java.security",
        "Interface": "Certificate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getGuarantor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrincipal": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPublicKey": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "encode": {
                    "Parameter": {
                        "stream": "OutputStream"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "decode": {
                    "Parameter": {
                        "stream": "InputStream"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getFormat": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {
                        "detailed": "boolean"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "106": {
        "Package": "java.security",
        "Interface": "DomainCombiner",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.security.auth.SubjectDomainCombiner"
        ],
        "Method": [
            {
                "combine": {
                    "Parameter": {
                        "currentDomains": "ProtectionDomain",
                        "assignedDomains": "ProtectionDomain"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "107": {
        "Package": "java.security",
        "Interface": "Guard",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.AllPermission",
            "com.sun.tools.attach.AttachPermission",
            "javax.sound.sampled.AudioPermission",
            "javax.security.auth.AuthPermission",
            "java.awt.AWTPermission",
            "java.security.BasicPermission",
            "javax.smartcardio.CardPermission",
            "javax.security.auth.kerberos.DelegationPermission",
            "java.io.FilePermission",
            "jdk.jfr.FlightRecorderPermission",
            "com.sun.security.jgss.InquireSecContextPermission",
            "com.sun.jdi.JDIPermission",
            "java.nio.file.LinkPermission",
            "java.util.logging.LoggingPermission",
            "java.lang.management.ManagementPermission",
            "javax.management.MBeanPermission",
            "javax.management.MBeanServerPermission",
            "javax.management.MBeanTrustPermission",
            "java.net.NetPermission",
            "jdk.net.NetworkPermission",
            "java.security.Permission",
            "javax.security.auth.PrivateCredentialPermission",
            "java.util.PropertyPermission",
            "java.lang.reflect.ReflectPermission",
            "java.lang.RuntimePermission",
            "java.security.SecurityPermission",
            "java.io.SerializablePermission",
            "javax.security.auth.kerberos.ServicePermission",
            "java.net.SocketPermission",
            "java.sql.SQLPermission",
            "javax.net.ssl.SSLPermission",
            "javax.management.remote.SubjectDelegationPermission",
            "java.security.UnresolvedPermission",
            "java.net.URLPermission"
        ],
        "Method": [
            {
                "checkGuard": {
                    "Parameter": {
                        "object": "Object"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "108": {
        "Package": "java.security",
        "Interface": "Key",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "javax.crypto.interfaces.DHPrivateKey",
            "javax.crypto.interfaces.DHPublicKey",
            "java.security.interfaces.DSAPrivateKey",
            "java.security.interfaces.DSAPublicKey",
            "java.security.interfaces.ECPrivateKey",
            "java.security.interfaces.ECPublicKey",
            "java.security.interfaces.EdECPrivateKey",
            "java.security.interfaces.EdECPublicKey",
            "javax.crypto.interfaces.PBEKey",
            "java.security.PrivateKey",
            "java.security.PublicKey",
            "java.security.interfaces.RSAMultiPrimePrivateCrtKey",
            "java.security.interfaces.RSAPrivateCrtKey",
            "java.security.interfaces.RSAPrivateKey",
            "java.security.interfaces.RSAPublicKey",
            "javax.crypto.SecretKey",
            "java.security.interfaces.XECPrivateKey",
            "java.security.interfaces.XECPublicKey"
        ],
        "Subinterface": [
            "javax.security.auth.kerberos.EncryptionKey",
            "javax.security.auth.kerberos.KerberosKey",
            "javax.crypto.spec.SecretKeySpec"
        ],
        "Method": [
            {
                "getAlgorithm": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFormat": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEncoded": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "109": {
        "Package": "java.security",
        "Interface": "KeyStore.Entry.Attribute",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.PKCS12Attribute"
        ],
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "110": {
        "Package": "java.security",
        "Interface": "KeyStore.Entry",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.KeyStore.PrivateKeyEntry",
            "java.security.KeyStore.SecretKeyEntry",
            "java.security.KeyStore.TrustedCertificateEntry"
        ],
        "Method": [
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "111": {
        "Package": "java.security",
        "Interface": "KeyStore.LoadStoreParameter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.DomainLoadStoreParameter"
        ],
        "Method": [
            {
                "getProtectionParameter": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "112": {
        "Package": "java.security",
        "Interface": "Principal",
        "Superinterface": null,
        "Implementing Class": [
            "java.nio.file.attribute.GroupPrincipal",
            "java.nio.file.attribute.UserPrincipal"
        ],
        "Subinterface": [
            "com.sun.net.httpserver.HttpPrincipal",
            "java.security.Identity",
            "java.security.IdentityScope",
            "javax.management.remote.JMXPrincipal",
            "javax.security.auth.kerberos.KerberosPrincipal",
            "com.sun.security.auth.LdapPrincipal",
            "com.sun.security.auth.NTDomainPrincipal",
            "com.sun.security.auth.NTSid",
            "com.sun.security.auth.NTSidDomainPrincipal",
            "com.sun.security.auth.NTSidGroupPrincipal",
            "com.sun.security.auth.NTSidPrimaryGroupPrincipal",
            "com.sun.security.auth.NTSidUserPrincipal",
            "com.sun.security.auth.NTUserPrincipal",
            "java.security.Signer",
            "com.sun.security.auth.UnixNumericGroupPrincipal",
            "com.sun.security.auth.UnixNumericUserPrincipal",
            "com.sun.security.auth.UnixPrincipal",
            "com.sun.security.auth.UserPrincipal",
            "javax.security.auth.x500.X500Principal"
        ],
        "Method": [
            {
                "equals": {
                    "Parameter": {
                        "another": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "implies": {
                    "Parameter": {
                        "subject": "Subject"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "113": {
        "Package": "java.security",
        "Interface": "PrivateKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.Key",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "javax.crypto.interfaces.DHPrivateKey",
            "java.security.interfaces.DSAPrivateKey",
            "java.security.interfaces.ECPrivateKey",
            "java.security.interfaces.EdECPrivateKey",
            "java.security.interfaces.RSAMultiPrimePrivateCrtKey",
            "java.security.interfaces.RSAPrivateCrtKey",
            "java.security.interfaces.RSAPrivateKey",
            "java.security.interfaces.XECPrivateKey"
        ],
        "Subinterface": null,
        "Method": []
    },
    "114": {
        "Package": "java.security",
        "Interface": "PrivilegedAction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "run": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "115": {
        "Package": "java.security",
        "Interface": "PrivilegedExceptionAction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "run": {
                    "Parameter": {},
                    "Throw": "java.lang.Exception"
                }
            }
        ]
    },
    "116": {
        "Package": "java.security",
        "Interface": "PublicKey",
        "Superinterface": [
            "java.security.Key",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "javax.crypto.interfaces.DHPublicKey",
            "java.security.interfaces.DSAPublicKey",
            "java.security.interfaces.ECPublicKey",
            "java.security.interfaces.EdECPublicKey",
            "java.security.interfaces.RSAPublicKey",
            "java.security.interfaces.XECPublicKey"
        ],
        "Subinterface": null,
        "Method": []
    },
    "117": {
        "Package": "java.security.cert",
        "Interface": "CertPathBuilderResult",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.PKIXCertPathBuilderResult"
        ],
        "Method": [
            {
                "getCertPath": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "clone": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "118": {
        "Package": "java.security.cert",
        "Interface": "CertPathChecker",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.PKIXCertPathChecker",
            "java.security.cert.PKIXRevocationChecker"
        ],
        "Method": [
            {
                "init": {
                    "Parameter": {
                        "forward": "boolean"
                    },
                    "Throw": "java.security.cert.CertPathValidatorException"
                }
            },
            {
                "isForwardCheckingSupported": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "check": {
                    "Parameter": {
                        "cert": "Certificate"
                    },
                    "Throw": "java.security.cert.CertPathValidatorException"
                }
            }
        ]
    },
    "119": {
        "Package": "java.security.cert",
        "Interface": "CertPathParameters",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.PKIXBuilderParameters",
            "java.security.cert.PKIXParameters"
        ],
        "Method": [
            {
                "clone": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "120": {
        "Package": "java.security.cert",
        "Interface": "CertPathValidatorResult",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.PKIXCertPathBuilderResult",
            "java.security.cert.PKIXCertPathValidatorResult"
        ],
        "Method": [
            {
                "clone": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "121": {
        "Package": "java.security.cert",
        "Interface": "CertSelector",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.X509CertSelector"
        ],
        "Method": [
            {
                "match": {
                    "Parameter": {
                        "cert": "Certificate"
                    },
                    "Throw": []
                }
            },
            {
                "clone": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "122": {
        "Package": "java.security.cert",
        "Interface": "CertStoreParameters",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.CollectionCertStoreParameters",
            "java.security.cert.LDAPCertStoreParameters",
            "java.security.cert.URICertStoreParameters"
        ],
        "Method": [
            {
                "clone": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "123": {
        "Package": "java.security.cert",
        "Interface": "CRLSelector",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.X509CRLSelector"
        ],
        "Method": [
            {
                "match": {
                    "Parameter": {
                        "crl": "CRL"
                    },
                    "Throw": []
                }
            },
            {
                "clone": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "124": {
        "Package": "java.security.cert",
        "Interface": "Extension",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCritical": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "encode": {
                    "Parameter": {
                        "out": "OutputStream"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "125": {
        "Package": "java.security.cert",
        "Interface": "PolicyNode",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getParent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getChildren": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDepth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValidPolicy": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPolicyQualifiers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExpectedPolicies": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCritical": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "126": {
        "Package": "java.security.cert",
        "Interface": "X509Extension",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.cert.X509Certificate",
            "java.security.cert.X509CRL",
            "java.security.cert.X509CRLEntry"
        ],
        "Method": [
            {
                "hasUnsupportedCriticalExtension": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCriticalExtensionOIDs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNonCriticalExtensionOIDs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExtensionValue": {
                    "Parameter": {
                        "oid": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "127": {
        "Package": "java.security.interfaces",
        "Interface": "DSAKey",
        "Superinterface": null,
        "Implementing Class": [
            "java.security.interfaces.DSAPrivateKey",
            "java.security.interfaces.DSAPublicKey"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getParams": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "128": {
        "Package": "java.security.interfaces",
        "Interface": "DSAKeyPairGenerator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "initialize": {
                    "Parameter": {
                        "params": "DSAParams",
                        "random": "SecureRandom"
                    },
                    "Throw": "java.security.InvalidParameterException"
                }
            },
            {
                "initialize": {
                    "Parameter": {
                        "modlen": "int",
                        "genParams": "boolean",
                        "random": "SecureRandom"
                    },
                    "Throw": "java.security.InvalidParameterException"
                }
            }
        ]
    },
    "129": {
        "Package": "java.security.interfaces",
        "Interface": "DSAParams",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.spec.DSAParameterSpec"
        ],
        "Method": [
            {
                "getP": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getQ": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getG": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "130": {
        "Package": "java.security.interfaces",
        "Interface": "DSAPrivateKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.interfaces.DSAKey",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getX": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "131": {
        "Package": "java.security.interfaces",
        "Interface": "DSAPublicKey",
        "Superinterface": [
            "java.security.interfaces.DSAKey",
            "java.security.Key",
            "java.security.PublicKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getY": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "132": {
        "Package": "java.security.interfaces",
        "Interface": "ECKey",
        "Superinterface": null,
        "Implementing Class": [
            "java.security.interfaces.ECPrivateKey",
            "java.security.interfaces.ECPublicKey"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getParams": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "133": {
        "Package": "java.security.interfaces",
        "Interface": "ECPrivateKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.interfaces.ECKey",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getS": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "134": {
        "Package": "java.security.interfaces",
        "Interface": "ECPublicKey",
        "Superinterface": [
            "java.security.interfaces.ECKey",
            "java.security.Key",
            "java.security.PublicKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getW": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "135": {
        "Package": "java.security.interfaces",
        "Interface": "EdECKey",
        "Superinterface": null,
        "Implementing Class": [
            "java.security.interfaces.EdECPrivateKey",
            "java.security.interfaces.EdECPublicKey"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getParams": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "136": {
        "Package": "java.security.interfaces",
        "Interface": "EdECPrivateKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.interfaces.EdECKey",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBytes": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "137": {
        "Package": "java.security.interfaces",
        "Interface": "EdECPublicKey",
        "Superinterface": [
            "java.security.interfaces.EdECKey",
            "java.security.Key",
            "java.security.PublicKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPoint": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "138": {
        "Package": "java.security.interfaces",
        "Interface": "RSAKey",
        "Superinterface": null,
        "Implementing Class": [
            "java.security.interfaces.RSAMultiPrimePrivateCrtKey",
            "java.security.interfaces.RSAPrivateCrtKey",
            "java.security.interfaces.RSAPrivateKey",
            "java.security.interfaces.RSAPublicKey"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getModulus": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParams": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "139": {
        "Package": "java.security.interfaces",
        "Interface": "RSAMultiPrimePrivateCrtKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.security.interfaces.RSAKey",
            "java.security.interfaces.RSAPrivateKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPublicExponent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrimeP": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrimeQ": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrimeExponentP": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrimeExponentQ": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCrtCoefficient": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getOtherPrimeInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "140": {
        "Package": "java.security.interfaces",
        "Interface": "RSAPrivateCrtKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.security.interfaces.RSAKey",
            "java.security.interfaces.RSAPrivateKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPublicExponent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrimeP": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrimeQ": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrimeExponentP": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrimeExponentQ": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCrtCoefficient": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "141": {
        "Package": "java.security.interfaces",
        "Interface": "RSAPrivateKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.security.interfaces.RSAKey",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "java.security.interfaces.RSAMultiPrimePrivateCrtKey",
            "java.security.interfaces.RSAPrivateCrtKey"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getPrivateExponent": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "142": {
        "Package": "java.security.interfaces",
        "Interface": "RSAPublicKey",
        "Superinterface": [
            "java.security.Key",
            "java.security.PublicKey",
            "java.security.interfaces.RSAKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPublicExponent": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "143": {
        "Package": "java.security.interfaces",
        "Interface": "XECKey",
        "Superinterface": null,
        "Implementing Class": [
            "java.security.interfaces.XECPrivateKey",
            "java.security.interfaces.XECPublicKey"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getParams": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "144": {
        "Package": "java.security.interfaces",
        "Interface": "XECPrivateKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.io.Serializable",
            "java.security.interfaces.XECKey"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getScalar": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "145": {
        "Package": "java.security.interfaces",
        "Interface": "XECPublicKey",
        "Superinterface": [
            "java.security.Key",
            "java.security.PublicKey",
            "java.io.Serializable",
            "java.security.interfaces.XECKey"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getU": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "146": {
        "Package": "java.security.spec",
        "Interface": "ECField",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.security.spec.ECFieldF2m",
            "java.security.spec.ECFieldFp"
        ],
        "Method": [
            {
                "getFieldSize": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "147": {
        "Package": "java.text",
        "Interface": "AttributedCharacterIterator",
        "Superinterface": [
            "java.text.CharacterIterator",
            "java.lang.Cloneable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getRunStart": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRunStart": {
                    "Parameter": {
                        "attribute": "AttributedCharacterIterator.Attribute"
                    },
                    "Throw": []
                }
            },
            {
                "getRunStart": {
                    "Parameter": {
                        "extends": "Set"
                    },
                    "Throw": []
                }
            },
            {
                "getRunLimit": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRunLimit": {
                    "Parameter": {
                        "attribute": "AttributedCharacterIterator.Attribute"
                    },
                    "Throw": []
                }
            },
            {
                "getRunLimit": {
                    "Parameter": {
                        "extends": "Set"
                    },
                    "Throw": []
                }
            },
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttribute": {
                    "Parameter": {
                        "attribute": "AttributedCharacterIterator.Attribute"
                    },
                    "Throw": []
                }
            },
            {
                "getAllAttributeKeys": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "148": {
        "Package": "java.text",
        "Interface": "CharacterIterator",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": [
            "java.text.AttributedCharacterIterator"
        ],
        "Subinterface": [
            "javax.swing.text.Segment",
            "java.text.StringCharacterIterator"
        ],
        "Method": [
            {
                "first": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "last": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "current": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "next": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "previous": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setIndex": {
                    "Parameter": {
                        "position": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getBeginIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEndIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "clone": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "149": {
        "Package": "java.time",
        "Interface": "InstantSource",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.time.Clock"
        ],
        "Method": [
            {
                "system": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "tick": {
                    "Parameter": {
                        "baseSource": "InstantSource",
                        "tickDuration": "Duration"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "fixed": {
                    "Parameter": {
                        "fixedInstant": "Instant"
                    },
                    "Throw": []
                }
            },
            {
                "offset": {
                    "Parameter": {
                        "baseSource": "InstantSource",
                        "offsetDuration": "Duration"
                    },
                    "Throw": []
                }
            },
            {
                "instant": {
                    "Parameter": {},
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "millis": {
                    "Parameter": {},
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "withZone": {
                    "Parameter": {
                        "zone": "ZoneId"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "150": {
        "Package": "java.time.chrono",
        "Interface": "ChronoLocalDate",
        "Superinterface": [
            "java.lang.Comparable",
            "java.time.chrono.ChronoLocalDate",
            "java.time.temporal.Temporal",
            "java.time.temporal.TemporalAccessor",
            "java.time.temporal.TemporalAdjuster"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.time.chrono.HijrahDate",
            "java.time.chrono.JapaneseDate",
            "java.time.LocalDate",
            "java.time.chrono.MinguoDate",
            "java.time.chrono.ThaiBuddhistDate"
        ],
        "Method": [
            {
                "timeLineOrder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "from": {
                    "Parameter": {
                        "temporal": "TemporalAccessor"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "getChronology": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEra": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isLeapYear": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "lengthOfMonth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "lengthOfYear": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSupported": {
                    "Parameter": {
                        "field": "TemporalField"
                    },
                    "Throw": []
                }
            },
            {
                "isSupported": {
                    "Parameter": {
                        "unit": "TemporalUnit"
                    },
                    "Throw": []
                }
            },
            {
                "with": {
                    "Parameter": {
                        "adjuster": "TemporalAdjuster"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "with": {
                    "Parameter": {
                        "field": "TemporalField",
                        "newValue": "long"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "plus": {
                    "Parameter": {
                        "amount": "TemporalAmount"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "plus": {
                    "Parameter": {
                        "amountToAdd": "long",
                        "unit": "TemporalUnit"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "minus": {
                    "Parameter": {
                        "amount": "TemporalAmount"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "minus": {
                    "Parameter": {
                        "amountToSubtract": "long",
                        "unit": "TemporalUnit"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "query": {
                    "Parameter": {
                        "Rquery": "TemporalQuery"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "adjustInto": {
                    "Parameter": {
                        "temporal": "Temporal"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "until": {
                    "Parameter": {
                        "endExclusive": "Temporal",
                        "unit": "TemporalUnit"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "until": {
                    "Parameter": {
                        "endDateExclusive": "ChronoLocalDate"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "format": {
                    "Parameter": {
                        "formatter": "DateTimeFormatter"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "atTime": {
                    "Parameter": {
                        "localTime": "LocalTime"
                    },
                    "Throw": []
                }
            },
            {
                "toEpochDay": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "compareTo": {
                    "Parameter": {
                        "other": "ChronoLocalDate"
                    },
                    "Throw": []
                }
            },
            {
                "isAfter": {
                    "Parameter": {
                        "other": "ChronoLocalDate"
                    },
                    "Throw": []
                }
            },
            {
                "isBefore": {
                    "Parameter": {
                        "other": "ChronoLocalDate"
                    },
                    "Throw": []
                }
            },
            {
                "isEqual": {
                    "Parameter": {
                        "other": "ChronoLocalDate"
                    },
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "151": {
        "Package": "java.time.chrono",
        "Interface": "ChronoLocalDateTime",
        "Superinterface": [
            "java.lang.Comparable",
            "java.time.chrono.ChronoLocalDateTime",
            "java.time.temporal.Temporal",
            "java.time.temporal.TemporalAccessor",
            "java.time.temporal.TemporalAdjuster"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.time.LocalDateTime"
        ],
        "Method": [
            {
                "timeLineOrder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "from": {
                    "Parameter": {
                        "temporal": "TemporalAccessor"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "getChronology": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toLocalDate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toLocalTime": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSupported": {
                    "Parameter": {
                        "field": "TemporalField"
                    },
                    "Throw": []
                }
            },
            {
                "isSupported": {
                    "Parameter": {
                        "unit": "TemporalUnit"
                    },
                    "Throw": []
                }
            },
            {
                "with": {
                    "Parameter": {
                        "adjuster": "TemporalAdjuster"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "with": {
                    "Parameter": {
                        "field": "TemporalField",
                        "newValue": "long"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "plus": {
                    "Parameter": {
                        "amount": "TemporalAmount"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "plus": {
                    "Parameter": {
                        "amountToAdd": "long",
                        "unit": "TemporalUnit"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "minus": {
                    "Parameter": {
                        "amount": "TemporalAmount"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "minus": {
                    "Parameter": {
                        "amountToSubtract": "long",
                        "unit": "TemporalUnit"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "query": {
                    "Parameter": {
                        "Rquery": "TemporalQuery"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "adjustInto": {
                    "Parameter": {
                        "temporal": "Temporal"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "format": {
                    "Parameter": {
                        "formatter": "DateTimeFormatter"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "atZone": {
                    "Parameter": {
                        "zone": "ZoneId"
                    },
                    "Throw": []
                }
            },
            {
                "toInstant": {
                    "Parameter": {
                        "offset": "ZoneOffset"
                    },
                    "Throw": []
                }
            },
            {
                "toEpochSecond": {
                    "Parameter": {
                        "offset": "ZoneOffset"
                    },
                    "Throw": []
                }
            },
            {
                "compareTo": {
                    "Parameter": {
                        "other": "ChronoLocalDateTime"
                    },
                    "Throw": []
                }
            },
            {
                "isAfter": {
                    "Parameter": {
                        "other": "ChronoLocalDateTime"
                    },
                    "Throw": []
                }
            },
            {
                "isBefore": {
                    "Parameter": {
                        "other": "ChronoLocalDateTime"
                    },
                    "Throw": []
                }
            },
            {
                "isEqual": {
                    "Parameter": {
                        "other": "ChronoLocalDateTime"
                    },
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "152": {
        "Package": "java.time.chrono",
        "Interface": "Chronology",
        "Superinterface": [
            "java.lang.Comparable",
            "java.time.chrono.Chronology"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.time.chrono.AbstractChronology",
            "java.time.chrono.HijrahChronology",
            "java.time.chrono.IsoChronology",
            "java.time.chrono.JapaneseChronology",
            "java.time.chrono.MinguoChronology",
            "java.time.chrono.ThaiBuddhistChronology"
        ],
        "Method": [
            {
                "from": {
                    "Parameter": {
                        "temporal": "TemporalAccessor"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "ofLocale": {
                    "Parameter": {
                        "locale": "Locale"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "of": {
                    "Parameter": {
                        "id": "String"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "getAvailableChronologies": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCalendarType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "date": {
                    "Parameter": {
                        "era": "Era",
                        "yearOfEra": "int",
                        "month": "int",
                        "dayOfMonth": "int"
                    },
                    "Throw": "java.lang.ClassCastException"
                }
            },
            {
                "date": {
                    "Parameter": {
                        "prolepticYear": "int",
                        "month": "int",
                        "dayOfMonth": "int"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "dateYearDay": {
                    "Parameter": {
                        "era": "Era",
                        "yearOfEra": "int",
                        "dayOfYear": "int"
                    },
                    "Throw": "java.lang.ClassCastException"
                }
            },
            {
                "dateYearDay": {
                    "Parameter": {
                        "prolepticYear": "int",
                        "dayOfYear": "int"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "dateEpochDay": {
                    "Parameter": {
                        "epochDay": "long"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "dateNow": {
                    "Parameter": {},
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "dateNow": {
                    "Parameter": {
                        "zone": "ZoneId"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "dateNow": {
                    "Parameter": {
                        "clock": "Clock"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "date": {
                    "Parameter": {
                        "temporal": "TemporalAccessor"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "localDateTime": {
                    "Parameter": {
                        "temporal": "TemporalAccessor"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "zonedDateTime": {
                    "Parameter": {
                        "temporal": "TemporalAccessor"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "zonedDateTime": {
                    "Parameter": {
                        "instant": "Instant",
                        "zone": "ZoneId"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "isLeapYear": {
                    "Parameter": {
                        "prolepticYear": "long"
                    },
                    "Throw": []
                }
            },
            {
                "prolepticYear": {
                    "Parameter": {
                        "era": "Era",
                        "yearOfEra": "int"
                    },
                    "Throw": "java.lang.ClassCastException"
                }
            },
            {
                "eraOf": {
                    "Parameter": {
                        "eraValue": "int"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "eras": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "range": {
                    "Parameter": {
                        "field": "ChronoField"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "getDisplayName": {
                    "Parameter": {
                        "style": "TextStyle",
                        "locale": "Locale"
                    },
                    "Throw": []
                }
            },
            {
                "resolveDate": {
                    "Parameter": {
                        "": "Map",
                        "resolverStyle": "ResolverStyle"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "period": {
                    "Parameter": {
                        "years": "int",
                        "months": "int",
                        "days": "int"
                    },
                    "Throw": []
                }
            },
            {
                "epochSecond": {
                    "Parameter": {
                        "prolepticYear": "int",
                        "month": "int",
                        "dayOfMonth": "int",
                        "hour": "int",
                        "minute": "int",
                        "second": "int",
                        "zoneOffset": "ZoneOffset"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "epochSecond": {
                    "Parameter": {
                        "era": "Era",
                        "yearOfEra": "int",
                        "month": "int",
                        "dayOfMonth": "int",
                        "hour": "int",
                        "minute": "int",
                        "second": "int",
                        "zoneOffset": "ZoneOffset"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "compareTo": {
                    "Parameter": {
                        "other": "Chronology"
                    },
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "153": {
        "Package": "java.time.chrono",
        "Interface": "ChronoPeriod",
        "Superinterface": [
            "java.time.temporal.TemporalAmount"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.time.Period"
        ],
        "Method": [
            {
                "between": {
                    "Parameter": {
                        "startDateInclusive": "ChronoLocalDate",
                        "endDateExclusive": "ChronoLocalDate"
                    },
                    "Throw": []
                }
            },
            {
                "get": {
                    "Parameter": {
                        "unit": "TemporalUnit"
                    },
                    "Throw": "java.time.temporal.UnsupportedTemporalTypeException"
                }
            },
            {
                "getUnits": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getChronology": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isZero": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isNegative": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "plus": {
                    "Parameter": {
                        "amountToAdd": "TemporalAmount"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "minus": {
                    "Parameter": {
                        "amountToSubtract": "TemporalAmount"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "multipliedBy": {
                    "Parameter": {
                        "scalar": "int"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "negated": {
                    "Parameter": {},
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "normalized": {
                    "Parameter": {},
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "addTo": {
                    "Parameter": {
                        "temporal": "Temporal"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "subtractFrom": {
                    "Parameter": {
                        "temporal": "Temporal"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "154": {
        "Package": "java.time.chrono",
        "Interface": "ChronoZonedDateTime",
        "Superinterface": [
            "java.lang.Comparable",
            "java.time.chrono.ChronoZonedDateTime",
            "java.time.temporal.Temporal",
            "java.time.temporal.TemporalAccessor"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.time.ZonedDateTime"
        ],
        "Method": [
            {
                "timeLineOrder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "from": {
                    "Parameter": {
                        "temporal": "TemporalAccessor"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "getLong": {
                    "Parameter": {
                        "field": "TemporalField"
                    },
                    "Throw": []
                }
            },
            {
                "toLocalDate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toLocalTime": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toLocalDateTime": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getChronology": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getZone": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "withEarlierOffsetAtOverlap": {
                    "Parameter": {},
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "withLaterOffsetAtOverlap": {
                    "Parameter": {},
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "withZoneSameLocal": {
                    "Parameter": {
                        "zone": "ZoneId"
                    },
                    "Throw": []
                }
            },
            {
                "withZoneSameInstant": {
                    "Parameter": {
                        "zone": "ZoneId"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "isSupported": {
                    "Parameter": {
                        "field": "TemporalField"
                    },
                    "Throw": []
                }
            },
            {
                "isSupported": {
                    "Parameter": {
                        "unit": "TemporalUnit"
                    },
                    "Throw": []
                }
            },
            {
                "with": {
                    "Parameter": {
                        "adjuster": "TemporalAdjuster"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "with": {
                    "Parameter": {
                        "field": "TemporalField",
                        "newValue": "long"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "plus": {
                    "Parameter": {
                        "amount": "TemporalAmount"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "plus": {
                    "Parameter": {
                        "amountToAdd": "long",
                        "unit": "TemporalUnit"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "minus": {
                    "Parameter": {
                        "amount": "TemporalAmount"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "minus": {
                    "Parameter": {
                        "amountToSubtract": "long",
                        "unit": "TemporalUnit"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "query": {
                    "Parameter": {
                        "Rquery": "TemporalQuery"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "format": {
                    "Parameter": {
                        "formatter": "DateTimeFormatter"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "toInstant": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toEpochSecond": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "compareTo": {
                    "Parameter": {
                        "other": "ChronoZonedDateTime"
                    },
                    "Throw": []
                }
            },
            {
                "isBefore": {
                    "Parameter": {
                        "other": "ChronoZonedDateTime"
                    },
                    "Throw": []
                }
            },
            {
                "isAfter": {
                    "Parameter": {
                        "other": "ChronoZonedDateTime"
                    },
                    "Throw": []
                }
            },
            {
                "isEqual": {
                    "Parameter": {
                        "other": "ChronoZonedDateTime"
                    },
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "155": {
        "Package": "java.time.chrono",
        "Interface": "Era",
        "Superinterface": [
            "java.time.temporal.TemporalAccessor",
            "java.time.temporal.TemporalAdjuster"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.time.chrono.HijrahEra"
        ],
        "Method": [
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSupported": {
                    "Parameter": {
                        "field": "TemporalField"
                    },
                    "Throw": []
                }
            },
            {
                "range": {
                    "Parameter": {
                        "field": "TemporalField"
                    },
                    "Throw": "java.time.temporal.UnsupportedTemporalTypeException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "field": "TemporalField"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "getLong": {
                    "Parameter": {
                        "field": "TemporalField"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "query": {
                    "Parameter": {
                        "Rquery": "TemporalQuery"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "adjustInto": {
                    "Parameter": {
                        "temporal": "Temporal"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "getDisplayName": {
                    "Parameter": {
                        "style": "TextStyle",
                        "locale": "Locale"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "156": {
        "Package": "java.time.temporal",
        "Interface": "Temporal",
        "Superinterface": [
            "java.time.temporal.TemporalAccessor"
        ],
        "Implementing Class": [
            "java.time.chrono.ChronoLocalDate",
            "java.time.chrono.ChronoLocalDateTime",
            "java.time.chrono.ChronoZonedDateTime"
        ],
        "Subinterface": [
            "java.time.chrono.HijrahDate",
            "java.time.Instant",
            "java.time.chrono.JapaneseDate",
            "java.time.LocalDate",
            "java.time.LocalDateTime",
            "java.time.LocalTime",
            "java.time.chrono.MinguoDate",
            "java.time.OffsetDateTime",
            "java.time.OffsetTime",
            "java.time.chrono.ThaiBuddhistDate",
            "java.time.Year",
            "java.time.YearMonth",
            "java.time.ZonedDateTime"
        ],
        "Method": [
            {
                "isSupported": {
                    "Parameter": {
                        "unit": "TemporalUnit"
                    },
                    "Throw": []
                }
            },
            {
                "with": {
                    "Parameter": {
                        "adjuster": "TemporalAdjuster"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "with": {
                    "Parameter": {
                        "field": "TemporalField",
                        "newValue": "long"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "plus": {
                    "Parameter": {
                        "amount": "TemporalAmount"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "plus": {
                    "Parameter": {
                        "amountToAdd": "long",
                        "unit": "TemporalUnit"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "minus": {
                    "Parameter": {
                        "amount": "TemporalAmount"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "minus": {
                    "Parameter": {
                        "amountToSubtract": "long",
                        "unit": "TemporalUnit"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "until": {
                    "Parameter": {
                        "endExclusive": "Temporal",
                        "unit": "TemporalUnit"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            }
        ]
    },
    "157": {
        "Package": "java.time.temporal",
        "Interface": "TemporalAccessor",
        "Superinterface": null,
        "Implementing Class": [
            "java.time.chrono.ChronoLocalDate",
            "java.time.chrono.ChronoLocalDateTime",
            "java.time.chrono.ChronoZonedDateTime",
            "java.time.chrono.Era",
            "java.time.temporal.Temporal"
        ],
        "Subinterface": [
            "java.time.chrono.DayOfWeek",
            "java.time.HijrahDate",
            "java.time.chrono.HijrahEra",
            "java.time.chrono.Instant",
            "java.time.IsoEra",
            "java.time.JapaneseDate",
            "java.time.JapaneseEra",
            "java.time.chrono.LocalDate",
            "java.time.LocalDateTime",
            "java.time.LocalTime",
            "java.time.MinguoDate",
            "java.time.chrono.MinguoEra",
            "java.time.Month",
            "java.time.MonthDay",
            "java.time.OffsetDateTime",
            "java.time.OffsetTime"
        ],
        "Method": [
            {
                "isSupported": {
                    "Parameter": {
                        "field": "TemporalField"
                    },
                    "Throw": []
                }
            },
            {
                "range": {
                    "Parameter": {
                        "field": "TemporalField"
                    },
                    "Throw": "java.time.temporal.UnsupportedTemporalTypeException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "field": "TemporalField"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "getLong": {
                    "Parameter": {
                        "field": "TemporalField"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "query": {
                    "Parameter": {
                        "Rquery": "TemporalQuery"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            }
        ]
    },
    "158": {
        "Package": "java.time.temporal",
        "Interface": "TemporalAdjuster",
        "Superinterface": null,
        "Implementing Class": [
            "java.time.chrono.ChronoLocalDate",
            "java.time.chrono.ChronoLocalDateTime",
            "java.time.chrono.Era"
        ],
        "Subinterface": [
            "java.time.chrono.DayOfWeek",
            "java.time.HijrahDate",
            "java.time.chrono.HijrahEra",
            "java.time.chrono.Instant",
            "java.time.IsoEra",
            "java.time.JapaneseDate",
            "java.time.JapaneseEra",
            "java.time.chrono.LocalDate",
            "java.time.LocalDateTime",
            "java.time.LocalTime",
            "java.time.MinguoDate",
            "java.time.chrono.MinguoEra",
            "java.time.Month",
            "java.time.MonthDay",
            "java.time.OffsetDateTime"
        ],
        "Method": [
            {
                "adjustInto": {
                    "Parameter": {
                        "temporal": "Temporal"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            }
        ]
    },
    "159": {
        "Package": "java.time.temporal",
        "Interface": "TemporalAmount",
        "Superinterface": null,
        "Implementing Class": [
            "java.time.chrono.ChronoPeriod"
        ],
        "Subinterface": [
            "java.time.Duration",
            "java.time.Period"
        ],
        "Method": [
            {
                "get": {
                    "Parameter": {
                        "unit": "TemporalUnit"
                    },
                    "Throw": "java.time.temporal.UnsupportedTemporalTypeException"
                }
            },
            {
                "getUnits": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addTo": {
                    "Parameter": {
                        "temporal": "Temporal"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "subtractFrom": {
                    "Parameter": {
                        "temporal": "Temporal"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            }
        ]
    },
    "160": {
        "Package": "java.time.temporal",
        "Interface": "TemporalField",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDisplayName": {
                    "Parameter": {
                        "locale": "Locale"
                    },
                    "Throw": []
                }
            },
            {
                "getBaseUnit": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRangeUnit": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "range": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDateBased": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isTimeBased": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSupportedBy": {
                    "Parameter": {
                        "temporal": "TemporalAccessor"
                    },
                    "Throw": []
                }
            },
            {
                "rangeRefinedBy": {
                    "Parameter": {
                        "temporal": "TemporalAccessor"
                    },
                    "Throw": "java.time.temporal.UnsupportedTemporalTypeException"
                }
            },
            {
                "getFrom": {
                    "Parameter": {
                        "temporal": "TemporalAccessor"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "resolve": {
                    "Parameter": {
                        "": "Map",
                        "partialTemporal": "TemporalAccessor",
                        "resolverStyle": "ResolverStyle"
                    },
                    "Throw": "java.time.DateTimeException"
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "161": {
        "Package": "java.time.temporal",
        "Interface": "TemporalQuery",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "queryFrom": {
                    "Parameter": {
                        "temporal": "TemporalAccessor"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            }
        ]
    },
    "162": {
        "Package": "java.time.temporal",
        "Interface": "TemporalUnit",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDuration": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDurationEstimated": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDateBased": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isTimeBased": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSupportedBy": {
                    "Parameter": {
                        "temporal": "Temporal"
                    },
                    "Throw": []
                }
            },
            {
                "between": {
                    "Parameter": {
                        "temporalInclusive": "Temporal",
                        "temporalExclusive": "Temporal"
                    },
                    "Throw": "java.lang.ArithmeticException"
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "163": {
        "Package": "java.util",
        "Interface": "Collection",
        "Superinterface": [
            "java.lang.Iterable"
        ],
        "Implementing Class": [
            "java.beans.beancontext.BeanContext",
            "java.beans.beancontext.BeanContextServices",
            "java.util.concurrent.BlockingDeque",
            "java.util.concurrent.BlockingQueue",
            "java.util.Deque",
            "com.sun.jdi.event.EventSet",
            "java.util.List",
            "java.util.NavigableSet",
            "java.util.Queue",
            "java.util.Set",
            "java.util.SortedSet",
            "java.util.concurrent.TransferQueue"
        ],
        "Subinterface": [
            "java.util.AbstractCollection",
            "java.util.AbstractList",
            "java.util.AbstractQueue",
            "java.util.AbstractSequentialList",
            "java.util.AbstractSet",
            "java.util.concurrent.ArrayBlockingQueue",
            "java.util.ArrayDeque",
            "java.util.ArrayList",
            "javax.management.AttributeList",
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport",
            "java.util.concurrent.ConcurrentHashMap.KeySetView",
            "java.util.concurrent.ConcurrentLinkedDeque",
            "java.util.concurrent.ConcurrentLinkedQueue",
            "java.util.concurrent.ConcurrentSkipListSet",
            "java.util.concurrent.CopyOnWriteArrayList",
            "java.util.concurrent.CopyOnWriteArraySet",
            "java.util.concurrent.DelayQueue",
            "java.util.EnumSet",
            "java.util.HashSet",
            "javax.print.attribute.standard.JobStateReasons",
            "java.util.concurrent.LinkedBlockingDeque",
            "java.util.concurrent.LinkedBlockingQueue",
            "java.util.LinkedHashSet",
            "java.util.LinkedList",
            "java.util.concurrent.LinkedTransferQueue",
            "java.util.concurrent.PriorityBlockingQueue",
            "java.util.PriorityQueue",
            "javax.management.relation.RoleList",
            "javax.management.relation.RoleUnresolvedList",
            "java.util.Stack",
            "java.util.concurrent.SynchronousQueue",
            "java.util.TreeSet",
            "java.util.Vector"
        ],
        "Method": [
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEmpty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "iterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toArray": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toArray": {
                    "Parameter": {
                        "Tgenerator": "IntFunction"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "containsAll": {
                    "Parameter": {
                        "c": "Collection"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "addAll": {
                    "Parameter": {
                        "extends": "Collection"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "removeAll": {
                    "Parameter": {
                        "c": "Collection"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "removeIf": {
                    "Parameter": {
                        "super": "Predicate"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "retainAll": {
                    "Parameter": {
                        "c": "Collection"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "clear": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "spliterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "stream": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "parallelStream": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "164": {
        "Package": "java.util",
        "Interface": "Comparator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.text.Collator",
            "java.text.RuleBasedCollator"
        ],
        "Method": [
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "reversed": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "thenComparing": {
                    "Parameter": {
                        "super": "Comparator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "thenComparing": {
                    "Parameter": {
                        "super": "Function",
                        "superUkeyComparator": "Comparator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "thenComparing": {
                    "Parameter": {
                        "super": "Function"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "thenComparingInt": {
                    "Parameter": {
                        "super": "ToIntFunction"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "thenComparingLong": {
                    "Parameter": {
                        "super": "ToLongFunction"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "thenComparingDouble": {
                    "Parameter": {
                        "super": "ToDoubleFunction"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "reverseOrder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "naturalOrder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "nullsFirst": {
                    "Parameter": {
                        "superTcomparator": "Comparator"
                    },
                    "Throw": []
                }
            },
            {
                "nullsLast": {
                    "Parameter": {
                        "superTcomparator": "Comparator"
                    },
                    "Throw": []
                }
            },
            {
                "comparing": {
                    "Parameter": {
                        "superT": "Function",
                        "superUkeyComparator": "Comparator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "comparing": {
                    "Parameter": {
                        "superT": "Function"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "comparingInt": {
                    "Parameter": {
                        "superTkeyExtractor": "ToIntFunction"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "comparingLong": {
                    "Parameter": {
                        "superTkeyExtractor": "ToLongFunction"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "comparingDouble": {
                    "Parameter": {
                        "superTkeyExtractor": "ToDoubleFunction"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "165": {
        "Package": "java.util",
        "Interface": "Deque",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable",
            "java.util.Queue"
        ],
        "Implementing Class": [
            "java.util.concurrent.BlockingDeque"
        ],
        "Subinterface": [
            "java.util.ArrayDeque",
            "java.util.concurrent.ConcurrentLinkedDeque",
            "java.util.concurrent.LinkedBlockingDeque",
            "java.util.LinkedList"
        ],
        "Method": [
            {
                "removeFirst": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "removeLast": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "pollFirst": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "pollLast": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFirst": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "getLast": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "peekFirst": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "peekLast": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "removeFirstOccurrence": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "removeLastOccurrence": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "remove": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "poll": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "element": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "peek": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addAll": {
                    "Parameter": {
                        "extends": "Collection"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "pop": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "iterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "descendingIterator": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "166": {
        "Package": "java.util",
        "Interface": "Enumeration",
        "Superinterface": null,
        "Implementing Class": [
            "javax.naming.NamingEnumeration"
        ],
        "Subinterface": [
            "java.util.StringTokenizer"
        ],
        "Method": [
            {
                "hasMoreElements": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "nextElement": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "asIterator": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "167": {
        "Package": "java.util",
        "Interface": "Formattable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "formatTo": {
                    "Parameter": {
                        "formatter": "Formatter",
                        "flags": "int",
                        "width": "int",
                        "precision": "int"
                    },
                    "Throw": "java.util.IllegalFormatException"
                }
            }
        ]
    },
    "168": {
        "Package": "java.util",
        "Interface": "Iterator",
        "Superinterface": null,
        "Implementing Class": [
            "com.sun.jdi.event.EventIterator",
            "java.util.ListIterator",
            "java.util.PrimitiveIterator",
            "java.util.PrimitiveIterator.OfDouble",
            "java.util.PrimitiveIterator.OfInt",
            "java.util.PrimitiveIterator.OfLong",
            "javax.xml.stream.XMLEventReader"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextSupport.BCSIterator",
            "javax.xml.stream.util.EventReaderDelegate",
            "java.util.Scanner"
        ],
        "Method": [
            {
                "hasNext": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "next": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "remove": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "forEachRemaining": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "169": {
        "Package": "java.util",
        "Interface": "List",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.AbstractList",
            "java.util.AbstractSequentialList",
            "java.util.ArrayList",
            "javax.management.AttributeList",
            "java.util.concurrent.CopyOnWriteArrayList",
            "java.util.LinkedList",
            "javax.management.relation.RoleList",
            "javax.management.relation.RoleUnresolvedList",
            "java.util.Stack",
            "java.util.Vector"
        ],
        "Method": [
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEmpty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "iterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toArray": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "containsAll": {
                    "Parameter": {
                        "c": "Collection"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "addAll": {
                    "Parameter": {
                        "extends": "Collection"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "addAll": {
                    "Parameter": {
                        "index": "int",
                        "extends": "Collection"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "removeAll": {
                    "Parameter": {
                        "c": "Collection"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "retainAll": {
                    "Parameter": {
                        "c": "Collection"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "replaceAll": {
                    "Parameter": {
                        "": "UnaryOperator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "sort": {
                    "Parameter": {
                        "super": "Comparator"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "clear": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "get": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "indexOf": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "lastIndexOf": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "listIterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "listIterator": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "subList": {
                    "Parameter": {
                        "fromIndex": "int",
                        "toIndex": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "spliterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "of": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "copyOf": {
                    "Parameter": {
                        "extendsEcoll": "Collection"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "170": {
        "Package": "java.util",
        "Interface": "ListIterator",
        "Superinterface": [
            "java.util.Iterator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "hasNext": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "next": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "hasPrevious": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "previous": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "nextIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "previousIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "remove": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            }
        ]
    },
    "171": {
        "Package": "java.util",
        "Interface": "Map.Entry",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.AbstractMap.SimpleEntry",
            "java.util.AbstractMap.SimpleImmutableEntry"
        ],
        "Method": [
            {
                "getKey": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "comparingByKey": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "comparingByValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "comparingByKey": {
                    "Parameter": {
                        "superKcmp": "Comparator"
                    },
                    "Throw": []
                }
            },
            {
                "comparingByValue": {
                    "Parameter": {
                        "superVcmp": "Comparator"
                    },
                    "Throw": []
                }
            },
            {
                "copyOf": {
                    "Parameter": {
                        "extendsK": "Map.Entry"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "172": {
        "Package": "java.util",
        "Interface": "Map",
        "Superinterface": null,
        "Implementing Class": [
            "javax.script.Bindings",
            "java.util.concurrent.ConcurrentMap",
            "java.util.concurrent.ConcurrentNavigableMap",
            "java.util.NavigableMap",
            "java.util.SortedMap"
        ],
        "Subinterface": [
            "java.util.AbstractMap",
            "java.util.jar.Attributes",
            "java.security.AuthProvider",
            "java.util.concurrent.ConcurrentHashMap",
            "java.util.concurrent.ConcurrentSkipListMap",
            "java.util.EnumMap",
            "java.util.HashMap",
            "java.util.Hashtable",
            "com.sun.net.httpserver.Headers",
            "java.util.IdentityHashMap",
            "java.util.LinkedHashMap",
            "javax.print.attribute.standard.PrinterStateReasons",
            "java.util.Properties",
            "java.security.Provider",
            "java.awt.RenderingHints",
            "javax.script.SimpleBindings",
            "javax.management.openmbean.TabularDataSupport",
            "java.util.TreeMap",
            "javax.swing.UIDefaults",
            "java.util.WeakHashMap"
        ],
        "Method": [
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEmpty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "containsKey": {
                    "Parameter": {
                        "key": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "containsValue": {
                    "Parameter": {
                        "value": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "key": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "key": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "putAll": {
                    "Parameter": {
                        "extends": "Map"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "clear": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "keySet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "values": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "entrySet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "forEach": {
                    "Parameter": {
                        "super": "BiConsumer"
                    },
                    "Throw": "java.util.ConcurrentModificationException"
                }
            },
            {
                "replaceAll": {
                    "Parameter": {
                        "super": "BiFunction"
                    },
                    "Throw": "java.util.ConcurrentModificationException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "key": "Object",
                        "value": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "of": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "ofEntries": {
                    "Parameter": {
                        "extendsK": "Map.Entry"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "copyOf": {
                    "Parameter": {
                        "extendsK": "Map"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "173": {
        "Package": "java.util",
        "Interface": "NavigableMap",
        "Superinterface": [
            "java.util.Map",
            "java.util.SortedMap"
        ],
        "Implementing Class": [
            "java.util.concurrent.ConcurrentNavigableMap"
        ],
        "Subinterface": [
            "java.util.concurrent.ConcurrentSkipListMap",
            "java.util.TreeMap"
        ],
        "Method": [
            {
                "firstEntry": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "lastEntry": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "pollFirstEntry": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "pollLastEntry": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "descendingMap": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "navigableKeySet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "descendingKeySet": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "174": {
        "Package": "java.util",
        "Interface": "NavigableSet",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable",
            "java.util.Set",
            "java.util.SortedSet"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.ConcurrentSkipListSet",
            "java.util.TreeSet"
        ],
        "Method": [
            {
                "pollFirst": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "pollLast": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "iterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "descendingSet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "descendingIterator": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "175": {
        "Package": "java.util",
        "Interface": "Observer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "update": {
                    "Parameter": {
                        "o": "Observable",
                        "arg": "Object"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "176": {
        "Package": "java.util",
        "Interface": "PrimitiveIterator",
        "Superinterface": [
            "java.util.Iterator"
        ],
        "Implementing Class": [
            "java.util.PrimitiveIterator.OfDouble",
            "java.util.PrimitiveIterator.OfInt",
            "java.util.PrimitiveIterator.OfLong"
        ],
        "Subinterface": null,
        "Method": []
    },
    "177": {
        "Package": "java.util",
        "Interface": "PrimitiveIterator.OfDouble",
        "Superinterface": [
            "java.util.Iterator",
            "java.util.Double",
            "java.util.function.PrimitiveIterator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "nextDouble": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "forEachRemaining": {
                    "Parameter": {
                        "action": "DoubleConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "next": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "forEachRemaining": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "178": {
        "Package": "java.util",
        "Interface": "PrimitiveIterator.OfInt",
        "Superinterface": [
            "java.util.Iterator",
            "java.util.Integer",
            "java.util.function.PrimitiveIterator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "nextInt": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "forEachRemaining": {
                    "Parameter": {
                        "action": "IntConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "next": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "forEachRemaining": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "179": {
        "Package": "java.util",
        "Interface": "PrimitiveIterator.OfLong",
        "Superinterface": [
            "java.util.Iterator",
            "java.util.Long",
            "java.util.function.PrimitiveIterator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "nextLong": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "forEachRemaining": {
                    "Parameter": {
                        "action": "LongConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "next": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "forEachRemaining": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "180": {
        "Package": "java.util",
        "Interface": "Queue",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable"
        ],
        "Implementing Class": [
            "java.util.concurrent.BlockingDeque",
            "java.util.concurrent.BlockingQueue",
            "java.util.Deque",
            "java.util.concurrent.TransferQueue"
        ],
        "Subinterface": [
            "java.util.AbstractQueue",
            "java.util.concurrent.ArrayBlockingQueue",
            "java.util.ArrayDeque",
            "java.util.concurrent.ConcurrentLinkedDeque",
            "java.util.concurrent.ConcurrentLinkedQueue",
            "java.util.concurrent.DelayQueue",
            "java.util.concurrent.LinkedBlockingDeque",
            "java.util.concurrent.LinkedBlockingQueue",
            "java.util.LinkedList",
            "java.util.concurrent.LinkedTransferQueue",
            "java.util.concurrent.PriorityBlockingQueue",
            "java.util.PriorityQueue",
            "java.util.concurrent.SynchronousQueue"
        ],
        "Method": [
            {
                "remove": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "poll": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "element": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "peek": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "181": {
        "Package": "java.util",
        "Interface": "ServiceLoader.Provider",
        "Superinterface": [
            "java.util.function.Supplier"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "type": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "get": {
                    "Parameter": {},
                    "Throw": "java.util.ServiceConfigurationError"
                }
            }
        ]
    },
    "182": {
        "Package": "java.util",
        "Interface": "Set",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable"
        ],
        "Implementing Class": [
            "com.sun.jdi.event.EventSet",
            "java.util.NavigableSet",
            "java.util.SortedSet"
        ],
        "Subinterface": [
            "java.util.AbstractSet",
            "java.util.concurrent.ConcurrentHashMap.KeySetView",
            "java.util.concurrent.ConcurrentSkipListSet",
            "java.util.concurrent.CopyOnWriteArraySet",
            "java.util.EnumSet",
            "java.util.HashSet",
            "javax.print.attribute.standard.JobStateReasons",
            "java.util.LinkedHashSet",
            "java.util.TreeSet"
        ],
        "Method": [
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEmpty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "iterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toArray": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "containsAll": {
                    "Parameter": {
                        "c": "Collection"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "addAll": {
                    "Parameter": {
                        "extends": "Collection"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "retainAll": {
                    "Parameter": {
                        "c": "Collection"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "removeAll": {
                    "Parameter": {
                        "c": "Collection"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "clear": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "spliterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "of": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "copyOf": {
                    "Parameter": {
                        "extendsEcoll": "Collection"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "183": {
        "Package": "java.util",
        "Interface": "SortedMap",
        "Superinterface": [
            "java.util.Map"
        ],
        "Implementing Class": [
            "java.util.concurrent.ConcurrentNavigableMap",
            "java.util.NavigableMap"
        ],
        "Subinterface": [
            "java.util.concurrent.ConcurrentSkipListMap",
            "java.util.TreeMap"
        ],
        "Method": [
            {
                "comparator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "firstKey": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "lastKey": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "keySet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "values": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "entrySet": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "184": {
        "Package": "java.util",
        "Interface": "SortedSet",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable",
            "java.util.Set"
        ],
        "Implementing Class": [
            "java.util.NavigableSet"
        ],
        "Subinterface": [
            "java.util.concurrent.ConcurrentSkipListSet",
            "java.util.TreeSet"
        ],
        "Method": [
            {
                "comparator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "first": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "last": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "spliterator": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "185": {
        "Package": "java.util",
        "Interface": "Spliterator",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.Spliterator.OfDouble",
            "java.util.Spliterator.OfInt",
            "java.util.Spliterator.OfLong",
            "java.util.Spliterator.OfPrimitive"
        ],
        "Subinterface": [
            "java.util.Spliterators.AbstractDoubleSpliterator",
            "java.util.Spliterators.AbstractIntSpliterator",
            "java.util.Spliterators.AbstractLongSpliterator",
            "java.util.Spliterators.AbstractSpliterator"
        ],
        "Method": [
            {
                "tryAdvance": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "forEachRemaining": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "trySplit": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "estimateSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExactSizeIfKnown": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "characteristics": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hasCharacteristics": {
                    "Parameter": {
                        "characteristics": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getComparator": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            }
        ]
    },
    "186": {
        "Package": "java.util",
        "Interface": "Spliterator.OfDouble",
        "Superinterface": [
            "java.util.Spliterator",
            "java.util.Double",
            "java.util.function.Spliterator.OfPrimitive",
            "java.util.Double"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.Spliterators.AbstractDoubleSpliterator"
        ],
        "Method": [
            {
                "tryAdvance": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            },
            {
                "forEachRemaining": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "187": {
        "Package": "java.util",
        "Interface": "Spliterator.OfInt",
        "Superinterface": [
            "java.util.Spliterator",
            "java.util.Integer",
            "java.util.function.Spliterator.OfPrimitive",
            "java.util.Integer"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.Spliterators.AbstractIntSpliterator"
        ],
        "Method": [
            {
                "tryAdvance": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            },
            {
                "forEachRemaining": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "188": {
        "Package": "java.util",
        "Interface": "Spliterator.OfLong",
        "Superinterface": [
            "java.util.Spliterator",
            "java.util.Long",
            "java.util.function.Spliterator.OfPrimitive",
            "java.util.Long"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.Spliterators.AbstractLongSpliterator"
        ],
        "Method": [
            {
                "tryAdvance": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            },
            {
                "forEachRemaining": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "189": {
        "Package": "java.util",
        "Interface": "Spliterator.OfPrimitive",
        "Superinterface": [
            "java.util.Spliterator"
        ],
        "Implementing Class": [
            "java.util.Spliterator.OfDouble",
            "java.util.Spliterator.OfInt",
            "java.util.Spliterator.OfLong"
        ],
        "Subinterface": [
            "java.util.Spliterators.AbstractDoubleSpliterator",
            "java.util.Spliterators.AbstractIntSpliterator",
            "java.util.Spliterators.AbstractLongSpliterator"
        ],
        "Method": []
    },
    "190": {
        "Package": "java.util.concurrent",
        "Interface": "BlockingDeque",
        "Superinterface": [
            "java.util.concurrent.BlockingQueue",
            "java.util.Collection",
            "java.util.Deque",
            "java.lang.Iterable",
            "java.util.Queue"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.LinkedBlockingDeque"
        ],
        "Method": [
            {
                "takeFirst": {
                    "Parameter": {},
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "takeLast": {
                    "Parameter": {},
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "pollFirst": {
                    "Parameter": {
                        "timeout": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "pollLast": {
                    "Parameter": {
                        "timeout": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "removeFirstOccurrence": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "removeLastOccurrence": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "remove": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "poll": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "take": {
                    "Parameter": {},
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "poll": {
                    "Parameter": {
                        "timeout": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "element": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "peek": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "iterator": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "191": {
        "Package": "java.util.concurrent",
        "Interface": "BlockingQueue",
        "Superinterface": [
            "java.util.Collection",
            "java.lang.Iterable",
            "java.util.Queue"
        ],
        "Implementing Class": [
            "java.util.concurrent.BlockingDeque",
            "java.util.concurrent.TransferQueue"
        ],
        "Subinterface": [
            "java.util.concurrent.ArrayBlockingQueue",
            "java.util.concurrent.DelayQueue",
            "java.util.concurrent.LinkedBlockingDeque",
            "java.util.concurrent.LinkedBlockingQueue",
            "java.util.concurrent.LinkedTransferQueue",
            "java.util.concurrent.PriorityBlockingQueue",
            "java.util.concurrent.SynchronousQueue"
        ],
        "Method": [
            {
                "take": {
                    "Parameter": {},
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "poll": {
                    "Parameter": {
                        "timeout": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "remainingCapacity": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "o": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "drainTo": {
                    "Parameter": {
                        "super": "Collection"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "drainTo": {
                    "Parameter": {
                        "super": "Collection",
                        "maxElements": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "192": {
        "Package": "java.util.concurrent",
        "Interface": "Callable",
        "Superinterface": null,
        "Implementing Class": [
            "javax.tools.DocumentationTool.DocumentationTask",
            "javax.tools.JavaCompiler.CompilationTask"
        ],
        "Subinterface": [
            "com.sun.source.util.JavacTask"
        ],
        "Method": [
            {
                "call": {
                    "Parameter": {},
                    "Throw": "java.lang.Exception"
                }
            }
        ]
    },
    "193": {
        "Package": "java.util.concurrent",
        "Interface": "CompletionService",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.ExecutorCompletionService"
        ],
        "Method": [
            {
                "submit": {
                    "Parameter": {
                        "": "Callable"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "take": {
                    "Parameter": {},
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "poll": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "poll": {
                    "Parameter": {
                        "timeout": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.lang.InterruptedException"
                }
            }
        ]
    },
    "194": {
        "Package": "java.util.concurrent",
        "Interface": "CompletionStage",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.CompletableFuture"
        ],
        "Method": [
            {
                "thenApply": {
                    "Parameter": {
                        "super": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "thenApplyAsync": {
                    "Parameter": {
                        "super": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "thenApplyAsync": {
                    "Parameter": {
                        "super": "Function",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "thenAccept": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            },
            {
                "thenAcceptAsync": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            },
            {
                "thenAcceptAsync": {
                    "Parameter": {
                        "super": "Consumer",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "thenRun": {
                    "Parameter": {
                        "action": "Runnable"
                    },
                    "Throw": []
                }
            },
            {
                "thenRunAsync": {
                    "Parameter": {
                        "action": "Runnable"
                    },
                    "Throw": []
                }
            },
            {
                "thenRunAsync": {
                    "Parameter": {
                        "action": "Runnable",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "thenCombine": {
                    "Parameter": {
                        "extendsUother": "CompletionStage",
                        "super": "BiFunction"
                    },
                    "Throw": []
                }
            },
            {
                "thenCombineAsync": {
                    "Parameter": {
                        "extendsUother": "CompletionStage",
                        "super": "BiFunction"
                    },
                    "Throw": []
                }
            },
            {
                "thenCombineAsync": {
                    "Parameter": {
                        "extendsUother": "CompletionStage",
                        "super": "BiFunction",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "thenAcceptBoth": {
                    "Parameter": {
                        "extendsUother": "CompletionStage",
                        "super": "BiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "thenAcceptBothAsync": {
                    "Parameter": {
                        "extendsUother": "CompletionStage",
                        "super": "BiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "thenAcceptBothAsync": {
                    "Parameter": {
                        "extendsUother": "CompletionStage",
                        "super": "BiConsumer",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "runAfterBoth": {
                    "Parameter": {
                        "other": "CompletionStage",
                        "action": "Runnable"
                    },
                    "Throw": []
                }
            },
            {
                "runAfterBothAsync": {
                    "Parameter": {
                        "other": "CompletionStage",
                        "action": "Runnable"
                    },
                    "Throw": []
                }
            },
            {
                "runAfterBothAsync": {
                    "Parameter": {
                        "other": "CompletionStage",
                        "action": "Runnable",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "applyToEither": {
                    "Parameter": {
                        "extends": "CompletionStage",
                        "super": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "applyToEitherAsync": {
                    "Parameter": {
                        "extends": "CompletionStage",
                        "super": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "applyToEitherAsync": {
                    "Parameter": {
                        "extends": "CompletionStage",
                        "super": "Function",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "acceptEither": {
                    "Parameter": {
                        "extends": "CompletionStage",
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            },
            {
                "acceptEitherAsync": {
                    "Parameter": {
                        "extends": "CompletionStage",
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            },
            {
                "acceptEitherAsync": {
                    "Parameter": {
                        "extends": "CompletionStage",
                        "super": "Consumer",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "runAfterEither": {
                    "Parameter": {
                        "other": "CompletionStage",
                        "action": "Runnable"
                    },
                    "Throw": []
                }
            },
            {
                "runAfterEitherAsync": {
                    "Parameter": {
                        "other": "CompletionStage",
                        "action": "Runnable"
                    },
                    "Throw": []
                }
            },
            {
                "runAfterEitherAsync": {
                    "Parameter": {
                        "other": "CompletionStage",
                        "action": "Runnable",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "thenCompose": {
                    "Parameter": {
                        "super": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "thenComposeAsync": {
                    "Parameter": {
                        "super": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "thenComposeAsync": {
                    "Parameter": {
                        "super": "Function",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "handle": {
                    "Parameter": {
                        "super": "BiFunction"
                    },
                    "Throw": []
                }
            },
            {
                "handleAsync": {
                    "Parameter": {
                        "super": "BiFunction"
                    },
                    "Throw": []
                }
            },
            {
                "handleAsync": {
                    "Parameter": {
                        "super": "BiFunction",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "whenComplete": {
                    "Parameter": {
                        "super": "BiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "whenCompleteAsync": {
                    "Parameter": {
                        "super": "BiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "whenCompleteAsync": {
                    "Parameter": {
                        "super": "BiConsumer",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "exceptionally": {
                    "Parameter": {
                        "": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "exceptionallyAsync": {
                    "Parameter": {
                        "": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "exceptionallyAsync": {
                    "Parameter": {
                        "": "Function",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "exceptionallyCompose": {
                    "Parameter": {
                        "": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "exceptionallyComposeAsync": {
                    "Parameter": {
                        "": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "exceptionallyComposeAsync": {
                    "Parameter": {
                        "": "Function",
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "toCompletableFuture": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "195": {
        "Package": "java.util.concurrent",
        "Interface": "ConcurrentMap",
        "Superinterface": [
            "java.util.Map"
        ],
        "Implementing Class": [
            "java.util.concurrent.ConcurrentNavigableMap"
        ],
        "Subinterface": [
            "java.util.concurrent.ConcurrentHashMap",
            "java.util.concurrent.ConcurrentSkipListMap"
        ],
        "Method": [
            {
                "forEach": {
                    "Parameter": {
                        "super": "BiConsumer"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "key": "Object",
                        "value": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "replaceAll": {
                    "Parameter": {
                        "super": "BiFunction"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "196": {
        "Package": "java.util.concurrent",
        "Interface": "ConcurrentNavigableMap",
        "Superinterface": [
            "java.util.concurrent.ConcurrentMap",
            "java.util.Map",
            "java.util.NavigableMap",
            "java.util.SortedMap"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.ConcurrentSkipListMap"
        ],
        "Method": [
            {
                "descendingMap": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "navigableKeySet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "keySet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "descendingKeySet": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "197": {
        "Package": "java.util.concurrent",
        "Interface": "Delayed",
        "Superinterface": [
            "java.lang.Comparable",
            "java.util.concurrent.Delayed"
        ],
        "Implementing Class": [
            "java.util.concurrent.RunnableScheduledFuture",
            "java.util.concurrent.ScheduledFuture"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getDelay": {
                    "Parameter": {
                        "unit": "TimeUnit"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "198": {
        "Package": "java.util.concurrent",
        "Interface": "Executor",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.concurrent.ExecutorService",
            "java.util.concurrent.ScheduledExecutorService"
        ],
        "Subinterface": [
            "java.util.concurrent.AbstractExecutorService",
            "java.util.concurrent.ForkJoinPool",
            "java.util.concurrent.ScheduledThreadPoolExecutor",
            "java.util.concurrent.ThreadPoolExecutor"
        ],
        "Method": [
            {
                "execute": {
                    "Parameter": {
                        "command": "Runnable"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "199": {
        "Package": "java.util.concurrent",
        "Interface": "ExecutorService",
        "Superinterface": [
            "java.util.concurrent.Executor"
        ],
        "Implementing Class": [
            "java.util.concurrent.ScheduledExecutorService"
        ],
        "Subinterface": [
            "java.util.concurrent.AbstractExecutorService",
            "java.util.concurrent.ForkJoinPool",
            "java.util.concurrent.ScheduledThreadPoolExecutor",
            "java.util.concurrent.ThreadPoolExecutor"
        ],
        "Method": [
            {
                "shutdown": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "shutdownNow": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "isShutdown": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isTerminated": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "awaitTermination": {
                    "Parameter": {
                        "timeout": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "submit": {
                    "Parameter": {
                        "Ttask": "Callable"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "submit": {
                    "Parameter": {
                        "task": "Runnable"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "invokeAll": {
                    "Parameter": {
                        "extends": "Collection"
                    },
                    "Throw": "java.util.concurrent.RejectedExecutionException"
                }
            },
            {
                "invokeAll": {
                    "Parameter": {
                        "extends": "Collection",
                        "timeout": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.util.concurrent.RejectedExecutionException"
                }
            },
            {
                "invokeAny": {
                    "Parameter": {
                        "extends": "Collection"
                    },
                    "Throw": "java.util.concurrent.RejectedExecutionException"
                }
            },
            {
                "invokeAny": {
                    "Parameter": {
                        "extends": "Collection",
                        "timeout": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.util.concurrent.RejectedExecutionException"
                }
            }
        ]
    },
    "200": {
        "Package": "java.util.concurrent",
        "Interface": "Flow.Processor",
        "Superinterface": [
            "java.util.concurrent.Flow.Publisher",
            "java.util.concurrent.Flow.Subscriber"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "201": {
        "Package": "java.util.concurrent",
        "Interface": "Flow.Publisher",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.concurrent.Flow.Processor",
            "java.net.http.HttpRequest.BodyPublisher"
        ],
        "Subinterface": [
            "java.util.concurrent.SubmissionPublisher"
        ],
        "Method": [
            {
                "subscribe": {
                    "Parameter": {
                        "super": "Flow.Subscriber"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "202": {
        "Package": "java.util.concurrent",
        "Interface": "Flow.Subscriber",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.concurrent.Flow.Processor",
            "java.net.http.HttpResponse.BodySubscriber"
        ],
        "Subinterface": null,
        "Method": [
            {
                "onSubscribe": {
                    "Parameter": {
                        "subscription": "Flow.Subscription"
                    },
                    "Throw": []
                }
            },
            {
                "onError": {
                    "Parameter": {
                        "throwable": "Throwable"
                    },
                    "Throw": []
                }
            },
            {
                "onComplete": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "203": {
        "Package": "java.util.concurrent",
        "Interface": "Flow.Subscription",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "request": {
                    "Parameter": {
                        "n": "long"
                    },
                    "Throw": []
                }
            },
            {
                "cancel": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "204": {
        "Package": "java.util.concurrent",
        "Interface": "ForkJoinPool.ForkJoinWorkerThreadFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "newThread": {
                    "Parameter": {
                        "pool": "ForkJoinPool"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "205": {
        "Package": "java.util.concurrent",
        "Interface": "ForkJoinPool.ManagedBlocker",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "block": {
                    "Parameter": {},
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "isReleasable": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "206": {
        "Package": "java.util.concurrent",
        "Interface": "Future",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.concurrent.RunnableFuture",
            "java.util.concurrent.RunnableScheduledFuture",
            "java.util.concurrent.ScheduledFuture"
        ],
        "Subinterface": [
            "java.util.concurrent.CompletableFuture",
            "java.util.concurrent.CountedCompleter",
            "java.util.concurrent.ForkJoinTask",
            "java.util.concurrent.FutureTask",
            "java.util.concurrent.RecursiveAction",
            "java.util.concurrent.RecursiveTask",
            "javax.swing.SwingWorker"
        ],
        "Method": [
            {
                "cancel": {
                    "Parameter": {
                        "mayInterruptIfRunning": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "isCancelled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDone": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "get": {
                    "Parameter": {},
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "timeout": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.util.concurrent.TimeoutException"
                }
            }
        ]
    },
    "207": {
        "Package": "java.util.concurrent",
        "Interface": "RejectedExecutionHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.ThreadPoolExecutor.AbortPolicy",
            "java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy",
            "java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy",
            "java.util.concurrent.ThreadPoolExecutor.DiscardPolicy"
        ],
        "Method": [
            {
                "rejectedExecution": {
                    "Parameter": {
                        "r": "Runnable",
                        "executor": "ThreadPoolExecutor"
                    },
                    "Throw": "java.util.concurrent.RejectedExecutionException"
                }
            }
        ]
    },
    "208": {
        "Package": "java.util.concurrent",
        "Interface": "RunnableFuture",
        "Superinterface": [
            "java.util.concurrent.Future",
            "java.lang.Runnable"
        ],
        "Implementing Class": [
            "java.util.concurrent.RunnableScheduledFuture"
        ],
        "Subinterface": [
            "java.util.concurrent.FutureTask",
            "javax.swing.SwingWorker"
        ],
        "Method": [
            {
                "run": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "209": {
        "Package": "java.util.concurrent",
        "Interface": "RunnableScheduledFuture",
        "Superinterface": [
            "java.lang.Comparable",
            "java.util.concurrent.Delayed",
            "java.util.concurrent.Delayed",
            "java.util.concurrent.Future",
            "java.lang.Runnable",
            "java.util.concurrent.RunnableFuture",
            "java.util.concurrent.ScheduledFuture"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isPeriodic": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "210": {
        "Package": "java.util.concurrent",
        "Interface": "ScheduledExecutorService",
        "Superinterface": [
            "java.util.concurrent.Executor",
            "java.util.concurrent.ExecutorService"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.ScheduledThreadPoolExecutor"
        ],
        "Method": [
            {
                "schedule": {
                    "Parameter": {
                        "command": "Runnable",
                        "delay": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "schedule": {
                    "Parameter": {
                        "Vcallable": "Callable",
                        "delay": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "scheduleAtFixedRate": {
                    "Parameter": {
                        "command": "Runnable",
                        "initialDelay": "long",
                        "period": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "scheduleWithFixedDelay": {
                    "Parameter": {
                        "command": "Runnable",
                        "initialDelay": "long",
                        "delay": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "211": {
        "Package": "java.util.concurrent",
        "Interface": "ScheduledFuture",
        "Superinterface": [
            "java.lang.Comparable",
            "java.util.concurrent.Delayed",
            "java.util.concurrent.Delayed",
            "java.util.concurrent.Future"
        ],
        "Implementing Class": [
            "java.util.concurrent.RunnableScheduledFuture"
        ],
        "Subinterface": null,
        "Method": []
    },
    "212": {
        "Package": "java.util.concurrent",
        "Interface": "ThreadFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "newThread": {
                    "Parameter": {
                        "r": "Runnable"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "213": {
        "Package": "java.util.concurrent",
        "Interface": "TransferQueue",
        "Superinterface": [
            "java.util.concurrent.BlockingQueue",
            "java.util.Collection",
            "java.lang.Iterable",
            "java.util.Queue"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.LinkedTransferQueue"
        ],
        "Method": [
            {
                "hasWaitingConsumer": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getWaitingConsumerCount": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "214": {
        "Package": "java.util.concurrent.locks",
        "Interface": "Condition",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject",
            "java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject"
        ],
        "Method": [
            {
                "await": {
                    "Parameter": {},
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "awaitUninterruptibly": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "awaitNanos": {
                    "Parameter": {
                        "nanosTimeout": "long"
                    },
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "await": {
                    "Parameter": {
                        "time": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "awaitUntil": {
                    "Parameter": {
                        "deadline": "Date"
                    },
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "signal": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "signalAll": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "215": {
        "Package": "java.util.concurrent.locks",
        "Interface": "Lock",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.locks.ReentrantLock",
            "java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock",
            "java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock"
        ],
        "Method": [
            {
                "lock": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "lockInterruptibly": {
                    "Parameter": {},
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "tryLock": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "tryLock": {
                    "Parameter": {
                        "time": "long",
                        "unit": "TimeUnit"
                    },
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "unlock": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "newCondition": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            }
        ]
    },
    "216": {
        "Package": "java.util.concurrent.locks",
        "Interface": "ReadWriteLock",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.concurrent.locks.ReentrantReadWriteLock"
        ],
        "Method": [
            {
                "readLock": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "writeLock": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "217": {
        "Package": "java.util.function",
        "Interface": "BiConsumer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "andThen": {
                    "Parameter": {
                        "super": "BiConsumer"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "218": {
        "Package": "java.util.function",
        "Interface": "BiFunction",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.function.BinaryOperator"
        ],
        "Subinterface": null,
        "Method": [
            {
                "andThen": {
                    "Parameter": {
                        "super": "Function"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "219": {
        "Package": "java.util.function",
        "Interface": "BinaryOperator",
        "Superinterface": [
            "java.util.function.BiFunction"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "minBy": {
                    "Parameter": {
                        "superTcomparator": "Comparator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "maxBy": {
                    "Parameter": {
                        "superTcomparator": "Comparator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "220": {
        "Package": "java.util.function",
        "Interface": "BiPredicate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "and": {
                    "Parameter": {
                        "super": "BiPredicate"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "negate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "or": {
                    "Parameter": {
                        "super": "BiPredicate"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "221": {
        "Package": "java.util.function",
        "Interface": "BooleanSupplier",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAsBoolean": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "222": {
        "Package": "java.util.function",
        "Interface": "Consumer",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.stream.Stream.Builder"
        ],
        "Subinterface": null,
        "Method": [
            {
                "andThen": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "223": {
        "Package": "java.util.function",
        "Interface": "DoubleBinaryOperator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "applyAsDouble": {
                    "Parameter": {
                        "left": "double",
                        "right": "double"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "224": {
        "Package": "java.util.function",
        "Interface": "DoubleConsumer",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.stream.DoubleStream.Builder"
        ],
        "Subinterface": [
            "java.util.DoubleSummaryStatistics"
        ],
        "Method": [
            {
                "accept": {
                    "Parameter": {
                        "value": "double"
                    },
                    "Throw": []
                }
            },
            {
                "andThen": {
                    "Parameter": {
                        "after": "DoubleConsumer"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "225": {
        "Package": "java.util.function",
        "Interface": "DoubleFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "apply": {
                    "Parameter": {
                        "value": "double"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "226": {
        "Package": "java.util.function",
        "Interface": "DoublePredicate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "test": {
                    "Parameter": {
                        "value": "double"
                    },
                    "Throw": []
                }
            },
            {
                "and": {
                    "Parameter": {
                        "other": "DoublePredicate"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "negate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "or": {
                    "Parameter": {
                        "other": "DoublePredicate"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "227": {
        "Package": "java.util.function",
        "Interface": "DoubleSupplier",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAsDouble": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "228": {
        "Package": "java.util.function",
        "Interface": "DoubleToIntFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "applyAsInt": {
                    "Parameter": {
                        "value": "double"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "229": {
        "Package": "java.util.function",
        "Interface": "DoubleToLongFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "applyAsLong": {
                    "Parameter": {
                        "value": "double"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "230": {
        "Package": "java.util.function",
        "Interface": "DoubleUnaryOperator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "applyAsDouble": {
                    "Parameter": {
                        "operand": "double"
                    },
                    "Throw": []
                }
            },
            {
                "compose": {
                    "Parameter": {
                        "before": "DoubleUnaryOperator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "andThen": {
                    "Parameter": {
                        "after": "DoubleUnaryOperator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "identity": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "231": {
        "Package": "java.util.function",
        "Interface": "Function",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.function.UnaryOperator"
        ],
        "Subinterface": null,
        "Method": [
            {
                "compose": {
                    "Parameter": {
                        "superV": "Function"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "andThen": {
                    "Parameter": {
                        "super": "Function"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "identity": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "232": {
        "Package": "java.util.function",
        "Interface": "IntBinaryOperator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "applyAsInt": {
                    "Parameter": {
                        "left": "int",
                        "right": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "233": {
        "Package": "java.util.function",
        "Interface": "IntConsumer",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.stream.IntStream.Builder"
        ],
        "Subinterface": [
            "java.util.IntSummaryStatistics",
            "java.util.LongSummaryStatistics"
        ],
        "Method": [
            {
                "accept": {
                    "Parameter": {
                        "value": "int"
                    },
                    "Throw": []
                }
            },
            {
                "andThen": {
                    "Parameter": {
                        "after": "IntConsumer"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "234": {
        "Package": "java.util.function",
        "Interface": "IntFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "apply": {
                    "Parameter": {
                        "value": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "235": {
        "Package": "java.util.function",
        "Interface": "IntPredicate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "test": {
                    "Parameter": {
                        "value": "int"
                    },
                    "Throw": []
                }
            },
            {
                "and": {
                    "Parameter": {
                        "other": "IntPredicate"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "negate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "or": {
                    "Parameter": {
                        "other": "IntPredicate"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "236": {
        "Package": "java.util.function",
        "Interface": "IntSupplier",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAsInt": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "237": {
        "Package": "java.util.function",
        "Interface": "IntToDoubleFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "applyAsDouble": {
                    "Parameter": {
                        "value": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "238": {
        "Package": "java.util.function",
        "Interface": "IntToLongFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "applyAsLong": {
                    "Parameter": {
                        "value": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "239": {
        "Package": "java.util.function",
        "Interface": "IntUnaryOperator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "applyAsInt": {
                    "Parameter": {
                        "operand": "int"
                    },
                    "Throw": []
                }
            },
            {
                "compose": {
                    "Parameter": {
                        "before": "IntUnaryOperator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "andThen": {
                    "Parameter": {
                        "after": "IntUnaryOperator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "identity": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "240": {
        "Package": "java.util.function",
        "Interface": "LongBinaryOperator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "applyAsLong": {
                    "Parameter": {
                        "left": "long",
                        "right": "long"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "241": {
        "Package": "java.util.function",
        "Interface": "LongConsumer",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.stream.LongStream.Builder"
        ],
        "Subinterface": [
            "java.util.LongSummaryStatistics"
        ],
        "Method": [
            {
                "accept": {
                    "Parameter": {
                        "value": "long"
                    },
                    "Throw": []
                }
            },
            {
                "andThen": {
                    "Parameter": {
                        "after": "LongConsumer"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "242": {
        "Package": "java.util.function",
        "Interface": "LongFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "apply": {
                    "Parameter": {
                        "value": "long"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "243": {
        "Package": "java.util.function",
        "Interface": "LongPredicate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "test": {
                    "Parameter": {
                        "value": "long"
                    },
                    "Throw": []
                }
            },
            {
                "and": {
                    "Parameter": {
                        "other": "LongPredicate"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "negate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "or": {
                    "Parameter": {
                        "other": "LongPredicate"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "244": {
        "Package": "java.util.function",
        "Interface": "LongSupplier",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAsLong": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "245": {
        "Package": "java.util.function",
        "Interface": "LongToDoubleFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "applyAsDouble": {
                    "Parameter": {
                        "value": "long"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "246": {
        "Package": "java.util.function",
        "Interface": "LongToIntFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "applyAsInt": {
                    "Parameter": {
                        "value": "long"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "247": {
        "Package": "java.util.function",
        "Interface": "LongUnaryOperator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "applyAsLong": {
                    "Parameter": {
                        "operand": "long"
                    },
                    "Throw": []
                }
            },
            {
                "compose": {
                    "Parameter": {
                        "before": "LongUnaryOperator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "andThen": {
                    "Parameter": {
                        "after": "LongUnaryOperator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "identity": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "248": {
        "Package": "java.util.function",
        "Interface": "ObjDoubleConsumer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "249": {
        "Package": "java.util.function",
        "Interface": "ObjIntConsumer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "250": {
        "Package": "java.util.function",
        "Interface": "ObjLongConsumer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "251": {
        "Package": "java.util.function",
        "Interface": "Predicate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "and": {
                    "Parameter": {
                        "super": "Predicate"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "negate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "or": {
                    "Parameter": {
                        "super": "Predicate"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "isEqual": {
                    "Parameter": {
                        "targetRef": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "not": {
                    "Parameter": {
                        "superTtarget": "Predicate"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "252": {
        "Package": "java.util.function",
        "Interface": "Supplier",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.ServiceLoader.Provider"
        ],
        "Subinterface": [
            "jdk.dynalink.linker.GuardingDynamicLinkerExporter"
        ],
        "Method": [
            {
                "get": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "253": {
        "Package": "java.util.function",
        "Interface": "ToDoubleBiFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "254": {
        "Package": "java.util.function",
        "Interface": "ToDoubleFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "255": {
        "Package": "java.util.function",
        "Interface": "ToIntBiFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "256": {
        "Package": "java.util.function",
        "Interface": "ToIntFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "257": {
        "Package": "java.util.function",
        "Interface": "ToLongBiFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "258": {
        "Package": "java.util.function",
        "Interface": "ToLongFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "259": {
        "Package": "java.util.function",
        "Interface": "UnaryOperator",
        "Superinterface": [
            "java.util.function.Function"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "identity": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "260": {
        "Package": "java.util.random",
        "Interface": "RandomGenerator.ArbitrarilyJumpableGenerator",
        "Superinterface": [
            "java.util.random.RandomGenerator",
            "java.util.random.RandomGenerator.JumpableGenerator",
            "java.util.random.RandomGenerator.LeapableGenerator",
            "java.util.random.RandomGenerator.StreamableGenerator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "of": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "copy": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "jumpPowerOfTwo": {
                    "Parameter": {
                        "logDistance": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "jump": {
                    "Parameter": {
                        "distance": "double"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "jump": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "jumps": {
                    "Parameter": {
                        "distance": "double"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "jumps": {
                    "Parameter": {
                        "streamSize": "long",
                        "distance": "double"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "leap": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "copyAndJump": {
                    "Parameter": {
                        "distance": "double"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "261": {
        "Package": "java.util.random",
        "Interface": "RandomGenerator",
        "Superinterface": null,
        "Implementing Class": [
            "java.util.random.RandomGenerator.ArbitrarilyJumpableGenerator",
            "java.util.random.RandomGenerator.JumpableGenerator",
            "java.util.random.RandomGenerator.LeapableGenerator",
            "java.util.random.RandomGenerator.SplittableGenerator",
            "java.util.random.RandomGenerator.StreamableGenerator"
        ],
        "Subinterface": [
            "java.util.Random",
            "java.security.SecureRandom",
            "java.util.SplittableRandom",
            "java.util.concurrent.ThreadLocalRandom"
        ],
        "Method": [
            {
                "of": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getDefault": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDeprecated": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "doubles": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "doubles": {
                    "Parameter": {
                        "randomNumberOrigin": "double",
                        "randomNumberBound": "double"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "doubles": {
                    "Parameter": {
                        "streamSize": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "doubles": {
                    "Parameter": {
                        "streamSize": "long",
                        "randomNumberOrigin": "double",
                        "randomNumberBound": "double"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "ints": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "ints": {
                    "Parameter": {
                        "randomNumberOrigin": "int",
                        "randomNumberBound": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "ints": {
                    "Parameter": {
                        "streamSize": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "ints": {
                    "Parameter": {
                        "streamSize": "long",
                        "randomNumberOrigin": "int",
                        "randomNumberBound": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "longs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "longs": {
                    "Parameter": {
                        "randomNumberOrigin": "long",
                        "randomNumberBound": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "longs": {
                    "Parameter": {
                        "streamSize": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "longs": {
                    "Parameter": {
                        "streamSize": "long",
                        "randomNumberOrigin": "long",
                        "randomNumberBound": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "nextBoolean": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "nextBytes": {
                    "Parameter": {
                        "bytes": "byte"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "nextFloat": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "nextFloat": {
                    "Parameter": {
                        "bound": "float"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "nextFloat": {
                    "Parameter": {
                        "origin": "float",
                        "bound": "float"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "nextDouble": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "nextDouble": {
                    "Parameter": {
                        "bound": "double"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "nextDouble": {
                    "Parameter": {
                        "origin": "double",
                        "bound": "double"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "nextInt": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "nextInt": {
                    "Parameter": {
                        "bound": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "nextInt": {
                    "Parameter": {
                        "origin": "int",
                        "bound": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "nextLong": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "nextLong": {
                    "Parameter": {
                        "bound": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "nextLong": {
                    "Parameter": {
                        "origin": "long",
                        "bound": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "nextGaussian": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "nextGaussian": {
                    "Parameter": {
                        "mean": "double",
                        "stddev": "double"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "nextExponential": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "262": {
        "Package": "java.util.random",
        "Interface": "RandomGenerator.JumpableGenerator",
        "Superinterface": [
            "java.util.random.RandomGenerator",
            "java.util.random.RandomGenerator.StreamableGenerator"
        ],
        "Implementing Class": [
            "java.util.random.RandomGenerator.ArbitrarilyJumpableGenerator",
            "java.util.random.RandomGenerator.LeapableGenerator"
        ],
        "Subinterface": null,
        "Method": [
            {
                "of": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "copy": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "jump": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "jumpDistance": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "jumps": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "jumps": {
                    "Parameter": {
                        "streamSize": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "rngs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "rngs": {
                    "Parameter": {
                        "streamSize": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "copyAndJump": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "263": {
        "Package": "java.util.random",
        "Interface": "RandomGenerator.LeapableGenerator",
        "Superinterface": [
            "java.util.random.RandomGenerator",
            "java.util.random.RandomGenerator.JumpableGenerator",
            "java.util.random.RandomGenerator.StreamableGenerator"
        ],
        "Implementing Class": [
            "java.util.random.RandomGenerator.ArbitrarilyJumpableGenerator"
        ],
        "Subinterface": null,
        "Method": [
            {
                "of": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "copy": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "leap": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "leapDistance": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "leaps": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "leaps": {
                    "Parameter": {
                        "streamSize": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "copyAndLeap": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "264": {
        "Package": "java.util.random",
        "Interface": "RandomGenerator.SplittableGenerator",
        "Superinterface": [
            "java.util.random.RandomGenerator",
            "java.util.random.RandomGenerator.StreamableGenerator"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.util.SplittableRandom"
        ],
        "Method": [
            {
                "of": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "split": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "split": {
                    "Parameter": {
                        "source": "RandomGenerator.SplittableGenerator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "splits": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "splits": {
                    "Parameter": {
                        "streamSize": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "splits": {
                    "Parameter": {
                        "source": "RandomGenerator.SplittableGenerator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "splits": {
                    "Parameter": {
                        "streamSize": "long",
                        "source": "RandomGenerator.SplittableGenerator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "rngs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "rngs": {
                    "Parameter": {
                        "streamSize": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "265": {
        "Package": "java.util.random",
        "Interface": "RandomGenerator.StreamableGenerator",
        "Superinterface": [
            "java.util.random.RandomGenerator"
        ],
        "Implementing Class": [
            "java.util.random.RandomGenerator.ArbitrarilyJumpableGenerator",
            "java.util.random.RandomGenerator.JumpableGenerator",
            "java.util.random.RandomGenerator.LeapableGenerator",
            "java.util.random.RandomGenerator.SplittableGenerator"
        ],
        "Subinterface": [
            "java.util.SplittableRandom"
        ],
        "Method": [
            {
                "of": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "rngs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "rngs": {
                    "Parameter": {
                        "streamSize": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "266": {
        "Package": "java.util.regex",
        "Interface": "MatchResult",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.regex.Matcher"
        ],
        "Method": [
            {
                "start": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "start": {
                    "Parameter": {
                        "group": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "end": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "end": {
                    "Parameter": {
                        "group": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "group": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "group": {
                    "Parameter": {
                        "group": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "groupCount": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "267": {
        "Package": "java.util.spi",
        "Interface": "ResourceBundleControlProvider",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getControl": {
                    "Parameter": {
                        "baseName": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "268": {
        "Package": "java.util.spi",
        "Interface": "ResourceBundleProvider",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.spi.AbstractResourceBundleProvider"
        ],
        "Method": [
            {
                "getBundle": {
                    "Parameter": {
                        "baseName": "String",
                        "locale": "Locale"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "269": {
        "Package": "java.util.spi",
        "Interface": "ToolProvider",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "run": {
                    "Parameter": {
                        "out": "PrintWriter",
                        "err": "PrintWriter",
                        "args": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "run": {
                    "Parameter": {
                        "out": "PrintStream",
                        "err": "PrintStream",
                        "args": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "findFirst": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "270": {
        "Package": "java.util.stream",
        "Interface": "BaseStream",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": [
            "java.util.stream.DoubleStream",
            "java.util.stream.IntStream",
            "java.util.stream.LongStream",
            "java.util.stream.Stream"
        ],
        "Subinterface": null,
        "Method": [
            {
                "iterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "spliterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isParallel": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "sequential": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "parallel": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "unordered": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "onClose": {
                    "Parameter": {
                        "closeHandler": "Runnable"
                    },
                    "Throw": []
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "271": {
        "Package": "java.util.stream",
        "Interface": "Collector",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "supplier": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "accumulator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "combiner": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "finisher": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "characteristics": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "of": {
                    "Parameter": {
                        "Rsupplier": "Supplier",
                        "R": "BiConsumer",
                        "Rcombiner": "BinaryOperator",
                        "characteristics": "Collector.Characteristics"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "of": {
                    "Parameter": {
                        "Asupplier": "Supplier",
                        "A": "Function",
                        "Acombiner": "BinaryOperator",
                        "characteristics": "Collector.Characteristics"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "272": {
        "Package": "java.util.stream",
        "Interface": "DoubleStream.Builder",
        "Superinterface": [
            "java.util.function.DoubleConsumer"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "accept": {
                    "Parameter": {
                        "t": "double"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "add": {
                    "Parameter": {
                        "t": "double"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "build": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            }
        ]
    },
    "273": {
        "Package": "java.util.stream",
        "Interface": "DoubleStream.DoubleMapMultiConsumer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "accept": {
                    "Parameter": {
                        "value": "double",
                        "dc": "DoubleConsumer"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "274": {
        "Package": "java.util.stream",
        "Interface": "DoubleStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.util.stream.BaseStream",
            "java.util.stream.Double"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "filter": {
                    "Parameter": {
                        "predicate": "DoublePredicate"
                    },
                    "Throw": []
                }
            },
            {
                "map": {
                    "Parameter": {
                        "mapper": "DoubleUnaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "mapToObj": {
                    "Parameter": {
                        "extendsUmapper": "DoubleFunction"
                    },
                    "Throw": []
                }
            },
            {
                "mapToInt": {
                    "Parameter": {
                        "mapper": "DoubleToIntFunction"
                    },
                    "Throw": []
                }
            },
            {
                "mapToLong": {
                    "Parameter": {
                        "mapper": "DoubleToLongFunction"
                    },
                    "Throw": []
                }
            },
            {
                "flatMap": {
                    "Parameter": {
                        "extends": "DoubleFunction"
                    },
                    "Throw": []
                }
            },
            {
                "mapMulti": {
                    "Parameter": {
                        "mapper": "DoubleStream.DoubleMapMultiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "distinct": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "sorted": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "peek": {
                    "Parameter": {
                        "action": "DoubleConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "limit": {
                    "Parameter": {
                        "maxSize": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "skip": {
                    "Parameter": {
                        "n": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "takeWhile": {
                    "Parameter": {
                        "predicate": "DoublePredicate"
                    },
                    "Throw": []
                }
            },
            {
                "dropWhile": {
                    "Parameter": {
                        "predicate": "DoublePredicate"
                    },
                    "Throw": []
                }
            },
            {
                "forEach": {
                    "Parameter": {
                        "action": "DoubleConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "forEachOrdered": {
                    "Parameter": {
                        "action": "DoubleConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "toArray": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "reduce": {
                    "Parameter": {
                        "identity": "double",
                        "op": "DoubleBinaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "reduce": {
                    "Parameter": {
                        "op": "DoubleBinaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "collect": {
                    "Parameter": {
                        "Rsupplier": "Supplier",
                        "Raccumulator": "ObjDoubleConsumer",
                        "R": "BiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "sum": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "min": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "max": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "count": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "average": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "summaryStatistics": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "anyMatch": {
                    "Parameter": {
                        "predicate": "DoublePredicate"
                    },
                    "Throw": []
                }
            },
            {
                "allMatch": {
                    "Parameter": {
                        "predicate": "DoublePredicate"
                    },
                    "Throw": []
                }
            },
            {
                "noneMatch": {
                    "Parameter": {
                        "predicate": "DoublePredicate"
                    },
                    "Throw": []
                }
            },
            {
                "findFirst": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "findAny": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "boxed": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "builder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "empty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "of": {
                    "Parameter": {
                        "t": "double"
                    },
                    "Throw": []
                }
            },
            {
                "of": {
                    "Parameter": {
                        "values": "double"
                    },
                    "Throw": []
                }
            },
            {
                "iterate": {
                    "Parameter": {
                        "seed": "double",
                        "f": "DoubleUnaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "iterate": {
                    "Parameter": {
                        "seed": "double",
                        "hasNext": "DoublePredicate",
                        "next": "DoubleUnaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "generate": {
                    "Parameter": {
                        "s": "DoubleSupplier"
                    },
                    "Throw": []
                }
            },
            {
                "concat": {
                    "Parameter": {
                        "a": "DoubleStream",
                        "b": "DoubleStream"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "275": {
        "Package": "java.util.stream",
        "Interface": "IntStream.Builder",
        "Superinterface": [
            "java.util.function.IntConsumer"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "accept": {
                    "Parameter": {
                        "t": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "add": {
                    "Parameter": {
                        "t": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "build": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            }
        ]
    },
    "276": {
        "Package": "java.util.stream",
        "Interface": "IntStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.util.stream.BaseStream",
            "java.util.stream.Integer"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "filter": {
                    "Parameter": {
                        "predicate": "IntPredicate"
                    },
                    "Throw": []
                }
            },
            {
                "map": {
                    "Parameter": {
                        "mapper": "IntUnaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "mapToObj": {
                    "Parameter": {
                        "extendsUmapper": "IntFunction"
                    },
                    "Throw": []
                }
            },
            {
                "mapToLong": {
                    "Parameter": {
                        "mapper": "IntToLongFunction"
                    },
                    "Throw": []
                }
            },
            {
                "mapToDouble": {
                    "Parameter": {
                        "mapper": "IntToDoubleFunction"
                    },
                    "Throw": []
                }
            },
            {
                "flatMap": {
                    "Parameter": {
                        "extends": "IntFunction"
                    },
                    "Throw": []
                }
            },
            {
                "mapMulti": {
                    "Parameter": {
                        "mapper": "IntStream.IntMapMultiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "distinct": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "sorted": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "peek": {
                    "Parameter": {
                        "action": "IntConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "limit": {
                    "Parameter": {
                        "maxSize": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "skip": {
                    "Parameter": {
                        "n": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "takeWhile": {
                    "Parameter": {
                        "predicate": "IntPredicate"
                    },
                    "Throw": []
                }
            },
            {
                "dropWhile": {
                    "Parameter": {
                        "predicate": "IntPredicate"
                    },
                    "Throw": []
                }
            },
            {
                "forEach": {
                    "Parameter": {
                        "action": "IntConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "forEachOrdered": {
                    "Parameter": {
                        "action": "IntConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "toArray": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "reduce": {
                    "Parameter": {
                        "identity": "int",
                        "op": "IntBinaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "reduce": {
                    "Parameter": {
                        "op": "IntBinaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "collect": {
                    "Parameter": {
                        "Rsupplier": "Supplier",
                        "Raccumulator": "ObjIntConsumer",
                        "R": "BiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "sum": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "min": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "max": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "count": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "average": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "summaryStatistics": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "anyMatch": {
                    "Parameter": {
                        "predicate": "IntPredicate"
                    },
                    "Throw": []
                }
            },
            {
                "allMatch": {
                    "Parameter": {
                        "predicate": "IntPredicate"
                    },
                    "Throw": []
                }
            },
            {
                "noneMatch": {
                    "Parameter": {
                        "predicate": "IntPredicate"
                    },
                    "Throw": []
                }
            },
            {
                "findFirst": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "findAny": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "asLongStream": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "asDoubleStream": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "boxed": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "builder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "empty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "of": {
                    "Parameter": {
                        "t": "int"
                    },
                    "Throw": []
                }
            },
            {
                "of": {
                    "Parameter": {
                        "values": "int"
                    },
                    "Throw": []
                }
            },
            {
                "iterate": {
                    "Parameter": {
                        "seed": "int",
                        "f": "IntUnaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "iterate": {
                    "Parameter": {
                        "seed": "int",
                        "hasNext": "IntPredicate",
                        "next": "IntUnaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "generate": {
                    "Parameter": {
                        "s": "IntSupplier"
                    },
                    "Throw": []
                }
            },
            {
                "range": {
                    "Parameter": {
                        "startInclusive": "int",
                        "endExclusive": "int"
                    },
                    "Throw": []
                }
            },
            {
                "rangeClosed": {
                    "Parameter": {
                        "startInclusive": "int",
                        "endInclusive": "int"
                    },
                    "Throw": []
                }
            },
            {
                "concat": {
                    "Parameter": {
                        "a": "IntStream",
                        "b": "IntStream"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "277": {
        "Package": "java.util.stream",
        "Interface": "IntStream.IntMapMultiConsumer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "accept": {
                    "Parameter": {
                        "value": "int",
                        "ic": "IntConsumer"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "278": {
        "Package": "java.util.stream",
        "Interface": "LongStream.Builder",
        "Superinterface": [
            "java.util.function.LongConsumer"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "accept": {
                    "Parameter": {
                        "t": "long"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "add": {
                    "Parameter": {
                        "t": "long"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "build": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            }
        ]
    },
    "279": {
        "Package": "java.util.stream",
        "Interface": "LongStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.util.stream.BaseStream",
            "java.util.stream.Long"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "filter": {
                    "Parameter": {
                        "predicate": "LongPredicate"
                    },
                    "Throw": []
                }
            },
            {
                "map": {
                    "Parameter": {
                        "mapper": "LongUnaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "mapToObj": {
                    "Parameter": {
                        "extendsUmapper": "LongFunction"
                    },
                    "Throw": []
                }
            },
            {
                "mapToInt": {
                    "Parameter": {
                        "mapper": "LongToIntFunction"
                    },
                    "Throw": []
                }
            },
            {
                "mapToDouble": {
                    "Parameter": {
                        "mapper": "LongToDoubleFunction"
                    },
                    "Throw": []
                }
            },
            {
                "flatMap": {
                    "Parameter": {
                        "extends": "LongFunction"
                    },
                    "Throw": []
                }
            },
            {
                "mapMulti": {
                    "Parameter": {
                        "mapper": "LongStream.LongMapMultiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "distinct": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "sorted": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "peek": {
                    "Parameter": {
                        "action": "LongConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "limit": {
                    "Parameter": {
                        "maxSize": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "skip": {
                    "Parameter": {
                        "n": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "takeWhile": {
                    "Parameter": {
                        "predicate": "LongPredicate"
                    },
                    "Throw": []
                }
            },
            {
                "dropWhile": {
                    "Parameter": {
                        "predicate": "LongPredicate"
                    },
                    "Throw": []
                }
            },
            {
                "forEach": {
                    "Parameter": {
                        "action": "LongConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "forEachOrdered": {
                    "Parameter": {
                        "action": "LongConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "toArray": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "reduce": {
                    "Parameter": {
                        "identity": "long",
                        "op": "LongBinaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "reduce": {
                    "Parameter": {
                        "op": "LongBinaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "collect": {
                    "Parameter": {
                        "Rsupplier": "Supplier",
                        "Raccumulator": "ObjLongConsumer",
                        "R": "BiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "sum": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "min": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "max": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "count": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "average": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "summaryStatistics": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "anyMatch": {
                    "Parameter": {
                        "predicate": "LongPredicate"
                    },
                    "Throw": []
                }
            },
            {
                "allMatch": {
                    "Parameter": {
                        "predicate": "LongPredicate"
                    },
                    "Throw": []
                }
            },
            {
                "noneMatch": {
                    "Parameter": {
                        "predicate": "LongPredicate"
                    },
                    "Throw": []
                }
            },
            {
                "findFirst": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "findAny": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "asDoubleStream": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "boxed": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "builder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "empty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "of": {
                    "Parameter": {
                        "t": "long"
                    },
                    "Throw": []
                }
            },
            {
                "of": {
                    "Parameter": {
                        "values": "long"
                    },
                    "Throw": []
                }
            },
            {
                "iterate": {
                    "Parameter": {
                        "seed": "long",
                        "f": "LongUnaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "iterate": {
                    "Parameter": {
                        "seed": "long",
                        "hasNext": "LongPredicate",
                        "next": "LongUnaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "generate": {
                    "Parameter": {
                        "s": "LongSupplier"
                    },
                    "Throw": []
                }
            },
            {
                "range": {
                    "Parameter": {
                        "startInclusive": "long",
                        "endExclusive": "long"
                    },
                    "Throw": []
                }
            },
            {
                "rangeClosed": {
                    "Parameter": {
                        "startInclusive": "long",
                        "endInclusive": "long"
                    },
                    "Throw": []
                }
            },
            {
                "concat": {
                    "Parameter": {
                        "a": "LongStream",
                        "b": "LongStream"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "280": {
        "Package": "java.util.stream",
        "Interface": "LongStream.LongMapMultiConsumer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "accept": {
                    "Parameter": {
                        "value": "long",
                        "lc": "LongConsumer"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "281": {
        "Package": "java.util.stream",
        "Interface": "Stream.Builder",
        "Superinterface": [
            "java.util.function.Consumer"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "build": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            }
        ]
    },
    "282": {
        "Package": "java.util.stream",
        "Interface": "Stream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.util.stream.BaseStream",
            "java.util.stream.Stream"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "filter": {
                    "Parameter": {
                        "super": "Predicate"
                    },
                    "Throw": []
                }
            },
            {
                "map": {
                    "Parameter": {
                        "super": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "mapToInt": {
                    "Parameter": {
                        "super": "ToIntFunction"
                    },
                    "Throw": []
                }
            },
            {
                "mapToLong": {
                    "Parameter": {
                        "super": "ToLongFunction"
                    },
                    "Throw": []
                }
            },
            {
                "mapToDouble": {
                    "Parameter": {
                        "super": "ToDoubleFunction"
                    },
                    "Throw": []
                }
            },
            {
                "flatMap": {
                    "Parameter": {
                        "super": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "flatMapToInt": {
                    "Parameter": {
                        "super": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "flatMapToLong": {
                    "Parameter": {
                        "super": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "flatMapToDouble": {
                    "Parameter": {
                        "super": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "mapMulti": {
                    "Parameter": {
                        "super": "BiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "mapMultiToInt": {
                    "Parameter": {
                        "super": "BiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "mapMultiToLong": {
                    "Parameter": {
                        "super": "BiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "mapMultiToDouble": {
                    "Parameter": {
                        "super": "BiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "distinct": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "sorted": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "sorted": {
                    "Parameter": {
                        "super": "Comparator"
                    },
                    "Throw": []
                }
            },
            {
                "peek": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            },
            {
                "limit": {
                    "Parameter": {
                        "maxSize": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "skip": {
                    "Parameter": {
                        "n": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "takeWhile": {
                    "Parameter": {
                        "super": "Predicate"
                    },
                    "Throw": []
                }
            },
            {
                "dropWhile": {
                    "Parameter": {
                        "super": "Predicate"
                    },
                    "Throw": []
                }
            },
            {
                "forEach": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            },
            {
                "forEachOrdered": {
                    "Parameter": {
                        "super": "Consumer"
                    },
                    "Throw": []
                }
            },
            {
                "toArray": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toArray": {
                    "Parameter": {
                        "Agenerator": "IntFunction"
                    },
                    "Throw": "java.lang.ArrayStoreException"
                }
            },
            {
                "reduce": {
                    "Parameter": {
                        "": "BinaryOperator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "collect": {
                    "Parameter": {
                        "Rsupplier": "Supplier",
                        "R": "BiConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "collect": {
                    "Parameter": {
                        "super": "Collector"
                    },
                    "Throw": []
                }
            },
            {
                "toList": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "min": {
                    "Parameter": {
                        "super": "Comparator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "max": {
                    "Parameter": {
                        "super": "Comparator"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "count": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "anyMatch": {
                    "Parameter": {
                        "super": "Predicate"
                    },
                    "Throw": []
                }
            },
            {
                "allMatch": {
                    "Parameter": {
                        "super": "Predicate"
                    },
                    "Throw": []
                }
            },
            {
                "noneMatch": {
                    "Parameter": {
                        "super": "Predicate"
                    },
                    "Throw": []
                }
            },
            {
                "findFirst": {
                    "Parameter": {},
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "findAny": {
                    "Parameter": {},
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "builder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "empty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "generate": {
                    "Parameter": {
                        "extendsTs": "Supplier"
                    },
                    "Throw": []
                }
            },
            {
                "concat": {
                    "Parameter": {
                        "extendsTa": "Stream",
                        "extendsTb": "Stream"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "283": {
        "Package": "java.util.zip",
        "Interface": "Checksum",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.util.zip.Adler32",
            "java.util.zip.CRC32",
            "java.util.zip.CRC32C"
        ],
        "Method": [
            {
                "update": {
                    "Parameter": {
                        "b": "int"
                    },
                    "Throw": []
                }
            },
            {
                "update": {
                    "Parameter": {
                        "b": "byte"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "update": {
                    "Parameter": {
                        "b": "byte",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": []
                }
            },
            {
                "update": {
                    "Parameter": {
                        "buffer": "ByteBuffer"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "reset": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "284": {
        "Package": "javax.crypto",
        "Interface": "SecretKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.Key",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "javax.crypto.interfaces.PBEKey"
        ],
        "Subinterface": [
            "javax.security.auth.kerberos.EncryptionKey",
            "javax.security.auth.kerberos.KerberosKey",
            "javax.crypto.spec.SecretKeySpec"
        ],
        "Method": []
    },
    "285": {
        "Package": "javax.crypto.interfaces",
        "Interface": "DHKey",
        "Superinterface": null,
        "Implementing Class": [
            "javax.crypto.interfaces.DHPrivateKey",
            "javax.crypto.interfaces.DHPublicKey"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getParams": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "286": {
        "Package": "javax.crypto.interfaces",
        "Interface": "DHPrivateKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "javax.crypto.interfaces.DHKey",
            "java.security.Key",
            "java.security.PrivateKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getX": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "287": {
        "Package": "javax.crypto.interfaces",
        "Interface": "DHPublicKey",
        "Superinterface": [
            "javax.crypto.interfaces.DHKey",
            "java.security.Key",
            "java.security.PublicKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getY": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "288": {
        "Package": "javax.crypto.interfaces",
        "Interface": "PBEKey",
        "Superinterface": [
            "javax.security.auth.Destroyable",
            "java.security.Key",
            "javax.crypto.SecretKey",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPassword": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSalt": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIterationCount": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "289": {
        "Package": "javax.net.ssl",
        "Interface": "HandshakeCompletedListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "handshakeCompleted": {
                    "Parameter": {
                        "event": "HandshakeCompletedEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "290": {
        "Package": "javax.net.ssl",
        "Interface": "HostnameVerifier",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "verify": {
                    "Parameter": {
                        "hostname": "String",
                        "session": "SSLSession"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "291": {
        "Package": "javax.net.ssl",
        "Interface": "SSLSession",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.net.ssl.ExtendedSSLSession"
        ],
        "Method": [
            {
                "getId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSessionContext": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getCreationTime": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLastAccessedTime": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "invalidate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isValid": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "putValue": {
                    "Parameter": {
                        "name": "String",
                        "value": "Object"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getValue": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "removeValue": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getValueNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPeerCertificates": {
                    "Parameter": {},
                    "Throw": "javax.net.ssl.SSLPeerUnverifiedException"
                }
            },
            {
                "getLocalCertificates": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPeerCertificateChain": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getPeerPrincipal": {
                    "Parameter": {},
                    "Throw": "javax.net.ssl.SSLPeerUnverifiedException"
                }
            },
            {
                "getLocalPrincipal": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCipherSuite": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getProtocol": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPeerHost": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPeerPort": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPacketBufferSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getApplicationBufferSize": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "292": {
        "Package": "javax.net.ssl",
        "Interface": "SSLSessionBindingListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "valueBound": {
                    "Parameter": {
                        "event": "SSLSessionBindingEvent"
                    },
                    "Throw": []
                }
            },
            {
                "valueUnbound": {
                    "Parameter": {
                        "event": "SSLSessionBindingEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "293": {
        "Package": "javax.net.ssl",
        "Interface": "SSLSessionContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getSession": {
                    "Parameter": {
                        "sessionId": "byte"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getIds": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSessionTimeout": {
                    "Parameter": {
                        "seconds": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getSessionTimeout": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSessionCacheSize": {
                    "Parameter": {
                        "size": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getSessionCacheSize": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "294": {
        "Package": "javax.net.ssl",
        "Interface": "X509KeyManager",
        "Superinterface": [
            "javax.net.ssl.KeyManager"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.net.ssl.X509ExtendedKeyManager"
        ],
        "Method": [
            {
                "getClientAliases": {
                    "Parameter": {
                        "keyType": "String",
                        "issuers": "Principal"
                    },
                    "Throw": []
                }
            },
            {
                "chooseClientAlias": {
                    "Parameter": {
                        "keyType": "String",
                        "issuers": "Principal",
                        "socket": "Socket"
                    },
                    "Throw": []
                }
            },
            {
                "getServerAliases": {
                    "Parameter": {
                        "keyType": "String",
                        "issuers": "Principal"
                    },
                    "Throw": []
                }
            },
            {
                "chooseServerAlias": {
                    "Parameter": {
                        "keyType": "String",
                        "issuers": "Principal",
                        "socket": "Socket"
                    },
                    "Throw": []
                }
            },
            {
                "getCertificateChain": {
                    "Parameter": {
                        "alias": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getPrivateKey": {
                    "Parameter": {
                        "alias": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "295": {
        "Package": "javax.net.ssl",
        "Interface": "X509TrustManager",
        "Superinterface": [
            "javax.net.ssl.TrustManager"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.net.ssl.X509ExtendedTrustManager"
        ],
        "Method": [
            {
                "checkClientTrusted": {
                    "Parameter": {
                        "chain": "X509Certificate",
                        "authType": "String"
                    },
                    "Throw": "java.security.cert.CertificateException"
                }
            },
            {
                "checkServerTrusted": {
                    "Parameter": {
                        "chain": "X509Certificate",
                        "authType": "String"
                    },
                    "Throw": "java.security.cert.CertificateException"
                }
            },
            {
                "getAcceptedIssuers": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "296": {
        "Package": "javax.security.auth",
        "Interface": "Destroyable",
        "Superinterface": null,
        "Implementing Class": [
            "javax.crypto.interfaces.DHPrivateKey",
            "java.security.interfaces.DSAPrivateKey",
            "java.security.interfaces.ECPrivateKey",
            "java.security.interfaces.EdECPrivateKey",
            "javax.crypto.interfaces.PBEKey",
            "java.security.PrivateKey",
            "java.security.interfaces.RSAMultiPrimePrivateCrtKey",
            "java.security.interfaces.RSAPrivateCrtKey",
            "java.security.interfaces.RSAPrivateKey",
            "javax.crypto.SecretKey",
            "java.security.interfaces.XECPrivateKey"
        ],
        "Subinterface": [
            "javax.security.auth.kerberos.EncryptionKey",
            "javax.security.auth.kerberos.KerberosCredMessage",
            "javax.security.auth.kerberos.KerberosKey",
            "javax.security.auth.kerberos.KerberosTicket",
            "java.security.KeyStore.PasswordProtection",
            "javax.crypto.spec.SecretKeySpec",
            "javax.security.auth.x500.X500PrivateCredential"
        ],
        "Method": [
            {
                "destroy": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "isDestroyed": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "297": {
        "Package": "javax.security.auth",
        "Interface": "Refreshable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.security.auth.kerberos.KerberosTicket"
        ],
        "Method": [
            {
                "isCurrent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "refresh": {
                    "Parameter": {},
                    "Throw": "javax.security.auth.RefreshFailedException"
                }
            }
        ]
    },
    "298": {
        "Package": "javax.security.auth.callback",
        "Interface": "CallbackHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "com.sun.security.auth.callback.TextCallbackHandler"
        ],
        "Method": [
            {
                "handle": {
                    "Parameter": {
                        "callbacks": "Callback"
                    },
                    "Throw": "javax.security.auth.callback.UnsupportedCallbackException"
                }
            }
        ]
    },
    "299": {
        "Package": "javax.security.auth.spi",
        "Interface": "LoginModule",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "com.sun.security.auth.module.JndiLoginModule",
            "com.sun.security.auth.module.KeyStoreLoginModule",
            "com.sun.security.auth.module.Krb5LoginModule",
            "com.sun.security.auth.module.LdapLoginModule",
            "com.sun.security.auth.module.NTLoginModule",
            "com.sun.security.auth.module.UnixLoginModule"
        ],
        "Method": [
            {
                "initialize": {
                    "Parameter": {
                        "subject": "Subject",
                        "callbackHandler": "CallbackHandler",
                        "": "Map"
                    },
                    "Throw": []
                }
            },
            {
                "login": {
                    "Parameter": {},
                    "Throw": "javax.security.auth.login.LoginException"
                }
            },
            {
                "commit": {
                    "Parameter": {},
                    "Throw": "javax.security.auth.login.LoginException"
                }
            },
            {
                "abort": {
                    "Parameter": {},
                    "Throw": "javax.security.auth.login.LoginException"
                }
            },
            {
                "logout": {
                    "Parameter": {},
                    "Throw": "javax.security.auth.login.LoginException"
                }
            }
        ]
    },
    "300": {
        "Package": "javax.annotation.processing",
        "Interface": "Completion",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMessage": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "301": {
        "Package": "javax.annotation.processing",
        "Interface": "Filer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createSourceFile": {
                    "Parameter": {
                        "name": "CharSequence",
                        "originatingElements": "Element"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "createClassFile": {
                    "Parameter": {
                        "name": "CharSequence",
                        "originatingElements": "Element"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "createResource": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "moduleAndPkg": "CharSequence",
                        "relativeName": "CharSequence",
                        "originatingElements": "Element"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getResource": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "moduleAndPkg": "CharSequence",
                        "relativeName": "CharSequence"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "302": {
        "Package": "javax.annotation.processing",
        "Interface": "Messager",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "printMessage": {
                    "Parameter": {
                        "kind": "Diagnostic.Kind",
                        "msg": "CharSequence"
                    },
                    "Throw": []
                }
            },
            {
                "printMessage": {
                    "Parameter": {
                        "kind": "Diagnostic.Kind",
                        "msg": "CharSequence",
                        "e": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "printMessage": {
                    "Parameter": {
                        "kind": "Diagnostic.Kind",
                        "msg": "CharSequence",
                        "e": "Element",
                        "a": "AnnotationMirror"
                    },
                    "Throw": []
                }
            },
            {
                "printMessage": {
                    "Parameter": {
                        "kind": "Diagnostic.Kind",
                        "msg": "CharSequence",
                        "e": "Element",
                        "a": "AnnotationMirror",
                        "v": "AnnotationValue"
                    },
                    "Throw": []
                }
            },
            {
                "printError": {
                    "Parameter": {
                        "msg": "CharSequence"
                    },
                    "Throw": []
                }
            },
            {
                "printError": {
                    "Parameter": {
                        "msg": "CharSequence",
                        "e": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "printWarning": {
                    "Parameter": {
                        "msg": "CharSequence"
                    },
                    "Throw": []
                }
            },
            {
                "printWarning": {
                    "Parameter": {
                        "msg": "CharSequence",
                        "e": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "printNote": {
                    "Parameter": {
                        "msg": "CharSequence"
                    },
                    "Throw": []
                }
            },
            {
                "printNote": {
                    "Parameter": {
                        "msg": "CharSequence",
                        "e": "Element"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "303": {
        "Package": "javax.annotation.processing",
        "Interface": "ProcessingEnvironment",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getOptions": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMessager": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFiler": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getElementUtils": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTypeUtils": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSourceVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLocale": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isPreviewEnabled": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "304": {
        "Package": "javax.annotation.processing",
        "Interface": "Processor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.annotation.processing.AbstractProcessor"
        ],
        "Method": [
            {
                "getSupportedOptions": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSupportedAnnotationTypes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSupportedSourceVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "init": {
                    "Parameter": {
                        "processingEnv": "ProcessingEnvironment"
                    },
                    "Throw": []
                }
            },
            {
                "process": {
                    "Parameter": {
                        "extends": "Set",
                        "roundEnv": "RoundEnvironment"
                    },
                    "Throw": []
                }
            },
            {
                "getCompletions": {
                    "Parameter": {
                        "element": "Element",
                        "annotation": "AnnotationMirror",
                        "member": "ExecutableElement",
                        "userText": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "305": {
        "Package": "javax.annotation.processing",
        "Interface": "RoundEnvironment",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "processingOver": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "errorRaised": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRootElements": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getElementsAnnotatedWith": {
                    "Parameter": {
                        "a": "TypeElement"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getElementsAnnotatedWithAny": {
                    "Parameter": {
                        "annotations": "TypeElement"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getElementsAnnotatedWith": {
                    "Parameter": {
                        "extends": "Class"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getElementsAnnotatedWithAny": {
                    "Parameter": {
                        "": "Set"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "306": {
        "Package": "javax.lang.model",
        "Interface": "AnnotatedConstruct",
        "Superinterface": null,
        "Implementing Class": [
            "javax.lang.model.type.ArrayType",
            "javax.lang.model.type.DeclaredType",
            "javax.lang.model.element.Element",
            "javax.lang.model.type.ErrorType",
            "javax.lang.model.element.ExecutableElement",
            "javax.lang.model.type.ExecutableType",
            "javax.lang.model.type.IntersectionType",
            "javax.lang.model.element.ModuleElement",
            "javax.lang.model.type.NoType",
            "javax.lang.model.type.NullType",
            "javax.lang.model.element.PackageElement",
            "javax.lang.model.element.Parameterizable",
            "javax.lang.model.type.PrimitiveType",
            "javax.lang.model.element.QualifiedNameable",
            "javax.lang.model.element.RecordComponentElement",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.element.TypeElement",
            "javax.lang.model.type.TypeMirror",
            "javax.lang.model.element.TypeParameterElement",
            "javax.lang.model.type.TypeVariable",
            "javax.lang.model.type.UnionType",
            "javax.lang.model.element.VariableElement",
            "javax.lang.model.type.WildcardType"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getAnnotationMirrors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotation": {
                    "Parameter": {
                        "AannotationType": "Class"
                    },
                    "Throw": []
                }
            },
            {
                "getAnnotationsByType": {
                    "Parameter": {
                        "AannotationType": "Class"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "307": {
        "Package": "javax.lang.model.element",
        "Interface": "AnnotationMirror",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAnnotationType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getElementValues": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "308": {
        "Package": "javax.lang.model.element",
        "Interface": "AnnotationValue",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "309": {
        "Package": "javax.lang.model.element",
        "Interface": "AnnotationValueVisitor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.lang.model.util.AbstractAnnotationValueVisitor14",
            "javax.lang.model.util.AbstractAnnotationValueVisitor6",
            "javax.lang.model.util.AbstractAnnotationValueVisitor7",
            "javax.lang.model.util.AbstractAnnotationValueVisitor8",
            "javax.lang.model.util.AbstractAnnotationValueVisitor9",
            "javax.lang.model.util.SimpleAnnotationValueVisitor14",
            "javax.lang.model.util.SimpleAnnotationValueVisitor6",
            "javax.lang.model.util.SimpleAnnotationValueVisitor7",
            "javax.lang.model.util.SimpleAnnotationValueVisitor8",
            "javax.lang.model.util.SimpleAnnotationValueVisitor9"
        ],
        "Method": [
            {
                "visit": {
                    "Parameter": {
                        "av": "AnnotationValue"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "310": {
        "Package": "javax.lang.model.element",
        "Interface": "Element",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct"
        ],
        "Implementing Class": [
            "javax.lang.model.element.ExecutableElement",
            "javax.lang.model.element.ModuleElement",
            "javax.lang.model.element.PackageElement",
            "javax.lang.model.element.Parameterizable",
            "javax.lang.model.element.QualifiedNameable",
            "javax.lang.model.element.RecordComponentElement",
            "javax.lang.model.element.TypeElement",
            "javax.lang.model.element.TypeParameterElement",
            "javax.lang.model.element.VariableElement"
        ],
        "Subinterface": null,
        "Method": [
            {
                "asType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getKind": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getModifiers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSimpleName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosingElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosedElements": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotationMirrors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotation": {
                    "Parameter": {
                        "AannotationType": "Class"
                    },
                    "Throw": []
                }
            },
            {
                "getAnnotationsByType": {
                    "Parameter": {
                        "AannotationType": "Class"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "311": {
        "Package": "javax.lang.model.element",
        "Interface": "ElementVisitor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.lang.model.util.AbstractElementVisitor14",
            "javax.lang.model.util.AbstractElementVisitor6",
            "javax.lang.model.util.AbstractElementVisitor7",
            "javax.lang.model.util.AbstractElementVisitor8",
            "javax.lang.model.util.AbstractElementVisitor9",
            "javax.lang.model.util.ElementKindVisitor14",
            "javax.lang.model.util.ElementKindVisitor6",
            "javax.lang.model.util.ElementKindVisitor7",
            "javax.lang.model.util.ElementKindVisitor8",
            "javax.lang.model.util.ElementKindVisitor9",
            "javax.lang.model.util.ElementScanner14",
            "javax.lang.model.util.ElementScanner6",
            "javax.lang.model.util.ElementScanner7",
            "javax.lang.model.util.ElementScanner8",
            "javax.lang.model.util.ElementScanner9",
            "javax.lang.model.util.SimpleElementVisitor14",
            "javax.lang.model.util.SimpleElementVisitor6",
            "javax.lang.model.util.SimpleElementVisitor7",
            "javax.lang.model.util.SimpleElementVisitor8",
            "javax.lang.model.util.SimpleElementVisitor9"
        ],
        "Method": [
            {
                "visit": {
                    "Parameter": {
                        "e": "Element"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "312": {
        "Package": "javax.lang.model.element",
        "Interface": "ExecutableElement",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element",
            "javax.lang.model.element.Parameterizable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "asType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTypeParameters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReturnType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParameters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReceiverType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isVarArgs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDefault": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getThrownTypes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDefaultValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosingElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSimpleName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "313": {
        "Package": "javax.lang.model.element",
        "Interface": "ModuleElement.Directive",
        "Superinterface": null,
        "Implementing Class": [
            "javax.lang.model.element.ModuleElement.ExportsDirective",
            "javax.lang.model.element.ModuleElement.OpensDirective",
            "javax.lang.model.element.ModuleElement.ProvidesDirective",
            "javax.lang.model.element.ModuleElement.RequiresDirective",
            "javax.lang.model.element.ModuleElement.UsesDirective"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getKind": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "314": {
        "Package": "javax.lang.model.element",
        "Interface": "ModuleElement.DirectiveVisitor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "visit": {
                    "Parameter": {
                        "d": "ModuleElement.Directive"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "315": {
        "Package": "javax.lang.model.element",
        "Interface": "ModuleElement.ExportsDirective",
        "Superinterface": [
            "javax.lang.model.element.ModuleElement.Directive"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPackage": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTargetModules": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "316": {
        "Package": "javax.lang.model.element",
        "Interface": "ModuleElement",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element",
            "javax.lang.model.element.QualifiedNameable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "asType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getQualifiedName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSimpleName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosedElements": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isOpen": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isUnnamed": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosingElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDirectives": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "317": {
        "Package": "javax.lang.model.element",
        "Interface": "ModuleElement.OpensDirective",
        "Superinterface": [
            "javax.lang.model.element.ModuleElement.Directive"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPackage": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTargetModules": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "318": {
        "Package": "javax.lang.model.element",
        "Interface": "ModuleElement.ProvidesDirective",
        "Superinterface": [
            "javax.lang.model.element.ModuleElement.Directive"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getService": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getImplementations": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "319": {
        "Package": "javax.lang.model.element",
        "Interface": "ModuleElement.RequiresDirective",
        "Superinterface": [
            "javax.lang.model.element.ModuleElement.Directive"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isStatic": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isTransitive": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDependency": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "320": {
        "Package": "javax.lang.model.element",
        "Interface": "ModuleElement.UsesDirective",
        "Superinterface": [
            "javax.lang.model.element.ModuleElement.Directive"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getService": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "321": {
        "Package": "javax.lang.model.element",
        "Interface": "Name",
        "Superinterface": [
            "java.lang.CharSequence"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "contentEquals": {
                    "Parameter": {
                        "cs": "CharSequence"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "322": {
        "Package": "javax.lang.model.element",
        "Interface": "PackageElement",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element",
            "javax.lang.model.element.QualifiedNameable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "asType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getQualifiedName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSimpleName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosedElements": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isUnnamed": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosingElement": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "323": {
        "Package": "javax.lang.model.element",
        "Interface": "Parameterizable",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element"
        ],
        "Implementing Class": [
            "javax.lang.model.element.ExecutableElement",
            "javax.lang.model.element.TypeElement"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getTypeParameters": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "324": {
        "Package": "javax.lang.model.element",
        "Interface": "QualifiedNameable",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element"
        ],
        "Implementing Class": [
            "javax.lang.model.element.ModuleElement",
            "javax.lang.model.element.PackageElement",
            "javax.lang.model.element.TypeElement"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getQualifiedName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "325": {
        "Package": "javax.lang.model.element",
        "Interface": "RecordComponentElement",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getEnclosingElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSimpleName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccessor": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "326": {
        "Package": "javax.lang.model.element",
        "Interface": "TypeElement",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element",
            "javax.lang.model.element.Parameterizable",
            "javax.lang.model.element.QualifiedNameable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "asType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosedElements": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNestingKind": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getQualifiedName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSimpleName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSuperclass": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getInterfaces": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTypeParameters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRecordComponents": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPermittedSubclasses": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosingElement": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "327": {
        "Package": "javax.lang.model.element",
        "Interface": "TypeParameterElement",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "asType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getGenericElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBounds": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosingElement": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "328": {
        "Package": "javax.lang.model.element",
        "Interface": "VariableElement",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.element.Element"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "asType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getConstantValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSimpleName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosingElement": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "329": {
        "Package": "javax.lang.model.type",
        "Interface": "ArrayType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getComponentType": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "330": {
        "Package": "javax.lang.model.type",
        "Interface": "DeclaredType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": [
            "javax.lang.model.type.ErrorType"
        ],
        "Subinterface": null,
        "Method": [
            {
                "asElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosingType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTypeArguments": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "331": {
        "Package": "javax.lang.model.type",
        "Interface": "ErrorType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.DeclaredType",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "332": {
        "Package": "javax.lang.model.type",
        "Interface": "ExecutableType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTypeVariables": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReturnType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParameterTypes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReceiverType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getThrownTypes": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "333": {
        "Package": "javax.lang.model.type",
        "Interface": "IntersectionType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBounds": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "334": {
        "Package": "javax.lang.model.type",
        "Interface": "NoType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "335": {
        "Package": "javax.lang.model.type",
        "Interface": "NullType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "336": {
        "Package": "javax.lang.model.type",
        "Interface": "PrimitiveType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "337": {
        "Package": "javax.lang.model.type",
        "Interface": "ReferenceType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": [
            "javax.lang.model.type.ArrayType",
            "javax.lang.model.type.DeclaredType",
            "javax.lang.model.type.ErrorType",
            "javax.lang.model.type.NullType",
            "javax.lang.model.type.TypeVariable"
        ],
        "Subinterface": null,
        "Method": []
    },
    "338": {
        "Package": "javax.lang.model.type",
        "Interface": "TypeMirror",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct"
        ],
        "Implementing Class": [
            "javax.lang.model.type.ArrayType",
            "javax.lang.model.type.DeclaredType",
            "javax.lang.model.type.ErrorType",
            "javax.lang.model.type.ExecutableType",
            "javax.lang.model.type.IntersectionType",
            "javax.lang.model.type.NoType",
            "javax.lang.model.type.NullType",
            "javax.lang.model.type.PrimitiveType",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.type.TypeVariable",
            "javax.lang.model.type.UnionType",
            "javax.lang.model.type.WildcardType"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getKind": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotationMirrors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotation": {
                    "Parameter": {
                        "AannotationType": "Class"
                    },
                    "Throw": []
                }
            },
            {
                "getAnnotationsByType": {
                    "Parameter": {
                        "AannotationType": "Class"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "339": {
        "Package": "javax.lang.model.type",
        "Interface": "TypeVariable",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.ReferenceType",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "asElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getUpperBound": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLowerBound": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "340": {
        "Package": "javax.lang.model.type",
        "Interface": "TypeVisitor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.lang.model.util.AbstractTypeVisitor14",
            "javax.lang.model.util.AbstractTypeVisitor6",
            "javax.lang.model.util.AbstractTypeVisitor7",
            "javax.lang.model.util.AbstractTypeVisitor8",
            "javax.lang.model.util.AbstractTypeVisitor9",
            "javax.lang.model.util.SimpleTypeVisitor14",
            "javax.lang.model.util.SimpleTypeVisitor6",
            "javax.lang.model.util.SimpleTypeVisitor7",
            "javax.lang.model.util.SimpleTypeVisitor8",
            "javax.lang.model.util.SimpleTypeVisitor9",
            "javax.lang.model.util.TypeKindVisitor14",
            "javax.lang.model.util.TypeKindVisitor6",
            "javax.lang.model.util.TypeKindVisitor7",
            "javax.lang.model.util.TypeKindVisitor8",
            "javax.lang.model.util.TypeKindVisitor9"
        ],
        "Method": [
            {
                "visit": {
                    "Parameter": {
                        "t": "TypeMirror"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "341": {
        "Package": "javax.lang.model.type",
        "Interface": "UnionType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAlternatives": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "342": {
        "Package": "javax.lang.model.type",
        "Interface": "WildcardType",
        "Superinterface": [
            "javax.lang.model.AnnotatedConstruct",
            "javax.lang.model.type.TypeMirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExtendsBound": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSuperBound": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "343": {
        "Package": "javax.lang.model.util",
        "Interface": "Elements",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPackageElement": {
                    "Parameter": {
                        "name": "CharSequence"
                    },
                    "Throw": []
                }
            },
            {
                "getPackageElement": {
                    "Parameter": {
                        "module": "ModuleElement",
                        "name": "CharSequence"
                    },
                    "Throw": []
                }
            },
            {
                "getAllPackageElements": {
                    "Parameter": {
                        "name": "CharSequence"
                    },
                    "Throw": []
                }
            },
            {
                "getTypeElement": {
                    "Parameter": {
                        "name": "CharSequence"
                    },
                    "Throw": []
                }
            },
            {
                "getTypeElement": {
                    "Parameter": {
                        "module": "ModuleElement",
                        "name": "CharSequence"
                    },
                    "Throw": []
                }
            },
            {
                "getAllTypeElements": {
                    "Parameter": {
                        "name": "CharSequence"
                    },
                    "Throw": []
                }
            },
            {
                "getModuleElement": {
                    "Parameter": {
                        "name": "CharSequence"
                    },
                    "Throw": []
                }
            },
            {
                "getAllModuleElements": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getElementValuesWithDefaults": {
                    "Parameter": {
                        "a": "AnnotationMirror"
                    },
                    "Throw": []
                }
            },
            {
                "getDocComment": {
                    "Parameter": {
                        "e": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "isDeprecated": {
                    "Parameter": {
                        "e": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "getOrigin": {
                    "Parameter": {
                        "e": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "getOrigin": {
                    "Parameter": {
                        "c": "AnnotatedConstruct",
                        "a": "AnnotationMirror"
                    },
                    "Throw": []
                }
            },
            {
                "getOrigin": {
                    "Parameter": {
                        "m": "ModuleElement",
                        "directive": "ModuleElement.Directive"
                    },
                    "Throw": []
                }
            },
            {
                "isBridge": {
                    "Parameter": {
                        "e": "ExecutableElement"
                    },
                    "Throw": []
                }
            },
            {
                "getBinaryName": {
                    "Parameter": {
                        "type": "TypeElement"
                    },
                    "Throw": []
                }
            },
            {
                "getPackageOf": {
                    "Parameter": {
                        "e": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "getModuleOf": {
                    "Parameter": {
                        "e": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "getAllMembers": {
                    "Parameter": {
                        "type": "TypeElement"
                    },
                    "Throw": []
                }
            },
            {
                "getOutermostTypeElement": {
                    "Parameter": {
                        "e": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "getAllAnnotationMirrors": {
                    "Parameter": {
                        "e": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "hides": {
                    "Parameter": {
                        "hider": "Element",
                        "hidden": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "overrides": {
                    "Parameter": {
                        "overrider": "ExecutableElement",
                        "overridden": "ExecutableElement",
                        "type": "TypeElement"
                    },
                    "Throw": []
                }
            },
            {
                "getConstantExpression": {
                    "Parameter": {
                        "value": "Object"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "printElements": {
                    "Parameter": {
                        "w": "Writer",
                        "elements": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {
                        "cs": "CharSequence"
                    },
                    "Throw": []
                }
            },
            {
                "isFunctionalInterface": {
                    "Parameter": {
                        "type": "TypeElement"
                    },
                    "Throw": []
                }
            },
            {
                "isAutomaticModule": {
                    "Parameter": {
                        "module": "ModuleElement"
                    },
                    "Throw": []
                }
            },
            {
                "recordComponentFor": {
                    "Parameter": {
                        "accessor": "ExecutableElement"
                    },
                    "Throw": []
                }
            },
            {
                "getFileObjectOf": {
                    "Parameter": {
                        "e": "Element"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            }
        ]
    },
    "344": {
        "Package": "javax.lang.model.util",
        "Interface": "Types",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "asElement": {
                    "Parameter": {
                        "t": "TypeMirror"
                    },
                    "Throw": []
                }
            },
            {
                "isSameType": {
                    "Parameter": {
                        "t": "TypeMirror"
                    },
                    "Throw": []
                }
            },
            {
                "isSubtype": {
                    "Parameter": {
                        "t": "TypeMirror"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "isAssignable": {
                    "Parameter": {
                        "t": "TypeMirror"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "t": "TypeMirror"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "isSubsignature": {
                    "Parameter": {
                        "m": "ExecutableType"
                    },
                    "Throw": []
                }
            },
            {
                "directSupertypes": {
                    "Parameter": {
                        "t": "TypeMirror"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "erasure": {
                    "Parameter": {
                        "t": "TypeMirror"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "boxedClass": {
                    "Parameter": {
                        "p": "PrimitiveType"
                    },
                    "Throw": []
                }
            },
            {
                "unboxedType": {
                    "Parameter": {
                        "t": "TypeMirror"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "capture": {
                    "Parameter": {
                        "t": "TypeMirror"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getPrimitiveType": {
                    "Parameter": {
                        "kind": "TypeKind"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getNullType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNoType": {
                    "Parameter": {
                        "kind": "TypeKind"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getArrayType": {
                    "Parameter": {
                        "componentType": "TypeMirror"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getWildcardType": {
                    "Parameter": {
                        "extendsBound": "TypeMirror",
                        "superBound": "TypeMirror"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getDeclaredType": {
                    "Parameter": {
                        "typeElem": "TypeElement",
                        "typeArgs": "TypeMirror"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getDeclaredType": {
                    "Parameter": {
                        "containing": "DeclaredType",
                        "typeElem": "TypeElement",
                        "typeArgs": "TypeMirror"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "asMemberOf": {
                    "Parameter": {
                        "containing": "DeclaredType",
                        "element": "Element"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "345": {
        "Package": "javax.tools",
        "Interface": "Diagnostic",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getKind": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSource": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getStartPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEndPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLineNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getColumnNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMessage": {
                    "Parameter": {
                        "locale": "Locale"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "346": {
        "Package": "javax.tools",
        "Interface": "DiagnosticListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.tools.DiagnosticCollector"
        ],
        "Method": [
            {
                "report": {
                    "Parameter": {
                        "extends": "Diagnostic"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "347": {
        "Package": "javax.tools",
        "Interface": "DocumentationTool.DocumentationTask",
        "Superinterface": [
            "java.util.concurrent.Callable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addModules": {
                    "Parameter": {
                        "": "Iterable"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "setLocale": {
                    "Parameter": {
                        "locale": "Locale"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "call": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            }
        ]
    },
    "348": {
        "Package": "javax.tools",
        "Interface": "DocumentationTool",
        "Superinterface": [
            "javax.tools.OptionChecker",
            "javax.tools.Tool"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTask": {
                    "Parameter": {
                        "out": "Writer",
                        "fileManager": "JavaFileManager",
                        "super": "DiagnosticListener",
                        "docletClass": "Class",
                        "": "Iterable",
                        "extends": "Iterable"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getStandardFileManager": {
                    "Parameter": {
                        "super": "DiagnosticListener",
                        "locale": "Locale",
                        "charset": "Charset"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "349": {
        "Package": "javax.tools",
        "Interface": "FileObject",
        "Superinterface": null,
        "Implementing Class": [
            "javax.tools.JavaFileObject"
        ],
        "Subinterface": [
            "javax.tools.ForwardingFileObject",
            "javax.tools.ForwardingJavaFileObject",
            "javax.tools.SimpleJavaFileObject"
        ],
        "Method": [
            {
                "toUri": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "openInputStream": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "openOutputStream": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "openReader": {
                    "Parameter": {
                        "ignoreEncodingErrors": "boolean"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getCharContent": {
                    "Parameter": {
                        "ignoreEncodingErrors": "boolean"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "openWriter": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getLastModified": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "delete": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "350": {
        "Package": "javax.tools",
        "Interface": "JavaCompiler.CompilationTask",
        "Superinterface": [
            "java.util.concurrent.Callable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "com.sun.source.util.JavacTask"
        ],
        "Method": [
            {
                "addModules": {
                    "Parameter": {
                        "": "Iterable"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "setProcessors": {
                    "Parameter": {
                        "extends": "Iterable"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "setLocale": {
                    "Parameter": {
                        "locale": "Locale"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "call": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            }
        ]
    },
    "351": {
        "Package": "javax.tools",
        "Interface": "JavaCompiler",
        "Superinterface": [
            "javax.tools.OptionChecker",
            "javax.tools.Tool"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTask": {
                    "Parameter": {
                        "out": "Writer",
                        "fileManager": "JavaFileManager",
                        "super": "DiagnosticListener",
                        "": "Iterable",
                        "extends": "Iterable"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getStandardFileManager": {
                    "Parameter": {
                        "super": "DiagnosticListener",
                        "locale": "Locale",
                        "charset": "Charset"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "352": {
        "Package": "javax.tools",
        "Interface": "JavaFileManager",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.io.Flushable",
            "javax.tools.OptionChecker"
        ],
        "Implementing Class": [
            "javax.tools.StandardJavaFileManager"
        ],
        "Subinterface": [
            "javax.tools.ForwardingJavaFileManager"
        ],
        "Method": [
            {
                "getClassLoader": {
                    "Parameter": {
                        "location": "JavaFileManager.Location"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "list": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "packageName": "String",
                        "": "Set",
                        "recurse": "boolean"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "inferBinaryName": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "file": "JavaFileObject"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "isSameFile": {
                    "Parameter": {
                        "a": "FileObject",
                        "b": "FileObject"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "handleOption": {
                    "Parameter": {
                        "current": "String",
                        "": "Iterator"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "hasLocation": {
                    "Parameter": {
                        "location": "JavaFileManager.Location"
                    },
                    "Throw": []
                }
            },
            {
                "getJavaFileForInput": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "className": "String",
                        "kind": "JavaFileObject.Kind"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getJavaFileForOutput": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "className": "String",
                        "kind": "JavaFileObject.Kind",
                        "sibling": "FileObject"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getJavaFileForOutputForOriginatingFiles": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "className": "String",
                        "kind": "JavaFileObject.Kind",
                        "originatingFiles": "FileObject"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getFileForInput": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "packageName": "String",
                        "relativeName": "String"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getFileForOutput": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "packageName": "String",
                        "relativeName": "String",
                        "sibling": "FileObject"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getFileForOutputForOriginatingFiles": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "packageName": "String",
                        "relativeName": "String",
                        "originatingFiles": "FileObject"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "flush": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getLocationForModule": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "moduleName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getLocationForModule": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "fo": "JavaFileObject"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getServiceLoader": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "Sservice": "Class"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "inferModuleName": {
                    "Parameter": {
                        "location": "JavaFileManager.Location"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "listLocationsForModules": {
                    "Parameter": {
                        "location": "JavaFileManager.Location"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "fo": "FileObject"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            }
        ]
    },
    "353": {
        "Package": "javax.tools",
        "Interface": "JavaFileManager.Location",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isOutputLocation": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isModuleOrientedLocation": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "354": {
        "Package": "javax.tools",
        "Interface": "JavaFileObject",
        "Superinterface": [
            "javax.tools.FileObject"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.tools.ForwardingJavaFileObject",
            "javax.tools.SimpleJavaFileObject"
        ],
        "Method": [
            {
                "getKind": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isNameCompatible": {
                    "Parameter": {
                        "simpleName": "String",
                        "kind": "JavaFileObject.Kind"
                    },
                    "Throw": []
                }
            },
            {
                "getNestingKind": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccessLevel": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "355": {
        "Package": "javax.tools",
        "Interface": "OptionChecker",
        "Superinterface": null,
        "Implementing Class": [
            "javax.tools.DocumentationTool",
            "javax.tools.JavaCompiler",
            "javax.tools.JavaFileManager",
            "javax.tools.StandardJavaFileManager"
        ],
        "Subinterface": [
            "javax.tools.ForwardingJavaFileManager"
        ],
        "Method": [
            {
                "isSupportedOption": {
                    "Parameter": {
                        "option": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "356": {
        "Package": "javax.tools",
        "Interface": "StandardJavaFileManager",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.io.Flushable",
            "javax.tools.JavaFileManager",
            "javax.tools.OptionChecker"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isSameFile": {
                    "Parameter": {
                        "a": "FileObject",
                        "b": "FileObject"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getJavaFileObjectsFromFiles": {
                    "Parameter": {
                        "extends": "Iterable"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getJavaFileObjectsFromPaths": {
                    "Parameter": {
                        "extends": "Collection"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getJavaFileObjectsFromPaths": {
                    "Parameter": {
                        "extends": "Iterable"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getJavaFileObjects": {
                    "Parameter": {
                        "files": "File"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getJavaFileObjects": {
                    "Parameter": {
                        "paths": "Path"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getJavaFileObjectsFromStrings": {
                    "Parameter": {
                        "": "Iterable"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getJavaFileObjects": {
                    "Parameter": {
                        "names": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "setLocation": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "extends": "Iterable"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "setLocationFromPaths": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "extends": "Collection"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "setLocationForModule": {
                    "Parameter": {
                        "location": "JavaFileManager.Location",
                        "moduleName": "String",
                        "extends": "Collection"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getLocation": {
                    "Parameter": {
                        "location": "JavaFileManager.Location"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getLocationAsPaths": {
                    "Parameter": {
                        "location": "JavaFileManager.Location"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "asPath": {
                    "Parameter": {
                        "file": "FileObject"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "setPathFactory": {
                    "Parameter": {
                        "f": "StandardJavaFileManager.PathFactory"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "357": {
        "Package": "javax.tools",
        "Interface": "StandardJavaFileManager.PathFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPath": {
                    "Parameter": {
                        "first": "String",
                        "more": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "358": {
        "Package": "javax.tools",
        "Interface": "Tool",
        "Superinterface": null,
        "Implementing Class": [
            "javax.tools.DocumentationTool",
            "javax.tools.JavaCompiler"
        ],
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "run": {
                    "Parameter": {
                        "in": "InputStream",
                        "out": "OutputStream",
                        "err": "OutputStream",
                        "arguments": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getSourceVersions": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "359": {
        "Package": "java.awt.datatransfer",
        "Interface": "ClipboardOwner",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.datatransfer.StringSelection"
        ],
        "Method": [
            {
                "lostOwnership": {
                    "Parameter": {
                        "clipboard": "Clipboard",
                        "contents": "Transferable"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "360": {
        "Package": "java.awt.datatransfer",
        "Interface": "FlavorListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "flavorsChanged": {
                    "Parameter": {
                        "e": "FlavorEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "361": {
        "Package": "java.awt.datatransfer",
        "Interface": "FlavorMap",
        "Superinterface": null,
        "Implementing Class": [
            "java.awt.datatransfer.FlavorTable"
        ],
        "Subinterface": [
            "java.awt.datatransfer.SystemFlavorMap"
        ],
        "Method": [
            {
                "getNativesForFlavors": {
                    "Parameter": {
                        "flavors": "DataFlavor"
                    },
                    "Throw": []
                }
            },
            {
                "getFlavorsForNatives": {
                    "Parameter": {
                        "natives": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "362": {
        "Package": "java.awt.datatransfer",
        "Interface": "FlavorTable",
        "Superinterface": [
            "java.awt.datatransfer.FlavorMap"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.datatransfer.SystemFlavorMap"
        ],
        "Method": [
            {
                "getNativesForFlavor": {
                    "Parameter": {
                        "flav": "DataFlavor"
                    },
                    "Throw": []
                }
            },
            {
                "getFlavorsForNative": {
                    "Parameter": {
                        "nat": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "363": {
        "Package": "java.awt.datatransfer",
        "Interface": "Transferable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.dnd.DropTargetContext.TransferableProxy",
            "java.awt.datatransfer.StringSelection"
        ],
        "Method": [
            {
                "getTransferDataFlavors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDataFlavorSupported": {
                    "Parameter": {
                        "flavor": "DataFlavor"
                    },
                    "Throw": []
                }
            },
            {
                "getTransferData": {
                    "Parameter": {
                        "flavor": "DataFlavor"
                    },
                    "Throw": "java.awt.datatransfer.UnsupportedFlavorException"
                }
            }
        ]
    },
    "364": {
        "Package": "java.applet",
        "Interface": "AppletContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAudioClip": {
                    "Parameter": {
                        "url": "URL"
                    },
                    "Throw": []
                }
            },
            {
                "getImage": {
                    "Parameter": {
                        "url": "URL"
                    },
                    "Throw": []
                }
            },
            {
                "getApplet": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getApplets": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "showDocument": {
                    "Parameter": {
                        "url": "URL"
                    },
                    "Throw": []
                }
            },
            {
                "showDocument": {
                    "Parameter": {
                        "url": "URL",
                        "target": "String"
                    },
                    "Throw": []
                }
            },
            {
                "showStatus": {
                    "Parameter": {
                        "status": "String"
                    },
                    "Throw": []
                }
            },
            {
                "setStream": {
                    "Parameter": {
                        "key": "String",
                        "stream": "InputStream"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getStream": {
                    "Parameter": {
                        "key": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getStreamKeys": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "365": {
        "Package": "java.applet",
        "Interface": "AppletStub",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isActive": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDocumentBase": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCodeBase": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParameter": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAppletContext": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "appletResize": {
                    "Parameter": {
                        "width": "int",
                        "height": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "366": {
        "Package": "java.applet",
        "Interface": "AudioClip",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "play": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "loop": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "stop": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "367": {
        "Package": "java.awt",
        "Interface": "ActiveEvent",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.event.InvocationEvent"
        ],
        "Method": [
            {
                "dispatch": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "368": {
        "Package": "java.awt",
        "Interface": "Adjustable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JScrollBar",
            "javax.swing.JScrollPane.ScrollBar",
            "java.awt.Scrollbar",
            "java.awt.ScrollPaneAdjustable"
        ],
        "Method": [
            {
                "getOrientation": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMinimum": {
                    "Parameter": {
                        "min": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getMinimum": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMaximum": {
                    "Parameter": {
                        "max": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getMaximum": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setUnitIncrement": {
                    "Parameter": {
                        "u": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getUnitIncrement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBlockIncrement": {
                    "Parameter": {
                        "b": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getBlockIncrement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVisibleAmount": {
                    "Parameter": {
                        "v": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getVisibleAmount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "v": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addAdjustmentListener": {
                    "Parameter": {
                        "l": "AdjustmentListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeAdjustmentListener": {
                    "Parameter": {
                        "l": "AdjustmentListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "369": {
        "Package": "java.awt",
        "Interface": "Composite",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AlphaComposite"
        ],
        "Method": [
            {
                "createContext": {
                    "Parameter": {
                        "srcColorModel": "ColorModel",
                        "dstColorModel": "ColorModel",
                        "hints": "RenderingHints"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "370": {
        "Package": "java.awt",
        "Interface": "CompositeContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "dispose": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "compose": {
                    "Parameter": {
                        "src": "Raster",
                        "dstIn": "Raster",
                        "dstOut": "WritableRaster"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "371": {
        "Package": "java.awt",
        "Interface": "ItemSelectable",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.ButtonModel"
        ],
        "Subinterface": [
            "javax.swing.AbstractButton",
            "javax.swing.plaf.basic.BasicArrowButton",
            "java.awt.Checkbox",
            "java.awt.CheckboxMenuItem",
            "java.awt.Choice",
            "javax.swing.DefaultButtonModel",
            "javax.swing.JButton",
            "javax.swing.JCheckBox",
            "javax.swing.JCheckBoxMenuItem",
            "javax.swing.JComboBox",
            "javax.swing.JMenu",
            "javax.swing.JMenuItem",
            "javax.swing.JRadioButton",
            "javax.swing.JRadioButtonMenuItem",
            "javax.swing.JToggleButton",
            "javax.swing.JToggleButton.ToggleButtonModel",
            "java.awt.List",
            "javax.swing.plaf.metal.MetalComboBoxButton",
            "javax.swing.plaf.metal.MetalScrollButton"
        ],
        "Method": [
            {
                "getSelectedObjects": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addItemListener": {
                    "Parameter": {
                        "l": "ItemListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeItemListener": {
                    "Parameter": {
                        "l": "ItemListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "372": {
        "Package": "java.awt",
        "Interface": "KeyEventDispatcher",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultFocusManager",
            "java.awt.DefaultKeyboardFocusManager",
            "javax.swing.FocusManager",
            "java.awt.KeyboardFocusManager"
        ],
        "Method": [
            {
                "dispatchKeyEvent": {
                    "Parameter": {
                        "e": "KeyEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "373": {
        "Package": "java.awt",
        "Interface": "KeyEventPostProcessor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultFocusManager",
            "java.awt.DefaultKeyboardFocusManager",
            "javax.swing.FocusManager",
            "java.awt.KeyboardFocusManager"
        ],
        "Method": [
            {
                "postProcessKeyEvent": {
                    "Parameter": {
                        "e": "KeyEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "374": {
        "Package": "java.awt",
        "Interface": "LayoutManager",
        "Superinterface": null,
        "Implementing Class": [
            "java.awt.LayoutManager2"
        ],
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboBoxUI.ComboBoxLayoutManager",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.TitlePaneLayout",
            "javax.swing.plaf.basic.BasicInternalFrameUI.InternalFrameLayout",
            "javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout",
            "javax.swing.plaf.basic.BasicScrollBarUI",
            "javax.swing.plaf.basic.BasicSplitPaneDivider.DividerLayout",
            "javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager",
            "javax.swing.plaf.basic.BasicSplitPaneUI.BasicVerticalLayoutManager",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout",
            "java.awt.BorderLayout",
            "javax.swing.BoxLayout",
            "java.awt.CardLayout",
            "javax.swing.plaf.basic.DefaultMenuLayout",
            "java.awt.FlowLayout",
            "java.awt.GridBagLayout",
            "java.awt.GridLayout",
            "javax.swing.GroupLayout",
            "javax.swing.JRootPane.RootLayout",
            "javax.swing.JSpinner.DateEditor",
            "javax.swing.JSpinner.DefaultEditor",
            "javax.swing.JSpinner.ListEditor",
            "javax.swing.JSpinner.NumberEditor",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalComboBoxLayoutManager",
            "javax.swing.plaf.metal.MetalScrollBarUI",
            "javax.swing.plaf.metal.MetalTabbedPaneUI.TabbedPaneLayout",
            "javax.swing.OverlayLayout",
            "javax.swing.ScrollPaneLayout",
            "javax.swing.ScrollPaneLayout.UIResource",
            "javax.swing.SpringLayout",
            "javax.swing.plaf.synth.SynthScrollBarUI",
            "javax.swing.ViewportLayout"
        ],
        "Method": [
            {
                "addLayoutComponent": {
                    "Parameter": {
                        "name": "String",
                        "comp": "Component"
                    },
                    "Throw": []
                }
            },
            {
                "removeLayoutComponent": {
                    "Parameter": {
                        "comp": "Component"
                    },
                    "Throw": []
                }
            },
            {
                "preferredLayoutSize": {
                    "Parameter": {
                        "parent": "Container"
                    },
                    "Throw": []
                }
            },
            {
                "minimumLayoutSize": {
                    "Parameter": {
                        "parent": "Container"
                    },
                    "Throw": []
                }
            },
            {
                "layoutContainer": {
                    "Parameter": {
                        "parent": "Container"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "375": {
        "Package": "java.awt",
        "Interface": "LayoutManager2",
        "Superinterface": [
            "java.awt.LayoutManager"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager",
            "javax.swing.plaf.basic.BasicSplitPaneUI.BasicVerticalLayoutManager",
            "java.awt.BorderLayout",
            "javax.swing.BoxLayout",
            "java.awt.CardLayout",
            "javax.swing.plaf.basic.DefaultMenuLayout",
            "java.awt.GridBagLayout",
            "javax.swing.GroupLayout",
            "javax.swing.JRootPane.RootLayout",
            "javax.swing.OverlayLayout",
            "javax.swing.SpringLayout"
        ],
        "Method": [
            {
                "addLayoutComponent": {
                    "Parameter": {
                        "comp": "Component",
                        "constraints": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "maximumLayoutSize": {
                    "Parameter": {
                        "target": "Container"
                    },
                    "Throw": []
                }
            },
            {
                "getLayoutAlignmentX": {
                    "Parameter": {
                        "target": "Container"
                    },
                    "Throw": []
                }
            },
            {
                "getLayoutAlignmentY": {
                    "Parameter": {
                        "target": "Container"
                    },
                    "Throw": []
                }
            },
            {
                "invalidateLayout": {
                    "Parameter": {
                        "target": "Container"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "376": {
        "Package": "java.awt",
        "Interface": "MenuContainer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractButton",
            "javax.swing.colorchooser.AbstractColorChooserPanel",
            "java.applet.Applet",
            "javax.swing.plaf.basic.BasicArrowButton",
            "javax.swing.plaf.basic.BasicComboBoxRenderer",
            "javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource",
            "javax.swing.plaf.basic.BasicComboPopup",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.SystemMenuBar",
            "javax.swing.plaf.basic.BasicSplitPaneDivider",
            "javax.swing.plaf.basic.BasicToolBarUI.DragWindow",
            "javax.swing.Box",
            "javax.swing.Box.Filler",
            "java.awt.Button",
            "java.awt.Canvas",
            "javax.swing.CellRendererPane",
            "java.awt.Checkbox",
            "java.awt.Choice",
            "java.awt.Component",
            "java.awt.Container",
            "javax.swing.DefaultListCellRenderer",
            "javax.swing.DefaultListCellRenderer.UIResource",
            "javax.swing.table.DefaultTableCellRenderer",
            "javax.swing.table.DefaultTableCellRenderer.UIResource",
            "javax.swing.tree.DefaultTreeCellEditor.DefaultTextField",
            "javax.swing.tree.DefaultTreeCellEditor.EditorContainer",
            "javax.swing.tree.DefaultTreeCellRenderer",
            "java.awt.Dialog",
            "java.awt.FileDialog",
            "java.awt.Frame",
            "javax.swing.JApplet",
            "javax.swing.JButton",
            "javax.swing.JCheckBox",
            "javax.swing.JCheckBoxMenuItem",
            "javax.swing.JColorChooser",
            "javax.swing.JComboBox",
            "javax.swing.JComponent",
            "javax.swing.JDesktopPane",
            "javax.swing.JDialog",
            "javax.swing.JEditorPane",
            "javax.swing.JFileChooser",
            "javax.swing.JFormattedTextField",
            "javax.swing.JFrame",
            "javax.swing.JInternalFrame",
            "javax.swing.JInternalFrame.JDesktopIcon",
            "javax.swing.JLabel",
            "javax.swing.JLayer",
            "javax.swing.JLayeredPane",
            "javax.swing.JList",
            "javax.swing.JMenu",
            "javax.swing.JMenuBar",
            "javax.swing.JMenuItem",
            "javax.swing.JOptionPane",
            "javax.swing.JPanel",
            "javax.swing.JPasswordField",
            "javax.swing.JPopupMenu",
            "javax.swing.JPopupMenu.Separator",
            "javax.swing.JProgressBar",
            "javax.swing.JRadioButton",
            "javax.swing.JRadioButtonMenuItem",
            "javax.swing.JRootPane",
            "javax.swing.JScrollBar",
            "javax.swing.JScrollPane",
            "javax.swing.JScrollPane.ScrollBar",
            "javax.swing.JSeparator",
            "javax.swing.JSlider",
            "javax.swing.JSpinner",
            "javax.swing.JSpinner.DateEditor",
            "javax.swing.JSpinner.DefaultEditor",
            "javax.swing.JSpinner.ListEditor",
            "javax.swing.JSpinner.NumberEditor",
            "javax.swing.JSplitPane",
            "javax.swing.JTabbedPane",
            "javax.swing.JTable",
            "javax.swing.table.JTableHeader",
            "javax.swing.JTextArea",
            "javax.swing.text.JTextComponent",
            "javax.swing.JTextField",
            "javax.swing.JTextPane",
            "javax.swing.JToggleButton",
            "javax.swing.JToolBar",
            "javax.swing.JToolBar.Separator",
            "javax.swing.JToolTip",
            "javax.swing.JTree",
            "javax.swing.JViewport",
            "javax.swing.JWindow",
            "java.awt.Label",
            "java.awt.List",
            "java.awt.Menu",
            "java.awt.MenuBar",
            "javax.swing.plaf.metal.MetalComboBoxButton",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalComboPopup",
            "javax.swing.plaf.metal.MetalFileChooserUI.FileRenderer",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxRenderer",
            "javax.swing.plaf.metal.MetalInternalFrameTitlePane",
            "javax.swing.plaf.metal.MetalScrollButton",
            "java.awt.Panel",
            "java.awt.PopupMenu",
            "java.awt.Scrollbar",
            "java.awt.ScrollPane",
            "java.awt.TextArea",
            "java.awt.TextComponent",
            "java.awt.TextField",
            "java.awt.Window"
        ],
        "Method": [
            {
                "getFont": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "comp": "MenuComponent"
                    },
                    "Throw": []
                }
            },
            {
                "postEvent": {
                    "Parameter": {
                        "evt": "Event"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "377": {
        "Package": "java.awt",
        "Interface": "Paint",
        "Superinterface": [
            "java.awt.Transparency"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.Color",
            "javax.swing.plaf.ColorUIResource",
            "java.awt.GradientPaint",
            "java.awt.LinearGradientPaint",
            "java.awt.MultipleGradientPaint",
            "java.awt.RadialGradientPaint",
            "java.awt.SystemColor",
            "java.awt.TexturePaint"
        ],
        "Method": [
            {
                "createContext": {
                    "Parameter": {
                        "cm": "ColorModel",
                        "deviceBounds": "Rectangle",
                        "userBounds": "Rectangle2D",
                        "xform": "AffineTransform",
                        "hints": "RenderingHints"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "378": {
        "Package": "java.awt",
        "Interface": "PaintContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "dispose": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getColorModel": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRaster": {
                    "Parameter": {
                        "x": "int",
                        "y": "int",
                        "w": "int",
                        "h": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "379": {
        "Package": "java.awt",
        "Interface": "PrintGraphics",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPrintJob": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "380": {
        "Package": "java.awt",
        "Interface": "SecondaryLoop",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "enter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "exit": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "381": {
        "Package": "java.awt",
        "Interface": "Shape",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.geom.Arc2D",
            "java.awt.geom.Arc2D.Double",
            "java.awt.geom.Arc2D.Float",
            "java.awt.geom.Area",
            "javax.swing.plaf.basic.BasicTextUI.BasicCaret",
            "java.awt.geom.CubicCurve2D",
            "java.awt.geom.CubicCurve2D.Double",
            "java.awt.geom.CubicCurve2D.Float",
            "javax.swing.text.DefaultCaret",
            "java.awt.geom.Ellipse2D",
            "java.awt.geom.Ellipse2D.Double",
            "java.awt.geom.Ellipse2D.Float",
            "java.awt.geom.GeneralPath",
            "java.awt.geom.Line2D",
            "java.awt.geom.Line2D.Double",
            "java.awt.geom.Line2D.Float",
            "java.awt.geom.Path2D",
            "java.awt.geom.Path2D.Double",
            "java.awt.geom.Path2D.Float",
            "java.awt.Polygon",
            "java.awt.geom.QuadCurve2D",
            "java.awt.geom.QuadCurve2D.Double",
            "java.awt.geom.QuadCurve2D.Float",
            "java.awt.Rectangle",
            "java.awt.geom.Rectangle2D",
            "java.awt.geom.Rectangle2D.Double",
            "java.awt.geom.Rectangle2D.Float",
            "java.awt.geom.RectangularShape",
            "java.awt.geom.RoundRectangle2D",
            "java.awt.geom.RoundRectangle2D.Double",
            "java.awt.geom.RoundRectangle2D.Float"
        ],
        "Method": [
            {
                "getBounds": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBounds2D": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "x": "double",
                        "y": "double"
                    },
                    "Throw": []
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "p": "Point2D"
                    },
                    "Throw": []
                }
            },
            {
                "intersects": {
                    "Parameter": {
                        "x": "double",
                        "y": "double",
                        "w": "double",
                        "h": "double"
                    },
                    "Throw": []
                }
            },
            {
                "intersects": {
                    "Parameter": {
                        "r": "Rectangle2D"
                    },
                    "Throw": []
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "x": "double",
                        "y": "double",
                        "w": "double",
                        "h": "double"
                    },
                    "Throw": []
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "r": "Rectangle2D"
                    },
                    "Throw": []
                }
            },
            {
                "getPathIterator": {
                    "Parameter": {
                        "at": "AffineTransform"
                    },
                    "Throw": []
                }
            },
            {
                "getPathIterator": {
                    "Parameter": {
                        "at": "AffineTransform",
                        "flatness": "double"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "382": {
        "Package": "java.awt",
        "Interface": "Stroke",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.BasicStroke"
        ],
        "Method": [
            {
                "createStrokedShape": {
                    "Parameter": {
                        "p": "Shape"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "383": {
        "Package": "java.awt",
        "Interface": "Transparency",
        "Superinterface": null,
        "Implementing Class": [
            "java.awt.Paint"
        ],
        "Subinterface": [
            "java.awt.image.BufferedImage",
            "java.awt.Color",
            "java.awt.image.ColorModel",
            "javax.swing.plaf.ColorUIResource",
            "java.awt.image.ComponentColorModel",
            "java.awt.image.DirectColorModel",
            "java.awt.GradientPaint",
            "java.awt.image.IndexColorModel",
            "java.awt.LinearGradientPaint",
            "java.awt.MultipleGradientPaint",
            "java.awt.image.PackedColorModel",
            "java.awt.RadialGradientPaint",
            "java.awt.SystemColor",
            "java.awt.TexturePaint",
            "java.awt.image.VolatileImage"
        ],
        "Method": [
            {
                "getTransparency": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "384": {
        "Package": "java.awt.desktop",
        "Interface": "AboutHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "handleAbout": {
                    "Parameter": {
                        "e": "AboutEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "385": {
        "Package": "java.awt.desktop",
        "Interface": "AppForegroundListener",
        "Superinterface": [
            "java.util.EventListener",
            "java.awt.desktop.SystemEventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "appRaisedToForeground": {
                    "Parameter": {
                        "e": "AppForegroundEvent"
                    },
                    "Throw": []
                }
            },
            {
                "appMovedToBackground": {
                    "Parameter": {
                        "e": "AppForegroundEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "386": {
        "Package": "java.awt.desktop",
        "Interface": "AppHiddenListener",
        "Superinterface": [
            "java.util.EventListener",
            "java.awt.desktop.SystemEventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "appHidden": {
                    "Parameter": {
                        "e": "AppHiddenEvent"
                    },
                    "Throw": []
                }
            },
            {
                "appUnhidden": {
                    "Parameter": {
                        "e": "AppHiddenEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "387": {
        "Package": "java.awt.desktop",
        "Interface": "AppReopenedListener",
        "Superinterface": [
            "java.util.EventListener",
            "java.awt.desktop.SystemEventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "appReopened": {
                    "Parameter": {
                        "e": "AppReopenedEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "388": {
        "Package": "java.awt.desktop",
        "Interface": "OpenFilesHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "openFiles": {
                    "Parameter": {
                        "e": "OpenFilesEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "389": {
        "Package": "java.awt.desktop",
        "Interface": "OpenURIHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "openURI": {
                    "Parameter": {
                        "e": "OpenURIEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "390": {
        "Package": "java.awt.desktop",
        "Interface": "PreferencesHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "handlePreferences": {
                    "Parameter": {
                        "e": "PreferencesEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "391": {
        "Package": "java.awt.desktop",
        "Interface": "PrintFilesHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "printFiles": {
                    "Parameter": {
                        "e": "PrintFilesEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "392": {
        "Package": "java.awt.desktop",
        "Interface": "QuitHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "handleQuitRequestWith": {
                    "Parameter": {
                        "e": "QuitEvent",
                        "response": "QuitResponse"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "393": {
        "Package": "java.awt.desktop",
        "Interface": "QuitResponse",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "performQuit": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "cancelQuit": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "394": {
        "Package": "java.awt.desktop",
        "Interface": "ScreenSleepListener",
        "Superinterface": [
            "java.util.EventListener",
            "java.awt.desktop.SystemEventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "screenAboutToSleep": {
                    "Parameter": {
                        "e": "ScreenSleepEvent"
                    },
                    "Throw": []
                }
            },
            {
                "screenAwoke": {
                    "Parameter": {
                        "e": "ScreenSleepEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "395": {
        "Package": "java.awt.desktop",
        "Interface": "SystemSleepListener",
        "Superinterface": [
            "java.util.EventListener",
            "java.awt.desktop.SystemEventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "systemAboutToSleep": {
                    "Parameter": {
                        "e": "SystemSleepEvent"
                    },
                    "Throw": []
                }
            },
            {
                "systemAwoke": {
                    "Parameter": {
                        "e": "SystemSleepEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "396": {
        "Package": "java.awt.desktop",
        "Interface": "UserSessionListener",
        "Superinterface": [
            "java.util.EventListener",
            "java.awt.desktop.SystemEventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "userSessionDeactivated": {
                    "Parameter": {
                        "e": "UserSessionEvent"
                    },
                    "Throw": []
                }
            },
            {
                "userSessionActivated": {
                    "Parameter": {
                        "e": "UserSessionEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "397": {
        "Package": "java.awt.dnd",
        "Interface": "Autoscroll",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAutoscrollInsets": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "autoscroll": {
                    "Parameter": {
                        "cursorLocn": "Point"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "398": {
        "Package": "java.awt.dnd",
        "Interface": "DragGestureListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "dragGestureRecognized": {
                    "Parameter": {
                        "dge": "DragGestureEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "399": {
        "Package": "java.awt.dnd",
        "Interface": "DragSourceListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.dnd.DragSourceAdapter",
            "java.awt.dnd.DragSourceContext"
        ],
        "Method": [
            {
                "dragEnter": {
                    "Parameter": {
                        "dsde": "DragSourceDragEvent"
                    },
                    "Throw": []
                }
            },
            {
                "dragOver": {
                    "Parameter": {
                        "dsde": "DragSourceDragEvent"
                    },
                    "Throw": []
                }
            },
            {
                "dropActionChanged": {
                    "Parameter": {
                        "dsde": "DragSourceDragEvent"
                    },
                    "Throw": []
                }
            },
            {
                "dragExit": {
                    "Parameter": {
                        "dse": "DragSourceEvent"
                    },
                    "Throw": []
                }
            },
            {
                "dragDropEnd": {
                    "Parameter": {
                        "dsde": "DragSourceDropEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "400": {
        "Package": "java.awt.dnd",
        "Interface": "DragSourceMotionListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.dnd.DragSourceAdapter",
            "java.awt.dnd.DragSourceContext"
        ],
        "Method": [
            {
                "dragMouseMoved": {
                    "Parameter": {
                        "dsde": "DragSourceDragEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "401": {
        "Package": "java.awt.dnd",
        "Interface": "DropTargetListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.dnd.DropTarget",
            "java.awt.dnd.DropTargetAdapter"
        ],
        "Method": [
            {
                "dragEnter": {
                    "Parameter": {
                        "dtde": "DropTargetDragEvent"
                    },
                    "Throw": []
                }
            },
            {
                "dragOver": {
                    "Parameter": {
                        "dtde": "DropTargetDragEvent"
                    },
                    "Throw": []
                }
            },
            {
                "dropActionChanged": {
                    "Parameter": {
                        "dtde": "DropTargetDragEvent"
                    },
                    "Throw": []
                }
            },
            {
                "dragExit": {
                    "Parameter": {
                        "dte": "DropTargetEvent"
                    },
                    "Throw": []
                }
            },
            {
                "drop": {
                    "Parameter": {
                        "dtde": "DropTargetDropEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "402": {
        "Package": "java.awt.event",
        "Interface": "ActionListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": [
            "javax.swing.Action"
        ],
        "Subinterface": [
            "javax.swing.AbstractAction",
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.CloseAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.MaximizeAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.MinimizeAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.NavigateAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.OpenAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.ApproveSelectionAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.CancelSelectionAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.ChangeToParentDirectoryAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.GoHomeAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.NewFolderAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.UpdateAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.CloseAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.IconifyAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.MoveAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.RestoreAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.SizeAction",
            "javax.swing.plaf.basic.BasicOptionPaneUI.ButtonActionListener",
            "javax.swing.plaf.basic.BasicScrollBarUI.ScrollListener",
            "javax.swing.plaf.basic.BasicSliderUI.ActionScroller",
            "javax.swing.plaf.basic.BasicSliderUI.ScrollListener",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardDownRightHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardEndHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardHomeHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardResizeToggleHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardUpLeftHandler",
            "javax.swing.plaf.basic.BasicTreeUI.ComponentHandler",
            "javax.swing.plaf.basic.BasicTreeUI.TreeCancelEditingAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeHomeAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeIncrementAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreePageAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeToggleAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction",
            "javax.swing.DefaultCellEditor.EditorDelegate",
            "javax.swing.text.DefaultEditorKit.BeepAction",
            "javax.swing.text.DefaultEditorKit.CopyAction",
            "javax.swing.text.DefaultEditorKit.CutAction",
            "javax.swing.text.DefaultEditorKit.DefaultKeyTypedAction",
            "javax.swing.text.DefaultEditorKit.InsertBreakAction",
            "javax.swing.text.DefaultEditorKit.InsertContentAction",
            "javax.swing.text.DefaultEditorKit.InsertTabAction",
            "javax.swing.text.DefaultEditorKit.PasteAction",
            "javax.swing.tree.DefaultTreeCellEditor",
            "java.awt.dnd.DropTarget.DropTargetAutoScroller",
            "javax.swing.text.html.FormView",
            "javax.swing.text.html.HTMLEditorKit.HTMLTextAction",
            "javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction",
            "javax.swing.JComboBox",
            "java.awt.List.AccessibleAWTList",
            "javax.swing.plaf.metal.MetalFileChooserUI.DirectoryComboBoxAction",
            "javax.swing.text.StyledEditorKit.AlignmentAction",
            "javax.swing.text.StyledEditorKit.BoldAction",
            "javax.swing.text.StyledEditorKit.FontFamilyAction",
            "javax.swing.text.StyledEditorKit.FontSizeAction",
            "javax.swing.text.StyledEditorKit.ForegroundAction",
            "javax.swing.text.StyledEditorKit.ItalicAction",
            "javax.swing.text.StyledEditorKit.StyledTextAction",
            "javax.swing.text.StyledEditorKit.UnderlineAction",
            "javax.swing.text.TextAction",
            "javax.swing.ToolTipManager.insideTimerAction",
            "javax.swing.ToolTipManager.outsideTimerAction",
            "javax.swing.ToolTipManager.stillInsideTimerAction"
        ],
        "Method": [
            {
                "actionPerformed": {
                    "Parameter": {
                        "e": "ActionEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "403": {
        "Package": "java.awt.event",
        "Interface": "AdjustmentListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster"
        ],
        "Method": [
            {
                "adjustmentValueChanged": {
                    "Parameter": {
                        "e": "AdjustmentEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "404": {
        "Package": "java.awt.event",
        "Interface": "AWTEventListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.event.AWTEventListenerProxy",
            "com.sun.java.accessibility.util.EventQueueMonitor"
        ],
        "Method": [
            {
                "eventDispatched": {
                    "Parameter": {
                        "event": "AWTEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "405": {
        "Package": "java.awt.event",
        "Interface": "ComponentListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicInternalFrameUI.ComponentHandler",
            "javax.swing.plaf.basic.BasicSliderUI.ComponentHandler",
            "javax.swing.plaf.basic.BasicTreeUI.ComponentHandler",
            "java.awt.Component.AccessibleAWTComponent.AccessibleAWTComponentHandler",
            "java.awt.event.ComponentAdapter",
            "javax.swing.JViewport.ViewListener"
        ],
        "Method": [
            {
                "componentResized": {
                    "Parameter": {
                        "e": "ComponentEvent"
                    },
                    "Throw": []
                }
            },
            {
                "componentMoved": {
                    "Parameter": {
                        "e": "ComponentEvent"
                    },
                    "Throw": []
                }
            },
            {
                "componentShown": {
                    "Parameter": {
                        "e": "ComponentEvent"
                    },
                    "Throw": []
                }
            },
            {
                "componentHidden": {
                    "Parameter": {
                        "e": "ComponentEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "406": {
        "Package": "java.awt.event",
        "Interface": "ContainerListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicToolBarUI.ToolBarContListener",
            "java.awt.Container.AccessibleAWTContainer.AccessibleContainerHandler",
            "java.awt.event.ContainerAdapter",
            "javax.swing.JComponent.AccessibleJComponent.AccessibleContainerHandler",
            "javax.swing.plaf.metal.MetalToolBarUI.MetalContainerListener"
        ],
        "Method": [
            {
                "componentAdded": {
                    "Parameter": {
                        "e": "ContainerEvent"
                    },
                    "Throw": []
                }
            },
            {
                "componentRemoved": {
                    "Parameter": {
                        "e": "ContainerEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "407": {
        "Package": "java.awt.event",
        "Interface": "FocusListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicButtonListener",
            "javax.swing.plaf.basic.BasicComboBoxEditor",
            "javax.swing.plaf.basic.BasicComboBoxEditor.UIResource",
            "javax.swing.plaf.basic.BasicComboBoxUI.FocusHandler",
            "javax.swing.plaf.basic.BasicListUI.FocusHandler",
            "javax.swing.plaf.basic.BasicSliderUI.FocusHandler",
            "javax.swing.plaf.basic.BasicSplitPaneUI.FocusHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.FocusHandler",
            "javax.swing.plaf.basic.BasicTableUI.FocusHandler",
            "javax.swing.plaf.basic.BasicTextUI.BasicCaret",
            "javax.swing.plaf.basic.BasicToolBarUI.ToolBarFocusListener",
            "javax.swing.plaf.basic.BasicTreeUI.FocusHandler",
            "java.awt.Component.AccessibleAWTComponent.AccessibleAWTFocusHandler",
            "javax.swing.text.DefaultCaret",
            "java.awt.event.FocusAdapter",
            "javax.swing.JComponent.AccessibleJComponent.AccessibleFocusHandler",
            "javax.swing.plaf.metal.MetalComboBoxEditor",
            "javax.swing.plaf.metal.MetalComboBoxEditor.UIResource"
        ],
        "Method": [
            {
                "focusGained": {
                    "Parameter": {
                        "e": "FocusEvent"
                    },
                    "Throw": []
                }
            },
            {
                "focusLost": {
                    "Parameter": {
                        "e": "FocusEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "408": {
        "Package": "java.awt.event",
        "Interface": "HierarchyBoundsListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "java.awt.event.HierarchyBoundsAdapter"
        ],
        "Method": [
            {
                "ancestorMoved": {
                    "Parameter": {
                        "e": "HierarchyEvent"
                    },
                    "Throw": []
                }
            },
            {
                "ancestorResized": {
                    "Parameter": {
                        "e": "HierarchyEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "409": {
        "Package": "java.awt.event",
        "Interface": "HierarchyListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster"
        ],
        "Method": [
            {
                "hierarchyChanged": {
                    "Parameter": {
                        "e": "HierarchyEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "410": {
        "Package": "java.awt.event",
        "Interface": "InputMethodListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster"
        ],
        "Method": [
            {
                "inputMethodTextChanged": {
                    "Parameter": {
                        "event": "InputMethodEvent"
                    },
                    "Throw": []
                }
            },
            {
                "caretPositionChanged": {
                    "Parameter": {
                        "event": "InputMethodEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "411": {
        "Package": "java.awt.event",
        "Interface": "ItemListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicComboBoxUI.ItemHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ItemHandler",
            "java.awt.Checkbox.AccessibleAWTCheckbox",
            "javax.swing.DefaultCellEditor.EditorDelegate",
            "javax.swing.JCheckBox.AccessibleJCheckBox",
            "javax.swing.JRadioButton.AccessibleJRadioButton",
            "javax.swing.JToggleButton.AccessibleJToggleButton",
            "java.awt.List.AccessibleAWTList"
        ],
        "Method": [
            {
                "itemStateChanged": {
                    "Parameter": {
                        "e": "ItemEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "412": {
        "Package": "java.awt.event",
        "Interface": "KeyListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicComboBoxUI.KeyHandler",
            "javax.swing.plaf.basic.BasicComboPopup.InvocationKeyHandler",
            "javax.swing.plaf.basic.BasicTableUI.KeyHandler",
            "javax.swing.plaf.basic.BasicTreeUI.KeyHandler",
            "java.awt.event.KeyAdapter"
        ],
        "Method": [
            {
                "keyTyped": {
                    "Parameter": {
                        "e": "KeyEvent"
                    },
                    "Throw": []
                }
            },
            {
                "keyPressed": {
                    "Parameter": {
                        "e": "KeyEvent"
                    },
                    "Throw": []
                }
            },
            {
                "keyReleased": {
                    "Parameter": {
                        "e": "KeyEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "413": {
        "Package": "java.awt.event",
        "Interface": "MouseListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": [
            "javax.swing.event.MouseInputListener"
        ],
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicButtonListener",
            "javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListMouseHandler",
            "javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicFileChooserUI.DoubleClickListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.GlassPaneDispatcher",
            "javax.swing.plaf.basic.BasicListUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicMenuItemUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicMenuUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicScrollBarUI.ArrowButtonListener",
            "javax.swing.plaf.basic.BasicScrollBarUI.TrackListener",
            "javax.swing.plaf.basic.BasicSliderUI.TrackListener",
            "javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.MouseHandler",
            "javax.swing.plaf.basic.BasicTableHeaderUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicTableUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicTextUI.BasicCaret",
            "javax.swing.plaf.basic.BasicToolBarUI.DockingListener",
            "javax.swing.plaf.basic.BasicTreeUI.MouseHandler",
            "javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler",
            "javax.swing.text.DefaultCaret",
            "javax.swing.text.html.FormView.MouseEventListener",
            "javax.swing.text.html.HTMLEditorKit.LinkController",
            "javax.swing.plaf.metal.MetalFileChooserUI.SingleClickListener",
            "javax.swing.plaf.metal.MetalToolBarUI.MetalDockingListener",
            "java.awt.event.MouseAdapter",
            "java.awt.dnd.MouseDragGestureRecognizer",
            "javax.swing.event.MouseInputAdapter",
            "javax.swing.ToolTipManager"
        ],
        "Method": [
            {
                "mouseClicked": {
                    "Parameter": {
                        "e": "MouseEvent"
                    },
                    "Throw": []
                }
            },
            {
                "mousePressed": {
                    "Parameter": {
                        "e": "MouseEvent"
                    },
                    "Throw": []
                }
            },
            {
                "mouseReleased": {
                    "Parameter": {
                        "e": "MouseEvent"
                    },
                    "Throw": []
                }
            },
            {
                "mouseEntered": {
                    "Parameter": {
                        "e": "MouseEvent"
                    },
                    "Throw": []
                }
            },
            {
                "mouseExited": {
                    "Parameter": {
                        "e": "MouseEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "414": {
        "Package": "java.awt.event",
        "Interface": "MouseMotionListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": [
            "javax.swing.event.MouseInputListener"
        ],
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicButtonListener",
            "javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler",
            "javax.swing.plaf.basic.BasicComboPopup.InvocationMouseMotionHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListMouseHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListMouseMotionHandler",
            "javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicFileChooserUI.DoubleClickListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.GlassPaneDispatcher",
            "javax.swing.plaf.basic.BasicListUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicMenuItemUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicMenuUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicScrollBarUI.ArrowButtonListener",
            "javax.swing.plaf.basic.BasicScrollBarUI.TrackListener",
            "javax.swing.plaf.basic.BasicSliderUI.TrackListener",
            "javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.MouseHandler",
            "javax.swing.plaf.basic.BasicTableHeaderUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicTableUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicTextUI.BasicCaret",
            "javax.swing.plaf.basic.BasicToolBarUI.DockingListener",
            "javax.swing.plaf.basic.BasicTreeUI.MouseHandler",
            "javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler",
            "javax.swing.text.DefaultCaret",
            "javax.swing.text.html.FormView.MouseEventListener",
            "javax.swing.text.html.HTMLEditorKit.LinkController",
            "javax.swing.plaf.metal.MetalFileChooserUI.SingleClickListener",
            "javax.swing.plaf.metal.MetalToolBarUI.MetalDockingListener",
            "java.awt.event.MouseAdapter",
            "java.awt.dnd.MouseDragGestureRecognizer",
            "javax.swing.event.MouseInputAdapter",
            "java.awt.event.MouseMotionAdapter",
            "javax.swing.ToolTipManager"
        ],
        "Method": [
            {
                "mouseDragged": {
                    "Parameter": {
                        "e": "MouseEvent"
                    },
                    "Throw": []
                }
            },
            {
                "mouseMoved": {
                    "Parameter": {
                        "e": "MouseEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "415": {
        "Package": "java.awt.event",
        "Interface": "MouseWheelListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListMouseHandler",
            "javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicFileChooserUI.DoubleClickListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener",
            "javax.swing.plaf.basic.BasicScrollBarUI.ArrowButtonListener",
            "javax.swing.plaf.basic.BasicScrollBarUI.TrackListener",
            "javax.swing.plaf.basic.BasicScrollPaneUI.MouseWheelHandler",
            "javax.swing.plaf.basic.BasicSliderUI.TrackListener",
            "javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.MouseHandler",
            "javax.swing.plaf.basic.BasicTreeUI.MouseHandler",
            "javax.swing.text.html.FormView.MouseEventListener",
            "javax.swing.text.html.HTMLEditorKit.LinkController",
            "javax.swing.plaf.metal.MetalFileChooserUI.SingleClickListener",
            "java.awt.event.MouseAdapter",
            "javax.swing.event.MouseInputAdapter",
            "javax.swing.ToolTipManager"
        ],
        "Method": [
            {
                "mouseWheelMoved": {
                    "Parameter": {
                        "e": "MouseWheelEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "416": {
        "Package": "java.awt.event",
        "Interface": "TextListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "java.awt.TextArea.AccessibleAWTTextArea",
            "java.awt.TextComponent.AccessibleAWTTextComponent",
            "java.awt.TextField.AccessibleAWTTextField"
        ],
        "Method": [
            {
                "textValueChanged": {
                    "Parameter": {
                        "e": "TextEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "417": {
        "Package": "java.awt.event",
        "Interface": "WindowFocusListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicToolBarUI.FrameListener",
            "javax.swing.JMenu.WinListener",
            "java.awt.event.WindowAdapter"
        ],
        "Method": [
            {
                "windowGainedFocus": {
                    "Parameter": {
                        "e": "WindowEvent"
                    },
                    "Throw": []
                }
            },
            {
                "windowLostFocus": {
                    "Parameter": {
                        "e": "WindowEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "418": {
        "Package": "java.awt.event",
        "Interface": "WindowListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicToolBarUI.FrameListener",
            "javax.swing.JMenu.WinListener",
            "java.awt.event.WindowAdapter"
        ],
        "Method": [
            {
                "windowOpened": {
                    "Parameter": {
                        "e": "WindowEvent"
                    },
                    "Throw": []
                }
            },
            {
                "windowClosing": {
                    "Parameter": {
                        "e": "WindowEvent"
                    },
                    "Throw": []
                }
            },
            {
                "windowClosed": {
                    "Parameter": {
                        "e": "WindowEvent"
                    },
                    "Throw": []
                }
            },
            {
                "windowIconified": {
                    "Parameter": {
                        "e": "WindowEvent"
                    },
                    "Throw": []
                }
            },
            {
                "windowDeiconified": {
                    "Parameter": {
                        "e": "WindowEvent"
                    },
                    "Throw": []
                }
            },
            {
                "windowActivated": {
                    "Parameter": {
                        "e": "WindowEvent"
                    },
                    "Throw": []
                }
            },
            {
                "windowDeactivated": {
                    "Parameter": {
                        "e": "WindowEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "419": {
        "Package": "java.awt.event",
        "Interface": "WindowStateListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.AWTEventMulticaster",
            "javax.swing.plaf.basic.BasicToolBarUI.FrameListener",
            "javax.swing.JMenu.WinListener",
            "java.awt.event.WindowAdapter"
        ],
        "Method": [
            {
                "windowStateChanged": {
                    "Parameter": {
                        "e": "WindowEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "420": {
        "Package": "java.awt.font",
        "Interface": "MultipleMaster",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getNumDesignAxes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDesignAxisRanges": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDesignAxisDefaults": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDesignAxisNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "deriveMMFont": {
                    "Parameter": {
                        "axes": "float"
                    },
                    "Throw": []
                }
            },
            {
                "deriveMMFont": {
                    "Parameter": {
                        "glyphWidths": "float",
                        "avgStemWidth": "float",
                        "typicalCapHeight": "float",
                        "typicalXHeight": "float",
                        "italicAngle": "float"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "421": {
        "Package": "java.awt.font",
        "Interface": "OpenType",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFontTable": {
                    "Parameter": {
                        "sfntTag": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getFontTable": {
                    "Parameter": {
                        "strSfntTag": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getFontTable": {
                    "Parameter": {
                        "sfntTag": "int",
                        "offset": "int",
                        "count": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getFontTable": {
                    "Parameter": {
                        "strSfntTag": "String",
                        "offset": "int",
                        "count": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getFontTableSize": {
                    "Parameter": {
                        "sfntTag": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getFontTableSize": {
                    "Parameter": {
                        "strSfntTag": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "422": {
        "Package": "java.awt.geom",
        "Interface": "PathIterator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.geom.FlatteningPathIterator"
        ],
        "Method": [
            {
                "getWindingRule": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDone": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "next": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "currentSegment": {
                    "Parameter": {
                        "coords": "float"
                    },
                    "Throw": []
                }
            },
            {
                "currentSegment": {
                    "Parameter": {
                        "coords": "double"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "423": {
        "Package": "java.awt.im",
        "Interface": "InputMethodRequests",
        "Superinterface": null,
        "Implementing Class": [
            "java.awt.im.spi.InputMethodContext"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getTextLocation": {
                    "Parameter": {
                        "offset": "TextHitInfo"
                    },
                    "Throw": []
                }
            },
            {
                "getLocationOffset": {
                    "Parameter": {
                        "x": "int",
                        "y": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getInsertPositionOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCommittedText": {
                    "Parameter": {
                        "beginIndex": "int",
                        "endIndex": "int",
                        "attributes": "AttributedCharacterIterator.Attribute"
                    },
                    "Throw": []
                }
            },
            {
                "getCommittedTextLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "cancelLatestCommittedText": {
                    "Parameter": {
                        "attributes": "AttributedCharacterIterator.Attribute"
                    },
                    "Throw": []
                }
            },
            {
                "getSelectedText": {
                    "Parameter": {
                        "attributes": "AttributedCharacterIterator.Attribute"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "424": {
        "Package": "java.awt.im.spi",
        "Interface": "InputMethod",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "setInputMethodContext": {
                    "Parameter": {
                        "context": "InputMethodContext"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "setLocale": {
                    "Parameter": {
                        "locale": "Locale"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getLocale": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCharacterSubsets": {
                    "Parameter": {
                        "subsets": "Character.Subset"
                    },
                    "Throw": []
                }
            },
            {
                "setCompositionEnabled": {
                    "Parameter": {
                        "enable": "boolean"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "isCompositionEnabled": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "reconvert": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "dispatchEvent": {
                    "Parameter": {
                        "event": "AWTEvent"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "notifyClientWindowChange": {
                    "Parameter": {
                        "bounds": "Rectangle"
                    },
                    "Throw": []
                }
            },
            {
                "activate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "deactivate": {
                    "Parameter": {
                        "isTemporary": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "hideWindows": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "removeNotify": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "endComposition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "dispose": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getControlObject": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "425": {
        "Package": "java.awt.im.spi",
        "Interface": "InputMethodContext",
        "Superinterface": [
            "java.awt.im.InputMethodRequests"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "dispatchInputMethodEvent": {
                    "Parameter": {
                        "id": "int",
                        "text": "AttributedCharacterIterator",
                        "committedCharacterCount": "int",
                        "caret": "TextHitInfo",
                        "visiblePosition": "TextHitInfo"
                    },
                    "Throw": []
                }
            },
            {
                "createInputMethodWindow": {
                    "Parameter": {
                        "title": "String",
                        "attachToInputContext": "boolean"
                    },
                    "Throw": "java.awt.HeadlessException"
                }
            },
            {
                "createInputMethodJFrame": {
                    "Parameter": {
                        "title": "String",
                        "attachToInputContext": "boolean"
                    },
                    "Throw": "java.awt.HeadlessException"
                }
            },
            {
                "enableClientWindowNotification": {
                    "Parameter": {
                        "inputMethod": "InputMethod",
                        "enable": "boolean"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "426": {
        "Package": "java.awt.im.spi",
        "Interface": "InputMethodDescriptor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAvailableLocales": {
                    "Parameter": {},
                    "Throw": "java.awt.AWTException"
                }
            },
            {
                "hasDynamicLocaleList": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getInputMethodDisplayName": {
                    "Parameter": {
                        "inputLocale": "Locale",
                        "displayLanguage": "Locale"
                    },
                    "Throw": []
                }
            },
            {
                "getInputMethodIcon": {
                    "Parameter": {
                        "inputLocale": "Locale"
                    },
                    "Throw": []
                }
            },
            {
                "createInputMethod": {
                    "Parameter": {},
                    "Throw": "java.lang.Exception"
                }
            }
        ]
    },
    "427": {
        "Package": "java.awt.image",
        "Interface": "BufferedImageOp",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.image.AffineTransformOp",
            "java.awt.image.ColorConvertOp",
            "java.awt.image.ConvolveOp",
            "java.awt.image.LookupOp",
            "java.awt.image.RescaleOp"
        ],
        "Method": [
            {
                "filter": {
                    "Parameter": {
                        "src": "BufferedImage",
                        "dest": "BufferedImage"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getBounds2D": {
                    "Parameter": {
                        "src": "BufferedImage"
                    },
                    "Throw": []
                }
            },
            {
                "createCompatibleDestImage": {
                    "Parameter": {
                        "src": "BufferedImage",
                        "destCM": "ColorModel"
                    },
                    "Throw": []
                }
            },
            {
                "getPoint2D": {
                    "Parameter": {
                        "srcPt": "Point2D",
                        "dstPt": "Point2D"
                    },
                    "Throw": []
                }
            },
            {
                "getRenderingHints": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "428": {
        "Package": "java.awt.image",
        "Interface": "ImageConsumer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.image.AreaAveragingScaleFilter",
            "java.awt.image.BufferedImageFilter",
            "java.awt.image.CropImageFilter",
            "javax.swing.GrayFilter",
            "java.awt.image.ImageFilter",
            "java.awt.image.PixelGrabber",
            "java.awt.image.ReplicateScaleFilter",
            "java.awt.image.RGBImageFilter"
        ],
        "Method": [
            {
                "setDimensions": {
                    "Parameter": {
                        "width": "int",
                        "height": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setProperties": {
                    "Parameter": {
                        "": "Hashtable"
                    },
                    "Throw": []
                }
            },
            {
                "setColorModel": {
                    "Parameter": {
                        "model": "ColorModel"
                    },
                    "Throw": []
                }
            },
            {
                "setHints": {
                    "Parameter": {
                        "hintflags": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setPixels": {
                    "Parameter": {
                        "x": "int",
                        "y": "int",
                        "w": "int",
                        "h": "int",
                        "model": "ColorModel",
                        "pixels": "byte",
                        "off": "int",
                        "scansize": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setPixels": {
                    "Parameter": {
                        "x": "int",
                        "y": "int",
                        "w": "int",
                        "h": "int",
                        "model": "ColorModel",
                        "pixels": "int",
                        "off": "int",
                        "scansize": "int"
                    },
                    "Throw": []
                }
            },
            {
                "imageComplete": {
                    "Parameter": {
                        "status": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "429": {
        "Package": "java.awt.image",
        "Interface": "ImageObserver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractButton",
            "javax.swing.colorchooser.AbstractColorChooserPanel",
            "java.applet.Applet",
            "javax.swing.plaf.basic.BasicArrowButton",
            "javax.swing.plaf.basic.BasicComboBoxRenderer",
            "javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource",
            "javax.swing.plaf.basic.BasicComboPopup",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.SystemMenuBar",
            "javax.swing.plaf.basic.BasicSplitPaneDivider",
            "javax.swing.plaf.basic.BasicToolBarUI.DragWindow",
            "javax.swing.Box",
            "javax.swing.Box.Filler",
            "java.awt.Button",
            "java.awt.Canvas",
            "javax.swing.CellRendererPane",
            "java.awt.Checkbox",
            "java.awt.Choice",
            "java.awt.Component",
            "java.awt.Container",
            "javax.swing.DefaultListCellRenderer",
            "javax.swing.DefaultListCellRenderer.UIResource",
            "javax.swing.table.DefaultTableCellRenderer",
            "javax.swing.table.DefaultTableCellRenderer.UIResource",
            "javax.swing.tree.DefaultTreeCellEditor.DefaultTextField",
            "javax.swing.tree.DefaultTreeCellEditor.EditorContainer",
            "javax.swing.tree.DefaultTreeCellRenderer",
            "java.awt.Dialog",
            "java.awt.FileDialog",
            "java.awt.Frame",
            "javax.swing.JApplet",
            "javax.swing.JButton",
            "javax.swing.JCheckBox",
            "javax.swing.JCheckBoxMenuItem",
            "javax.swing.JColorChooser",
            "javax.swing.JComboBox",
            "javax.swing.JComponent",
            "javax.swing.JDesktopPane",
            "javax.swing.JDialog",
            "javax.swing.JEditorPane",
            "javax.swing.JFileChooser",
            "javax.swing.JFormattedTextField",
            "javax.swing.JFrame",
            "javax.swing.JInternalFrame",
            "javax.swing.JInternalFrame.JDesktopIcon",
            "javax.swing.JLabel",
            "javax.swing.JLayer",
            "javax.swing.JLayeredPane",
            "javax.swing.JList",
            "javax.swing.JMenu",
            "javax.swing.JMenuBar",
            "javax.swing.JMenuItem",
            "javax.swing.JOptionPane",
            "javax.swing.JPanel",
            "javax.swing.JPasswordField",
            "javax.swing.JPopupMenu",
            "javax.swing.JPopupMenu.Separator",
            "javax.swing.JProgressBar",
            "javax.swing.JRadioButton",
            "javax.swing.JRadioButtonMenuItem",
            "javax.swing.JRootPane",
            "javax.swing.JScrollBar",
            "javax.swing.JScrollPane",
            "javax.swing.JScrollPane.ScrollBar",
            "javax.swing.JSeparator",
            "javax.swing.JSlider",
            "javax.swing.JSpinner",
            "javax.swing.JSpinner.DateEditor",
            "javax.swing.JSpinner.DefaultEditor",
            "javax.swing.JSpinner.ListEditor",
            "javax.swing.JSpinner.NumberEditor",
            "javax.swing.JSplitPane",
            "javax.swing.JTabbedPane",
            "javax.swing.JTable",
            "javax.swing.table.JTableHeader",
            "javax.swing.JTextArea",
            "javax.swing.text.JTextComponent",
            "javax.swing.JTextField",
            "javax.swing.JTextPane",
            "javax.swing.JToggleButton",
            "javax.swing.JToolBar",
            "javax.swing.JToolBar.Separator",
            "javax.swing.JToolTip",
            "javax.swing.JTree",
            "javax.swing.JViewport",
            "javax.swing.JWindow",
            "java.awt.Label",
            "java.awt.List",
            "javax.swing.plaf.metal.MetalComboBoxButton",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalComboPopup",
            "javax.swing.plaf.metal.MetalFileChooserUI.FileRenderer",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxRenderer",
            "javax.swing.plaf.metal.MetalInternalFrameTitlePane",
            "javax.swing.plaf.metal.MetalScrollButton",
            "java.awt.Panel",
            "java.awt.Scrollbar",
            "java.awt.ScrollPane",
            "java.awt.TextArea",
            "java.awt.TextComponent",
            "java.awt.TextField",
            "java.awt.Window"
        ],
        "Method": [
            {
                "imageUpdate": {
                    "Parameter": {
                        "img": "Image",
                        "infoflags": "int",
                        "x": "int",
                        "y": "int",
                        "width": "int",
                        "height": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "430": {
        "Package": "java.awt.image",
        "Interface": "ImageProducer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.image.FilteredImageSource",
            "java.awt.image.MemoryImageSource",
            "java.awt.image.renderable.RenderableImageProducer"
        ],
        "Method": [
            {
                "addConsumer": {
                    "Parameter": {
                        "ic": "ImageConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "isConsumer": {
                    "Parameter": {
                        "ic": "ImageConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "removeConsumer": {
                    "Parameter": {
                        "ic": "ImageConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "startProduction": {
                    "Parameter": {
                        "ic": "ImageConsumer"
                    },
                    "Throw": []
                }
            },
            {
                "requestTopDownLeftRightResend": {
                    "Parameter": {
                        "ic": "ImageConsumer"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "431": {
        "Package": "java.awt.image",
        "Interface": "MultiResolutionImage",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.image.AbstractMultiResolutionImage",
            "java.awt.image.BaseMultiResolutionImage"
        ],
        "Method": [
            {
                "getResolutionVariant": {
                    "Parameter": {
                        "destImageWidth": "double",
                        "destImageHeight": "double"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getResolutionVariants": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "432": {
        "Package": "java.awt.image",
        "Interface": "RasterOp",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.image.AffineTransformOp",
            "java.awt.image.BandCombineOp",
            "java.awt.image.ColorConvertOp",
            "java.awt.image.ConvolveOp",
            "java.awt.image.LookupOp",
            "java.awt.image.RescaleOp"
        ],
        "Method": [
            {
                "filter": {
                    "Parameter": {
                        "src": "Raster",
                        "dest": "WritableRaster"
                    },
                    "Throw": []
                }
            },
            {
                "getBounds2D": {
                    "Parameter": {
                        "src": "Raster"
                    },
                    "Throw": []
                }
            },
            {
                "createCompatibleDestRaster": {
                    "Parameter": {
                        "src": "Raster"
                    },
                    "Throw": []
                }
            },
            {
                "getPoint2D": {
                    "Parameter": {
                        "srcPt": "Point2D",
                        "dstPt": "Point2D"
                    },
                    "Throw": []
                }
            },
            {
                "getRenderingHints": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "433": {
        "Package": "java.awt.image",
        "Interface": "RenderedImage",
        "Superinterface": null,
        "Implementing Class": [
            "java.awt.image.WritableRenderedImage"
        ],
        "Subinterface": [
            "java.awt.image.BufferedImage"
        ],
        "Method": [
            {
                "getSources": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getProperty": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getPropertyNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getColorModel": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSampleModel": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMinX": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMinY": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNumXTiles": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNumYTiles": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMinTileX": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMinTileY": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTileWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTileHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTileGridXOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTileGridYOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTile": {
                    "Parameter": {
                        "tileX": "int",
                        "tileY": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getData": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getData": {
                    "Parameter": {
                        "rect": "Rectangle"
                    },
                    "Throw": []
                }
            },
            {
                "copyData": {
                    "Parameter": {
                        "raster": "WritableRaster"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "434": {
        "Package": "java.awt.image",
        "Interface": "TileObserver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "tileUpdate": {
                    "Parameter": {
                        "source": "WritableRenderedImage",
                        "tileX": "int",
                        "tileY": "int",
                        "willBeWritable": "boolean"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "435": {
        "Package": "java.awt.image",
        "Interface": "WritableRenderedImage",
        "Superinterface": [
            "java.awt.image.RenderedImage"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.image.BufferedImage"
        ],
        "Method": [
            {
                "addTileObserver": {
                    "Parameter": {
                        "to": "TileObserver"
                    },
                    "Throw": []
                }
            },
            {
                "removeTileObserver": {
                    "Parameter": {
                        "to": "TileObserver"
                    },
                    "Throw": []
                }
            },
            {
                "getWritableTile": {
                    "Parameter": {
                        "tileX": "int",
                        "tileY": "int"
                    },
                    "Throw": []
                }
            },
            {
                "releaseWritableTile": {
                    "Parameter": {
                        "tileX": "int",
                        "tileY": "int"
                    },
                    "Throw": []
                }
            },
            {
                "isTileWritable": {
                    "Parameter": {
                        "tileX": "int",
                        "tileY": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getWritableTileIndices": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hasTileWriters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setData": {
                    "Parameter": {
                        "r": "Raster"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "436": {
        "Package": "java.awt.image.renderable",
        "Interface": "ContextualRenderedImageFactory",
        "Superinterface": [
            "java.awt.image.renderable.RenderedImageFactory"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "mapRenderContext": {
                    "Parameter": {
                        "i": "int",
                        "renderContext": "RenderContext",
                        "paramBlock": "ParameterBlock",
                        "image": "RenderableImage"
                    },
                    "Throw": []
                }
            },
            {
                "create": {
                    "Parameter": {
                        "renderContext": "RenderContext",
                        "paramBlock": "ParameterBlock"
                    },
                    "Throw": []
                }
            },
            {
                "getBounds2D": {
                    "Parameter": {
                        "paramBlock": "ParameterBlock"
                    },
                    "Throw": []
                }
            },
            {
                "getProperty": {
                    "Parameter": {
                        "paramBlock": "ParameterBlock",
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getPropertyNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDynamic": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "437": {
        "Package": "java.awt.image.renderable",
        "Interface": "RenderableImage",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.image.renderable.RenderableImageOp"
        ],
        "Method": [
            {
                "getSources": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getProperty": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getPropertyNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDynamic": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMinX": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMinY": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createScaledRendering": {
                    "Parameter": {
                        "w": "int",
                        "h": "int",
                        "hints": "RenderingHints"
                    },
                    "Throw": []
                }
            },
            {
                "createDefaultRendering": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createRendering": {
                    "Parameter": {
                        "renderContext": "RenderContext"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "438": {
        "Package": "java.awt.image.renderable",
        "Interface": "RenderedImageFactory",
        "Superinterface": null,
        "Implementing Class": [
            "java.awt.image.renderable.ContextualRenderedImageFactory"
        ],
        "Subinterface": null,
        "Method": [
            {
                "create": {
                    "Parameter": {
                        "paramBlock": "ParameterBlock",
                        "hints": "RenderingHints"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "439": {
        "Package": "java.awt.print",
        "Interface": "Pageable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.print.Book"
        ],
        "Method": [
            {
                "getNumberOfPages": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPageFormat": {
                    "Parameter": {
                        "pageIndex": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "getPrintable": {
                    "Parameter": {
                        "pageIndex": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            }
        ]
    },
    "440": {
        "Package": "java.awt.print",
        "Interface": "Printable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "print": {
                    "Parameter": {
                        "graphics": "Graphics",
                        "pageFormat": "PageFormat",
                        "pageIndex": "int"
                    },
                    "Throw": "java.awt.print.PrinterException"
                }
            }
        ]
    },
    "441": {
        "Package": "java.awt.print",
        "Interface": "PrinterGraphics",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPrinterJob": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "442": {
        "Package": "java.beans",
        "Interface": "AppletInitializer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "initialize": {
                    "Parameter": {
                        "newAppletBean": "Applet",
                        "bCtxt": "BeanContext"
                    },
                    "Throw": []
                }
            },
            {
                "activate": {
                    "Parameter": {
                        "newApplet": "Applet"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "443": {
        "Package": "java.beans",
        "Interface": "BeanInfo",
        "Superinterface": null,
        "Implementing Class": [
            "java.beans.beancontext.BeanContextServiceProviderBeanInfo"
        ],
        "Subinterface": [
            "java.beans.SimpleBeanInfo"
        ],
        "Method": [
            {
                "getBeanDescriptor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEventSetDescriptors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDefaultEventIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPropertyDescriptors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDefaultPropertyIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMethodDescriptors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAdditionalBeanInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIcon": {
                    "Parameter": {
                        "iconKind": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "444": {
        "Package": "java.beans",
        "Interface": "Customizer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "setObject": {
                    "Parameter": {
                        "bean": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "addPropertyChangeListener": {
                    "Parameter": {
                        "listener": "PropertyChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removePropertyChangeListener": {
                    "Parameter": {
                        "listener": "PropertyChangeListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "445": {
        "Package": "java.beans",
        "Interface": "DesignMode",
        "Superinterface": null,
        "Implementing Class": [
            "java.beans.beancontext.BeanContext",
            "java.beans.beancontext.BeanContextServices"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport"
        ],
        "Method": [
            {
                "setDesignTime": {
                    "Parameter": {
                        "designTime": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "isDesignTime": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "446": {
        "Package": "java.beans",
        "Interface": "ExceptionListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "exceptionThrown": {
                    "Parameter": {
                        "e": "Exception"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "447": {
        "Package": "java.beans",
        "Interface": "PropertyChangeListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicButtonListener",
            "javax.swing.plaf.basic.BasicColorChooserUI.PropertyHandler",
            "javax.swing.plaf.basic.BasicComboBoxUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicComboPopup.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicDirectoryModel",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicInternalFrameUI.InternalFramePropertyChangeListener",
            "javax.swing.plaf.basic.BasicLabelUI",
            "javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicOptionPaneUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicRootPaneUI",
            "javax.swing.plaf.basic.BasicScrollBarUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicScrollPaneUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicSliderUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicSplitPaneDivider",
            "javax.swing.plaf.basic.BasicSplitPaneUI.PropertyHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicToolBarUI.PropertyListener",
            "javax.swing.plaf.basic.BasicTreeUI.PropertyChangeHandler",
            "javax.swing.plaf.basic.BasicTreeUI.SelectionModelPropertyChangeHandler",
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport",
            "javax.swing.table.DefaultTableColumnModel",
            "javax.swing.JLayer",
            "javax.swing.JList.AccessibleJList",
            "javax.swing.JPopupMenu.AccessibleJPopupMenu",
            "javax.swing.JScrollPane.AccessibleJScrollPane",
            "javax.swing.JSpinner.DateEditor",
            "javax.swing.JSpinner.DefaultEditor",
            "javax.swing.JSpinner.ListEditor",
            "javax.swing.JSpinner.NumberEditor",
            "javax.swing.JTable.AccessibleJTable",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalPropertyChangeListener",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxModel",
            "javax.swing.plaf.metal.MetalLabelUI",
            "javax.swing.plaf.metal.MetalRootPaneUI",
            "javax.swing.plaf.metal.MetalSliderUI.MetalPropertyListener",
            "javax.swing.plaf.metal.MetalToolBarUI.MetalRolloverListener",
            "javax.swing.ProgressMonitor.AccessibleProgressMonitor",
            "java.beans.PropertyChangeListenerProxy",
            "javax.swing.plaf.synth.SynthButtonUI",
            "javax.swing.plaf.synth.SynthCheckBoxMenuItemUI",
            "javax.swing.plaf.synth.SynthCheckBoxUI",
            "javax.swing.plaf.synth.SynthColorChooserUI",
            "javax.swing.plaf.synth.SynthComboBoxUI",
            "javax.swing.plaf.synth.SynthDesktopIconUI",
            "javax.swing.plaf.synth.SynthDesktopPaneUI",
            "javax.swing.plaf.synth.SynthInternalFrameUI",
            "javax.swing.plaf.synth.SynthLabelUI",
            "javax.swing.plaf.synth.SynthListUI",
            "javax.swing.plaf.synth.SynthMenuBarUI",
            "javax.swing.plaf.synth.SynthMenuItemUI",
            "javax.swing.plaf.synth.SynthMenuUI",
            "javax.swing.plaf.synth.SynthOptionPaneUI",
            "javax.swing.plaf.synth.SynthPanelUI",
            "javax.swing.plaf.synth.SynthPopupMenuUI",
            "javax.swing.plaf.synth.SynthProgressBarUI",
            "javax.swing.plaf.synth.SynthRadioButtonMenuItemUI",
            "javax.swing.plaf.synth.SynthRadioButtonUI",
            "javax.swing.plaf.synth.SynthRootPaneUI",
            "javax.swing.plaf.synth.SynthScrollBarUI",
            "javax.swing.plaf.synth.SynthScrollPaneUI",
            "javax.swing.plaf.synth.SynthSeparatorUI",
            "javax.swing.plaf.synth.SynthSliderUI",
            "javax.swing.plaf.synth.SynthSpinnerUI",
            "javax.swing.plaf.synth.SynthSplitPaneUI",
            "javax.swing.plaf.synth.SynthTabbedPaneUI",
            "javax.swing.plaf.synth.SynthTableHeaderUI",
            "javax.swing.plaf.synth.SynthTableUI",
            "javax.swing.plaf.synth.SynthToggleButtonUI",
            "javax.swing.plaf.synth.SynthToolBarUI",
            "javax.swing.plaf.synth.SynthToolTipUI",
            "javax.swing.plaf.synth.SynthTreeUI",
            "javax.swing.plaf.synth.SynthViewportUI"
        ],
        "Method": [
            {
                "propertyChange": {
                    "Parameter": {
                        "evt": "PropertyChangeEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "448": {
        "Package": "java.beans",
        "Interface": "PropertyEditor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.beans.PropertyEditorSupport"
        ],
        "Method": [
            {
                "setValue": {
                    "Parameter": {
                        "value": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isPaintable": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "paintValue": {
                    "Parameter": {
                        "gfx": "Graphics",
                        "box": "Rectangle"
                    },
                    "Throw": []
                }
            },
            {
                "getJavaInitializationString": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAsText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAsText": {
                    "Parameter": {
                        "text": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getTags": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCustomEditor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "supportsCustomEditor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addPropertyChangeListener": {
                    "Parameter": {
                        "listener": "PropertyChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removePropertyChangeListener": {
                    "Parameter": {
                        "listener": "PropertyChangeListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "449": {
        "Package": "java.beans",
        "Interface": "VetoableChangeListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport",
            "java.beans.VetoableChangeListenerProxy"
        ],
        "Method": [
            {
                "vetoableChange": {
                    "Parameter": {
                        "evt": "PropertyChangeEvent"
                    },
                    "Throw": "java.beans.PropertyVetoException"
                }
            }
        ]
    },
    "450": {
        "Package": "java.beans",
        "Interface": "Visibility",
        "Superinterface": null,
        "Implementing Class": [
            "java.beans.beancontext.BeanContext",
            "java.beans.beancontext.BeanContextServices"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport"
        ],
        "Method": [
            {
                "needsGui": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "dontUseGui": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "okToUseGui": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "avoidingGui": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "451": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContext",
        "Superinterface": [
            "java.beans.beancontext.BeanContextChild",
            "java.util.Collection",
            "java.beans.DesignMode",
            "java.lang.Iterable",
            "java.beans.Visibility"
        ],
        "Implementing Class": [
            "java.beans.beancontext.BeanContextServices"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport"
        ],
        "Method": [
            {
                "instantiateChild": {
                    "Parameter": {
                        "beanName": "String"
                    },
                    "Throw": "java.lang.ClassNotFoundException"
                }
            },
            {
                "getResourceAsStream": {
                    "Parameter": {
                        "name": "String",
                        "bcc": "BeanContextChild"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getResource": {
                    "Parameter": {
                        "name": "String",
                        "bcc": "BeanContextChild"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "addBeanContextMembershipListener": {
                    "Parameter": {
                        "bcml": "BeanContextMembershipListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeBeanContextMembershipListener": {
                    "Parameter": {
                        "bcml": "BeanContextMembershipListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "452": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextChild",
        "Superinterface": null,
        "Implementing Class": [
            "java.beans.beancontext.BeanContext",
            "java.beans.beancontext.BeanContextServices"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextChildSupport",
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport"
        ],
        "Method": [
            {
                "setBeanContext": {
                    "Parameter": {
                        "bc": "BeanContext"
                    },
                    "Throw": "java.beans.PropertyVetoException"
                }
            },
            {
                "getBeanContext": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addPropertyChangeListener": {
                    "Parameter": {
                        "name": "String",
                        "pcl": "PropertyChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removePropertyChangeListener": {
                    "Parameter": {
                        "name": "String",
                        "pcl": "PropertyChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "addVetoableChangeListener": {
                    "Parameter": {
                        "name": "String",
                        "vcl": "VetoableChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeVetoableChangeListener": {
                    "Parameter": {
                        "name": "String",
                        "vcl": "VetoableChangeListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "453": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextChildComponentProxy",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getComponent": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "454": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextContainerProxy",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getContainer": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "455": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextMembershipListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "childrenAdded": {
                    "Parameter": {
                        "bcme": "BeanContextMembershipEvent"
                    },
                    "Throw": []
                }
            },
            {
                "childrenRemoved": {
                    "Parameter": {
                        "bcme": "BeanContextMembershipEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "456": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextProxy",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBeanContextProxy": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "457": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextServiceProvider",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.beans.beancontext.BeanContextServicesSupport.BCSSProxyServiceProvider"
        ],
        "Method": [
            {
                "getService": {
                    "Parameter": {
                        "bcs": "BeanContextServices",
                        "requestor": "Object",
                        "serviceClass": "Class",
                        "serviceSelector": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "releaseService": {
                    "Parameter": {
                        "bcs": "BeanContextServices",
                        "requestor": "Object",
                        "service": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "getCurrentServiceSelectors": {
                    "Parameter": {
                        "bcs": "BeanContextServices",
                        "serviceClass": "Class"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "458": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextServiceProviderBeanInfo",
        "Superinterface": [
            "java.beans.BeanInfo"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getServicesBeanInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "459": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextServiceRevokedListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": [
            "java.beans.beancontext.BeanContextServices",
            "java.beans.beancontext.BeanContextServicesListener"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextChildSupport",
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextServicesSupport.BCSSProxyServiceProvider",
            "java.beans.beancontext.BeanContextSupport"
        ],
        "Method": [
            {
                "serviceRevoked": {
                    "Parameter": {
                        "bcsre": "BeanContextServiceRevokedEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "460": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextServices",
        "Superinterface": [
            "java.beans.beancontext.BeanContext",
            "java.beans.beancontext.BeanContextChild",
            "java.beans.beancontext.BeanContextServiceRevokedListener",
            "java.beans.beancontext.BeanContextServicesListener",
            "java.util.Collection",
            "java.beans.DesignMode",
            "java.util.EventListener",
            "java.lang.Iterable",
            "java.beans.Visibility"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "java.beans.beancontext.BeanContextServicesSupport"
        ],
        "Method": [
            {
                "addService": {
                    "Parameter": {
                        "serviceClass": "Class",
                        "serviceProvider": "BeanContextServiceProvider"
                    },
                    "Throw": []
                }
            },
            {
                "revokeService": {
                    "Parameter": {
                        "serviceClass": "Class",
                        "serviceProvider": "BeanContextServiceProvider",
                        "revokeCurrentServicesNow": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "hasService": {
                    "Parameter": {
                        "serviceClass": "Class"
                    },
                    "Throw": []
                }
            },
            {
                "getService": {
                    "Parameter": {
                        "child": "BeanContextChild",
                        "requestor": "Object",
                        "serviceClass": "Class",
                        "serviceSelector": "Object",
                        "bcsrl": "BeanContextServiceRevokedListener"
                    },
                    "Throw": "java.util.TooManyListenersException"
                }
            },
            {
                "releaseService": {
                    "Parameter": {
                        "child": "BeanContextChild",
                        "requestor": "Object",
                        "service": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "getCurrentServiceClasses": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCurrentServiceSelectors": {
                    "Parameter": {
                        "serviceClass": "Class"
                    },
                    "Throw": []
                }
            },
            {
                "addBeanContextServicesListener": {
                    "Parameter": {
                        "bcsl": "BeanContextServicesListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeBeanContextServicesListener": {
                    "Parameter": {
                        "bcsl": "BeanContextServicesListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "461": {
        "Package": "java.beans.beancontext",
        "Interface": "BeanContextServicesListener",
        "Superinterface": [
            "java.beans.beancontext.BeanContextServiceRevokedListener",
            "java.util.EventListener"
        ],
        "Implementing Class": [
            "java.beans.beancontext.BeanContextServices"
        ],
        "Subinterface": [
            "java.beans.beancontext.BeanContextChildSupport",
            "java.beans.beancontext.BeanContextServicesSupport",
            "java.beans.beancontext.BeanContextSupport"
        ],
        "Method": [
            {
                "serviceAvailable": {
                    "Parameter": {
                        "bcsae": "BeanContextServiceAvailableEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "462": {
        "Package": "javax.accessibility",
        "Interface": "Accessible",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.colorchooser.AbstractColorChooserPanel",
            "java.applet.Applet",
            "javax.swing.plaf.basic.BasicArrowButton",
            "javax.swing.plaf.basic.BasicComboBoxRenderer",
            "javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource",
            "javax.swing.plaf.basic.BasicComboPopup",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.SystemMenuBar",
            "javax.swing.plaf.basic.BasicToolBarUI.DragWindow",
            "javax.swing.Box",
            "javax.swing.Box.Filler",
            "java.awt.Button",
            "java.awt.Canvas",
            "javax.swing.CellRendererPane",
            "java.awt.Checkbox",
            "java.awt.CheckboxMenuItem",
            "java.awt.Choice",
            "javax.swing.DefaultListCellRenderer",
            "javax.swing.DefaultListCellRenderer.UIResource",
            "javax.swing.table.DefaultTableCellRenderer",
            "javax.swing.table.DefaultTableCellRenderer.UIResource",
            "javax.swing.tree.DefaultTreeCellEditor.DefaultTextField",
            "javax.swing.tree.DefaultTreeCellRenderer",
            "java.awt.Dialog",
            "java.awt.FileDialog",
            "java.awt.Frame",
            "javax.swing.text.html.HTMLEditorKit",
            "javax.swing.ImageIcon",
            "javax.swing.JApplet",
            "javax.swing.JButton",
            "javax.swing.JCheckBox",
            "javax.swing.JCheckBoxMenuItem",
            "javax.swing.JColorChooser",
            "javax.swing.JComboBox",
            "javax.swing.JDesktopPane",
            "javax.swing.JDialog",
            "javax.swing.JEditorPane",
            "javax.swing.JFileChooser",
            "javax.swing.JFormattedTextField",
            "javax.swing.JFrame",
            "javax.swing.JInternalFrame",
            "javax.swing.JInternalFrame.JDesktopIcon",
            "javax.swing.JLabel",
            "javax.swing.JLayer",
            "javax.swing.JLayeredPane",
            "javax.swing.JList",
            "javax.swing.JList.AccessibleJList.AccessibleJListChild",
            "javax.swing.JMenu",
            "javax.swing.JMenuBar",
            "javax.swing.JMenuItem",
            "javax.swing.JOptionPane",
            "javax.swing.JPanel",
            "javax.swing.JPasswordField",
            "javax.swing.JPopupMenu",
            "javax.swing.JPopupMenu.Separator",
            "javax.swing.JProgressBar",
            "javax.swing.JRadioButton",
            "javax.swing.JRadioButtonMenuItem",
            "javax.swing.JRootPane",
            "javax.swing.JScrollBar",
            "javax.swing.JScrollPane",
            "javax.swing.JScrollPane.ScrollBar",
            "javax.swing.JSeparator",
            "javax.swing.JSlider",
            "javax.swing.JSpinner",
            "javax.swing.JSpinner.DateEditor",
            "javax.swing.JSpinner.DefaultEditor",
            "javax.swing.JSpinner.ListEditor",
            "javax.swing.JSpinner.NumberEditor",
            "javax.swing.JSplitPane",
            "javax.swing.JTabbedPane",
            "javax.swing.JTable",
            "javax.swing.JTable.AccessibleJTable.AccessibleJTableCell",
            "javax.swing.table.JTableHeader",
            "javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry",
            "javax.swing.JTextArea",
            "javax.swing.text.JTextComponent",
            "javax.swing.JTextField",
            "javax.swing.JTextPane",
            "javax.swing.JToggleButton",
            "javax.swing.JToolBar",
            "javax.swing.JToolBar.Separator",
            "javax.swing.JToolTip",
            "javax.swing.JTree",
            "javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode",
            "javax.swing.JViewport",
            "javax.swing.JWindow",
            "java.awt.Label",
            "java.awt.List",
            "java.awt.List.AccessibleAWTList.AccessibleAWTListChild",
            "java.awt.Menu",
            "java.awt.MenuBar",
            "java.awt.MenuItem",
            "javax.swing.plaf.metal.MetalComboBoxButton",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalComboPopup",
            "javax.swing.plaf.metal.MetalFileChooserUI.FileRenderer",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxRenderer",
            "javax.swing.plaf.metal.MetalScrollButton",
            "java.awt.Panel",
            "java.awt.PopupMenu",
            "javax.swing.ProgressMonitor",
            "java.awt.Scrollbar",
            "java.awt.ScrollPane",
            "java.awt.TextArea",
            "java.awt.TextComponent",
            "java.awt.TextField",
            "com.sun.java.accessibility.util.Translator",
            "java.awt.Window"
        ],
        "Method": [
            {
                "getAccessibleContext": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "463": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleAction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractButton.AccessibleAbstractButton",
            "javax.accessibility.AccessibleHyperlink",
            "java.awt.Button.AccessibleAWTButton",
            "java.awt.Checkbox.AccessibleAWTCheckbox",
            "java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem",
            "java.awt.Choice.AccessibleAWTChoice",
            "javax.swing.JButton.AccessibleJButton",
            "javax.swing.JCheckBox.AccessibleJCheckBox",
            "javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem",
            "javax.swing.JComboBox.AccessibleJComboBox",
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink",
            "javax.swing.JList.AccessibleJList.AccessibleJListChild",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuItem.AccessibleJMenuItem",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JRadioButton.AccessibleJRadioButton",
            "javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem",
            "javax.swing.JSlider.AccessibleJSlider",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField",
            "javax.swing.JToggleButton.AccessibleJToggleButton",
            "javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode",
            "java.awt.Menu.AccessibleAWTMenu",
            "java.awt.MenuItem.AccessibleAWTMenuItem",
            "java.awt.PopupMenu.AccessibleAWTPopupMenu"
        ],
        "Method": [
            {
                "getAccessibleActionCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccessibleActionDescription": {
                    "Parameter": {
                        "i": "int"
                    },
                    "Throw": []
                }
            },
            {
                "doAccessibleAction": {
                    "Parameter": {
                        "i": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "464": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleComponent",
        "Superinterface": null,
        "Implementing Class": [
            "javax.accessibility.AccessibleExtendedComponent"
        ],
        "Subinterface": [
            "javax.swing.AbstractButton.AccessibleAbstractButton",
            "java.applet.Applet.AccessibleApplet",
            "javax.swing.Box.AccessibleBox",
            "javax.swing.Box.Filler.AccessibleBoxFiller",
            "java.awt.Button.AccessibleAWTButton",
            "java.awt.Canvas.AccessibleAWTCanvas",
            "javax.swing.CellRendererPane.AccessibleCellRendererPane",
            "java.awt.Checkbox.AccessibleAWTCheckbox",
            "java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem",
            "java.awt.Choice.AccessibleAWTChoice",
            "java.awt.Component.AccessibleAWTComponent",
            "java.awt.Container.AccessibleAWTContainer",
            "java.awt.Dialog.AccessibleAWTDialog",
            "java.awt.Frame.AccessibleAWTFrame",
            "javax.swing.JApplet.AccessibleJApplet",
            "javax.swing.JButton.AccessibleJButton",
            "javax.swing.JCheckBox.AccessibleJCheckBox",
            "javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem",
            "javax.swing.JColorChooser.AccessibleJColorChooser",
            "javax.swing.JComboBox.AccessibleJComboBox",
            "javax.swing.JComponent.AccessibleJComponent",
            "javax.swing.JDesktopPane.AccessibleJDesktopPane",
            "javax.swing.JDialog.AccessibleJDialog",
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JFileChooser.AccessibleJFileChooser",
            "javax.swing.JFrame.AccessibleJFrame",
            "javax.swing.JInternalFrame.AccessibleJInternalFrame",
            "javax.swing.JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon",
            "javax.swing.JLabel.AccessibleJLabel",
            "javax.swing.JLayeredPane.AccessibleJLayeredPane",
            "javax.swing.JList.AccessibleJList",
            "javax.swing.JList.AccessibleJList.AccessibleJListChild",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuBar.AccessibleJMenuBar",
            "javax.swing.JMenuItem.AccessibleJMenuItem",
            "javax.swing.JOptionPane.AccessibleJOptionPane",
            "javax.swing.JPanel.AccessibleJPanel",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JPopupMenu.AccessibleJPopupMenu",
            "javax.swing.JProgressBar.AccessibleJProgressBar",
            "javax.swing.JRadioButton.AccessibleJRadioButton",
            "javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem",
            "javax.swing.JRootPane.AccessibleJRootPane",
            "javax.swing.JScrollBar.AccessibleJScrollBar",
            "javax.swing.JScrollPane.AccessibleJScrollPane",
            "javax.swing.JSeparator.AccessibleJSeparator",
            "javax.swing.JSlider.AccessibleJSlider",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JSplitPane.AccessibleJSplitPane",
            "javax.swing.JTabbedPane.AccessibleJTabbedPane",
            "javax.swing.JTable.AccessibleJTable",
            "javax.swing.JTable.AccessibleJTable.AccessibleJTableCell",
            "javax.swing.table.JTableHeader.AccessibleJTableHeader",
            "javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField",
            "javax.swing.JToggleButton.AccessibleJToggleButton",
            "javax.swing.JToolBar.AccessibleJToolBar",
            "javax.swing.JToolTip.AccessibleJToolTip",
            "javax.swing.JTree.AccessibleJTree",
            "javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode",
            "javax.swing.JViewport.AccessibleJViewport",
            "javax.swing.JWindow.AccessibleJWindow",
            "java.awt.Label.AccessibleAWTLabel",
            "java.awt.List.AccessibleAWTList",
            "java.awt.List.AccessibleAWTList.AccessibleAWTListChild",
            "java.awt.Menu.AccessibleAWTMenu",
            "java.awt.MenuBar.AccessibleAWTMenuBar",
            "java.awt.MenuComponent.AccessibleAWTMenuComponent",
            "java.awt.MenuItem.AccessibleAWTMenuItem",
            "java.awt.Panel.AccessibleAWTPanel",
            "java.awt.PopupMenu.AccessibleAWTPopupMenu",
            "java.awt.Scrollbar.AccessibleAWTScrollBar",
            "java.awt.ScrollPane.AccessibleAWTScrollPane",
            "java.awt.TextArea.AccessibleAWTTextArea",
            "java.awt.TextComponent.AccessibleAWTTextComponent",
            "java.awt.TextField.AccessibleAWTTextField",
            "com.sun.java.accessibility.util.Translator",
            "java.awt.Window.AccessibleAWTWindow"
        ],
        "Method": [
            {
                "getBackground": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBackground": {
                    "Parameter": {
                        "c": "Color"
                    },
                    "Throw": []
                }
            },
            {
                "getForeground": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setForeground": {
                    "Parameter": {
                        "c": "Color"
                    },
                    "Throw": []
                }
            },
            {
                "getCursor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCursor": {
                    "Parameter": {
                        "cursor": "Cursor"
                    },
                    "Throw": []
                }
            },
            {
                "getFont": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFont": {
                    "Parameter": {
                        "f": "Font"
                    },
                    "Throw": []
                }
            },
            {
                "getFontMetrics": {
                    "Parameter": {
                        "f": "Font"
                    },
                    "Throw": []
                }
            },
            {
                "isEnabled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setEnabled": {
                    "Parameter": {
                        "b": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "isVisible": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVisible": {
                    "Parameter": {
                        "b": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "isShowing": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "p": "Point"
                    },
                    "Throw": []
                }
            },
            {
                "getLocationOnScreen": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLocation": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLocation": {
                    "Parameter": {
                        "p": "Point"
                    },
                    "Throw": []
                }
            },
            {
                "getBounds": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBounds": {
                    "Parameter": {
                        "r": "Rectangle"
                    },
                    "Throw": []
                }
            },
            {
                "getSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSize": {
                    "Parameter": {
                        "d": "Dimension"
                    },
                    "Throw": []
                }
            },
            {
                "getAccessibleAt": {
                    "Parameter": {
                        "p": "Point"
                    },
                    "Throw": []
                }
            },
            {
                "isFocusTraversable": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "requestFocus": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addFocusListener": {
                    "Parameter": {
                        "l": "FocusListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeFocusListener": {
                    "Parameter": {
                        "l": "FocusListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "465": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleEditableText",
        "Superinterface": [
            "javax.accessibility.AccessibleText"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField"
        ],
        "Method": [
            {
                "setTextContents": {
                    "Parameter": {
                        "s": "String"
                    },
                    "Throw": []
                }
            },
            {
                "insertTextAtIndex": {
                    "Parameter": {
                        "index": "int",
                        "s": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getTextRange": {
                    "Parameter": {
                        "startIndex": "int",
                        "endIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "delete": {
                    "Parameter": {
                        "startIndex": "int",
                        "endIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "cut": {
                    "Parameter": {
                        "startIndex": "int",
                        "endIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "paste": {
                    "Parameter": {
                        "startIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "replaceText": {
                    "Parameter": {
                        "startIndex": "int",
                        "endIndex": "int",
                        "s": "String"
                    },
                    "Throw": []
                }
            },
            {
                "selectText": {
                    "Parameter": {
                        "startIndex": "int",
                        "endIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setAttributes": {
                    "Parameter": {
                        "startIndex": "int",
                        "endIndex": "int",
                        "as": "AttributeSet"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "466": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleExtendedComponent",
        "Superinterface": [
            "javax.accessibility.AccessibleComponent"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractButton.AccessibleAbstractButton",
            "javax.swing.JButton.AccessibleJButton",
            "javax.swing.JCheckBox.AccessibleJCheckBox",
            "javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem",
            "javax.swing.JColorChooser.AccessibleJColorChooser",
            "javax.swing.JComboBox.AccessibleJComboBox",
            "javax.swing.JComponent.AccessibleJComponent",
            "javax.swing.JDesktopPane.AccessibleJDesktopPane",
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JFileChooser.AccessibleJFileChooser",
            "javax.swing.JInternalFrame.AccessibleJInternalFrame",
            "javax.swing.JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon",
            "javax.swing.JLabel.AccessibleJLabel",
            "javax.swing.JLayeredPane.AccessibleJLayeredPane",
            "javax.swing.JList.AccessibleJList",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuBar.AccessibleJMenuBar",
            "javax.swing.JMenuItem.AccessibleJMenuItem",
            "javax.swing.JOptionPane.AccessibleJOptionPane",
            "javax.swing.JPanel.AccessibleJPanel",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JPopupMenu.AccessibleJPopupMenu",
            "javax.swing.JProgressBar.AccessibleJProgressBar",
            "javax.swing.JRadioButton.AccessibleJRadioButton",
            "javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem",
            "javax.swing.JRootPane.AccessibleJRootPane",
            "javax.swing.JScrollBar.AccessibleJScrollBar",
            "javax.swing.JScrollPane.AccessibleJScrollPane",
            "javax.swing.JSeparator.AccessibleJSeparator",
            "javax.swing.JSlider.AccessibleJSlider",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JSplitPane.AccessibleJSplitPane",
            "javax.swing.JTabbedPane.AccessibleJTabbedPane",
            "javax.swing.JTable.AccessibleJTable",
            "javax.swing.table.JTableHeader.AccessibleJTableHeader",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField",
            "javax.swing.JToggleButton.AccessibleJToggleButton",
            "javax.swing.JToolBar.AccessibleJToolBar",
            "javax.swing.JToolTip.AccessibleJToolTip",
            "javax.swing.JTree.AccessibleJTree",
            "javax.swing.JViewport.AccessibleJViewport"
        ],
        "Method": [
            {
                "getToolTipText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTitledBorderText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccessibleKeyBinding": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "467": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleExtendedTable",
        "Superinterface": [
            "javax.accessibility.AccessibleTable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JTable.AccessibleJTable"
        ],
        "Method": [
            {
                "getAccessibleRow": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getAccessibleColumn": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getAccessibleIndex": {
                    "Parameter": {
                        "r": "int",
                        "c": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "468": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleExtendedText",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField"
        ],
        "Method": [
            {
                "getTextRange": {
                    "Parameter": {
                        "startIndex": "int",
                        "endIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getTextSequenceAt": {
                    "Parameter": {
                        "part": "int",
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getTextSequenceAfter": {
                    "Parameter": {
                        "part": "int",
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getTextSequenceBefore": {
                    "Parameter": {
                        "part": "int",
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getTextBounds": {
                    "Parameter": {
                        "startIndex": "int",
                        "endIndex": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "469": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleHypertext",
        "Superinterface": [
            "javax.accessibility.AccessibleText"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport"
        ],
        "Method": [
            {
                "getLinkCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLink": {
                    "Parameter": {
                        "linkIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getLinkIndex": {
                    "Parameter": {
                        "charIndex": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "470": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleIcon",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.ImageIcon.AccessibleImageIcon"
        ],
        "Method": [
            {
                "getAccessibleIconDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAccessibleIconDescription": {
                    "Parameter": {
                        "description": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAccessibleIconWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccessibleIconHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "471": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleKeyBinding",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAccessibleKeyBindingCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccessibleKeyBinding": {
                    "Parameter": {
                        "i": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "472": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleSelection",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem",
            "javax.swing.JComboBox.AccessibleJComboBox",
            "javax.swing.JList.AccessibleJList",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuBar.AccessibleJMenuBar",
            "javax.swing.JTabbedPane.AccessibleJTabbedPane",
            "javax.swing.JTable.AccessibleJTable",
            "javax.swing.JTree.AccessibleJTree",
            "javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode",
            "java.awt.List.AccessibleAWTList",
            "java.awt.Menu.AccessibleAWTMenu",
            "java.awt.MenuBar.AccessibleAWTMenuBar",
            "java.awt.MenuComponent.AccessibleAWTMenuComponent",
            "java.awt.MenuItem.AccessibleAWTMenuItem",
            "java.awt.PopupMenu.AccessibleAWTPopupMenu"
        ],
        "Method": [
            {
                "getAccessibleSelectionCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccessibleSelection": {
                    "Parameter": {
                        "i": "int"
                    },
                    "Throw": []
                }
            },
            {
                "isAccessibleChildSelected": {
                    "Parameter": {
                        "i": "int"
                    },
                    "Throw": []
                }
            },
            {
                "addAccessibleSelection": {
                    "Parameter": {
                        "i": "int"
                    },
                    "Throw": []
                }
            },
            {
                "removeAccessibleSelection": {
                    "Parameter": {
                        "i": "int"
                    },
                    "Throw": []
                }
            },
            {
                "clearAccessibleSelection": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "selectAllAccessibleSelection": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "473": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleStreamable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getMimeTypes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getStream": {
                    "Parameter": {
                        "flavor": "DataFlavor"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "474": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleTable",
        "Superinterface": null,
        "Implementing Class": [
            "javax.accessibility.AccessibleExtendedTable"
        ],
        "Subinterface": [
            "javax.swing.JTable.AccessibleJTable"
        ],
        "Method": [
            {
                "getAccessibleCaption": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAccessibleCaption": {
                    "Parameter": {
                        "a": "Accessible"
                    },
                    "Throw": []
                }
            },
            {
                "getAccessibleSummary": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAccessibleSummary": {
                    "Parameter": {
                        "a": "Accessible"
                    },
                    "Throw": []
                }
            },
            {
                "getAccessibleRowCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccessibleColumnCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccessibleAt": {
                    "Parameter": {
                        "r": "int",
                        "c": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getAccessibleRowExtentAt": {
                    "Parameter": {
                        "r": "int",
                        "c": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getAccessibleColumnExtentAt": {
                    "Parameter": {
                        "r": "int",
                        "c": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getAccessibleRowHeader": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAccessibleRowHeader": {
                    "Parameter": {
                        "table": "AccessibleTable"
                    },
                    "Throw": []
                }
            },
            {
                "getAccessibleColumnHeader": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAccessibleColumnHeader": {
                    "Parameter": {
                        "table": "AccessibleTable"
                    },
                    "Throw": []
                }
            },
            {
                "getAccessibleRowDescription": {
                    "Parameter": {
                        "r": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setAccessibleRowDescription": {
                    "Parameter": {
                        "r": "int",
                        "a": "Accessible"
                    },
                    "Throw": []
                }
            },
            {
                "getAccessibleColumnDescription": {
                    "Parameter": {
                        "c": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setAccessibleColumnDescription": {
                    "Parameter": {
                        "c": "int",
                        "a": "Accessible"
                    },
                    "Throw": []
                }
            },
            {
                "isAccessibleSelected": {
                    "Parameter": {
                        "r": "int",
                        "c": "int"
                    },
                    "Throw": []
                }
            },
            {
                "isAccessibleRowSelected": {
                    "Parameter": {
                        "r": "int"
                    },
                    "Throw": []
                }
            },
            {
                "isAccessibleColumnSelected": {
                    "Parameter": {
                        "c": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getSelectedAccessibleRows": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSelectedAccessibleColumns": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "475": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleTableModelChange",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JTable.AccessibleJTable.AccessibleJTableModelChange"
        ],
        "Method": [
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFirstRow": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLastRow": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFirstColumn": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLastColumn": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "476": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleText",
        "Superinterface": null,
        "Implementing Class": [
            "javax.accessibility.AccessibleEditableText",
            "javax.accessibility.AccessibleHypertext"
        ],
        "Subinterface": [
            "javax.swing.AbstractButton.AccessibleAbstractButton",
            "javax.swing.JButton.AccessibleJButton",
            "javax.swing.JCheckBox.AccessibleJCheckBox",
            "javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem",
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JLabel.AccessibleJLabel",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuItem.AccessibleJMenuItem",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JRadioButton.AccessibleJRadioButton",
            "javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField",
            "javax.swing.JToggleButton.AccessibleJToggleButton",
            "javax.swing.ProgressMonitor.AccessibleProgressMonitor",
            "java.awt.TextArea.AccessibleAWTTextArea",
            "java.awt.TextComponent.AccessibleAWTTextComponent",
            "java.awt.TextField.AccessibleAWTTextField"
        ],
        "Method": [
            {
                "getIndexAtPoint": {
                    "Parameter": {
                        "p": "Point"
                    },
                    "Throw": []
                }
            },
            {
                "getCharacterBounds": {
                    "Parameter": {
                        "i": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getCharCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCaretPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "part": "int",
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getAfterIndex": {
                    "Parameter": {
                        "part": "int",
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getBeforeIndex": {
                    "Parameter": {
                        "part": "int",
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getCharacterAttribute": {
                    "Parameter": {
                        "i": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getSelectionStart": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSelectionEnd": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSelectedText": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "477": {
        "Package": "javax.accessibility",
        "Interface": "AccessibleValue",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractButton.AccessibleAbstractButton",
            "java.awt.Button.AccessibleAWTButton",
            "java.awt.Checkbox.AccessibleAWTCheckbox",
            "java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem",
            "javax.swing.JButton.AccessibleJButton",
            "javax.swing.JCheckBox.AccessibleJCheckBox",
            "javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem",
            "javax.swing.JInternalFrame.AccessibleJInternalFrame",
            "javax.swing.JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuItem.AccessibleJMenuItem",
            "javax.swing.JProgressBar.AccessibleJProgressBar",
            "javax.swing.JRadioButton.AccessibleJRadioButton",
            "javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem",
            "javax.swing.JScrollBar.AccessibleJScrollBar",
            "javax.swing.JSlider.AccessibleJSlider",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JSplitPane.AccessibleJSplitPane",
            "javax.swing.JToggleButton.AccessibleJToggleButton",
            "java.awt.Menu.AccessibleAWTMenu",
            "java.awt.MenuItem.AccessibleAWTMenuItem",
            "java.awt.PopupMenu.AccessibleAWTPopupMenu",
            "java.awt.Scrollbar.AccessibleAWTScrollBar"
        ],
        "Method": [
            {
                "getCurrentAccessibleValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCurrentAccessibleValue": {
                    "Parameter": {
                        "n": "Number"
                    },
                    "Throw": []
                }
            },
            {
                "getMinimumAccessibleValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMaximumAccessibleValue": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "478": {
        "Package": "javax.imageio",
        "Interface": "IIOParamController",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "activate": {
                    "Parameter": {
                        "param": "IIOParam"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "479": {
        "Package": "javax.imageio",
        "Interface": "ImageTranscoder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.imageio.ImageWriter"
        ],
        "Method": [
            {
                "convertStreamMetadata": {
                    "Parameter": {
                        "inData": "IIOMetadata",
                        "param": "ImageWriteParam"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "convertImageMetadata": {
                    "Parameter": {
                        "inData": "IIOMetadata",
                        "imageType": "ImageTypeSpecifier",
                        "param": "ImageWriteParam"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "480": {
        "Package": "javax.imageio.event",
        "Interface": "IIOReadProgressListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "sequenceStarted": {
                    "Parameter": {
                        "source": "ImageReader",
                        "minIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "sequenceComplete": {
                    "Parameter": {
                        "source": "ImageReader"
                    },
                    "Throw": []
                }
            },
            {
                "imageStarted": {
                    "Parameter": {
                        "source": "ImageReader",
                        "imageIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "imageProgress": {
                    "Parameter": {
                        "source": "ImageReader",
                        "percentageDone": "float"
                    },
                    "Throw": []
                }
            },
            {
                "imageComplete": {
                    "Parameter": {
                        "source": "ImageReader"
                    },
                    "Throw": []
                }
            },
            {
                "thumbnailStarted": {
                    "Parameter": {
                        "source": "ImageReader",
                        "imageIndex": "int",
                        "thumbnailIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "thumbnailProgress": {
                    "Parameter": {
                        "source": "ImageReader",
                        "percentageDone": "float"
                    },
                    "Throw": []
                }
            },
            {
                "thumbnailComplete": {
                    "Parameter": {
                        "source": "ImageReader"
                    },
                    "Throw": []
                }
            },
            {
                "readAborted": {
                    "Parameter": {
                        "source": "ImageReader"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "481": {
        "Package": "javax.imageio.event",
        "Interface": "IIOReadUpdateListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "passStarted": {
                    "Parameter": {
                        "source": "ImageReader",
                        "theImage": "BufferedImage",
                        "pass": "int",
                        "minPass": "int",
                        "maxPass": "int",
                        "minX": "int",
                        "minY": "int",
                        "periodX": "int",
                        "periodY": "int",
                        "bands": "int"
                    },
                    "Throw": []
                }
            },
            {
                "imageUpdate": {
                    "Parameter": {
                        "source": "ImageReader",
                        "theImage": "BufferedImage",
                        "minX": "int",
                        "minY": "int",
                        "width": "int",
                        "height": "int",
                        "periodX": "int",
                        "periodY": "int",
                        "bands": "int"
                    },
                    "Throw": []
                }
            },
            {
                "passComplete": {
                    "Parameter": {
                        "source": "ImageReader",
                        "theImage": "BufferedImage"
                    },
                    "Throw": []
                }
            },
            {
                "thumbnailPassStarted": {
                    "Parameter": {
                        "source": "ImageReader",
                        "theThumbnail": "BufferedImage",
                        "pass": "int",
                        "minPass": "int",
                        "maxPass": "int",
                        "minX": "int",
                        "minY": "int",
                        "periodX": "int",
                        "periodY": "int",
                        "bands": "int"
                    },
                    "Throw": []
                }
            },
            {
                "thumbnailUpdate": {
                    "Parameter": {
                        "source": "ImageReader",
                        "theThumbnail": "BufferedImage",
                        "minX": "int",
                        "minY": "int",
                        "width": "int",
                        "height": "int",
                        "periodX": "int",
                        "periodY": "int",
                        "bands": "int"
                    },
                    "Throw": []
                }
            },
            {
                "thumbnailPassComplete": {
                    "Parameter": {
                        "source": "ImageReader",
                        "theThumbnail": "BufferedImage"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "482": {
        "Package": "javax.imageio.event",
        "Interface": "IIOReadWarningListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "warningOccurred": {
                    "Parameter": {
                        "source": "ImageReader",
                        "warning": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "483": {
        "Package": "javax.imageio.event",
        "Interface": "IIOWriteProgressListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "imageStarted": {
                    "Parameter": {
                        "source": "ImageWriter",
                        "imageIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "imageProgress": {
                    "Parameter": {
                        "source": "ImageWriter",
                        "percentageDone": "float"
                    },
                    "Throw": []
                }
            },
            {
                "imageComplete": {
                    "Parameter": {
                        "source": "ImageWriter"
                    },
                    "Throw": []
                }
            },
            {
                "thumbnailStarted": {
                    "Parameter": {
                        "source": "ImageWriter",
                        "imageIndex": "int",
                        "thumbnailIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "thumbnailProgress": {
                    "Parameter": {
                        "source": "ImageWriter",
                        "percentageDone": "float"
                    },
                    "Throw": []
                }
            },
            {
                "thumbnailComplete": {
                    "Parameter": {
                        "source": "ImageWriter"
                    },
                    "Throw": []
                }
            },
            {
                "writeAborted": {
                    "Parameter": {
                        "source": "ImageWriter"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "484": {
        "Package": "javax.imageio.event",
        "Interface": "IIOWriteWarningListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "warningOccurred": {
                    "Parameter": {
                        "source": "ImageWriter",
                        "imageIndex": "int",
                        "warning": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "485": {
        "Package": "javax.imageio.metadata",
        "Interface": "IIOMetadataController",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "activate": {
                    "Parameter": {
                        "metadata": "IIOMetadata"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "486": {
        "Package": "javax.imageio.metadata",
        "Interface": "IIOMetadataFormat",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.imageio.metadata.IIOMetadataFormatImpl"
        ],
        "Method": [
            {
                "getRootName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canNodeAppear": {
                    "Parameter": {
                        "elementName": "String",
                        "imageType": "ImageTypeSpecifier"
                    },
                    "Throw": []
                }
            },
            {
                "getElementMinChildren": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getElementMaxChildren": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getElementDescription": {
                    "Parameter": {
                        "elementName": "String",
                        "locale": "Locale"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getChildPolicy": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getChildNames": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getAttributeNames": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getAttributeValueType": {
                    "Parameter": {
                        "elementName": "String",
                        "attrName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getAttributeDataType": {
                    "Parameter": {
                        "elementName": "String",
                        "attrName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "isAttributeRequired": {
                    "Parameter": {
                        "elementName": "String",
                        "attrName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getAttributeDefaultValue": {
                    "Parameter": {
                        "elementName": "String",
                        "attrName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getAttributeEnumerations": {
                    "Parameter": {
                        "elementName": "String",
                        "attrName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getAttributeMinValue": {
                    "Parameter": {
                        "elementName": "String",
                        "attrName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getAttributeMaxValue": {
                    "Parameter": {
                        "elementName": "String",
                        "attrName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getAttributeListMinLength": {
                    "Parameter": {
                        "elementName": "String",
                        "attrName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getAttributeListMaxLength": {
                    "Parameter": {
                        "elementName": "String",
                        "attrName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getAttributeDescription": {
                    "Parameter": {
                        "elementName": "String",
                        "attrName": "String",
                        "locale": "Locale"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getObjectValueType": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getObjectClass": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getObjectDefaultValue": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getObjectEnumerations": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getObjectMinValue": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getObjectMaxValue": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getObjectArrayMinLength": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getObjectArrayMaxLength": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "487": {
        "Package": "javax.imageio.spi",
        "Interface": "RegisterableService",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.imageio.spi.IIOServiceProvider",
            "javax.imageio.spi.ImageInputStreamSpi",
            "javax.imageio.spi.ImageOutputStreamSpi",
            "javax.imageio.spi.ImageReaderSpi",
            "javax.imageio.spi.ImageReaderWriterSpi",
            "javax.imageio.spi.ImageTranscoderSpi",
            "javax.imageio.spi.ImageWriterSpi"
        ],
        "Method": [
            {
                "onRegistration": {
                    "Parameter": {
                        "registry": "ServiceRegistry",
                        "category": "Class"
                    },
                    "Throw": []
                }
            },
            {
                "onDeregistration": {
                    "Parameter": {
                        "registry": "ServiceRegistry",
                        "category": "Class"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "488": {
        "Package": "javax.imageio.spi",
        "Interface": "ServiceRegistry.Filter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "filter": {
                    "Parameter": {
                        "provider": "Object"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "489": {
        "Package": "javax.imageio.stream",
        "Interface": "ImageInputStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.io.DataInput"
        ],
        "Implementing Class": [
            "javax.imageio.stream.ImageOutputStream"
        ],
        "Subinterface": [
            "javax.imageio.stream.FileCacheImageInputStream",
            "javax.imageio.stream.FileCacheImageOutputStream",
            "javax.imageio.stream.FileImageInputStream",
            "javax.imageio.stream.FileImageOutputStream",
            "javax.imageio.stream.ImageInputStreamImpl",
            "javax.imageio.stream.ImageOutputStreamImpl",
            "javax.imageio.stream.MemoryCacheImageInputStream",
            "javax.imageio.stream.MemoryCacheImageOutputStream"
        ],
        "Method": [
            {
                "setByteOrder": {
                    "Parameter": {
                        "byteOrder": "ByteOrder"
                    },
                    "Throw": []
                }
            },
            {
                "getByteOrder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "read": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "read": {
                    "Parameter": {
                        "b": "byte"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "read": {
                    "Parameter": {
                        "b": "byte",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readBytes": {
                    "Parameter": {
                        "buf": "IIOByteBuffer",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readBoolean": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readByte": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readUnsignedByte": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readShort": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readUnsignedShort": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readChar": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readInt": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readUnsignedInt": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readLong": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readFloat": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readDouble": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readLine": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readUTF": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readFully": {
                    "Parameter": {
                        "b": "byte",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readFully": {
                    "Parameter": {
                        "b": "byte"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readFully": {
                    "Parameter": {
                        "s": "short",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readFully": {
                    "Parameter": {
                        "c": "char",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readFully": {
                    "Parameter": {
                        "i": "int",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readFully": {
                    "Parameter": {
                        "l": "long",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readFully": {
                    "Parameter": {
                        "f": "float",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readFully": {
                    "Parameter": {
                        "d": "double",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getStreamPosition": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getBitOffset": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "setBitOffset": {
                    "Parameter": {
                        "bitOffset": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readBit": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "readBits": {
                    "Parameter": {
                        "numBits": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "length": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "skipBytes": {
                    "Parameter": {
                        "n": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "skipBytes": {
                    "Parameter": {
                        "n": "long"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "seek": {
                    "Parameter": {
                        "pos": "long"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "mark": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "reset": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "flushBefore": {
                    "Parameter": {
                        "pos": "long"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "flush": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getFlushedPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCached": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCachedMemory": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCachedFile": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "490": {
        "Package": "javax.imageio.stream",
        "Interface": "ImageOutputStream",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.io.DataInput",
            "java.io.DataOutput",
            "javax.imageio.stream.ImageInputStream"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.imageio.stream.FileCacheImageOutputStream",
            "javax.imageio.stream.FileImageOutputStream",
            "javax.imageio.stream.ImageOutputStreamImpl",
            "javax.imageio.stream.MemoryCacheImageOutputStream"
        ],
        "Method": [
            {
                "write": {
                    "Parameter": {
                        "b": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "write": {
                    "Parameter": {
                        "b": "byte"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "write": {
                    "Parameter": {
                        "b": "byte",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeBoolean": {
                    "Parameter": {
                        "v": "boolean"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeByte": {
                    "Parameter": {
                        "v": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeShort": {
                    "Parameter": {
                        "v": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeChar": {
                    "Parameter": {
                        "v": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeInt": {
                    "Parameter": {
                        "v": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeLong": {
                    "Parameter": {
                        "v": "long"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeFloat": {
                    "Parameter": {
                        "v": "float"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeDouble": {
                    "Parameter": {
                        "v": "double"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeBytes": {
                    "Parameter": {
                        "s": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeChars": {
                    "Parameter": {
                        "s": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeUTF": {
                    "Parameter": {
                        "s": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeShorts": {
                    "Parameter": {
                        "s": "short",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeChars": {
                    "Parameter": {
                        "c": "char",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeInts": {
                    "Parameter": {
                        "i": "int",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeLongs": {
                    "Parameter": {
                        "l": "long",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeFloats": {
                    "Parameter": {
                        "f": "float",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeDoubles": {
                    "Parameter": {
                        "d": "double",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeBit": {
                    "Parameter": {
                        "bit": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeBits": {
                    "Parameter": {
                        "bits": "long",
                        "numBits": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "flushBefore": {
                    "Parameter": {
                        "pos": "long"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "491": {
        "Package": "javax.print",
        "Interface": "AttributeException",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getUnsupportedAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getUnsupportedValues": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "492": {
        "Package": "javax.print",
        "Interface": "CancelablePrintJob",
        "Superinterface": [
            "javax.print.DocPrintJob"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "cancel": {
                    "Parameter": {},
                    "Throw": "javax.print.PrintException"
                }
            }
        ]
    },
    "493": {
        "Package": "javax.print",
        "Interface": "Doc",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.SimpleDoc"
        ],
        "Method": [
            {
                "getDocFlavor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrintData": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReaderForText": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getStreamForBytes": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "494": {
        "Package": "javax.print",
        "Interface": "DocPrintJob",
        "Superinterface": null,
        "Implementing Class": [
            "javax.print.CancelablePrintJob",
            "javax.print.MultiDocPrintJob"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getPrintService": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addPrintJobListener": {
                    "Parameter": {
                        "listener": "PrintJobListener"
                    },
                    "Throw": []
                }
            },
            {
                "removePrintJobListener": {
                    "Parameter": {
                        "listener": "PrintJobListener"
                    },
                    "Throw": []
                }
            },
            {
                "addPrintJobAttributeListener": {
                    "Parameter": {
                        "listener": "PrintJobAttributeListener",
                        "attributes": "PrintJobAttributeSet"
                    },
                    "Throw": []
                }
            },
            {
                "removePrintJobAttributeListener": {
                    "Parameter": {
                        "listener": "PrintJobAttributeListener"
                    },
                    "Throw": []
                }
            },
            {
                "print": {
                    "Parameter": {
                        "doc": "Doc",
                        "attributes": "PrintRequestAttributeSet"
                    },
                    "Throw": "javax.print.PrintException"
                }
            }
        ]
    },
    "495": {
        "Package": "javax.print",
        "Interface": "FlavorException",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getUnsupportedFlavors": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "496": {
        "Package": "javax.print",
        "Interface": "MultiDoc",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDoc": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "next": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "497": {
        "Package": "javax.print",
        "Interface": "MultiDocPrintJob",
        "Superinterface": [
            "javax.print.DocPrintJob"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "print": {
                    "Parameter": {
                        "multiDoc": "MultiDoc",
                        "attributes": "PrintRequestAttributeSet"
                    },
                    "Throw": "javax.print.PrintException"
                }
            }
        ]
    },
    "498": {
        "Package": "javax.print",
        "Interface": "MultiDocPrintService",
        "Superinterface": [
            "javax.print.PrintService"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createMultiDocPrintJob": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "499": {
        "Package": "javax.print",
        "Interface": "PrintService",
        "Superinterface": null,
        "Implementing Class": [
            "javax.print.MultiDocPrintService"
        ],
        "Subinterface": [
            "javax.print.StreamPrintService"
        ],
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createPrintJob": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addPrintServiceAttributeListener": {
                    "Parameter": {
                        "listener": "PrintServiceAttributeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removePrintServiceAttributeListener": {
                    "Parameter": {
                        "listener": "PrintServiceAttributeListener"
                    },
                    "Throw": []
                }
            },
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttribute": {
                    "Parameter": {
                        "Tcategory": "Class"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getSupportedDocFlavors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDocFlavorSupported": {
                    "Parameter": {
                        "flavor": "DocFlavor"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getSupportedAttributeCategories": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isAttributeCategorySupported": {
                    "Parameter": {
                        "extends": "Class"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getDefaultAttributeValue": {
                    "Parameter": {
                        "extends": "Class"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getSupportedAttributeValues": {
                    "Parameter": {
                        "extends": "Class",
                        "flavor": "DocFlavor",
                        "attributes": "AttributeSet"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "isAttributeValueSupported": {
                    "Parameter": {
                        "attrval": "Attribute",
                        "flavor": "DocFlavor",
                        "attributes": "AttributeSet"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getUnsupportedAttributes": {
                    "Parameter": {
                        "flavor": "DocFlavor",
                        "attributes": "AttributeSet"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getServiceUIFactory": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "500": {
        "Package": "javax.print",
        "Interface": "URIException",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getUnsupportedURI": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReason": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "501": {
        "Package": "javax.print.attribute",
        "Interface": "Attribute",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "javax.print.attribute.DocAttribute",
            "javax.print.attribute.PrintJobAttribute",
            "javax.print.attribute.PrintRequestAttribute",
            "javax.print.attribute.PrintServiceAttribute",
            "javax.print.attribute.SupportedValuesAttribute"
        ],
        "Subinterface": [
            "javax.print.attribute.standard.Chromaticity",
            "javax.print.attribute.standard.ColorSupported",
            "javax.print.attribute.standard.Compression",
            "javax.print.attribute.standard.Copies",
            "javax.print.attribute.standard.CopiesSupported",
            "javax.print.attribute.standard.DateTimeAtCompleted",
            "javax.print.attribute.standard.DateTimeAtCreation",
            "javax.print.attribute.standard.DateTimeAtProcessing",
            "javax.print.attribute.standard.Destination",
            "javax.print.attribute.standard.DialogOwner",
            "javax.print.attribute.standard.DialogTypeSelection",
            "javax.print.attribute.standard.DocumentName",
            "javax.print.attribute.standard.Fidelity",
            "javax.print.attribute.standard.Finishings",
            "javax.print.attribute.standard.JobHoldUntil",
            "javax.print.attribute.standard.JobImpressions",
            "javax.print.attribute.standard.JobImpressionsCompleted",
            "javax.print.attribute.standard.JobImpressionsSupported",
            "javax.print.attribute.standard.JobKOctets",
            "javax.print.attribute.standard.JobKOctetsProcessed",
            "javax.print.attribute.standard.JobKOctetsSupported",
            "javax.print.attribute.standard.JobMediaSheets",
            "javax.print.attribute.standard.JobMediaSheetsCompleted",
            "javax.print.attribute.standard.JobMediaSheetsSupported",
            "javax.print.attribute.standard.JobMessageFromOperator",
            "javax.print.attribute.standard.JobName",
            "javax.print.attribute.standard.JobOriginatingUserName",
            "javax.print.attribute.standard.JobPriority",
            "javax.print.attribute.standard.JobPrioritySupported",
            "javax.print.attribute.standard.JobSheets",
            "javax.print.attribute.standard.JobState",
            "javax.print.attribute.standard.JobStateReason",
            "javax.print.attribute.standard.JobStateReasons",
            "javax.print.attribute.standard.Media",
            "javax.print.attribute.standard.MediaName",
            "javax.print.attribute.standard.MediaPrintableArea",
            "javax.print.attribute.standard.MediaSize",
            "javax.print.attribute.standard.MediaSizeName",
            "javax.print.attribute.standard.MediaTray",
            "javax.print.attribute.standard.MultipleDocumentHandling",
            "javax.print.attribute.standard.NumberOfDocuments",
            "javax.print.attribute.standard.NumberOfInterveningJobs",
            "javax.print.attribute.standard.NumberUp",
            "javax.print.attribute.standard.NumberUpSupported",
            "javax.print.attribute.standard.OrientationRequested",
            "javax.print.attribute.standard.OutputDeviceAssigned",
            "javax.print.attribute.standard.PageRanges",
            "javax.print.attribute.standard.PagesPerMinute",
            "javax.print.attribute.standard.PagesPerMinuteColor",
            "javax.print.attribute.standard.PDLOverrideSupported",
            "javax.print.attribute.standard.PresentationDirection",
            "javax.print.attribute.standard.PrinterInfo",
            "javax.print.attribute.standard.PrinterIsAcceptingJobs",
            "javax.print.attribute.standard.PrinterLocation",
            "javax.print.attribute.standard.PrinterMakeAndModel",
            "javax.print.attribute.standard.PrinterMessageFromOperator",
            "javax.print.attribute.standard.PrinterMoreInfo",
            "javax.print.attribute.standard.PrinterMoreInfoManufacturer",
            "javax.print.attribute.standard.PrinterName",
            "javax.print.attribute.standard.PrinterResolution",
            "javax.print.attribute.standard.PrinterState",
            "javax.print.attribute.standard.PrinterStateReason",
            "javax.print.attribute.standard.PrinterStateReasons",
            "javax.print.attribute.standard.PrinterURI",
            "javax.print.attribute.standard.PrintQuality",
            "javax.print.attribute.standard.QueuedJobCount",
            "javax.print.attribute.standard.ReferenceUriSchemesSupported",
            "javax.print.attribute.standard.RequestingUserName",
            "javax.print.attribute.standard.Severity",
            "javax.print.attribute.standard.SheetCollate",
            "javax.print.attribute.standard.Sides"
        ],
        "Method": [
            {
                "getCategory": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "502": {
        "Package": "javax.print.attribute",
        "Interface": "AttributeSet",
        "Superinterface": null,
        "Implementing Class": [
            "javax.print.attribute.DocAttributeSet",
            "javax.print.attribute.PrintJobAttributeSet",
            "javax.print.attribute.PrintRequestAttributeSet",
            "javax.print.attribute.PrintServiceAttributeSet"
        ],
        "Subinterface": [
            "javax.print.attribute.HashAttributeSet",
            "javax.print.attribute.HashDocAttributeSet",
            "javax.print.attribute.HashPrintJobAttributeSet",
            "javax.print.attribute.HashPrintRequestAttributeSet",
            "javax.print.attribute.HashPrintServiceAttributeSet"
        ],
        "Method": [
            {
                "get": {
                    "Parameter": {
                        "category": "Class"
                    },
                    "Throw": "java.lang.ClassCastException"
                }
            },
            {
                "add": {
                    "Parameter": {
                        "attribute": "Attribute"
                    },
                    "Throw": "javax.print.attribute.UnmodifiableSetException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "category": "Class"
                    },
                    "Throw": "javax.print.attribute.UnmodifiableSetException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "attribute": "Attribute"
                    },
                    "Throw": "javax.print.attribute.UnmodifiableSetException"
                }
            },
            {
                "containsKey": {
                    "Parameter": {
                        "category": "Class"
                    },
                    "Throw": []
                }
            },
            {
                "containsValue": {
                    "Parameter": {
                        "attribute": "Attribute"
                    },
                    "Throw": []
                }
            },
            {
                "addAll": {
                    "Parameter": {
                        "attributes": "AttributeSet"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toArray": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "clear": {
                    "Parameter": {},
                    "Throw": "javax.print.attribute.UnmodifiableSetException"
                }
            },
            {
                "isEmpty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "object": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "503": {
        "Package": "javax.print.attribute",
        "Interface": "DocAttribute",
        "Superinterface": [
            "javax.print.attribute.Attribute",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.standard.Chromaticity",
            "javax.print.attribute.standard.Compression",
            "javax.print.attribute.standard.DocumentName",
            "javax.print.attribute.standard.Finishings",
            "javax.print.attribute.standard.Media",
            "javax.print.attribute.standard.MediaName",
            "javax.print.attribute.standard.MediaPrintableArea",
            "javax.print.attribute.standard.MediaSizeName",
            "javax.print.attribute.standard.MediaTray",
            "javax.print.attribute.standard.NumberUp",
            "javax.print.attribute.standard.OrientationRequested",
            "javax.print.attribute.standard.PageRanges",
            "javax.print.attribute.standard.PrinterResolution",
            "javax.print.attribute.standard.PrintQuality",
            "javax.print.attribute.standard.SheetCollate",
            "javax.print.attribute.standard.Sides"
        ],
        "Method": []
    },
    "504": {
        "Package": "javax.print.attribute",
        "Interface": "DocAttributeSet",
        "Superinterface": [
            "javax.print.attribute.AttributeSet"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.HashDocAttributeSet"
        ],
        "Method": [
            {
                "add": {
                    "Parameter": {
                        "attribute": "Attribute"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "addAll": {
                    "Parameter": {
                        "attributes": "AttributeSet"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "505": {
        "Package": "javax.print.attribute",
        "Interface": "PrintJobAttribute",
        "Superinterface": [
            "javax.print.attribute.Attribute",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.standard.Chromaticity",
            "javax.print.attribute.standard.Copies",
            "javax.print.attribute.standard.DateTimeAtCompleted",
            "javax.print.attribute.standard.DateTimeAtCreation",
            "javax.print.attribute.standard.DateTimeAtProcessing",
            "javax.print.attribute.standard.Destination",
            "javax.print.attribute.standard.Fidelity",
            "javax.print.attribute.standard.Finishings",
            "javax.print.attribute.standard.JobHoldUntil",
            "javax.print.attribute.standard.JobImpressions",
            "javax.print.attribute.standard.JobImpressionsCompleted",
            "javax.print.attribute.standard.JobKOctets",
            "javax.print.attribute.standard.JobKOctetsProcessed",
            "javax.print.attribute.standard.JobMediaSheets",
            "javax.print.attribute.standard.JobMediaSheetsCompleted",
            "javax.print.attribute.standard.JobMessageFromOperator",
            "javax.print.attribute.standard.JobName",
            "javax.print.attribute.standard.JobOriginatingUserName",
            "javax.print.attribute.standard.JobPriority",
            "javax.print.attribute.standard.JobSheets",
            "javax.print.attribute.standard.JobState",
            "javax.print.attribute.standard.JobStateReasons",
            "javax.print.attribute.standard.Media",
            "javax.print.attribute.standard.MediaName",
            "javax.print.attribute.standard.MediaPrintableArea",
            "javax.print.attribute.standard.MediaSizeName",
            "javax.print.attribute.standard.MediaTray",
            "javax.print.attribute.standard.MultipleDocumentHandling",
            "javax.print.attribute.standard.NumberOfDocuments",
            "javax.print.attribute.standard.NumberOfInterveningJobs",
            "javax.print.attribute.standard.NumberUp",
            "javax.print.attribute.standard.OrientationRequested",
            "javax.print.attribute.standard.OutputDeviceAssigned",
            "javax.print.attribute.standard.PageRanges",
            "javax.print.attribute.standard.PresentationDirection",
            "javax.print.attribute.standard.PrinterResolution",
            "javax.print.attribute.standard.PrintQuality",
            "javax.print.attribute.standard.SheetCollate",
            "javax.print.attribute.standard.Sides"
        ],
        "Method": []
    },
    "506": {
        "Package": "javax.print.attribute",
        "Interface": "PrintJobAttributeSet",
        "Superinterface": [
            "javax.print.attribute.AttributeSet"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.HashPrintJobAttributeSet"
        ],
        "Method": [
            {
                "add": {
                    "Parameter": {
                        "attribute": "Attribute"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "addAll": {
                    "Parameter": {
                        "attributes": "AttributeSet"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "507": {
        "Package": "javax.print.attribute",
        "Interface": "PrintRequestAttribute",
        "Superinterface": [
            "javax.print.attribute.Attribute",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.standard.Chromaticity",
            "javax.print.attribute.standard.Copies",
            "javax.print.attribute.standard.Destination",
            "javax.print.attribute.standard.DialogOwner",
            "javax.print.attribute.standard.DialogTypeSelection",
            "javax.print.attribute.standard.Fidelity",
            "javax.print.attribute.standard.Finishings",
            "javax.print.attribute.standard.JobHoldUntil",
            "javax.print.attribute.standard.JobImpressions",
            "javax.print.attribute.standard.JobKOctets",
            "javax.print.attribute.standard.JobMediaSheets",
            "javax.print.attribute.standard.JobName",
            "javax.print.attribute.standard.JobPriority",
            "javax.print.attribute.standard.JobSheets",
            "javax.print.attribute.standard.Media",
            "javax.print.attribute.standard.MediaName",
            "javax.print.attribute.standard.MediaPrintableArea",
            "javax.print.attribute.standard.MediaSizeName",
            "javax.print.attribute.standard.MediaTray",
            "javax.print.attribute.standard.MultipleDocumentHandling",
            "javax.print.attribute.standard.NumberUp",
            "javax.print.attribute.standard.OrientationRequested",
            "javax.print.attribute.standard.PageRanges",
            "javax.print.attribute.standard.PresentationDirection",
            "javax.print.attribute.standard.PrinterResolution",
            "javax.print.attribute.standard.PrintQuality",
            "javax.print.attribute.standard.RequestingUserName",
            "javax.print.attribute.standard.SheetCollate",
            "javax.print.attribute.standard.Sides"
        ],
        "Method": []
    },
    "508": {
        "Package": "javax.print.attribute",
        "Interface": "PrintRequestAttributeSet",
        "Superinterface": [
            "javax.print.attribute.AttributeSet"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.HashPrintRequestAttributeSet"
        ],
        "Method": [
            {
                "add": {
                    "Parameter": {
                        "attribute": "Attribute"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "addAll": {
                    "Parameter": {
                        "attributes": "AttributeSet"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "509": {
        "Package": "javax.print.attribute",
        "Interface": "PrintServiceAttribute",
        "Superinterface": [
            "javax.print.attribute.Attribute",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.standard.ColorSupported",
            "javax.print.attribute.standard.PagesPerMinute",
            "javax.print.attribute.standard.PagesPerMinuteColor",
            "javax.print.attribute.standard.PDLOverrideSupported",
            "javax.print.attribute.standard.PrinterInfo",
            "javax.print.attribute.standard.PrinterIsAcceptingJobs",
            "javax.print.attribute.standard.PrinterLocation",
            "javax.print.attribute.standard.PrinterMakeAndModel",
            "javax.print.attribute.standard.PrinterMessageFromOperator",
            "javax.print.attribute.standard.PrinterMoreInfo",
            "javax.print.attribute.standard.PrinterMoreInfoManufacturer",
            "javax.print.attribute.standard.PrinterName",
            "javax.print.attribute.standard.PrinterState",
            "javax.print.attribute.standard.PrinterStateReasons",
            "javax.print.attribute.standard.PrinterURI",
            "javax.print.attribute.standard.QueuedJobCount"
        ],
        "Method": []
    },
    "510": {
        "Package": "javax.print.attribute",
        "Interface": "PrintServiceAttributeSet",
        "Superinterface": [
            "javax.print.attribute.AttributeSet"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.HashPrintServiceAttributeSet"
        ],
        "Method": [
            {
                "add": {
                    "Parameter": {
                        "attribute": "Attribute"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "addAll": {
                    "Parameter": {
                        "attributes": "AttributeSet"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "511": {
        "Package": "javax.print.attribute",
        "Interface": "SupportedValuesAttribute",
        "Superinterface": [
            "javax.print.attribute.Attribute",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.attribute.standard.CopiesSupported",
            "javax.print.attribute.standard.JobImpressionsSupported",
            "javax.print.attribute.standard.JobKOctetsSupported",
            "javax.print.attribute.standard.JobMediaSheetsSupported",
            "javax.print.attribute.standard.JobPrioritySupported",
            "javax.print.attribute.standard.NumberUpSupported"
        ],
        "Method": []
    },
    "512": {
        "Package": "javax.print.event",
        "Interface": "PrintJobAttributeListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "attributeUpdate": {
                    "Parameter": {
                        "pjae": "PrintJobAttributeEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "513": {
        "Package": "javax.print.event",
        "Interface": "PrintJobListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.print.event.PrintJobAdapter"
        ],
        "Method": [
            {
                "printDataTransferCompleted": {
                    "Parameter": {
                        "pje": "PrintJobEvent"
                    },
                    "Throw": []
                }
            },
            {
                "printJobCompleted": {
                    "Parameter": {
                        "pje": "PrintJobEvent"
                    },
                    "Throw": []
                }
            },
            {
                "printJobFailed": {
                    "Parameter": {
                        "pje": "PrintJobEvent"
                    },
                    "Throw": []
                }
            },
            {
                "printJobCanceled": {
                    "Parameter": {
                        "pje": "PrintJobEvent"
                    },
                    "Throw": []
                }
            },
            {
                "printJobNoMoreEvents": {
                    "Parameter": {
                        "pje": "PrintJobEvent"
                    },
                    "Throw": []
                }
            },
            {
                "printJobRequiresAttention": {
                    "Parameter": {
                        "pje": "PrintJobEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "514": {
        "Package": "javax.print.event",
        "Interface": "PrintServiceAttributeListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "attributeUpdate": {
                    "Parameter": {
                        "psae": "PrintServiceAttributeEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "515": {
        "Package": "javax.sound.midi",
        "Interface": "ControllerEventListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "controlChange": {
                    "Parameter": {
                        "event": "ShortMessage"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "516": {
        "Package": "javax.sound.midi",
        "Interface": "MetaEventListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "meta": {
                    "Parameter": {
                        "meta": "MetaMessage"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "517": {
        "Package": "javax.sound.midi",
        "Interface": "MidiChannel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "noteOn": {
                    "Parameter": {
                        "noteNumber": "int",
                        "velocity": "int"
                    },
                    "Throw": []
                }
            },
            {
                "noteOff": {
                    "Parameter": {
                        "noteNumber": "int",
                        "velocity": "int"
                    },
                    "Throw": []
                }
            },
            {
                "noteOff": {
                    "Parameter": {
                        "noteNumber": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setPolyPressure": {
                    "Parameter": {
                        "noteNumber": "int",
                        "pressure": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getPolyPressure": {
                    "Parameter": {
                        "noteNumber": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setChannelPressure": {
                    "Parameter": {
                        "pressure": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getChannelPressure": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "controlChange": {
                    "Parameter": {
                        "controller": "int",
                        "value": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getController": {
                    "Parameter": {
                        "controller": "int"
                    },
                    "Throw": []
                }
            },
            {
                "programChange": {
                    "Parameter": {
                        "program": "int"
                    },
                    "Throw": []
                }
            },
            {
                "programChange": {
                    "Parameter": {
                        "bank": "int",
                        "program": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getProgram": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPitchBend": {
                    "Parameter": {
                        "bend": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getPitchBend": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "resetAllControllers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "allNotesOff": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "allSoundOff": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "localControl": {
                    "Parameter": {
                        "on": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "setMono": {
                    "Parameter": {
                        "on": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getMono": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setOmni": {
                    "Parameter": {
                        "on": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getOmni": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMute": {
                    "Parameter": {
                        "mute": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getMute": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSolo": {
                    "Parameter": {
                        "soloState": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getSolo": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "518": {
        "Package": "javax.sound.midi",
        "Interface": "MidiDevice",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": [
            "javax.sound.midi.Sequencer",
            "javax.sound.midi.Synthesizer"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getDeviceInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "open": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isOpen": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMicrosecondPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMaxReceivers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMaxTransmitters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReceiver": {
                    "Parameter": {},
                    "Throw": "javax.sound.midi.MidiUnavailableException"
                }
            },
            {
                "getReceivers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTransmitter": {
                    "Parameter": {},
                    "Throw": "javax.sound.midi.MidiUnavailableException"
                }
            },
            {
                "getTransmitters": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "519": {
        "Package": "javax.sound.midi",
        "Interface": "MidiDeviceReceiver",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.midi.Receiver"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getMidiDevice": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "520": {
        "Package": "javax.sound.midi",
        "Interface": "MidiDeviceTransmitter",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.midi.Transmitter"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getMidiDevice": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "521": {
        "Package": "javax.sound.midi",
        "Interface": "Receiver",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": [
            "javax.sound.midi.MidiDeviceReceiver"
        ],
        "Subinterface": null,
        "Method": [
            {
                "send": {
                    "Parameter": {
                        "message": "MidiMessage",
                        "timeStamp": "long"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "522": {
        "Package": "javax.sound.midi",
        "Interface": "Sequencer",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.midi.MidiDevice"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "setSequence": {
                    "Parameter": {
                        "sequence": "Sequence"
                    },
                    "Throw": "javax.sound.midi.InvalidMidiDataException"
                }
            },
            {
                "setSequence": {
                    "Parameter": {
                        "stream": "InputStream"
                    },
                    "Throw": "javax.sound.midi.InvalidMidiDataException"
                }
            },
            {
                "getSequence": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "start": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "stop": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "isRunning": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "startRecording": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "stopRecording": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "isRecording": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "recordEnable": {
                    "Parameter": {
                        "track": "Track",
                        "channel": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "recordDisable": {
                    "Parameter": {
                        "track": "Track"
                    },
                    "Throw": []
                }
            },
            {
                "getTempoInBPM": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTempoInBPM": {
                    "Parameter": {
                        "bpm": "float"
                    },
                    "Throw": []
                }
            },
            {
                "getTempoInMPQ": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTempoInMPQ": {
                    "Parameter": {
                        "mpq": "float"
                    },
                    "Throw": []
                }
            },
            {
                "setTempoFactor": {
                    "Parameter": {
                        "factor": "float"
                    },
                    "Throw": []
                }
            },
            {
                "getTempoFactor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTickLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTickPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTickPosition": {
                    "Parameter": {
                        "tick": "long"
                    },
                    "Throw": []
                }
            },
            {
                "getMicrosecondLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMicrosecondPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMicrosecondPosition": {
                    "Parameter": {
                        "microseconds": "long"
                    },
                    "Throw": []
                }
            },
            {
                "setMasterSyncMode": {
                    "Parameter": {
                        "sync": "Sequencer.SyncMode"
                    },
                    "Throw": []
                }
            },
            {
                "getMasterSyncMode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMasterSyncModes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSlaveSyncMode": {
                    "Parameter": {
                        "sync": "Sequencer.SyncMode"
                    },
                    "Throw": []
                }
            },
            {
                "getSlaveSyncMode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSlaveSyncModes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTrackMute": {
                    "Parameter": {
                        "track": "int",
                        "mute": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getTrackMute": {
                    "Parameter": {
                        "track": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setTrackSolo": {
                    "Parameter": {
                        "track": "int",
                        "solo": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getTrackSolo": {
                    "Parameter": {
                        "track": "int"
                    },
                    "Throw": []
                }
            },
            {
                "addMetaEventListener": {
                    "Parameter": {
                        "listener": "MetaEventListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeMetaEventListener": {
                    "Parameter": {
                        "listener": "MetaEventListener"
                    },
                    "Throw": []
                }
            },
            {
                "addControllerEventListener": {
                    "Parameter": {
                        "listener": "ControllerEventListener",
                        "controllers": "int"
                    },
                    "Throw": []
                }
            },
            {
                "removeControllerEventListener": {
                    "Parameter": {
                        "listener": "ControllerEventListener",
                        "controllers": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setLoopStartPoint": {
                    "Parameter": {
                        "tick": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getLoopStartPoint": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLoopEndPoint": {
                    "Parameter": {
                        "tick": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getLoopEndPoint": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLoopCount": {
                    "Parameter": {
                        "count": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getLoopCount": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "523": {
        "Package": "javax.sound.midi",
        "Interface": "Soundbank",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getVendor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getResources": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getInstruments": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getInstrument": {
                    "Parameter": {
                        "patch": "Patch"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "524": {
        "Package": "javax.sound.midi",
        "Interface": "Synthesizer",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.midi.MidiDevice"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getMaxPolyphony": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLatency": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getChannels": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getVoiceStatus": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSoundbankSupported": {
                    "Parameter": {
                        "soundbank": "Soundbank"
                    },
                    "Throw": []
                }
            },
            {
                "loadInstrument": {
                    "Parameter": {
                        "instrument": "Instrument"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "unloadInstrument": {
                    "Parameter": {
                        "instrument": "Instrument"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "remapInstrument": {
                    "Parameter": {
                        "from": "Instrument",
                        "to": "Instrument"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getDefaultSoundbank": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAvailableInstruments": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLoadedInstruments": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "loadAllInstruments": {
                    "Parameter": {
                        "soundbank": "Soundbank"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "unloadAllInstruments": {
                    "Parameter": {
                        "soundbank": "Soundbank"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "loadInstruments": {
                    "Parameter": {
                        "soundbank": "Soundbank",
                        "patchList": "Patch"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "unloadInstruments": {
                    "Parameter": {
                        "soundbank": "Soundbank",
                        "patchList": "Patch"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "525": {
        "Package": "javax.sound.midi",
        "Interface": "Transmitter",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": [
            "javax.sound.midi.MidiDeviceTransmitter"
        ],
        "Subinterface": null,
        "Method": [
            {
                "setReceiver": {
                    "Parameter": {
                        "receiver": "Receiver"
                    },
                    "Throw": []
                }
            },
            {
                "getReceiver": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "526": {
        "Package": "javax.sound.sampled",
        "Interface": "Clip",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.sampled.DataLine",
            "javax.sound.sampled.Line"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "open": {
                    "Parameter": {
                        "format": "AudioFormat",
                        "data": "byte",
                        "offset": "int",
                        "bufferSize": "int"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "open": {
                    "Parameter": {
                        "stream": "AudioInputStream"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getFrameLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMicrosecondLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFramePosition": {
                    "Parameter": {
                        "frames": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setMicrosecondPosition": {
                    "Parameter": {
                        "microseconds": "long"
                    },
                    "Throw": []
                }
            },
            {
                "setLoopPoints": {
                    "Parameter": {
                        "start": "int",
                        "end": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "loop": {
                    "Parameter": {
                        "count": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "527": {
        "Package": "javax.sound.sampled",
        "Interface": "DataLine",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.sampled.Line"
        ],
        "Implementing Class": [
            "javax.sound.sampled.Clip",
            "javax.sound.sampled.SourceDataLine",
            "javax.sound.sampled.TargetDataLine"
        ],
        "Subinterface": null,
        "Method": [
            {
                "drain": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "flush": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "start": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "stop": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isRunning": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isActive": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFormat": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBufferSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "available": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFramePosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLongFramePosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMicrosecondPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLevel": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "528": {
        "Package": "javax.sound.sampled",
        "Interface": "Line",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": [
            "javax.sound.sampled.Clip",
            "javax.sound.sampled.DataLine",
            "javax.sound.sampled.Mixer",
            "javax.sound.sampled.Port",
            "javax.sound.sampled.SourceDataLine",
            "javax.sound.sampled.TargetDataLine"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getLineInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "open": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "isOpen": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getControls": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isControlSupported": {
                    "Parameter": {
                        "control": "Control.Type"
                    },
                    "Throw": []
                }
            },
            {
                "getControl": {
                    "Parameter": {
                        "control": "Control.Type"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "addLineListener": {
                    "Parameter": {
                        "listener": "LineListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeLineListener": {
                    "Parameter": {
                        "listener": "LineListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "529": {
        "Package": "javax.sound.sampled",
        "Interface": "LineListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "update": {
                    "Parameter": {
                        "event": "LineEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "530": {
        "Package": "javax.sound.sampled",
        "Interface": "Mixer",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.sampled.Line"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getMixerInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSourceLineInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTargetLineInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSourceLineInfo": {
                    "Parameter": {
                        "info": "Line.Info"
                    },
                    "Throw": []
                }
            },
            {
                "getTargetLineInfo": {
                    "Parameter": {
                        "info": "Line.Info"
                    },
                    "Throw": []
                }
            },
            {
                "isLineSupported": {
                    "Parameter": {
                        "info": "Line.Info"
                    },
                    "Throw": []
                }
            },
            {
                "getLine": {
                    "Parameter": {
                        "info": "Line.Info"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getMaxLines": {
                    "Parameter": {
                        "info": "Line.Info"
                    },
                    "Throw": []
                }
            },
            {
                "getSourceLines": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getTargetLines": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "synchronize": {
                    "Parameter": {
                        "lines": "Line",
                        "maintainSync": "boolean"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "unsynchronize": {
                    "Parameter": {
                        "lines": "Line"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "isSynchronizationSupported": {
                    "Parameter": {
                        "lines": "Line",
                        "maintainSync": "boolean"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "531": {
        "Package": "javax.sound.sampled",
        "Interface": "Port",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.sampled.Line"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "532": {
        "Package": "javax.sound.sampled",
        "Interface": "SourceDataLine",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.sampled.DataLine",
            "javax.sound.sampled.Line"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "open": {
                    "Parameter": {
                        "format": "AudioFormat",
                        "bufferSize": "int"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "open": {
                    "Parameter": {
                        "format": "AudioFormat"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "write": {
                    "Parameter": {
                        "b": "byte",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.lang.ArrayIndexOutOfBoundsException"
                }
            }
        ]
    },
    "533": {
        "Package": "javax.sound.sampled",
        "Interface": "TargetDataLine",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sound.sampled.DataLine",
            "javax.sound.sampled.Line"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "open": {
                    "Parameter": {
                        "format": "AudioFormat",
                        "bufferSize": "int"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "open": {
                    "Parameter": {
                        "format": "AudioFormat"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "read": {
                    "Parameter": {
                        "b": "byte",
                        "off": "int",
                        "len": "int"
                    },
                    "Throw": "java.lang.ArrayIndexOutOfBoundsException"
                }
            }
        ]
    },
    "534": {
        "Package": "javax.swing",
        "Interface": "Action",
        "Superinterface": [
            "java.awt.event.ActionListener",
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.CloseAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.MaximizeAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.MinimizeAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.NavigateAction",
            "javax.swing.plaf.basic.BasicDesktopPaneUI.OpenAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.ApproveSelectionAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.CancelSelectionAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.ChangeToParentDirectoryAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.GoHomeAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.NewFolderAction",
            "javax.swing.plaf.basic.BasicFileChooserUI.UpdateAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.CloseAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.IconifyAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.MoveAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.RestoreAction",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.SizeAction",
            "javax.swing.plaf.basic.BasicSliderUI.ActionScroller",
            "javax.swing.plaf.basic.BasicTreeUI.TreeCancelEditingAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeHomeAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeIncrementAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreePageAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeToggleAction",
            "javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction",
            "javax.swing.text.DefaultEditorKit.BeepAction",
            "javax.swing.text.DefaultEditorKit.CopyAction",
            "javax.swing.text.DefaultEditorKit.CutAction",
            "javax.swing.text.DefaultEditorKit.DefaultKeyTypedAction",
            "javax.swing.text.DefaultEditorKit.InsertBreakAction",
            "javax.swing.text.DefaultEditorKit.InsertContentAction",
            "javax.swing.text.DefaultEditorKit.InsertTabAction",
            "javax.swing.text.DefaultEditorKit.PasteAction",
            "javax.swing.text.html.HTMLEditorKit.HTMLTextAction",
            "javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction",
            "javax.swing.plaf.metal.MetalFileChooserUI.DirectoryComboBoxAction",
            "javax.swing.text.StyledEditorKit.AlignmentAction",
            "javax.swing.text.StyledEditorKit.BoldAction",
            "javax.swing.text.StyledEditorKit.FontFamilyAction",
            "javax.swing.text.StyledEditorKit.FontSizeAction",
            "javax.swing.text.StyledEditorKit.ForegroundAction",
            "javax.swing.text.StyledEditorKit.ItalicAction",
            "javax.swing.text.StyledEditorKit.StyledTextAction",
            "javax.swing.text.StyledEditorKit.UnderlineAction",
            "javax.swing.text.TextAction"
        ],
        "Method": [
            {
                "getValue": {
                    "Parameter": {
                        "key": "String"
                    },
                    "Throw": []
                }
            },
            {
                "putValue": {
                    "Parameter": {
                        "key": "String",
                        "value": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "setEnabled": {
                    "Parameter": {
                        "b": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "isEnabled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "accept": {
                    "Parameter": {
                        "sender": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "addPropertyChangeListener": {
                    "Parameter": {
                        "listener": "PropertyChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removePropertyChangeListener": {
                    "Parameter": {
                        "listener": "PropertyChangeListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "535": {
        "Package": "javax.swing",
        "Interface": "BoundedRangeModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultBoundedRangeModel"
        ],
        "Method": [
            {
                "getMinimum": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMinimum": {
                    "Parameter": {
                        "newMinimum": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getMaximum": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMaximum": {
                    "Parameter": {
                        "newMaximum": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "newValue": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setValueIsAdjusting": {
                    "Parameter": {
                        "b": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getValueIsAdjusting": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExtent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setExtent": {
                    "Parameter": {
                        "newExtent": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setRangeProperties": {
                    "Parameter": {
                        "value": "int",
                        "extent": "int",
                        "min": "int",
                        "max": "int",
                        "adjusting": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "addChangeListener": {
                    "Parameter": {
                        "x": "ChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeChangeListener": {
                    "Parameter": {
                        "x": "ChangeListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "536": {
        "Package": "javax.swing",
        "Interface": "ButtonModel",
        "Superinterface": [
            "java.awt.ItemSelectable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultButtonModel",
            "javax.swing.JToggleButton.ToggleButtonModel"
        ],
        "Method": [
            {
                "isArmed": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSelected": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEnabled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isPressed": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isRollover": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setArmed": {
                    "Parameter": {
                        "b": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "setSelected": {
                    "Parameter": {
                        "b": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "setEnabled": {
                    "Parameter": {
                        "b": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "setPressed": {
                    "Parameter": {
                        "b": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "setRollover": {
                    "Parameter": {
                        "b": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "setMnemonic": {
                    "Parameter": {
                        "key": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getMnemonic": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setActionCommand": {
                    "Parameter": {
                        "s": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getActionCommand": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setGroup": {
                    "Parameter": {
                        "group": "ButtonGroup"
                    },
                    "Throw": []
                }
            },
            {
                "getGroup": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addActionListener": {
                    "Parameter": {
                        "l": "ActionListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeActionListener": {
                    "Parameter": {
                        "l": "ActionListener"
                    },
                    "Throw": []
                }
            },
            {
                "addItemListener": {
                    "Parameter": {
                        "l": "ItemListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeItemListener": {
                    "Parameter": {
                        "l": "ItemListener"
                    },
                    "Throw": []
                }
            },
            {
                "addChangeListener": {
                    "Parameter": {
                        "l": "ChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeChangeListener": {
                    "Parameter": {
                        "l": "ChangeListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "537": {
        "Package": "javax.swing",
        "Interface": "CellEditor",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.table.TableCellEditor",
            "javax.swing.tree.TreeCellEditor"
        ],
        "Subinterface": [
            "javax.swing.AbstractCellEditor",
            "javax.swing.DefaultCellEditor",
            "javax.swing.tree.DefaultTreeCellEditor"
        ],
        "Method": [
            {
                "getCellEditorValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCellEditable": {
                    "Parameter": {
                        "anEvent": "EventObject"
                    },
                    "Throw": []
                }
            },
            {
                "shouldSelectCell": {
                    "Parameter": {
                        "anEvent": "EventObject"
                    },
                    "Throw": []
                }
            },
            {
                "stopCellEditing": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "cancelCellEditing": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addCellEditorListener": {
                    "Parameter": {
                        "l": "CellEditorListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeCellEditorListener": {
                    "Parameter": {
                        "l": "CellEditorListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "538": {
        "Package": "javax.swing",
        "Interface": "ComboBoxEditor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboBoxEditor",
            "javax.swing.plaf.basic.BasicComboBoxEditor.UIResource",
            "javax.swing.plaf.metal.MetalComboBoxEditor",
            "javax.swing.plaf.metal.MetalComboBoxEditor.UIResource"
        ],
        "Method": [
            {
                "getEditorComponent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setItem": {
                    "Parameter": {
                        "anObject": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "getItem": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "selectAll": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addActionListener": {
                    "Parameter": {
                        "l": "ActionListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeActionListener": {
                    "Parameter": {
                        "l": "ActionListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "539": {
        "Package": "javax.swing",
        "Interface": "ComboBoxModel",
        "Superinterface": [
            "javax.swing.ListModel"
        ],
        "Implementing Class": [
            "javax.swing.MutableComboBoxModel"
        ],
        "Subinterface": [
            "javax.swing.DefaultComboBoxModel",
            "javax.swing.plaf.metal.MetalFileChooserUI.DirectoryComboBoxModel",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxModel"
        ],
        "Method": [
            {
                "setSelectedItem": {
                    "Parameter": {
                        "anItem": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "getSelectedItem": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "540": {
        "Package": "javax.swing",
        "Interface": "DesktopManager",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultDesktopManager"
        ],
        "Method": [
            {
                "openFrame": {
                    "Parameter": {
                        "f": "JInternalFrame"
                    },
                    "Throw": []
                }
            },
            {
                "closeFrame": {
                    "Parameter": {
                        "f": "JInternalFrame"
                    },
                    "Throw": []
                }
            },
            {
                "maximizeFrame": {
                    "Parameter": {
                        "f": "JInternalFrame"
                    },
                    "Throw": []
                }
            },
            {
                "minimizeFrame": {
                    "Parameter": {
                        "f": "JInternalFrame"
                    },
                    "Throw": []
                }
            },
            {
                "iconifyFrame": {
                    "Parameter": {
                        "f": "JInternalFrame"
                    },
                    "Throw": []
                }
            },
            {
                "deiconifyFrame": {
                    "Parameter": {
                        "f": "JInternalFrame"
                    },
                    "Throw": []
                }
            },
            {
                "activateFrame": {
                    "Parameter": {
                        "f": "JInternalFrame"
                    },
                    "Throw": []
                }
            },
            {
                "deactivateFrame": {
                    "Parameter": {
                        "f": "JInternalFrame"
                    },
                    "Throw": []
                }
            },
            {
                "beginDraggingFrame": {
                    "Parameter": {
                        "f": "JComponent"
                    },
                    "Throw": []
                }
            },
            {
                "dragFrame": {
                    "Parameter": {
                        "f": "JComponent",
                        "newX": "int",
                        "newY": "int"
                    },
                    "Throw": []
                }
            },
            {
                "endDraggingFrame": {
                    "Parameter": {
                        "f": "JComponent"
                    },
                    "Throw": []
                }
            },
            {
                "beginResizingFrame": {
                    "Parameter": {
                        "f": "JComponent",
                        "direction": "int"
                    },
                    "Throw": []
                }
            },
            {
                "resizeFrame": {
                    "Parameter": {
                        "f": "JComponent",
                        "newX": "int",
                        "newY": "int",
                        "newWidth": "int",
                        "newHeight": "int"
                    },
                    "Throw": []
                }
            },
            {
                "endResizingFrame": {
                    "Parameter": {
                        "f": "JComponent"
                    },
                    "Throw": []
                }
            },
            {
                "setBoundsForFrame": {
                    "Parameter": {
                        "f": "JComponent",
                        "newX": "int",
                        "newY": "int",
                        "newWidth": "int",
                        "newHeight": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "541": {
        "Package": "javax.swing",
        "Interface": "Icon",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.plaf.synth.SynthIcon"
        ],
        "Subinterface": [
            "javax.swing.plaf.IconUIResource",
            "javax.swing.ImageIcon",
            "javax.swing.plaf.metal.MetalCheckBoxIcon",
            "javax.swing.plaf.metal.MetalComboBoxIcon",
            "javax.swing.plaf.metal.MetalIconFactory.FileIcon16",
            "javax.swing.plaf.metal.MetalIconFactory.FolderIcon16",
            "javax.swing.plaf.metal.MetalIconFactory.PaletteCloseIcon",
            "javax.swing.plaf.metal.MetalIconFactory.TreeControlIcon",
            "javax.swing.plaf.metal.MetalIconFactory.TreeFolderIcon",
            "javax.swing.plaf.metal.MetalIconFactory.TreeLeafIcon"
        ],
        "Method": [
            {
                "paintIcon": {
                    "Parameter": {
                        "c": "Component",
                        "g": "Graphics",
                        "x": "int",
                        "y": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getIconWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIconHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "542": {
        "Package": "javax.swing",
        "Interface": "JComboBox.KeySelectionManager",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "selectionForKey": {
                    "Parameter": {
                        "aKey": "char",
                        "aModel": "ComboBoxModel"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "543": {
        "Package": "javax.swing",
        "Interface": "ListCellRenderer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboBoxRenderer",
            "javax.swing.plaf.basic.BasicComboBoxRenderer.UIResource",
            "javax.swing.DefaultListCellRenderer",
            "javax.swing.DefaultListCellRenderer.UIResource",
            "javax.swing.plaf.metal.MetalFileChooserUI.FileRenderer",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxRenderer"
        ],
        "Method": []
    },
    "544": {
        "Package": "javax.swing",
        "Interface": "ListModel",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.ComboBoxModel",
            "javax.swing.MutableComboBoxModel"
        ],
        "Subinterface": [
            "javax.swing.AbstractListModel",
            "javax.swing.plaf.basic.BasicDirectoryModel",
            "javax.swing.DefaultComboBoxModel",
            "javax.swing.DefaultListModel",
            "javax.swing.plaf.metal.MetalFileChooserUI.DirectoryComboBoxModel",
            "javax.swing.plaf.metal.MetalFileChooserUI.FilterComboBoxModel"
        ],
        "Method": [
            {
                "getSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getElementAt": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "addListDataListener": {
                    "Parameter": {
                        "l": "ListDataListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeListDataListener": {
                    "Parameter": {
                        "l": "ListDataListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "545": {
        "Package": "javax.swing",
        "Interface": "ListSelectionModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultListSelectionModel"
        ],
        "Method": [
            {
                "setSelectionInterval": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "addSelectionInterval": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "removeSelectionInterval": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getMinSelectionIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMaxSelectionIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSelectedIndex": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getAnchorSelectionIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAnchorSelectionIndex": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getLeadSelectionIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLeadSelectionIndex": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "clearSelection": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSelectionEmpty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "insertIndexInterval": {
                    "Parameter": {
                        "index": "int",
                        "length": "int",
                        "before": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "removeIndexInterval": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setValueIsAdjusting": {
                    "Parameter": {
                        "valueIsAdjusting": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getValueIsAdjusting": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSelectionMode": {
                    "Parameter": {
                        "selectionMode": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getSelectionMode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addListSelectionListener": {
                    "Parameter": {
                        "x": "ListSelectionListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeListSelectionListener": {
                    "Parameter": {
                        "x": "ListSelectionListener"
                    },
                    "Throw": []
                }
            },
            {
                "getSelectedIndices": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSelectedItemsCount": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "546": {
        "Package": "javax.swing",
        "Interface": "MenuElement",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboPopup",
            "javax.swing.plaf.basic.BasicInternalFrameTitlePane.SystemMenuBar",
            "javax.swing.JCheckBoxMenuItem",
            "javax.swing.JMenu",
            "javax.swing.JMenuBar",
            "javax.swing.JMenuItem",
            "javax.swing.JPopupMenu",
            "javax.swing.JRadioButtonMenuItem",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalComboPopup"
        ],
        "Method": [
            {
                "processMouseEvent": {
                    "Parameter": {
                        "event": "MouseEvent",
                        "path": "MenuElement",
                        "manager": "MenuSelectionManager"
                    },
                    "Throw": []
                }
            },
            {
                "processKeyEvent": {
                    "Parameter": {
                        "event": "KeyEvent",
                        "path": "MenuElement",
                        "manager": "MenuSelectionManager"
                    },
                    "Throw": []
                }
            },
            {
                "menuSelectionChanged": {
                    "Parameter": {
                        "isIncluded": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getSubElements": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getComponent": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "547": {
        "Package": "javax.swing",
        "Interface": "MutableComboBoxModel",
        "Superinterface": [
            "javax.swing.ComboBoxModel",
            "javax.swing.ListModel"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultComboBoxModel"
        ],
        "Method": [
            {
                "removeElement": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "removeElementAt": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "548": {
        "Package": "javax.swing",
        "Interface": "Painter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.nimbus.AbstractRegionPainter"
        ],
        "Method": []
    },
    "549": {
        "Package": "javax.swing",
        "Interface": "Renderer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "setValue": {
                    "Parameter": {
                        "aValue": "Object",
                        "isSelected": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getComponent": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "550": {
        "Package": "javax.swing",
        "Interface": "RootPaneContainer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JApplet",
            "javax.swing.JDialog",
            "javax.swing.JFrame",
            "javax.swing.JInternalFrame",
            "javax.swing.JWindow"
        ],
        "Method": [
            {
                "getRootPane": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setContentPane": {
                    "Parameter": {
                        "contentPane": "Container"
                    },
                    "Throw": "java.awt.IllegalComponentStateException"
                }
            },
            {
                "getContentPane": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLayeredPane": {
                    "Parameter": {
                        "layeredPane": "JLayeredPane"
                    },
                    "Throw": "java.awt.IllegalComponentStateException"
                }
            },
            {
                "getLayeredPane": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setGlassPane": {
                    "Parameter": {
                        "glassPane": "Component"
                    },
                    "Throw": []
                }
            },
            {
                "getGlassPane": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "551": {
        "Package": "javax.swing",
        "Interface": "Scrollable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.tree.DefaultTreeCellEditor.DefaultTextField",
            "javax.swing.JEditorPane",
            "javax.swing.JFormattedTextField",
            "javax.swing.JLayer",
            "javax.swing.JList",
            "javax.swing.JPasswordField",
            "javax.swing.JTable",
            "javax.swing.JTextArea",
            "javax.swing.text.JTextComponent",
            "javax.swing.JTextField",
            "javax.swing.JTextPane",
            "javax.swing.JTree"
        ],
        "Method": [
            {
                "getPreferredScrollableViewportSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getScrollableUnitIncrement": {
                    "Parameter": {
                        "visibleRect": "Rectangle",
                        "orientation": "int",
                        "direction": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getScrollableBlockIncrement": {
                    "Parameter": {
                        "visibleRect": "Rectangle",
                        "orientation": "int",
                        "direction": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getScrollableTracksViewportWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getScrollableTracksViewportHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "552": {
        "Package": "javax.swing",
        "Interface": "SingleSelectionModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultSingleSelectionModel"
        ],
        "Method": [
            {
                "getSelectedIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSelectedIndex": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "clearSelection": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSelected": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addChangeListener": {
                    "Parameter": {
                        "listener": "ChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeChangeListener": {
                    "Parameter": {
                        "listener": "ChangeListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "553": {
        "Package": "javax.swing",
        "Interface": "SpinnerModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractSpinnerModel",
            "javax.swing.SpinnerDateModel",
            "javax.swing.SpinnerListModel",
            "javax.swing.SpinnerNumberModel"
        ],
        "Method": [
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "value": "Object"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getNextValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPreviousValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addChangeListener": {
                    "Parameter": {
                        "l": "ChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeChangeListener": {
                    "Parameter": {
                        "l": "ChangeListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "554": {
        "Package": "javax.swing",
        "Interface": "UIDefaults.ActiveValue",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createValue": {
                    "Parameter": {
                        "table": "UIDefaults"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "555": {
        "Package": "javax.swing",
        "Interface": "UIDefaults.LazyValue",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.UIDefaults.LazyInputMap",
            "javax.swing.UIDefaults.ProxyLazyValue"
        ],
        "Method": [
            {
                "createValue": {
                    "Parameter": {
                        "table": "UIDefaults"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "556": {
        "Package": "javax.swing.border",
        "Interface": "Border",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.border.AbstractBorder",
            "javax.swing.plaf.basic.BasicBorders.ButtonBorder",
            "javax.swing.plaf.basic.BasicBorders.FieldBorder",
            "javax.swing.plaf.basic.BasicBorders.MarginBorder",
            "javax.swing.plaf.basic.BasicBorders.MenuBarBorder",
            "javax.swing.plaf.basic.BasicBorders.RadioButtonBorder",
            "javax.swing.plaf.basic.BasicBorders.RolloverButtonBorder",
            "javax.swing.plaf.basic.BasicBorders.SplitPaneBorder",
            "javax.swing.plaf.basic.BasicBorders.ToggleButtonBorder",
            "javax.swing.border.BevelBorder",
            "javax.swing.plaf.BorderUIResource",
            "javax.swing.plaf.BorderUIResource.BevelBorderUIResource",
            "javax.swing.plaf.BorderUIResource.CompoundBorderUIResource",
            "javax.swing.plaf.BorderUIResource.EmptyBorderUIResource",
            "javax.swing.plaf.BorderUIResource.EtchedBorderUIResource",
            "javax.swing.plaf.BorderUIResource.LineBorderUIResource",
            "javax.swing.plaf.BorderUIResource.MatteBorderUIResource",
            "javax.swing.plaf.BorderUIResource.TitledBorderUIResource",
            "javax.swing.border.CompoundBorder",
            "javax.swing.border.EmptyBorder",
            "javax.swing.border.EtchedBorder",
            "javax.swing.border.LineBorder",
            "javax.swing.border.MatteBorder",
            "javax.swing.plaf.metal.MetalBorders.ButtonBorder",
            "javax.swing.plaf.metal.MetalBorders.Flush3DBorder",
            "javax.swing.plaf.metal.MetalBorders.InternalFrameBorder",
            "javax.swing.plaf.metal.MetalBorders.MenuBarBorder",
            "javax.swing.plaf.metal.MetalBorders.MenuItemBorder",
            "javax.swing.plaf.metal.MetalBorders.OptionDialogBorder",
            "javax.swing.plaf.metal.MetalBorders.PaletteBorder",
            "javax.swing.plaf.metal.MetalBorders.PopupMenuBorder",
            "javax.swing.plaf.metal.MetalBorders.RolloverButtonBorder",
            "javax.swing.plaf.metal.MetalBorders.ScrollPaneBorder",
            "javax.swing.plaf.metal.MetalBorders.TableHeaderBorder",
            "javax.swing.plaf.metal.MetalBorders.TextFieldBorder",
            "javax.swing.plaf.metal.MetalBorders.ToggleButtonBorder",
            "javax.swing.plaf.metal.MetalBorders.ToolBarBorder",
            "javax.swing.border.SoftBevelBorder",
            "javax.swing.border.StrokeBorder",
            "javax.swing.border.TitledBorder"
        ],
        "Method": [
            {
                "paintBorder": {
                    "Parameter": {
                        "c": "Component",
                        "g": "Graphics",
                        "x": "int",
                        "y": "int",
                        "width": "int",
                        "height": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getBorderInsets": {
                    "Parameter": {
                        "c": "Component"
                    },
                    "Throw": []
                }
            },
            {
                "isBorderOpaque": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "557": {
        "Package": "javax.swing.colorchooser",
        "Interface": "ColorSelectionModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.colorchooser.DefaultColorSelectionModel"
        ],
        "Method": [
            {
                "getSelectedColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSelectedColor": {
                    "Parameter": {
                        "color": "Color"
                    },
                    "Throw": []
                }
            },
            {
                "addChangeListener": {
                    "Parameter": {
                        "listener": "ChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeChangeListener": {
                    "Parameter": {
                        "listener": "ChangeListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "558": {
        "Package": "javax.swing.event",
        "Interface": "AncestorListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "ancestorAdded": {
                    "Parameter": {
                        "event": "AncestorEvent"
                    },
                    "Throw": []
                }
            },
            {
                "ancestorRemoved": {
                    "Parameter": {
                        "event": "AncestorEvent"
                    },
                    "Throw": []
                }
            },
            {
                "ancestorMoved": {
                    "Parameter": {
                        "event": "AncestorEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "559": {
        "Package": "javax.swing.event",
        "Interface": "CaretListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField"
        ],
        "Method": [
            {
                "caretUpdate": {
                    "Parameter": {
                        "e": "CaretEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "560": {
        "Package": "javax.swing.event",
        "Interface": "CellEditorListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicTreeUI.CellEditorHandler",
            "javax.swing.JTable",
            "javax.swing.JTable.AccessibleJTable"
        ],
        "Method": [
            {
                "editingStopped": {
                    "Parameter": {
                        "e": "ChangeEvent"
                    },
                    "Throw": []
                }
            },
            {
                "editingCanceled": {
                    "Parameter": {
                        "e": "ChangeEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "561": {
        "Package": "javax.swing.event",
        "Interface": "ChangeListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.AbstractButton.ButtonChangeListener",
            "javax.swing.plaf.basic.BasicButtonListener",
            "javax.swing.plaf.basic.BasicMenuUI.ChangeHandler",
            "javax.swing.plaf.basic.BasicProgressBarUI.ChangeHandler",
            "javax.swing.plaf.basic.BasicScrollBarUI.ModelListener",
            "javax.swing.plaf.basic.BasicScrollPaneUI.HSBChangeListener",
            "javax.swing.plaf.basic.BasicScrollPaneUI.ViewportChangeHandler",
            "javax.swing.plaf.basic.BasicScrollPaneUI.VSBChangeListener",
            "javax.swing.plaf.basic.BasicSliderUI.ChangeHandler",
            "javax.swing.plaf.basic.BasicTabbedPaneUI.TabSelectionHandler",
            "javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem",
            "javax.swing.JMenu.AccessibleJMenu",
            "javax.swing.JMenuItem.AccessibleJMenuItem",
            "javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem",
            "javax.swing.JScrollPane.AccessibleJScrollPane",
            "javax.swing.JSlider.AccessibleJSlider",
            "javax.swing.JSpinner.AccessibleJSpinner",
            "javax.swing.JSpinner.DateEditor",
            "javax.swing.JSpinner.DefaultEditor",
            "javax.swing.JSpinner.ListEditor",
            "javax.swing.JSpinner.NumberEditor",
            "javax.swing.JTabbedPane.AccessibleJTabbedPane",
            "javax.swing.JTabbedPane.ModelListener",
            "javax.swing.ProgressMonitor.AccessibleProgressMonitor"
        ],
        "Method": [
            {
                "stateChanged": {
                    "Parameter": {
                        "e": "ChangeEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "562": {
        "Package": "javax.swing.event",
        "Interface": "DocumentEvent.ElementChange",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.AbstractDocument.ElementEdit"
        ],
        "Method": [
            {
                "getElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getChildrenRemoved": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getChildrenAdded": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "563": {
        "Package": "javax.swing.event",
        "Interface": "DocumentEvent",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.AbstractDocument.DefaultDocumentEvent"
        ],
        "Method": [
            {
                "getOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDocument": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getChange": {
                    "Parameter": {
                        "elem": "Element"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "564": {
        "Package": "javax.swing.event",
        "Interface": "DocumentListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JEditorPane.AccessibleJEditorPane",
            "javax.swing.JEditorPane.AccessibleJEditorPaneHTML",
            "javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport",
            "javax.swing.JPasswordField.AccessibleJPasswordField",
            "javax.swing.JTextArea.AccessibleJTextArea",
            "javax.swing.text.JTextComponent.AccessibleJTextComponent",
            "javax.swing.JTextField.AccessibleJTextField"
        ],
        "Method": [
            {
                "insertUpdate": {
                    "Parameter": {
                        "e": "DocumentEvent"
                    },
                    "Throw": []
                }
            },
            {
                "removeUpdate": {
                    "Parameter": {
                        "e": "DocumentEvent"
                    },
                    "Throw": []
                }
            },
            {
                "changedUpdate": {
                    "Parameter": {
                        "e": "DocumentEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "565": {
        "Package": "javax.swing.event",
        "Interface": "HyperlinkListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "hyperlinkUpdate": {
                    "Parameter": {
                        "e": "HyperlinkEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "566": {
        "Package": "javax.swing.event",
        "Interface": "InternalFrameListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicInternalFrameUI.BasicInternalFrameListener",
            "javax.swing.event.InternalFrameAdapter"
        ],
        "Method": [
            {
                "internalFrameOpened": {
                    "Parameter": {
                        "e": "InternalFrameEvent"
                    },
                    "Throw": []
                }
            },
            {
                "internalFrameClosing": {
                    "Parameter": {
                        "e": "InternalFrameEvent"
                    },
                    "Throw": []
                }
            },
            {
                "internalFrameClosed": {
                    "Parameter": {
                        "e": "InternalFrameEvent"
                    },
                    "Throw": []
                }
            },
            {
                "internalFrameIconified": {
                    "Parameter": {
                        "e": "InternalFrameEvent"
                    },
                    "Throw": []
                }
            },
            {
                "internalFrameDeiconified": {
                    "Parameter": {
                        "e": "InternalFrameEvent"
                    },
                    "Throw": []
                }
            },
            {
                "internalFrameActivated": {
                    "Parameter": {
                        "e": "InternalFrameEvent"
                    },
                    "Throw": []
                }
            },
            {
                "internalFrameDeactivated": {
                    "Parameter": {
                        "e": "InternalFrameEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "567": {
        "Package": "javax.swing.event",
        "Interface": "ListDataListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboBoxUI.ListDataHandler",
            "javax.swing.plaf.basic.BasicComboPopup.ListDataHandler",
            "javax.swing.plaf.basic.BasicListUI.ListDataHandler",
            "javax.swing.JComboBox",
            "javax.swing.JList.AccessibleJList"
        ],
        "Method": [
            {
                "intervalAdded": {
                    "Parameter": {
                        "e": "ListDataEvent"
                    },
                    "Throw": []
                }
            },
            {
                "intervalRemoved": {
                    "Parameter": {
                        "e": "ListDataEvent"
                    },
                    "Throw": []
                }
            },
            {
                "contentsChanged": {
                    "Parameter": {
                        "e": "ListDataEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "568": {
        "Package": "javax.swing.event",
        "Interface": "ListSelectionListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboPopup.ListSelectionHandler",
            "javax.swing.plaf.basic.BasicFileChooserUI.SelectionListener",
            "javax.swing.plaf.basic.BasicListUI.ListSelectionHandler",
            "javax.swing.table.DefaultTableColumnModel",
            "javax.swing.JList.AccessibleJList",
            "javax.swing.JTable",
            "javax.swing.JTable.AccessibleJTable"
        ],
        "Method": [
            {
                "valueChanged": {
                    "Parameter": {
                        "e": "ListSelectionEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "569": {
        "Package": "javax.swing.event",
        "Interface": "MenuDragMouseListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "menuDragMouseEntered": {
                    "Parameter": {
                        "e": "MenuDragMouseEvent"
                    },
                    "Throw": []
                }
            },
            {
                "menuDragMouseExited": {
                    "Parameter": {
                        "e": "MenuDragMouseEvent"
                    },
                    "Throw": []
                }
            },
            {
                "menuDragMouseDragged": {
                    "Parameter": {
                        "e": "MenuDragMouseEvent"
                    },
                    "Throw": []
                }
            },
            {
                "menuDragMouseReleased": {
                    "Parameter": {
                        "e": "MenuDragMouseEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "570": {
        "Package": "javax.swing.event",
        "Interface": "MenuKeyListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "menuKeyTyped": {
                    "Parameter": {
                        "e": "MenuKeyEvent"
                    },
                    "Throw": []
                }
            },
            {
                "menuKeyPressed": {
                    "Parameter": {
                        "e": "MenuKeyEvent"
                    },
                    "Throw": []
                }
            },
            {
                "menuKeyReleased": {
                    "Parameter": {
                        "e": "MenuKeyEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "571": {
        "Package": "javax.swing.event",
        "Interface": "MenuListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "menuSelected": {
                    "Parameter": {
                        "e": "MenuEvent"
                    },
                    "Throw": []
                }
            },
            {
                "menuDeselected": {
                    "Parameter": {
                        "e": "MenuEvent"
                    },
                    "Throw": []
                }
            },
            {
                "menuCanceled": {
                    "Parameter": {
                        "e": "MenuEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "572": {
        "Package": "javax.swing.event",
        "Interface": "MouseInputListener",
        "Superinterface": [
            "java.util.EventListener",
            "java.awt.event.MouseListener",
            "java.awt.event.MouseMotionListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener",
            "javax.swing.plaf.basic.BasicInternalFrameUI.GlassPaneDispatcher",
            "javax.swing.plaf.basic.BasicListUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicMenuItemUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicMenuUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicSliderUI.TrackListener",
            "javax.swing.plaf.basic.BasicTableHeaderUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicTableUI.MouseInputHandler",
            "javax.swing.plaf.basic.BasicToolBarUI.DockingListener",
            "javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler",
            "javax.swing.plaf.metal.MetalToolBarUI.MetalDockingListener",
            "javax.swing.event.MouseInputAdapter"
        ],
        "Method": []
    },
    "573": {
        "Package": "javax.swing.event",
        "Interface": "PopupMenuListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "popupMenuWillBecomeVisible": {
                    "Parameter": {
                        "e": "PopupMenuEvent"
                    },
                    "Throw": []
                }
            },
            {
                "popupMenuWillBecomeInvisible": {
                    "Parameter": {
                        "e": "PopupMenuEvent"
                    },
                    "Throw": []
                }
            },
            {
                "popupMenuCanceled": {
                    "Parameter": {
                        "e": "PopupMenuEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "574": {
        "Package": "javax.swing.event",
        "Interface": "RowSorterListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JTable"
        ],
        "Method": [
            {
                "sorterChanged": {
                    "Parameter": {
                        "e": "RowSorterEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "575": {
        "Package": "javax.swing.event",
        "Interface": "TableColumnModelListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JTable",
            "javax.swing.JTable.AccessibleJTable",
            "javax.swing.table.JTableHeader"
        ],
        "Method": [
            {
                "columnAdded": {
                    "Parameter": {
                        "e": "TableColumnModelEvent"
                    },
                    "Throw": []
                }
            },
            {
                "columnRemoved": {
                    "Parameter": {
                        "e": "TableColumnModelEvent"
                    },
                    "Throw": []
                }
            },
            {
                "columnMoved": {
                    "Parameter": {
                        "e": "TableColumnModelEvent"
                    },
                    "Throw": []
                }
            },
            {
                "columnMarginChanged": {
                    "Parameter": {
                        "e": "ChangeEvent"
                    },
                    "Throw": []
                }
            },
            {
                "columnSelectionChanged": {
                    "Parameter": {
                        "e": "ListSelectionEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "576": {
        "Package": "javax.swing.event",
        "Interface": "TableModelListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.JTable",
            "javax.swing.JTable.AccessibleJTable"
        ],
        "Method": [
            {
                "tableChanged": {
                    "Parameter": {
                        "e": "TableModelEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "577": {
        "Package": "javax.swing.event",
        "Interface": "TreeExpansionListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicTreeUI.TreeExpansionHandler",
            "javax.swing.JTree.AccessibleJTree"
        ],
        "Method": [
            {
                "treeExpanded": {
                    "Parameter": {
                        "event": "TreeExpansionEvent"
                    },
                    "Throw": []
                }
            },
            {
                "treeCollapsed": {
                    "Parameter": {
                        "event": "TreeExpansionEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "578": {
        "Package": "javax.swing.event",
        "Interface": "TreeModelListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicTreeUI.TreeModelHandler",
            "javax.swing.JTree.AccessibleJTree",
            "javax.swing.JTree.TreeModelHandler"
        ],
        "Method": [
            {
                "treeNodesChanged": {
                    "Parameter": {
                        "e": "TreeModelEvent"
                    },
                    "Throw": []
                }
            },
            {
                "treeNodesInserted": {
                    "Parameter": {
                        "e": "TreeModelEvent"
                    },
                    "Throw": []
                }
            },
            {
                "treeNodesRemoved": {
                    "Parameter": {
                        "e": "TreeModelEvent"
                    },
                    "Throw": []
                }
            },
            {
                "treeStructureChanged": {
                    "Parameter": {
                        "e": "TreeModelEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "579": {
        "Package": "javax.swing.event",
        "Interface": "TreeSelectionListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicTreeUI.TreeSelectionHandler",
            "javax.swing.tree.DefaultTreeCellEditor",
            "javax.swing.JTree.AccessibleJTree",
            "javax.swing.JTree.TreeSelectionRedirector"
        ],
        "Method": [
            {
                "valueChanged": {
                    "Parameter": {
                        "e": "TreeSelectionEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "580": {
        "Package": "javax.swing.event",
        "Interface": "TreeWillExpandListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "treeWillExpand": {
                    "Parameter": {
                        "event": "TreeExpansionEvent"
                    },
                    "Throw": "javax.swing.tree.ExpandVetoException"
                }
            },
            {
                "treeWillCollapse": {
                    "Parameter": {
                        "event": "TreeExpansionEvent"
                    },
                    "Throw": "javax.swing.tree.ExpandVetoException"
                }
            }
        ]
    },
    "581": {
        "Package": "javax.swing.event",
        "Interface": "UndoableEditListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.undo.UndoManager"
        ],
        "Method": [
            {
                "undoableEditHappened": {
                    "Parameter": {
                        "e": "UndoableEditEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "582": {
        "Package": "javax.swing.plaf.basic",
        "Interface": "ComboPopup",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicComboPopup",
            "javax.swing.plaf.metal.MetalComboBoxUI.MetalComboPopup"
        ],
        "Method": [
            {
                "show": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hide": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isVisible": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getList": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMouseListener": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMouseMotionListener": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getKeyListener": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "uninstallingUI": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "583": {
        "Package": "javax.swing.plaf.synth",
        "Interface": "SynthIcon",
        "Superinterface": [
            "javax.swing.Icon"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "paintIcon": {
                    "Parameter": {
                        "context": "SynthContext",
                        "g": "Graphics",
                        "x": "int",
                        "y": "int",
                        "width": "int",
                        "height": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getIconWidth": {
                    "Parameter": {
                        "context": "SynthContext"
                    },
                    "Throw": []
                }
            },
            {
                "getIconHeight": {
                    "Parameter": {
                        "context": "SynthContext"
                    },
                    "Throw": []
                }
            },
            {
                "paintIcon": {
                    "Parameter": {
                        "c": "Component",
                        "g": "Graphics",
                        "x": "int",
                        "y": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getIconWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIconHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "584": {
        "Package": "javax.swing.plaf.synth",
        "Interface": "SynthUI",
        "Superinterface": [
            "javax.swing.plaf.synth.SynthConstants"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.synth.SynthButtonUI",
            "javax.swing.plaf.synth.SynthCheckBoxMenuItemUI",
            "javax.swing.plaf.synth.SynthCheckBoxUI",
            "javax.swing.plaf.synth.SynthColorChooserUI",
            "javax.swing.plaf.synth.SynthComboBoxUI",
            "javax.swing.plaf.synth.SynthDesktopIconUI",
            "javax.swing.plaf.synth.SynthDesktopPaneUI",
            "javax.swing.plaf.synth.SynthEditorPaneUI",
            "javax.swing.plaf.synth.SynthFormattedTextFieldUI",
            "javax.swing.plaf.synth.SynthInternalFrameUI",
            "javax.swing.plaf.synth.SynthLabelUI",
            "javax.swing.plaf.synth.SynthListUI",
            "javax.swing.plaf.synth.SynthMenuBarUI",
            "javax.swing.plaf.synth.SynthMenuItemUI",
            "javax.swing.plaf.synth.SynthMenuUI",
            "javax.swing.plaf.synth.SynthOptionPaneUI",
            "javax.swing.plaf.synth.SynthPanelUI",
            "javax.swing.plaf.synth.SynthPasswordFieldUI",
            "javax.swing.plaf.synth.SynthPopupMenuUI",
            "javax.swing.plaf.synth.SynthProgressBarUI",
            "javax.swing.plaf.synth.SynthRadioButtonMenuItemUI",
            "javax.swing.plaf.synth.SynthRadioButtonUI",
            "javax.swing.plaf.synth.SynthRootPaneUI",
            "javax.swing.plaf.synth.SynthScrollBarUI",
            "javax.swing.plaf.synth.SynthScrollPaneUI",
            "javax.swing.plaf.synth.SynthSeparatorUI",
            "javax.swing.plaf.synth.SynthSliderUI",
            "javax.swing.plaf.synth.SynthSpinnerUI",
            "javax.swing.plaf.synth.SynthSplitPaneUI",
            "javax.swing.plaf.synth.SynthTabbedPaneUI",
            "javax.swing.plaf.synth.SynthTableHeaderUI",
            "javax.swing.plaf.synth.SynthTableUI",
            "javax.swing.plaf.synth.SynthTextAreaUI",
            "javax.swing.plaf.synth.SynthTextFieldUI",
            "javax.swing.plaf.synth.SynthTextPaneUI",
            "javax.swing.plaf.synth.SynthToggleButtonUI",
            "javax.swing.plaf.synth.SynthToolBarUI",
            "javax.swing.plaf.synth.SynthToolTipUI",
            "javax.swing.plaf.synth.SynthTreeUI",
            "javax.swing.plaf.synth.SynthViewportUI"
        ],
        "Method": [
            {
                "getContext": {
                    "Parameter": {
                        "c": "JComponent"
                    },
                    "Throw": []
                }
            },
            {
                "paintBorder": {
                    "Parameter": {
                        "context": "SynthContext",
                        "g": "Graphics",
                        "x": "int",
                        "y": "int",
                        "w": "int",
                        "h": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "585": {
        "Package": "javax.swing.table",
        "Interface": "TableCellEditor",
        "Superinterface": [
            "javax.swing.CellEditor"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultCellEditor"
        ],
        "Method": [
            {
                "getTableCellEditorComponent": {
                    "Parameter": {
                        "table": "JTable",
                        "value": "Object",
                        "isSelected": "boolean",
                        "row": "int",
                        "column": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "586": {
        "Package": "javax.swing.table",
        "Interface": "TableCellRenderer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.table.DefaultTableCellRenderer",
            "javax.swing.table.DefaultTableCellRenderer.UIResource"
        ],
        "Method": [
            {
                "getTableCellRendererComponent": {
                    "Parameter": {
                        "table": "JTable",
                        "value": "Object",
                        "isSelected": "boolean",
                        "hasFocus": "boolean",
                        "row": "int",
                        "column": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "587": {
        "Package": "javax.swing.table",
        "Interface": "TableColumnModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.table.DefaultTableColumnModel"
        ],
        "Method": [
            {
                "addColumn": {
                    "Parameter": {
                        "aColumn": "TableColumn"
                    },
                    "Throw": []
                }
            },
            {
                "removeColumn": {
                    "Parameter": {
                        "column": "TableColumn"
                    },
                    "Throw": []
                }
            },
            {
                "moveColumn": {
                    "Parameter": {
                        "columnIndex": "int",
                        "newIndex": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "setColumnMargin": {
                    "Parameter": {
                        "newMargin": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getColumnCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getColumns": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getColumnIndex": {
                    "Parameter": {
                        "columnIdentifier": "Object"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getColumn": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getColumnMargin": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getColumnIndexAtX": {
                    "Parameter": {
                        "xPosition": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getTotalColumnWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setColumnSelectionAllowed": {
                    "Parameter": {
                        "flag": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getColumnSelectionAllowed": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSelectedColumns": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSelectedColumnCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSelectionModel": {
                    "Parameter": {
                        "newModel": "ListSelectionModel"
                    },
                    "Throw": []
                }
            },
            {
                "getSelectionModel": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addColumnModelListener": {
                    "Parameter": {
                        "x": "TableColumnModelListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeColumnModelListener": {
                    "Parameter": {
                        "x": "TableColumnModelListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "588": {
        "Package": "javax.swing.table",
        "Interface": "TableModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.table.AbstractTableModel",
            "javax.swing.table.DefaultTableModel"
        ],
        "Method": [
            {
                "getRowCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getColumnCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getColumnName": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getColumnClass": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "isCellEditable": {
                    "Parameter": {
                        "rowIndex": "int",
                        "columnIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getValueAt": {
                    "Parameter": {
                        "rowIndex": "int",
                        "columnIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "setValueAt": {
                    "Parameter": {
                        "aValue": "Object",
                        "rowIndex": "int",
                        "columnIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "addTableModelListener": {
                    "Parameter": {
                        "l": "TableModelListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeTableModelListener": {
                    "Parameter": {
                        "l": "TableModelListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "589": {
        "Package": "javax.swing.text",
        "Interface": "AbstractDocument.AttributeContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.StyleContext",
            "javax.swing.text.html.StyleSheet"
        ],
        "Method": [
            {
                "addAttribute": {
                    "Parameter": {
                        "old": "AttributeSet",
                        "name": "Object",
                        "value": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "addAttributes": {
                    "Parameter": {
                        "old": "AttributeSet",
                        "attr": "AttributeSet"
                    },
                    "Throw": []
                }
            },
            {
                "removeAttribute": {
                    "Parameter": {
                        "old": "AttributeSet",
                        "name": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "removeAttributes": {
                    "Parameter": {
                        "old": "AttributeSet",
                        "names": "Enumeration"
                    },
                    "Throw": []
                }
            },
            {
                "removeAttributes": {
                    "Parameter": {
                        "old": "AttributeSet",
                        "attrs": "AttributeSet"
                    },
                    "Throw": []
                }
            },
            {
                "getEmptySet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "reclaim": {
                    "Parameter": {
                        "a": "AttributeSet"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "590": {
        "Package": "javax.swing.text",
        "Interface": "AbstractDocument.Content",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.GapContent",
            "javax.swing.text.StringContent"
        ],
        "Method": [
            {
                "createPosition": {
                    "Parameter": {
                        "offset": "int"
                    },
                    "Throw": "javax.swing.text.BadLocationException"
                }
            },
            {
                "length": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "insertString": {
                    "Parameter": {
                        "where": "int",
                        "str": "String"
                    },
                    "Throw": "javax.swing.text.BadLocationException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "where": "int",
                        "nitems": "int"
                    },
                    "Throw": "javax.swing.text.BadLocationException"
                }
            },
            {
                "getString": {
                    "Parameter": {
                        "where": "int",
                        "len": "int"
                    },
                    "Throw": "javax.swing.text.BadLocationException"
                }
            },
            {
                "getChars": {
                    "Parameter": {
                        "where": "int",
                        "len": "int",
                        "txt": "Segment"
                    },
                    "Throw": "javax.swing.text.BadLocationException"
                }
            }
        ]
    },
    "591": {
        "Package": "javax.swing.text",
        "Interface": "AttributeSet",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.text.MutableAttributeSet",
            "javax.swing.text.Style"
        ],
        "Subinterface": [
            "javax.swing.text.AbstractDocument.AbstractElement",
            "javax.swing.text.AbstractDocument.BranchElement",
            "javax.swing.text.AbstractDocument.LeafElement",
            "javax.swing.text.DefaultStyledDocument.SectionElement",
            "javax.swing.text.html.HTMLDocument.BlockElement",
            "javax.swing.text.html.HTMLDocument.RunElement",
            "javax.swing.text.SimpleAttributeSet",
            "javax.swing.text.StyleContext.NamedStyle",
            "javax.swing.text.StyleContext.SmallAttributeSet"
        ],
        "Method": [
            {
                "getAttributeCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDefined": {
                    "Parameter": {
                        "attrName": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "isEqual": {
                    "Parameter": {
                        "attr": "AttributeSet"
                    },
                    "Throw": []
                }
            },
            {
                "copyAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttribute": {
                    "Parameter": {
                        "key": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "getAttributeNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "containsAttribute": {
                    "Parameter": {
                        "name": "Object",
                        "value": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "containsAttributes": {
                    "Parameter": {
                        "attributes": "AttributeSet"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getResolveParent": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "592": {
        "Package": "javax.swing.text",
        "Interface": "Caret",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicTextUI.BasicCaret",
            "javax.swing.text.DefaultCaret"
        ],
        "Method": [
            {
                "install": {
                    "Parameter": {
                        "c": "JTextComponent"
                    },
                    "Throw": []
                }
            },
            {
                "deinstall": {
                    "Parameter": {
                        "c": "JTextComponent"
                    },
                    "Throw": []
                }
            },
            {
                "paint": {
                    "Parameter": {
                        "g": "Graphics"
                    },
                    "Throw": []
                }
            },
            {
                "addChangeListener": {
                    "Parameter": {
                        "l": "ChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeChangeListener": {
                    "Parameter": {
                        "l": "ChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "isVisible": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVisible": {
                    "Parameter": {
                        "v": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "isSelectionVisible": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSelectionVisible": {
                    "Parameter": {
                        "v": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "setMagicCaretPosition": {
                    "Parameter": {
                        "p": "Point"
                    },
                    "Throw": []
                }
            },
            {
                "getMagicCaretPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBlinkRate": {
                    "Parameter": {
                        "rate": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getBlinkRate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDot": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMark": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDot": {
                    "Parameter": {
                        "dot": "int"
                    },
                    "Throw": []
                }
            },
            {
                "moveDot": {
                    "Parameter": {
                        "dot": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "593": {
        "Package": "javax.swing.text",
        "Interface": "Document",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.text.StyledDocument"
        ],
        "Subinterface": [
            "javax.swing.text.AbstractDocument",
            "javax.swing.text.DefaultStyledDocument",
            "javax.swing.text.html.HTMLDocument",
            "javax.swing.text.PlainDocument"
        ],
        "Method": [
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addDocumentListener": {
                    "Parameter": {
                        "listener": "DocumentListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeDocumentListener": {
                    "Parameter": {
                        "listener": "DocumentListener"
                    },
                    "Throw": []
                }
            },
            {
                "addUndoableEditListener": {
                    "Parameter": {
                        "listener": "UndoableEditListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeUndoableEditListener": {
                    "Parameter": {
                        "listener": "UndoableEditListener"
                    },
                    "Throw": []
                }
            },
            {
                "getProperty": {
                    "Parameter": {
                        "key": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "putProperty": {
                    "Parameter": {
                        "key": "Object",
                        "value": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "offs": "int",
                        "len": "int"
                    },
                    "Throw": "javax.swing.text.BadLocationException"
                }
            },
            {
                "insertString": {
                    "Parameter": {
                        "offset": "int",
                        "str": "String",
                        "a": "AttributeSet"
                    },
                    "Throw": "javax.swing.text.BadLocationException"
                }
            },
            {
                "getText": {
                    "Parameter": {
                        "offset": "int",
                        "length": "int"
                    },
                    "Throw": "javax.swing.text.BadLocationException"
                }
            },
            {
                "getText": {
                    "Parameter": {
                        "offset": "int",
                        "length": "int",
                        "txt": "Segment"
                    },
                    "Throw": "javax.swing.text.BadLocationException"
                }
            },
            {
                "getStartPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEndPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createPosition": {
                    "Parameter": {
                        "offs": "int"
                    },
                    "Throw": "javax.swing.text.BadLocationException"
                }
            },
            {
                "getRootElements": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDefaultRootElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "render": {
                    "Parameter": {
                        "r": "Runnable"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "594": {
        "Package": "javax.swing.text",
        "Interface": "Element",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.AbstractDocument.AbstractElement",
            "javax.swing.text.AbstractDocument.BranchElement",
            "javax.swing.text.AbstractDocument.LeafElement",
            "javax.swing.text.DefaultStyledDocument.SectionElement",
            "javax.swing.text.html.HTMLDocument.BlockElement",
            "javax.swing.text.html.HTMLDocument.RunElement"
        ],
        "Method": [
            {
                "getDocument": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParentElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getStartOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEndOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getElementIndex": {
                    "Parameter": {
                        "offset": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getElementCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getElement": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "isLeaf": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "595": {
        "Package": "javax.swing.text",
        "Interface": "Highlighter.Highlight",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getStartOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEndOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPainter": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "596": {
        "Package": "javax.swing.text",
        "Interface": "Highlighter.HighlightPainter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.DefaultHighlighter.DefaultHighlightPainter",
            "javax.swing.text.LayeredHighlighter.LayerPainter"
        ],
        "Method": [
            {
                "paint": {
                    "Parameter": {
                        "g": "Graphics",
                        "p": "int",
                        "bounds": "Shape",
                        "c": "JTextComponent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "597": {
        "Package": "javax.swing.text",
        "Interface": "Highlighter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicTextUI.BasicHighlighter",
            "javax.swing.text.DefaultHighlighter",
            "javax.swing.text.LayeredHighlighter"
        ],
        "Method": [
            {
                "install": {
                    "Parameter": {
                        "c": "JTextComponent"
                    },
                    "Throw": []
                }
            },
            {
                "deinstall": {
                    "Parameter": {
                        "c": "JTextComponent"
                    },
                    "Throw": []
                }
            },
            {
                "paint": {
                    "Parameter": {
                        "g": "Graphics"
                    },
                    "Throw": []
                }
            },
            {
                "addHighlight": {
                    "Parameter": {
                        "p": "Highlighter.HighlightPainter"
                    },
                    "Throw": "javax.swing.text.BadLocationException"
                }
            },
            {
                "removeHighlight": {
                    "Parameter": {
                        "tag": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "removeAllHighlights": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "changeHighlight": {
                    "Parameter": {
                        "tag": "Object",
                        "p": "int"
                    },
                    "Throw": "javax.swing.text.BadLocationException"
                }
            },
            {
                "getHighlights": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "598": {
        "Package": "javax.swing.text",
        "Interface": "Keymap",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDefaultAction": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDefaultAction": {
                    "Parameter": {
                        "a": "Action"
                    },
                    "Throw": []
                }
            },
            {
                "getAction": {
                    "Parameter": {
                        "key": "KeyStroke"
                    },
                    "Throw": []
                }
            },
            {
                "getBoundKeyStrokes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBoundActions": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getKeyStrokesForAction": {
                    "Parameter": {
                        "a": "Action"
                    },
                    "Throw": []
                }
            },
            {
                "isLocallyDefined": {
                    "Parameter": {
                        "key": "KeyStroke"
                    },
                    "Throw": []
                }
            },
            {
                "addActionForKeyStroke": {
                    "Parameter": {
                        "key": "KeyStroke",
                        "a": "Action"
                    },
                    "Throw": []
                }
            },
            {
                "removeKeyStrokeBinding": {
                    "Parameter": {
                        "keys": "KeyStroke"
                    },
                    "Throw": []
                }
            },
            {
                "removeBindings": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getResolveParent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setResolveParent": {
                    "Parameter": {
                        "parent": "Keymap"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "599": {
        "Package": "javax.swing.text",
        "Interface": "MutableAttributeSet",
        "Superinterface": [
            "javax.swing.text.AttributeSet"
        ],
        "Implementing Class": [
            "javax.swing.text.Style"
        ],
        "Subinterface": [
            "javax.swing.text.AbstractDocument.AbstractElement",
            "javax.swing.text.AbstractDocument.BranchElement",
            "javax.swing.text.AbstractDocument.LeafElement",
            "javax.swing.text.DefaultStyledDocument.SectionElement",
            "javax.swing.text.html.HTMLDocument.BlockElement",
            "javax.swing.text.html.HTMLDocument.RunElement",
            "javax.swing.text.SimpleAttributeSet",
            "javax.swing.text.StyleContext.NamedStyle"
        ],
        "Method": [
            {
                "addAttribute": {
                    "Parameter": {
                        "name": "Object",
                        "value": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "addAttributes": {
                    "Parameter": {
                        "attributes": "AttributeSet"
                    },
                    "Throw": []
                }
            },
            {
                "removeAttribute": {
                    "Parameter": {
                        "name": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "removeAttributes": {
                    "Parameter": {
                        "names": "Enumeration"
                    },
                    "Throw": []
                }
            },
            {
                "removeAttributes": {
                    "Parameter": {
                        "attributes": "AttributeSet"
                    },
                    "Throw": []
                }
            },
            {
                "setResolveParent": {
                    "Parameter": {
                        "parent": "AttributeSet"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "600": {
        "Package": "javax.swing.text",
        "Interface": "Position",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "601": {
        "Package": "javax.swing.text",
        "Interface": "Style",
        "Superinterface": [
            "javax.swing.text.AttributeSet",
            "javax.swing.text.MutableAttributeSet"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.StyleContext.NamedStyle"
        ],
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addChangeListener": {
                    "Parameter": {
                        "l": "ChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeChangeListener": {
                    "Parameter": {
                        "l": "ChangeListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "602": {
        "Package": "javax.swing.text",
        "Interface": "StyledDocument",
        "Superinterface": [
            "javax.swing.text.Document"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.DefaultStyledDocument",
            "javax.swing.text.html.HTMLDocument"
        ],
        "Method": [
            {
                "addStyle": {
                    "Parameter": {
                        "nm": "String",
                        "parent": "Style"
                    },
                    "Throw": []
                }
            },
            {
                "removeStyle": {
                    "Parameter": {
                        "nm": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getStyle": {
                    "Parameter": {
                        "nm": "String"
                    },
                    "Throw": []
                }
            },
            {
                "setCharacterAttributes": {
                    "Parameter": {
                        "offset": "int",
                        "length": "int",
                        "s": "AttributeSet",
                        "replace": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "setParagraphAttributes": {
                    "Parameter": {
                        "offset": "int",
                        "length": "int",
                        "s": "AttributeSet",
                        "replace": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "setLogicalStyle": {
                    "Parameter": {
                        "pos": "int",
                        "s": "Style"
                    },
                    "Throw": []
                }
            },
            {
                "getLogicalStyle": {
                    "Parameter": {
                        "p": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getParagraphElement": {
                    "Parameter": {
                        "pos": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getCharacterElement": {
                    "Parameter": {
                        "pos": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getForeground": {
                    "Parameter": {
                        "attr": "AttributeSet"
                    },
                    "Throw": []
                }
            },
            {
                "getBackground": {
                    "Parameter": {
                        "attr": "AttributeSet"
                    },
                    "Throw": []
                }
            },
            {
                "getFont": {
                    "Parameter": {
                        "attr": "AttributeSet"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "603": {
        "Package": "javax.swing.text",
        "Interface": "TabableView",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.GlyphView",
            "javax.swing.text.html.InlineView",
            "javax.swing.text.LabelView"
        ],
        "Method": [
            {
                "getTabbedSpan": {
                    "Parameter": {
                        "x": "float",
                        "e": "TabExpander"
                    },
                    "Throw": []
                }
            },
            {
                "getPartialSpan": {
                    "Parameter": {
                        "p": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "604": {
        "Package": "javax.swing.text",
        "Interface": "TabExpander",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.FieldView",
            "javax.swing.text.html.ParagraphView",
            "javax.swing.text.ParagraphView",
            "javax.swing.text.PasswordView",
            "javax.swing.text.PlainView",
            "javax.swing.text.WrappedPlainView"
        ],
        "Method": [
            {
                "nextTabStop": {
                    "Parameter": {
                        "x": "float",
                        "tabOffset": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "605": {
        "Package": "javax.swing.text",
        "Interface": "ViewFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.plaf.basic.BasicEditorPaneUI",
            "javax.swing.plaf.basic.BasicFormattedTextFieldUI",
            "javax.swing.plaf.basic.BasicPasswordFieldUI",
            "javax.swing.plaf.basic.BasicTextAreaUI",
            "javax.swing.plaf.basic.BasicTextFieldUI",
            "javax.swing.plaf.basic.BasicTextPaneUI",
            "javax.swing.plaf.basic.BasicTextUI",
            "javax.swing.text.DefaultTextUI",
            "javax.swing.text.html.HTMLEditorKit.HTMLFactory",
            "javax.swing.plaf.metal.MetalTextFieldUI",
            "javax.swing.plaf.synth.SynthEditorPaneUI",
            "javax.swing.plaf.synth.SynthFormattedTextFieldUI",
            "javax.swing.plaf.synth.SynthPasswordFieldUI",
            "javax.swing.plaf.synth.SynthTextAreaUI",
            "javax.swing.plaf.synth.SynthTextFieldUI",
            "javax.swing.plaf.synth.SynthTextPaneUI"
        ],
        "Method": [
            {
                "create": {
                    "Parameter": {
                        "elem": "Element"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "606": {
        "Package": "javax.swing.tree",
        "Interface": "MutableTreeNode",
        "Superinterface": [
            "javax.swing.tree.TreeNode"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.tree.DefaultMutableTreeNode",
            "javax.swing.JTree.DynamicUtilTreeNode"
        ],
        "Method": [
            {
                "insert": {
                    "Parameter": {
                        "child": "MutableTreeNode",
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "node": "MutableTreeNode"
                    },
                    "Throw": []
                }
            },
            {
                "setUserObject": {
                    "Parameter": {
                        "object": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "removeFromParent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setParent": {
                    "Parameter": {
                        "newParent": "MutableTreeNode"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "607": {
        "Package": "javax.swing.tree",
        "Interface": "RowMapper",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.tree.AbstractLayoutCache",
            "javax.swing.tree.FixedHeightLayoutCache",
            "javax.swing.tree.VariableHeightLayoutCache"
        ],
        "Method": [
            {
                "getRowsForPaths": {
                    "Parameter": {
                        "path": "TreePath"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "608": {
        "Package": "javax.swing.tree",
        "Interface": "TreeCellEditor",
        "Superinterface": [
            "javax.swing.CellEditor"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.DefaultCellEditor",
            "javax.swing.tree.DefaultTreeCellEditor"
        ],
        "Method": [
            {
                "getTreeCellEditorComponent": {
                    "Parameter": {
                        "tree": "JTree",
                        "value": "Object",
                        "isSelected": "boolean",
                        "expanded": "boolean",
                        "leaf": "boolean",
                        "row": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "609": {
        "Package": "javax.swing.tree",
        "Interface": "TreeCellRenderer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.tree.DefaultTreeCellRenderer"
        ],
        "Method": [
            {
                "getTreeCellRendererComponent": {
                    "Parameter": {
                        "tree": "JTree",
                        "value": "Object",
                        "selected": "boolean",
                        "expanded": "boolean",
                        "leaf": "boolean",
                        "row": "int",
                        "hasFocus": "boolean"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "610": {
        "Package": "javax.swing.tree",
        "Interface": "TreeModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.tree.DefaultTreeModel"
        ],
        "Method": [
            {
                "getRoot": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getChild": {
                    "Parameter": {
                        "parent": "Object",
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getChildCount": {
                    "Parameter": {
                        "parent": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "isLeaf": {
                    "Parameter": {
                        "node": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "valueForPathChanged": {
                    "Parameter": {
                        "path": "TreePath",
                        "newValue": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "getIndexOfChild": {
                    "Parameter": {
                        "parent": "Object",
                        "child": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "addTreeModelListener": {
                    "Parameter": {
                        "l": "TreeModelListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeTreeModelListener": {
                    "Parameter": {
                        "l": "TreeModelListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "611": {
        "Package": "javax.swing.tree",
        "Interface": "TreeNode",
        "Superinterface": null,
        "Implementing Class": [
            "javax.swing.tree.MutableTreeNode"
        ],
        "Subinterface": [
            "javax.swing.text.AbstractDocument.AbstractElement",
            "javax.swing.text.AbstractDocument.BranchElement",
            "javax.swing.text.AbstractDocument.LeafElement",
            "javax.swing.tree.DefaultMutableTreeNode",
            "javax.swing.text.DefaultStyledDocument.SectionElement",
            "javax.swing.text.html.HTMLDocument.BlockElement",
            "javax.swing.text.html.HTMLDocument.RunElement",
            "javax.swing.JTree.DynamicUtilTreeNode"
        ],
        "Method": [
            {
                "getChildAt": {
                    "Parameter": {
                        "childIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getChildCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIndex": {
                    "Parameter": {
                        "node": "TreeNode"
                    },
                    "Throw": []
                }
            },
            {
                "getAllowsChildren": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isLeaf": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "children": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "612": {
        "Package": "javax.swing.tree",
        "Interface": "TreeSelectionModel",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.tree.DefaultTreeSelectionModel",
            "javax.swing.JTree.EmptySelectionModel"
        ],
        "Method": [
            {
                "setSelectionMode": {
                    "Parameter": {
                        "mode": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getSelectionMode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSelectionPath": {
                    "Parameter": {
                        "path": "TreePath"
                    },
                    "Throw": []
                }
            },
            {
                "setSelectionPaths": {
                    "Parameter": {
                        "paths": "TreePath"
                    },
                    "Throw": []
                }
            },
            {
                "addSelectionPath": {
                    "Parameter": {
                        "path": "TreePath"
                    },
                    "Throw": []
                }
            },
            {
                "addSelectionPaths": {
                    "Parameter": {
                        "paths": "TreePath"
                    },
                    "Throw": []
                }
            },
            {
                "removeSelectionPath": {
                    "Parameter": {
                        "path": "TreePath"
                    },
                    "Throw": []
                }
            },
            {
                "removeSelectionPaths": {
                    "Parameter": {
                        "paths": "TreePath"
                    },
                    "Throw": []
                }
            },
            {
                "getSelectionPath": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSelectionPaths": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSelectionCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isPathSelected": {
                    "Parameter": {
                        "path": "TreePath"
                    },
                    "Throw": []
                }
            },
            {
                "isSelectionEmpty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "clearSelection": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setRowMapper": {
                    "Parameter": {
                        "newMapper": "RowMapper"
                    },
                    "Throw": []
                }
            },
            {
                "getRowMapper": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSelectionRows": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMinSelectionRow": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMaxSelectionRow": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isRowSelected": {
                    "Parameter": {
                        "row": "int"
                    },
                    "Throw": []
                }
            },
            {
                "resetRowSelection": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLeadSelectionRow": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLeadSelectionPath": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addPropertyChangeListener": {
                    "Parameter": {
                        "listener": "PropertyChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removePropertyChangeListener": {
                    "Parameter": {
                        "listener": "PropertyChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "addTreeSelectionListener": {
                    "Parameter": {
                        "x": "TreeSelectionListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeTreeSelectionListener": {
                    "Parameter": {
                        "x": "TreeSelectionListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "613": {
        "Package": "javax.swing.undo",
        "Interface": "StateEditable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "storeState": {
                    "Parameter": {
                        "": "Hashtable"
                    },
                    "Throw": []
                }
            },
            {
                "restoreState": {
                    "Parameter": {
                        "": "Hashtable"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "614": {
        "Package": "javax.swing.undo",
        "Interface": "UndoableEdit",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.swing.text.AbstractDocument.DefaultDocumentEvent",
            "javax.swing.text.AbstractDocument.ElementEdit",
            "javax.swing.undo.AbstractUndoableEdit",
            "javax.swing.undo.CompoundEdit",
            "javax.swing.text.DefaultStyledDocument.AttributeUndoableEdit",
            "javax.swing.undo.StateEdit",
            "javax.swing.undo.UndoManager"
        ],
        "Method": [
            {
                "undo": {
                    "Parameter": {},
                    "Throw": "javax.swing.undo.CannotUndoException"
                }
            },
            {
                "canUndo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "redo": {
                    "Parameter": {},
                    "Throw": "javax.swing.undo.CannotRedoException"
                }
            },
            {
                "canRedo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "die": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addEdit": {
                    "Parameter": {
                        "anEdit": "UndoableEdit"
                    },
                    "Throw": []
                }
            },
            {
                "replaceEdit": {
                    "Parameter": {
                        "anEdit": "UndoableEdit"
                    },
                    "Throw": []
                }
            },
            {
                "isSignificant": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPresentationName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getUndoPresentationName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRedoPresentationName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "615": {
        "Package": "java.lang.instrument",
        "Interface": "ClassFileTransformer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "transform": {
                    "Parameter": {
                        "loader": "ClassLoader",
                        "className": "String",
                        "classBeingRedefined": "Class",
                        "protectionDomain": "ProtectionDomain",
                        "classfileBuffer": "byte"
                    },
                    "Throw": "java.lang.instrument.IllegalClassFormatException"
                }
            },
            {
                "transform": {
                    "Parameter": {
                        "module": "Module",
                        "loader": "ClassLoader",
                        "className": "String",
                        "classBeingRedefined": "Class",
                        "protectionDomain": "ProtectionDomain",
                        "classfileBuffer": "byte"
                    },
                    "Throw": "java.lang.instrument.IllegalClassFormatException"
                }
            }
        ]
    },
    "616": {
        "Package": "java.lang.instrument",
        "Interface": "Instrumentation",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addTransformer": {
                    "Parameter": {
                        "transformer": "ClassFileTransformer",
                        "canRetransform": "boolean"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "addTransformer": {
                    "Parameter": {
                        "transformer": "ClassFileTransformer"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "removeTransformer": {
                    "Parameter": {
                        "transformer": "ClassFileTransformer"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "isRetransformClassesSupported": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "retransformClasses": {
                    "Parameter": {
                        "classes": "Class"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "isRedefineClassesSupported": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "redefineClasses": {
                    "Parameter": {
                        "definitions": "ClassDefinition"
                    },
                    "Throw": "java.lang.ClassNotFoundException"
                }
            },
            {
                "isModifiableClass": {
                    "Parameter": {
                        "theClass": "Class"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getAllLoadedClasses": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getInitiatedClasses": {
                    "Parameter": {
                        "loader": "ClassLoader"
                    },
                    "Throw": []
                }
            },
            {
                "getObjectSize": {
                    "Parameter": {
                        "objectToSize": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "appendToBootstrapClassLoaderSearch": {
                    "Parameter": {
                        "jarfile": "JarFile"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "appendToSystemClassLoaderSearch": {
                    "Parameter": {
                        "jarfile": "JarFile"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "isNativeMethodPrefixSupported": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setNativeMethodPrefix": {
                    "Parameter": {
                        "transformer": "ClassFileTransformer",
                        "prefix": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "redefineModule": {
                    "Parameter": {
                        "module": "Module",
                        "": "Map"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "isModifiableModule": {
                    "Parameter": {
                        "module": "Module"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "617": {
        "Package": "java.util.logging",
        "Interface": "Filter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isLoggable": {
                    "Parameter": {
                        "record": "LogRecord"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "618": {
        "Package": "java.util.logging",
        "Interface": "LoggingMXBean",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLoggerNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLoggerLevel": {
                    "Parameter": {
                        "loggerName": "String"
                    },
                    "Throw": []
                }
            },
            {
                "setLoggerLevel": {
                    "Parameter": {
                        "loggerName": "String",
                        "levelName": "String"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getParentLoggerName": {
                    "Parameter": {
                        "loggerName": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "619": {
        "Package": "java.lang.management",
        "Interface": "BufferPoolMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTotalCapacity": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMemoryUsed": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "620": {
        "Package": "java.lang.management",
        "Interface": "ClassLoadingMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTotalLoadedClassCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLoadedClassCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getUnloadedClassCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isVerbose": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVerbose": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "621": {
        "Package": "java.lang.management",
        "Interface": "CompilationMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCompilationTimeMonitoringSupported": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTotalCompilationTime": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            }
        ]
    },
    "622": {
        "Package": "java.lang.management",
        "Interface": "GarbageCollectorMXBean",
        "Superinterface": [
            "java.lang.management.MemoryManagerMXBean",
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": [
            "com.sun.management.GarbageCollectorMXBean"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getCollectionCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCollectionTime": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "623": {
        "Package": "java.lang.management",
        "Interface": "MemoryManagerMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": [
            "com.sun.management.GarbageCollectorMXBean",
            "java.lang.management.GarbageCollectorMXBean"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isValid": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMemoryPoolNames": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "624": {
        "Package": "java.lang.management",
        "Interface": "MemoryMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getObjectPendingFinalizationCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getHeapMemoryUsage": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNonHeapMemoryUsage": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isVerbose": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVerbose": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "gc": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "625": {
        "Package": "java.lang.management",
        "Interface": "MemoryPoolMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getUsage": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPeakUsage": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "resetPeakUsage": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "isValid": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMemoryManagerNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getUsageThreshold": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "setUsageThreshold": {
                    "Parameter": {
                        "threshold": "long"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "isUsageThresholdExceeded": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getUsageThresholdCount": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "isUsageThresholdSupported": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCollectionUsageThreshold": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "setCollectionUsageThreshold": {
                    "Parameter": {
                        "threshold": "long"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "isCollectionUsageThresholdExceeded": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getCollectionUsageThresholdCount": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getCollectionUsage": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCollectionUsageThresholdSupported": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "626": {
        "Package": "java.lang.management",
        "Interface": "OperatingSystemMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": [
            "com.sun.management.OperatingSystemMXBean",
            "com.sun.management.UnixOperatingSystemMXBean"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getArch": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getVersion": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getAvailableProcessors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSystemLoadAverage": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "627": {
        "Package": "java.lang.management",
        "Interface": "PlatformLoggingMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLoggerNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLoggerLevel": {
                    "Parameter": {
                        "loggerName": "String"
                    },
                    "Throw": []
                }
            },
            {
                "setLoggerLevel": {
                    "Parameter": {
                        "loggerName": "String",
                        "levelName": "String"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getParentLoggerName": {
                    "Parameter": {
                        "loggerName": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "628": {
        "Package": "java.lang.management",
        "Interface": "PlatformManagedObject",
        "Superinterface": null,
        "Implementing Class": [
            "java.lang.management.BufferPoolMXBean",
            "java.lang.management.ClassLoadingMXBean",
            "java.lang.management.CompilationMXBean",
            "jdk.management.jfr.FlightRecorderMXBean",
            "com.sun.management.GarbageCollectorMXBean",
            "java.lang.management.GarbageCollectorMXBean",
            "com.sun.management.HotSpotDiagnosticMXBean",
            "java.lang.management.MemoryManagerMXBean",
            "java.lang.management.MemoryMXBean",
            "java.lang.management.MemoryPoolMXBean",
            "com.sun.management.OperatingSystemMXBean",
            "java.lang.management.OperatingSystemMXBean",
            "java.lang.management.PlatformLoggingMXBean",
            "java.lang.management.RuntimeMXBean",
            "com.sun.management.ThreadMXBean",
            "java.lang.management.ThreadMXBean",
            "com.sun.management.UnixOperatingSystemMXBean"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getObjectName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "629": {
        "Package": "java.lang.management",
        "Interface": "RuntimeMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPid": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getVmName": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getVmVendor": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getVmVersion": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getSpecName": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getSpecVendor": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getSpecVersion": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getManagementSpecVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getClassPath": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getLibraryPath": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "isBootClassPathSupported": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBootClassPath": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getInputArguments": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getUptime": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getStartTime": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSystemProperties": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "630": {
        "Package": "java.lang.management",
        "Interface": "ThreadMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": [
            "com.sun.management.ThreadMXBean"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getThreadCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPeakThreadCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTotalStartedThreadCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDaemonThreadCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAllThreadIds": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getThreadInfo": {
                    "Parameter": {
                        "id": "long"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getThreadInfo": {
                    "Parameter": {
                        "ids": "long"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getThreadInfo": {
                    "Parameter": {
                        "id": "long",
                        "maxDepth": "int"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getThreadInfo": {
                    "Parameter": {
                        "ids": "long",
                        "maxDepth": "int"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "isThreadContentionMonitoringSupported": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isThreadContentionMonitoringEnabled": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "setThreadContentionMonitoringEnabled": {
                    "Parameter": {
                        "enable": "boolean"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getCurrentThreadCpuTime": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getCurrentThreadUserTime": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getThreadCpuTime": {
                    "Parameter": {
                        "id": "long"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getThreadUserTime": {
                    "Parameter": {
                        "id": "long"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "isThreadCpuTimeSupported": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCurrentThreadCpuTimeSupported": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isThreadCpuTimeEnabled": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "setThreadCpuTimeEnabled": {
                    "Parameter": {
                        "enable": "boolean"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "findMonitorDeadlockedThreads": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "resetPeakThreadCount": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "findDeadlockedThreads": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "isObjectMonitorUsageSupported": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSynchronizerUsageSupported": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getThreadInfo": {
                    "Parameter": {
                        "ids": "long",
                        "lockedMonitors": "boolean",
                        "lockedSynchronizers": "boolean"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getThreadInfo": {
                    "Parameter": {
                        "ids": "long",
                        "lockedMonitors": "boolean",
                        "lockedSynchronizers": "boolean",
                        "maxDepth": "int"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "dumpAllThreads": {
                    "Parameter": {
                        "lockedMonitors": "boolean",
                        "lockedSynchronizers": "boolean"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "dumpAllThreads": {
                    "Parameter": {
                        "lockedMonitors": "boolean",
                        "lockedSynchronizers": "boolean",
                        "maxDepth": "int"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            }
        ]
    },
    "631": {
        "Package": "javax.management",
        "Interface": "Descriptor",
        "Superinterface": [
            "java.lang.Cloneable",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.modelmbean.DescriptorSupport",
            "javax.management.ImmutableDescriptor"
        ],
        "Method": [
            {
                "getFieldValue": {
                    "Parameter": {
                        "fieldName": "String"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "setField": {
                    "Parameter": {
                        "fieldName": "String",
                        "fieldValue": "Object"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "getFields": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFieldNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFieldValues": {
                    "Parameter": {
                        "fieldNames": "String"
                    },
                    "Throw": []
                }
            },
            {
                "removeField": {
                    "Parameter": {
                        "fieldName": "String"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "setFields": {
                    "Parameter": {
                        "fieldNames": "String",
                        "fieldValues": "Object"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "clone": {
                    "Parameter": {},
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "isValid": {
                    "Parameter": {},
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "632": {
        "Package": "javax.management",
        "Interface": "DescriptorAccess",
        "Superinterface": [
            "javax.management.DescriptorRead"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.modelmbean.ModelMBeanAttributeInfo",
            "javax.management.modelmbean.ModelMBeanConstructorInfo",
            "javax.management.modelmbean.ModelMBeanNotificationInfo",
            "javax.management.modelmbean.ModelMBeanOperationInfo"
        ],
        "Method": [
            {
                "setDescriptor": {
                    "Parameter": {
                        "inDescriptor": "Descriptor"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "633": {
        "Package": "javax.management",
        "Interface": "DescriptorRead",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.DescriptorAccess"
        ],
        "Subinterface": [
            "javax.management.MBeanAttributeInfo",
            "javax.management.MBeanConstructorInfo",
            "javax.management.MBeanFeatureInfo",
            "javax.management.MBeanInfo",
            "javax.management.MBeanNotificationInfo",
            "javax.management.MBeanOperationInfo",
            "javax.management.MBeanParameterInfo",
            "javax.management.modelmbean.ModelMBeanAttributeInfo",
            "javax.management.modelmbean.ModelMBeanConstructorInfo",
            "javax.management.modelmbean.ModelMBeanInfoSupport",
            "javax.management.modelmbean.ModelMBeanNotificationInfo",
            "javax.management.modelmbean.ModelMBeanOperationInfo",
            "javax.management.openmbean.OpenMBeanAttributeInfoSupport",
            "javax.management.openmbean.OpenMBeanConstructorInfoSupport",
            "javax.management.openmbean.OpenMBeanInfoSupport",
            "javax.management.openmbean.OpenMBeanOperationInfoSupport",
            "javax.management.openmbean.OpenMBeanParameterInfoSupport"
        ],
        "Method": [
            {
                "getDescriptor": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "634": {
        "Package": "javax.management",
        "Interface": "DynamicMBean",
        "Superinterface": null,
        "Implementing Class": [
            "com.sun.management.DiagnosticCommandMBean",
            "javax.management.modelmbean.ModelMBean"
        ],
        "Subinterface": [
            "javax.management.modelmbean.RequiredModelMBean",
            "javax.management.StandardEmitterMBean",
            "javax.management.StandardMBean"
        ],
        "Method": [
            {
                "getAttribute": {
                    "Parameter": {
                        "attribute": "String"
                    },
                    "Throw": "javax.management.ReflectionException"
                }
            },
            {
                "setAttribute": {
                    "Parameter": {
                        "attribute": "Attribute"
                    },
                    "Throw": "javax.management.ReflectionException"
                }
            },
            {
                "getAttributes": {
                    "Parameter": {
                        "attributes": "String"
                    },
                    "Throw": []
                }
            },
            {
                "setAttributes": {
                    "Parameter": {
                        "attributes": "AttributeList"
                    },
                    "Throw": []
                }
            },
            {
                "invoke": {
                    "Parameter": {
                        "actionName": "String",
                        "params": "Object",
                        "signature": "String"
                    },
                    "Throw": "javax.management.ReflectionException"
                }
            },
            {
                "getMBeanInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "635": {
        "Package": "javax.management",
        "Interface": "MBeanRegistration",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.monitor.CounterMonitor",
            "javax.management.monitor.GaugeMonitor",
            "javax.management.remote.JMXConnectorServer",
            "javax.management.loading.MLet",
            "javax.management.monitor.Monitor",
            "javax.management.loading.PrivateMLet",
            "javax.management.relation.RelationService",
            "javax.management.relation.RelationSupport",
            "javax.management.modelmbean.RequiredModelMBean",
            "javax.management.remote.rmi.RMIConnectorServer",
            "javax.management.StandardEmitterMBean",
            "javax.management.StandardMBean",
            "javax.management.monitor.StringMonitor",
            "javax.management.timer.Timer"
        ],
        "Method": [
            {
                "preRegister": {
                    "Parameter": {
                        "server": "MBeanServer",
                        "name": "ObjectName"
                    },
                    "Throw": "java.lang.Exception"
                }
            },
            {
                "postRegister": {
                    "Parameter": {
                        "registrationDone": "Boolean"
                    },
                    "Throw": []
                }
            },
            {
                "preDeregister": {
                    "Parameter": {},
                    "Throw": "java.lang.Exception"
                }
            },
            {
                "postDeregister": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "636": {
        "Package": "javax.management",
        "Interface": "MBeanServer",
        "Superinterface": [
            "javax.management.MBeanServerConnection"
        ],
        "Implementing Class": [
            "javax.management.remote.MBeanServerForwarder"
        ],
        "Subinterface": null,
        "Method": [
            {
                "createMBean": {
                    "Parameter": {
                        "className": "String",
                        "name": "ObjectName"
                    },
                    "Throw": "javax.management.NotCompliantMBeanException"
                }
            },
            {
                "createMBean": {
                    "Parameter": {
                        "className": "String",
                        "name": "ObjectName",
                        "loaderName": "ObjectName"
                    },
                    "Throw": "javax.management.InstanceNotFoundException"
                }
            },
            {
                "createMBean": {
                    "Parameter": {
                        "className": "String",
                        "name": "ObjectName",
                        "params": "Object",
                        "signature": "String"
                    },
                    "Throw": "javax.management.NotCompliantMBeanException"
                }
            },
            {
                "createMBean": {
                    "Parameter": {
                        "className": "String",
                        "name": "ObjectName",
                        "loaderName": "ObjectName",
                        "params": "Object",
                        "signature": "String"
                    },
                    "Throw": "javax.management.InstanceNotFoundException"
                }
            },
            {
                "registerMBean": {
                    "Parameter": {
                        "object": "Object",
                        "name": "ObjectName"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "unregisterMBean": {
                    "Parameter": {
                        "name": "ObjectName"
                    },
                    "Throw": "javax.management.MBeanRegistrationException"
                }
            },
            {
                "getObjectInstance": {
                    "Parameter": {
                        "name": "ObjectName"
                    },
                    "Throw": "javax.management.InstanceNotFoundException"
                }
            },
            {
                "queryMBeans": {
                    "Parameter": {
                        "name": "ObjectName",
                        "query": "QueryExp"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "queryNames": {
                    "Parameter": {
                        "name": "ObjectName",
                        "query": "QueryExp"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "isRegistered": {
                    "Parameter": {
                        "name": "ObjectName"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "getMBeanCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttribute": {
                    "Parameter": {
                        "name": "ObjectName",
                        "attribute": "String"
                    },
                    "Throw": "javax.management.ReflectionException"
                }
            },
            {
                "getAttributes": {
                    "Parameter": {
                        "name": "ObjectName",
                        "attributes": "String"
                    },
                    "Throw": "javax.management.ReflectionException"
                }
            },
            {
                "setAttribute": {
                    "Parameter": {
                        "name": "ObjectName",
                        "attribute": "Attribute"
                    },
                    "Throw": "javax.management.ReflectionException"
                }
            },
            {
                "setAttributes": {
                    "Parameter": {
                        "name": "ObjectName",
                        "attributes": "AttributeList"
                    },
                    "Throw": "javax.management.ReflectionException"
                }
            },
            {
                "invoke": {
                    "Parameter": {
                        "name": "ObjectName",
                        "operationName": "String",
                        "params": "Object",
                        "signature": "String"
                    },
                    "Throw": "javax.management.ReflectionException"
                }
            },
            {
                "getDefaultDomain": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDomains": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "NotificationListener",
                        "filter": "NotificationFilter",
                        "handback": "Object"
                    },
                    "Throw": "javax.management.InstanceNotFoundException"
                }
            },
            {
                "addNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "ObjectName",
                        "filter": "NotificationFilter",
                        "handback": "Object"
                    },
                    "Throw": "javax.management.InstanceNotFoundException"
                }
            },
            {
                "removeNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "ObjectName"
                    },
                    "Throw": "javax.management.ListenerNotFoundException"
                }
            },
            {
                "removeNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "ObjectName",
                        "filter": "NotificationFilter",
                        "handback": "Object"
                    },
                    "Throw": "javax.management.ListenerNotFoundException"
                }
            },
            {
                "removeNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "NotificationListener"
                    },
                    "Throw": "javax.management.ListenerNotFoundException"
                }
            },
            {
                "removeNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "NotificationListener",
                        "filter": "NotificationFilter",
                        "handback": "Object"
                    },
                    "Throw": "javax.management.ListenerNotFoundException"
                }
            },
            {
                "getMBeanInfo": {
                    "Parameter": {
                        "name": "ObjectName"
                    },
                    "Throw": "javax.management.ReflectionException"
                }
            },
            {
                "isInstanceOf": {
                    "Parameter": {
                        "name": "ObjectName",
                        "className": "String"
                    },
                    "Throw": "javax.management.InstanceNotFoundException"
                }
            },
            {
                "instantiate": {
                    "Parameter": {
                        "className": "String"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "instantiate": {
                    "Parameter": {
                        "className": "String",
                        "loaderName": "ObjectName"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "instantiate": {
                    "Parameter": {
                        "className": "String",
                        "params": "Object",
                        "signature": "String"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "instantiate": {
                    "Parameter": {
                        "className": "String",
                        "loaderName": "ObjectName",
                        "params": "Object",
                        "signature": "String"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "deserialize": {
                    "Parameter": {
                        "name": "ObjectName",
                        "data": "byte"
                    },
                    "Throw": "javax.management.OperationsException"
                }
            },
            {
                "deserialize": {
                    "Parameter": {
                        "className": "String",
                        "data": "byte"
                    },
                    "Throw": "javax.management.ReflectionException"
                }
            },
            {
                "deserialize": {
                    "Parameter": {
                        "className": "String",
                        "loaderName": "ObjectName",
                        "data": "byte"
                    },
                    "Throw": "javax.management.ReflectionException"
                }
            },
            {
                "getClassLoaderFor": {
                    "Parameter": {
                        "mbeanName": "ObjectName"
                    },
                    "Throw": "javax.management.InstanceNotFoundException"
                }
            },
            {
                "getClassLoader": {
                    "Parameter": {
                        "loaderName": "ObjectName"
                    },
                    "Throw": "javax.management.InstanceNotFoundException"
                }
            },
            {
                "getClassLoaderRepository": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "637": {
        "Package": "javax.management",
        "Interface": "MBeanServerConnection",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.MBeanServer",
            "javax.management.remote.MBeanServerForwarder"
        ],
        "Subinterface": null,
        "Method": [
            {
                "createMBean": {
                    "Parameter": {
                        "className": "String",
                        "name": "ObjectName"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "createMBean": {
                    "Parameter": {
                        "className": "String",
                        "name": "ObjectName",
                        "loaderName": "ObjectName"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "createMBean": {
                    "Parameter": {
                        "className": "String",
                        "name": "ObjectName",
                        "params": "Object",
                        "signature": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "createMBean": {
                    "Parameter": {
                        "className": "String",
                        "name": "ObjectName",
                        "loaderName": "ObjectName",
                        "params": "Object",
                        "signature": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "unregisterMBean": {
                    "Parameter": {
                        "name": "ObjectName"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getObjectInstance": {
                    "Parameter": {
                        "name": "ObjectName"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "queryMBeans": {
                    "Parameter": {
                        "name": "ObjectName",
                        "query": "QueryExp"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "queryNames": {
                    "Parameter": {
                        "name": "ObjectName",
                        "query": "QueryExp"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "isRegistered": {
                    "Parameter": {
                        "name": "ObjectName"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getMBeanCount": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getAttribute": {
                    "Parameter": {
                        "name": "ObjectName",
                        "attribute": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getAttributes": {
                    "Parameter": {
                        "name": "ObjectName",
                        "attributes": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "setAttribute": {
                    "Parameter": {
                        "name": "ObjectName",
                        "attribute": "Attribute"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "setAttributes": {
                    "Parameter": {
                        "name": "ObjectName",
                        "attributes": "AttributeList"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "invoke": {
                    "Parameter": {
                        "name": "ObjectName",
                        "operationName": "String",
                        "params": "Object",
                        "signature": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getDefaultDomain": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getDomains": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "addNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "NotificationListener",
                        "filter": "NotificationFilter",
                        "handback": "Object"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "addNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "ObjectName",
                        "filter": "NotificationFilter",
                        "handback": "Object"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "removeNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "ObjectName"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "removeNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "ObjectName",
                        "filter": "NotificationFilter",
                        "handback": "Object"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "removeNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "NotificationListener"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "removeNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "NotificationListener",
                        "filter": "NotificationFilter",
                        "handback": "Object"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getMBeanInfo": {
                    "Parameter": {
                        "name": "ObjectName"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "isInstanceOf": {
                    "Parameter": {
                        "name": "ObjectName",
                        "className": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "638": {
        "Package": "javax.management",
        "Interface": "MBeanServerDelegateMBean",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.MBeanServerDelegate"
        ],
        "Method": [
            {
                "getMBeanServerId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSpecificationName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSpecificationVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSpecificationVendor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getImplementationName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getImplementationVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getImplementationVendor": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "639": {
        "Package": "javax.management",
        "Interface": "NotificationBroadcaster",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.modelmbean.ModelMBean",
            "javax.management.modelmbean.ModelMBeanNotificationBroadcaster",
            "javax.management.NotificationEmitter"
        ],
        "Subinterface": [
            "javax.management.monitor.CounterMonitor",
            "javax.management.monitor.GaugeMonitor",
            "javax.management.remote.JMXConnectorServer",
            "javax.management.MBeanServerDelegate",
            "javax.management.monitor.Monitor",
            "javax.management.NotificationBroadcasterSupport",
            "javax.management.relation.RelationService",
            "javax.management.modelmbean.RequiredModelMBean",
            "javax.management.remote.rmi.RMIConnectorServer",
            "javax.management.StandardEmitterMBean",
            "javax.management.monitor.StringMonitor",
            "javax.management.timer.Timer"
        ],
        "Method": [
            {
                "addNotificationListener": {
                    "Parameter": {
                        "listener": "NotificationListener",
                        "filter": "NotificationFilter",
                        "handback": "Object"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "removeNotificationListener": {
                    "Parameter": {
                        "listener": "NotificationListener"
                    },
                    "Throw": "javax.management.ListenerNotFoundException"
                }
            },
            {
                "getNotificationInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "640": {
        "Package": "javax.management",
        "Interface": "NotificationEmitter",
        "Superinterface": [
            "javax.management.NotificationBroadcaster"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.monitor.CounterMonitor",
            "javax.management.monitor.GaugeMonitor",
            "javax.management.remote.JMXConnectorServer",
            "javax.management.MBeanServerDelegate",
            "javax.management.monitor.Monitor",
            "javax.management.NotificationBroadcasterSupport",
            "javax.management.relation.RelationService",
            "javax.management.modelmbean.RequiredModelMBean",
            "javax.management.remote.rmi.RMIConnectorServer",
            "javax.management.StandardEmitterMBean",
            "javax.management.monitor.StringMonitor",
            "javax.management.timer.Timer"
        ],
        "Method": [
            {
                "removeNotificationListener": {
                    "Parameter": {
                        "listener": "NotificationListener",
                        "filter": "NotificationFilter",
                        "handback": "Object"
                    },
                    "Throw": "javax.management.ListenerNotFoundException"
                }
            }
        ]
    },
    "641": {
        "Package": "javax.management",
        "Interface": "NotificationFilter",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.AttributeChangeNotificationFilter",
            "javax.management.relation.MBeanServerNotificationFilter",
            "javax.management.NotificationFilterSupport"
        ],
        "Method": [
            {
                "isNotificationEnabled": {
                    "Parameter": {
                        "notification": "Notification"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "642": {
        "Package": "javax.management",
        "Interface": "NotificationListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.relation.RelationService"
        ],
        "Method": [
            {
                "handleNotification": {
                    "Parameter": {
                        "notification": "Notification",
                        "handback": "Object"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "643": {
        "Package": "javax.management",
        "Interface": "PersistentMBean",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.modelmbean.ModelMBean"
        ],
        "Subinterface": [
            "javax.management.modelmbean.RequiredModelMBean"
        ],
        "Method": [
            {
                "load": {
                    "Parameter": {},
                    "Throw": "javax.management.InstanceNotFoundException"
                }
            },
            {
                "store": {
                    "Parameter": {},
                    "Throw": "javax.management.InstanceNotFoundException"
                }
            }
        ]
    },
    "644": {
        "Package": "javax.management",
        "Interface": "QueryExp",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.ObjectName"
        ],
        "Method": [
            {
                "apply": {
                    "Parameter": {
                        "name": "ObjectName"
                    },
                    "Throw": "javax.management.InvalidApplicationException"
                }
            },
            {
                "setMBeanServer": {
                    "Parameter": {
                        "s": "MBeanServer"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "645": {
        "Package": "javax.management",
        "Interface": "ValueExp",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.AttributeValueExp",
            "javax.management.StringValueExp"
        ],
        "Method": [
            {
                "apply": {
                    "Parameter": {
                        "name": "ObjectName"
                    },
                    "Throw": "javax.management.InvalidApplicationException"
                }
            },
            {
                "setMBeanServer": {
                    "Parameter": {
                        "s": "MBeanServer"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "646": {
        "Package": "javax.management.loading",
        "Interface": "ClassLoaderRepository",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "loadClass": {
                    "Parameter": {
                        "className": "String"
                    },
                    "Throw": "java.lang.ClassNotFoundException"
                }
            },
            {
                "loadClassWithout": {
                    "Parameter": {
                        "exclude": "ClassLoader",
                        "className": "String"
                    },
                    "Throw": "java.lang.ClassNotFoundException"
                }
            },
            {
                "loadClassBefore": {
                    "Parameter": {
                        "stop": "ClassLoader",
                        "className": "String"
                    },
                    "Throw": "java.lang.ClassNotFoundException"
                }
            }
        ]
    },
    "647": {
        "Package": "javax.management.loading",
        "Interface": "MLetMBean",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.loading.MLet",
            "javax.management.loading.PrivateMLet"
        ],
        "Method": [
            {
                "getMBeansFromURL": {
                    "Parameter": {
                        "url": "String"
                    },
                    "Throw": "javax.management.ServiceNotFoundException"
                }
            },
            {
                "getMBeansFromURL": {
                    "Parameter": {
                        "url": "URL"
                    },
                    "Throw": "javax.management.ServiceNotFoundException"
                }
            },
            {
                "addURL": {
                    "Parameter": {
                        "url": "URL"
                    },
                    "Throw": []
                }
            },
            {
                "addURL": {
                    "Parameter": {
                        "url": "String"
                    },
                    "Throw": "javax.management.ServiceNotFoundException"
                }
            },
            {
                "getURLs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getResource": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getResourceAsStream": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getResources": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getLibraryDirectory": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "setLibraryDirectory": {
                    "Parameter": {
                        "libdir": "String"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            }
        ]
    },
    "648": {
        "Package": "javax.management.modelmbean",
        "Interface": "ModelMBean",
        "Superinterface": [
            "javax.management.DynamicMBean",
            "javax.management.modelmbean.ModelMBeanNotificationBroadcaster",
            "javax.management.NotificationBroadcaster",
            "javax.management.PersistentMBean"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.modelmbean.RequiredModelMBean"
        ],
        "Method": [
            {
                "setModelMBeanInfo": {
                    "Parameter": {
                        "inModelMBeanInfo": "ModelMBeanInfo"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "setManagedResource": {
                    "Parameter": {
                        "mr": "Object",
                        "mrtype": "String"
                    },
                    "Throw": "javax.management.modelmbean.InvalidTargetObjectTypeException"
                }
            }
        ]
    },
    "649": {
        "Package": "javax.management.modelmbean",
        "Interface": "ModelMBeanInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.modelmbean.ModelMBeanInfoSupport"
        ],
        "Method": [
            {
                "getDescriptors": {
                    "Parameter": {
                        "inDescriptorType": "String"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "setDescriptors": {
                    "Parameter": {
                        "inDescriptors": "Descriptor"
                    },
                    "Throw": "javax.management.MBeanException"
                }
            },
            {
                "getDescriptor": {
                    "Parameter": {
                        "inDescriptorName": "String",
                        "inDescriptorType": "String"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "setDescriptor": {
                    "Parameter": {
                        "inDescriptor": "Descriptor",
                        "inDescriptorType": "String"
                    },
                    "Throw": "javax.management.MBeanException"
                }
            },
            {
                "getMBeanDescriptor": {
                    "Parameter": {},
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "setMBeanDescriptor": {
                    "Parameter": {
                        "inDescriptor": "Descriptor"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "getAttribute": {
                    "Parameter": {
                        "inName": "String"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "getOperation": {
                    "Parameter": {
                        "inName": "String"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "getNotification": {
                    "Parameter": {
                        "inName": "String"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "clone": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getClassName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getConstructors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNotifications": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getOperations": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "650": {
        "Package": "javax.management.modelmbean",
        "Interface": "ModelMBeanNotificationBroadcaster",
        "Superinterface": [
            "javax.management.NotificationBroadcaster"
        ],
        "Implementing Class": [
            "javax.management.modelmbean.ModelMBean"
        ],
        "Subinterface": [
            "javax.management.modelmbean.RequiredModelMBean"
        ],
        "Method": [
            {
                "sendNotification": {
                    "Parameter": {
                        "ntfyObj": "Notification"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "sendNotification": {
                    "Parameter": {
                        "ntfyText": "String"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "sendAttributeChangeNotification": {
                    "Parameter": {
                        "notification": "AttributeChangeNotification"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "sendAttributeChangeNotification": {
                    "Parameter": {
                        "oldValue": "Attribute",
                        "newValue": "Attribute"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "addAttributeChangeNotificationListener": {
                    "Parameter": {
                        "listener": "NotificationListener",
                        "attributeName": "String",
                        "handback": "Object"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "removeAttributeChangeNotificationListener": {
                    "Parameter": {
                        "listener": "NotificationListener",
                        "attributeName": "String"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            }
        ]
    },
    "651": {
        "Package": "javax.management.monitor",
        "Interface": "CounterMonitorMBean",
        "Superinterface": [
            "javax.management.monitor.MonitorMBean"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.monitor.CounterMonitor"
        ],
        "Method": [
            {
                "getDerivedGauge": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDerivedGaugeTimeStamp": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getThreshold": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setThreshold": {
                    "Parameter": {
                        "value": "Number"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getDerivedGauge": {
                    "Parameter": {
                        "object": "ObjectName"
                    },
                    "Throw": []
                }
            },
            {
                "getDerivedGaugeTimeStamp": {
                    "Parameter": {
                        "object": "ObjectName"
                    },
                    "Throw": []
                }
            },
            {
                "getThreshold": {
                    "Parameter": {
                        "object": "ObjectName"
                    },
                    "Throw": []
                }
            },
            {
                "getInitThreshold": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setInitThreshold": {
                    "Parameter": {
                        "value": "Number"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setOffset": {
                    "Parameter": {
                        "value": "Number"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getModulus": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setModulus": {
                    "Parameter": {
                        "value": "Number"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getNotify": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setNotify": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getDifferenceMode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDifferenceMode": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "652": {
        "Package": "javax.management.monitor",
        "Interface": "GaugeMonitorMBean",
        "Superinterface": [
            "javax.management.monitor.MonitorMBean"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.monitor.GaugeMonitor"
        ],
        "Method": [
            {
                "getDerivedGauge": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDerivedGaugeTimeStamp": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDerivedGauge": {
                    "Parameter": {
                        "object": "ObjectName"
                    },
                    "Throw": []
                }
            },
            {
                "getDerivedGaugeTimeStamp": {
                    "Parameter": {
                        "object": "ObjectName"
                    },
                    "Throw": []
                }
            },
            {
                "getHighThreshold": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLowThreshold": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setThresholds": {
                    "Parameter": {
                        "highValue": "Number",
                        "lowValue": "Number"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getNotifyHigh": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setNotifyHigh": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getNotifyLow": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setNotifyLow": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getDifferenceMode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDifferenceMode": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "653": {
        "Package": "javax.management.monitor",
        "Interface": "MonitorMBean",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.monitor.CounterMonitorMBean",
            "javax.management.monitor.GaugeMonitorMBean",
            "javax.management.monitor.StringMonitorMBean"
        ],
        "Subinterface": [
            "javax.management.monitor.CounterMonitor",
            "javax.management.monitor.GaugeMonitor",
            "javax.management.monitor.Monitor",
            "javax.management.monitor.StringMonitor"
        ],
        "Method": [
            {
                "start": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "stop": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addObservedObject": {
                    "Parameter": {
                        "object": "ObjectName"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "removeObservedObject": {
                    "Parameter": {
                        "object": "ObjectName"
                    },
                    "Throw": []
                }
            },
            {
                "containsObservedObject": {
                    "Parameter": {
                        "object": "ObjectName"
                    },
                    "Throw": []
                }
            },
            {
                "getObservedObjects": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getObservedObject": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setObservedObject": {
                    "Parameter": {
                        "object": "ObjectName"
                    },
                    "Throw": []
                }
            },
            {
                "getObservedAttribute": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setObservedAttribute": {
                    "Parameter": {
                        "attribute": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getGranularityPeriod": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setGranularityPeriod": {
                    "Parameter": {
                        "period": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "isActive": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "654": {
        "Package": "javax.management.monitor",
        "Interface": "StringMonitorMBean",
        "Superinterface": [
            "javax.management.monitor.MonitorMBean"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.monitor.StringMonitor"
        ],
        "Method": [
            {
                "getDerivedGauge": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDerivedGaugeTimeStamp": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDerivedGauge": {
                    "Parameter": {
                        "object": "ObjectName"
                    },
                    "Throw": []
                }
            },
            {
                "getDerivedGaugeTimeStamp": {
                    "Parameter": {
                        "object": "ObjectName"
                    },
                    "Throw": []
                }
            },
            {
                "getStringToCompare": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setStringToCompare": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getNotifyMatch": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setNotifyMatch": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getNotifyDiffer": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setNotifyDiffer": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "655": {
        "Package": "javax.management.openmbean",
        "Interface": "CompositeData",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.CompositeDataSupport",
            "com.sun.management.GcInfo"
        ],
        "Method": [
            {
                "getCompositeType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "get": {
                    "Parameter": {
                        "key": "String"
                    },
                    "Throw": "javax.management.openmbean.InvalidKeyException"
                }
            },
            {
                "getAll": {
                    "Parameter": {
                        "keys": "String"
                    },
                    "Throw": "javax.management.openmbean.InvalidKeyException"
                }
            },
            {
                "containsKey": {
                    "Parameter": {
                        "key": "String"
                    },
                    "Throw": []
                }
            },
            {
                "containsValue": {
                    "Parameter": {
                        "value": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "values": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "656": {
        "Package": "javax.management.openmbean",
        "Interface": "CompositeDataView",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "com.sun.management.GarbageCollectionNotificationInfo",
            "com.sun.management.GcInfo"
        ],
        "Method": [
            {
                "toCompositeData": {
                    "Parameter": {
                        "ct": "CompositeType"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "657": {
        "Package": "javax.management.openmbean",
        "Interface": "OpenMBeanAttributeInfo",
        "Superinterface": [
            "javax.management.openmbean.OpenMBeanParameterInfo"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.OpenMBeanAttributeInfoSupport"
        ],
        "Method": [
            {
                "isReadable": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isWritable": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isIs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "658": {
        "Package": "javax.management.openmbean",
        "Interface": "OpenMBeanConstructorInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.OpenMBeanConstructorInfoSupport"
        ],
        "Method": [
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSignature": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "659": {
        "Package": "javax.management.openmbean",
        "Interface": "OpenMBeanInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.OpenMBeanInfoSupport"
        ],
        "Method": [
            {
                "getClassName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getOperations": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getConstructors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNotifications": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "660": {
        "Package": "javax.management.openmbean",
        "Interface": "OpenMBeanOperationInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.OpenMBeanOperationInfoSupport"
        ],
        "Method": [
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSignature": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getImpact": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReturnType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReturnOpenType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "661": {
        "Package": "javax.management.openmbean",
        "Interface": "OpenMBeanParameterInfo",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.openmbean.OpenMBeanAttributeInfo"
        ],
        "Subinterface": [
            "javax.management.openmbean.OpenMBeanAttributeInfoSupport",
            "javax.management.openmbean.OpenMBeanParameterInfoSupport"
        ],
        "Method": [
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getOpenType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDefaultValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLegalValues": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMinValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMaxValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hasDefaultValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hasLegalValues": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hasMinValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hasMaxValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isValue": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "662": {
        "Package": "javax.management.openmbean",
        "Interface": "TabularData",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.openmbean.TabularDataSupport"
        ],
        "Method": [
            {
                "getTabularType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "calculateIndex": {
                    "Parameter": {
                        "value": "CompositeData"
                    },
                    "Throw": "javax.management.openmbean.InvalidOpenTypeException"
                }
            },
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEmpty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "containsKey": {
                    "Parameter": {
                        "key": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "containsValue": {
                    "Parameter": {
                        "value": "CompositeData"
                    },
                    "Throw": []
                }
            },
            {
                "get": {
                    "Parameter": {
                        "key": "Object"
                    },
                    "Throw": "javax.management.openmbean.InvalidKeyException"
                }
            },
            {
                "put": {
                    "Parameter": {
                        "value": "CompositeData"
                    },
                    "Throw": "javax.management.openmbean.KeyAlreadyExistsException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "key": "Object"
                    },
                    "Throw": "javax.management.openmbean.InvalidKeyException"
                }
            },
            {
                "putAll": {
                    "Parameter": {
                        "values": "CompositeData"
                    },
                    "Throw": "javax.management.openmbean.KeyAlreadyExistsException"
                }
            },
            {
                "clear": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "keySet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "values": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "663": {
        "Package": "javax.management.relation",
        "Interface": "Relation",
        "Superinterface": null,
        "Implementing Class": [
            "javax.management.relation.RelationSupportMBean"
        ],
        "Subinterface": [
            "javax.management.relation.RelationSupport"
        ],
        "Method": [
            {
                "getRole": {
                    "Parameter": {
                        "roleName": "String"
                    },
                    "Throw": "javax.management.relation.RelationServiceNotRegisteredException"
                }
            },
            {
                "getRoles": {
                    "Parameter": {
                        "roleNameArray": "String"
                    },
                    "Throw": "javax.management.relation.RelationServiceNotRegisteredException"
                }
            },
            {
                "getRoleCardinality": {
                    "Parameter": {
                        "roleName": "String"
                    },
                    "Throw": "javax.management.relation.RoleNotFoundException"
                }
            },
            {
                "getAllRoles": {
                    "Parameter": {},
                    "Throw": "javax.management.relation.RelationServiceNotRegisteredException"
                }
            },
            {
                "retrieveAllRoles": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setRole": {
                    "Parameter": {
                        "role": "Role"
                    },
                    "Throw": "javax.management.relation.RelationNotFoundException"
                }
            },
            {
                "setRoles": {
                    "Parameter": {
                        "roleList": "RoleList"
                    },
                    "Throw": "javax.management.relation.RelationNotFoundException"
                }
            },
            {
                "handleMBeanUnregistration": {
                    "Parameter": {
                        "objectName": "ObjectName",
                        "roleName": "String"
                    },
                    "Throw": "javax.management.relation.RelationNotFoundException"
                }
            },
            {
                "getReferencedMBeans": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRelationTypeName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRelationServiceName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRelationId": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "664": {
        "Package": "javax.management.relation",
        "Interface": "RelationServiceMBean",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.relation.RelationService"
        ],
        "Method": [
            {
                "isActive": {
                    "Parameter": {},
                    "Throw": "javax.management.relation.RelationServiceNotRegisteredException"
                }
            },
            {
                "getPurgeFlag": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPurgeFlag": {
                    "Parameter": {
                        "purgeFlag": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "createRelationType": {
                    "Parameter": {
                        "relationTypeName": "String",
                        "roleInfoArray": "RoleInfo"
                    },
                    "Throw": "javax.management.relation.InvalidRelationTypeException"
                }
            },
            {
                "addRelationType": {
                    "Parameter": {
                        "relationTypeObj": "RelationType"
                    },
                    "Throw": "javax.management.relation.InvalidRelationTypeException"
                }
            },
            {
                "getAllRelationTypeNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRoleInfos": {
                    "Parameter": {
                        "relationTypeName": "String"
                    },
                    "Throw": "javax.management.relation.RelationTypeNotFoundException"
                }
            },
            {
                "getRoleInfo": {
                    "Parameter": {
                        "relationTypeName": "String",
                        "roleInfoName": "String"
                    },
                    "Throw": "javax.management.relation.RoleInfoNotFoundException"
                }
            },
            {
                "removeRelationType": {
                    "Parameter": {
                        "relationTypeName": "String"
                    },
                    "Throw": "javax.management.relation.RelationTypeNotFoundException"
                }
            },
            {
                "createRelation": {
                    "Parameter": {
                        "relationId": "String",
                        "relationTypeName": "String",
                        "roleList": "RoleList"
                    },
                    "Throw": "javax.management.relation.InvalidRoleValueException"
                }
            },
            {
                "addRelation": {
                    "Parameter": {
                        "relationObjectName": "ObjectName"
                    },
                    "Throw": "javax.management.relation.RoleNotFoundException"
                }
            },
            {
                "isRelationMBean": {
                    "Parameter": {
                        "relationId": "String"
                    },
                    "Throw": "javax.management.relation.RelationNotFoundException"
                }
            },
            {
                "isRelation": {
                    "Parameter": {
                        "objectName": "ObjectName"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "hasRelation": {
                    "Parameter": {
                        "relationId": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getAllRelationIds": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "checkRoleReading": {
                    "Parameter": {
                        "roleName": "String",
                        "relationTypeName": "String"
                    },
                    "Throw": "javax.management.relation.RelationTypeNotFoundException"
                }
            },
            {
                "checkRoleWriting": {
                    "Parameter": {
                        "role": "Role",
                        "relationTypeName": "String",
                        "initFlag": "Boolean"
                    },
                    "Throw": "javax.management.relation.RelationTypeNotFoundException"
                }
            },
            {
                "sendRelationCreationNotification": {
                    "Parameter": {
                        "relationId": "String"
                    },
                    "Throw": "javax.management.relation.RelationNotFoundException"
                }
            },
            {
                "sendRoleUpdateNotification": {
                    "Parameter": {
                        "relationId": "String",
                        "newRole": "Role",
                        "": "List"
                    },
                    "Throw": "javax.management.relation.RelationNotFoundException"
                }
            },
            {
                "sendRelationRemovalNotification": {
                    "Parameter": {
                        "relationId": "String",
                        "": "List"
                    },
                    "Throw": "javax.management.relation.RelationNotFoundException"
                }
            },
            {
                "updateRoleMap": {
                    "Parameter": {
                        "relationId": "String",
                        "newRole": "Role",
                        "": "List"
                    },
                    "Throw": "javax.management.relation.RelationNotFoundException"
                }
            },
            {
                "removeRelation": {
                    "Parameter": {
                        "relationId": "String"
                    },
                    "Throw": "javax.management.relation.RelationNotFoundException"
                }
            },
            {
                "purgeRelations": {
                    "Parameter": {},
                    "Throw": "javax.management.relation.RelationServiceNotRegisteredException"
                }
            },
            {
                "findReferencingRelations": {
                    "Parameter": {
                        "mbeanName": "ObjectName",
                        "relationTypeName": "String",
                        "roleName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "findAssociatedMBeans": {
                    "Parameter": {
                        "mbeanName": "ObjectName",
                        "relationTypeName": "String",
                        "roleName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "findRelationsOfType": {
                    "Parameter": {
                        "relationTypeName": "String"
                    },
                    "Throw": "javax.management.relation.RelationTypeNotFoundException"
                }
            },
            {
                "getRole": {
                    "Parameter": {
                        "relationId": "String",
                        "roleName": "String"
                    },
                    "Throw": "javax.management.relation.RoleNotFoundException"
                }
            },
            {
                "getRoles": {
                    "Parameter": {
                        "relationId": "String",
                        "roleNameArray": "String"
                    },
                    "Throw": "javax.management.relation.RelationNotFoundException"
                }
            },
            {
                "getAllRoles": {
                    "Parameter": {
                        "relationId": "String"
                    },
                    "Throw": "javax.management.relation.RelationServiceNotRegisteredException"
                }
            },
            {
                "getRoleCardinality": {
                    "Parameter": {
                        "relationId": "String",
                        "roleName": "String"
                    },
                    "Throw": "javax.management.relation.RoleNotFoundException"
                }
            },
            {
                "setRole": {
                    "Parameter": {
                        "relationId": "String",
                        "role": "Role"
                    },
                    "Throw": "javax.management.relation.RelationTypeNotFoundException"
                }
            },
            {
                "setRoles": {
                    "Parameter": {
                        "relationId": "String",
                        "roleList": "RoleList"
                    },
                    "Throw": "javax.management.relation.RelationNotFoundException"
                }
            },
            {
                "getReferencedMBeans": {
                    "Parameter": {
                        "relationId": "String"
                    },
                    "Throw": "javax.management.relation.RelationNotFoundException"
                }
            },
            {
                "getRelationTypeName": {
                    "Parameter": {
                        "relationId": "String"
                    },
                    "Throw": "javax.management.relation.RelationNotFoundException"
                }
            }
        ]
    },
    "665": {
        "Package": "javax.management.relation",
        "Interface": "RelationSupportMBean",
        "Superinterface": [
            "javax.management.relation.Relation"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.relation.RelationSupport"
        ],
        "Method": [
            {
                "isInRelationService": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setRelationServiceManagementFlag": {
                    "Parameter": {
                        "flag": "Boolean"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "666": {
        "Package": "javax.management.relation",
        "Interface": "RelationType",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.relation.RelationTypeSupport"
        ],
        "Method": [
            {
                "getRelationTypeName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRoleInfos": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRoleInfo": {
                    "Parameter": {
                        "roleInfoName": "String"
                    },
                    "Throw": "javax.management.relation.RoleInfoNotFoundException"
                }
            }
        ]
    },
    "667": {
        "Package": "javax.management.remote",
        "Interface": "JMXAddressable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.remote.JMXConnectorServer",
            "javax.management.remote.rmi.RMIConnector",
            "javax.management.remote.rmi.RMIConnectorServer"
        ],
        "Method": [
            {
                "getAddress": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "668": {
        "Package": "javax.management.remote",
        "Interface": "JMXAuthenticator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "authenticate": {
                    "Parameter": {
                        "credentials": "Object"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "669": {
        "Package": "javax.management.remote",
        "Interface": "JMXConnector",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.remote.rmi.RMIConnector"
        ],
        "Method": [
            {
                "connect": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "connect": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getMBeanServerConnection": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getMBeanServerConnection": {
                    "Parameter": {
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "addConnectionNotificationListener": {
                    "Parameter": {
                        "listener": "NotificationListener",
                        "filter": "NotificationFilter",
                        "handback": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "removeConnectionNotificationListener": {
                    "Parameter": {
                        "listener": "NotificationListener"
                    },
                    "Throw": "javax.management.ListenerNotFoundException"
                }
            },
            {
                "removeConnectionNotificationListener": {
                    "Parameter": {
                        "l": "NotificationListener",
                        "f": "NotificationFilter",
                        "handback": "Object"
                    },
                    "Throw": "javax.management.ListenerNotFoundException"
                }
            },
            {
                "getConnectionId": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "670": {
        "Package": "javax.management.remote",
        "Interface": "JMXConnectorProvider",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "newJMXConnector": {
                    "Parameter": {
                        "serviceURL": "JMXServiceURL",
                        "": "Map"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "671": {
        "Package": "javax.management.remote",
        "Interface": "JMXConnectorServerMBean",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.remote.JMXConnectorServer",
            "javax.management.remote.rmi.RMIConnectorServer"
        ],
        "Method": [
            {
                "start": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "stop": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "isActive": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMBeanServerForwarder": {
                    "Parameter": {
                        "mbsf": "MBeanServerForwarder"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getConnectionIds": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAddress": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toJMXConnector": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "672": {
        "Package": "javax.management.remote",
        "Interface": "JMXConnectorServerProvider",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "newJMXConnectorServer": {
                    "Parameter": {
                        "serviceURL": "JMXServiceURL",
                        "": "Map",
                        "mbeanServer": "MBeanServer"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "673": {
        "Package": "javax.management.remote",
        "Interface": "MBeanServerForwarder",
        "Superinterface": [
            "javax.management.MBeanServer",
            "javax.management.MBeanServerConnection"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getMBeanServer": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMBeanServer": {
                    "Parameter": {
                        "mbs": "MBeanServer"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "674": {
        "Package": "javax.management.timer",
        "Interface": "TimerMBean",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.timer.Timer"
        ],
        "Method": [
            {
                "start": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "stop": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addNotification": {
                    "Parameter": {
                        "type": "String",
                        "message": "String",
                        "userData": "Object",
                        "date": "Date",
                        "period": "long",
                        "nbOccurences": "long",
                        "fixedRate": "boolean"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "addNotification": {
                    "Parameter": {
                        "type": "String",
                        "message": "String",
                        "userData": "Object",
                        "date": "Date",
                        "period": "long",
                        "nbOccurences": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "addNotification": {
                    "Parameter": {
                        "type": "String",
                        "message": "String",
                        "userData": "Object",
                        "date": "Date",
                        "period": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "addNotification": {
                    "Parameter": {
                        "type": "String",
                        "message": "String",
                        "userData": "Object",
                        "date": "Date"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "removeNotification": {
                    "Parameter": {
                        "id": "Integer"
                    },
                    "Throw": "javax.management.InstanceNotFoundException"
                }
            },
            {
                "removeNotifications": {
                    "Parameter": {
                        "type": "String"
                    },
                    "Throw": "javax.management.InstanceNotFoundException"
                }
            },
            {
                "removeAllNotifications": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNbNotifications": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAllNotificationIDs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNotificationIDs": {
                    "Parameter": {
                        "type": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getNotificationType": {
                    "Parameter": {
                        "id": "Integer"
                    },
                    "Throw": []
                }
            },
            {
                "getNotificationMessage": {
                    "Parameter": {
                        "id": "Integer"
                    },
                    "Throw": []
                }
            },
            {
                "getNotificationUserData": {
                    "Parameter": {
                        "id": "Integer"
                    },
                    "Throw": []
                }
            },
            {
                "getDate": {
                    "Parameter": {
                        "id": "Integer"
                    },
                    "Throw": []
                }
            },
            {
                "getPeriod": {
                    "Parameter": {
                        "id": "Integer"
                    },
                    "Throw": []
                }
            },
            {
                "getNbOccurences": {
                    "Parameter": {
                        "id": "Integer"
                    },
                    "Throw": []
                }
            },
            {
                "getFixedRate": {
                    "Parameter": {
                        "id": "Integer"
                    },
                    "Throw": []
                }
            },
            {
                "getSendPastNotifications": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSendPastNotifications": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "isActive": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEmpty": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "675": {
        "Package": "javax.management.remote.rmi",
        "Interface": "RMIConnection",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.io.Closeable",
            "java.rmi.Remote"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.remote.rmi.RMIConnectionImpl",
            "javax.management.remote.rmi.RMIConnectionImpl_Stub"
        ],
        "Method": [
            {
                "getConnectionId": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "createMBean": {
                    "Parameter": {
                        "className": "String",
                        "name": "ObjectName",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "createMBean": {
                    "Parameter": {
                        "className": "String",
                        "name": "ObjectName",
                        "loaderName": "ObjectName",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "createMBean": {
                    "Parameter": {
                        "className": "String",
                        "name": "ObjectName",
                        "params": "MarshalledObject",
                        "signature": "String",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "createMBean": {
                    "Parameter": {
                        "className": "String",
                        "name": "ObjectName",
                        "loaderName": "ObjectName",
                        "params": "MarshalledObject",
                        "signature": "String",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "unregisterMBean": {
                    "Parameter": {
                        "name": "ObjectName",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getObjectInstance": {
                    "Parameter": {
                        "name": "ObjectName",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "queryMBeans": {
                    "Parameter": {
                        "name": "ObjectName",
                        "query": "MarshalledObject",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "queryNames": {
                    "Parameter": {
                        "name": "ObjectName",
                        "query": "MarshalledObject",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "isRegistered": {
                    "Parameter": {
                        "name": "ObjectName",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getMBeanCount": {
                    "Parameter": {
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getAttribute": {
                    "Parameter": {
                        "name": "ObjectName",
                        "attribute": "String",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getAttributes": {
                    "Parameter": {
                        "name": "ObjectName",
                        "attributes": "String",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "setAttribute": {
                    "Parameter": {
                        "name": "ObjectName",
                        "attribute": "MarshalledObject",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "setAttributes": {
                    "Parameter": {
                        "name": "ObjectName",
                        "attributes": "MarshalledObject",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "invoke": {
                    "Parameter": {
                        "name": "ObjectName",
                        "operationName": "String",
                        "params": "MarshalledObject",
                        "signature": "String",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "getDefaultDomain": {
                    "Parameter": {
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getDomains": {
                    "Parameter": {
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getMBeanInfo": {
                    "Parameter": {
                        "name": "ObjectName",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "isInstanceOf": {
                    "Parameter": {
                        "name": "ObjectName",
                        "className": "String",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "addNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "ObjectName",
                        "filter": "MarshalledObject",
                        "handback": "MarshalledObject",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "removeNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "ObjectName",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "removeNotificationListener": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listener": "ObjectName",
                        "filter": "MarshalledObject",
                        "handback": "MarshalledObject",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "javax.management.RuntimeOperationsException"
                }
            },
            {
                "addNotificationListeners": {
                    "Parameter": {
                        "names": "ObjectName",
                        "filters": "MarshalledObject",
                        "delegationSubjects": "Subject"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "removeNotificationListeners": {
                    "Parameter": {
                        "name": "ObjectName",
                        "listenerIDs": "Integer",
                        "delegationSubject": "Subject"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "fetchNotifications": {
                    "Parameter": {
                        "clientSequenceNumber": "long",
                        "maxNotifications": "int",
                        "timeout": "long"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "676": {
        "Package": "javax.management.remote.rmi",
        "Interface": "RMIServer",
        "Superinterface": [
            "java.rmi.Remote"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.remote.rmi.RMIIIOPServerImpl",
            "javax.management.remote.rmi.RMIJRMPServerImpl",
            "javax.management.remote.rmi.RMIServerImpl",
            "javax.management.remote.rmi.RMIServerImpl_Stub"
        ],
        "Method": [
            {
                "getVersion": {
                    "Parameter": {},
                    "Throw": "java.rmi.RemoteException"
                }
            },
            {
                "newClient": {
                    "Parameter": {
                        "credentials": "Object"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "677": {
        "Package": "javax.naming",
        "Interface": "Context",
        "Superinterface": null,
        "Implementing Class": [
            "javax.naming.directory.DirContext",
            "javax.naming.event.EventContext",
            "javax.naming.event.EventDirContext",
            "javax.naming.ldap.LdapContext"
        ],
        "Subinterface": [
            "javax.naming.InitialContext",
            "javax.naming.directory.InitialDirContext",
            "javax.naming.ldap.InitialLdapContext"
        ],
        "Method": [
            {
                "lookup": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "lookup": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "bind": {
                    "Parameter": {
                        "name": "Name",
                        "obj": "Object"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "bind": {
                    "Parameter": {
                        "name": "String",
                        "obj": "Object"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "rebind": {
                    "Parameter": {
                        "name": "Name",
                        "obj": "Object"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "rebind": {
                    "Parameter": {
                        "name": "String",
                        "obj": "Object"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "unbind": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "unbind": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "rename": {
                    "Parameter": {
                        "oldName": "Name",
                        "newName": "Name"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "rename": {
                    "Parameter": {
                        "oldName": "String",
                        "newName": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "list": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "list": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "listBindings": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "listBindings": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "destroySubcontext": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "destroySubcontext": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "createSubcontext": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "createSubcontext": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "lookupLink": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "lookupLink": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getNameParser": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getNameParser": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "composeName": {
                    "Parameter": {
                        "name": "Name",
                        "prefix": "Name"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "composeName": {
                    "Parameter": {
                        "name": "String",
                        "prefix": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "addToEnvironment": {
                    "Parameter": {
                        "propName": "String",
                        "propVal": "Object"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "removeFromEnvironment": {
                    "Parameter": {
                        "propName": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getEnvironment": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getNameInNamespace": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "678": {
        "Package": "javax.naming",
        "Interface": "Name",
        "Superinterface": [
            "java.lang.Cloneable",
            "java.lang.Comparable",
            "java.io.Object"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.naming.CompositeName",
            "javax.naming.CompoundName",
            "javax.naming.ldap.LdapName"
        ],
        "Method": [
            {
                "clone": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "compareTo": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": "java.lang.ClassCastException"
                }
            },
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEmpty": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAll": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "get": {
                    "Parameter": {
                        "posn": "int"
                    },
                    "Throw": "java.lang.ArrayIndexOutOfBoundsException"
                }
            },
            {
                "getPrefix": {
                    "Parameter": {
                        "posn": "int"
                    },
                    "Throw": "java.lang.ArrayIndexOutOfBoundsException"
                }
            },
            {
                "getSuffix": {
                    "Parameter": {
                        "posn": "int"
                    },
                    "Throw": "java.lang.ArrayIndexOutOfBoundsException"
                }
            },
            {
                "startsWith": {
                    "Parameter": {
                        "n": "Name"
                    },
                    "Throw": []
                }
            },
            {
                "endsWith": {
                    "Parameter": {
                        "n": "Name"
                    },
                    "Throw": []
                }
            },
            {
                "addAll": {
                    "Parameter": {
                        "suffix": "Name"
                    },
                    "Throw": "javax.naming.InvalidNameException"
                }
            },
            {
                "addAll": {
                    "Parameter": {
                        "posn": "int",
                        "n": "Name"
                    },
                    "Throw": "javax.naming.InvalidNameException"
                }
            },
            {
                "add": {
                    "Parameter": {
                        "comp": "String"
                    },
                    "Throw": "javax.naming.InvalidNameException"
                }
            },
            {
                "add": {
                    "Parameter": {
                        "posn": "int",
                        "comp": "String"
                    },
                    "Throw": "javax.naming.InvalidNameException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "posn": "int"
                    },
                    "Throw": "javax.naming.InvalidNameException"
                }
            }
        ]
    },
    "679": {
        "Package": "javax.naming",
        "Interface": "NameParser",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "parse": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "680": {
        "Package": "javax.naming",
        "Interface": "NamingEnumeration",
        "Superinterface": [
            "java.util.Enumeration"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "next": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "hasMore": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "681": {
        "Package": "javax.naming",
        "Interface": "Referenceable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getReference": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "682": {
        "Package": "javax.naming.directory",
        "Interface": "Attribute",
        "Superinterface": [
            "java.lang.Cloneable",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.naming.directory.BasicAttribute"
        ],
        "Method": [
            {
                "getAll": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "get": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getID": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "attrVal": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "add": {
                    "Parameter": {
                        "attrVal": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "attrval": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "clear": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttributeSyntaxDefinition": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getAttributeDefinition": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "clone": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isOrdered": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "get": {
                    "Parameter": {
                        "ix": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "ix": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "add": {
                    "Parameter": {
                        "ix": "int",
                        "attrVal": "Object"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "ix": "int",
                        "attrVal": "Object"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            }
        ]
    },
    "683": {
        "Package": "javax.naming.directory",
        "Interface": "Attributes",
        "Superinterface": [
            "java.lang.Cloneable",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.naming.directory.BasicAttributes"
        ],
        "Method": [
            {
                "isCaseIgnored": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "get": {
                    "Parameter": {
                        "attrID": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAll": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIDs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "put": {
                    "Parameter": {
                        "attrID": "String",
                        "val": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "put": {
                    "Parameter": {
                        "attr": "Attribute"
                    },
                    "Throw": []
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "attrID": "String"
                    },
                    "Throw": []
                }
            },
            {
                "clone": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "684": {
        "Package": "javax.naming.directory",
        "Interface": "DirContext",
        "Superinterface": [
            "javax.naming.Context"
        ],
        "Implementing Class": [
            "javax.naming.event.EventDirContext",
            "javax.naming.ldap.LdapContext"
        ],
        "Subinterface": [
            "javax.naming.directory.InitialDirContext",
            "javax.naming.ldap.InitialLdapContext"
        ],
        "Method": [
            {
                "getAttributes": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getAttributes": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getAttributes": {
                    "Parameter": {
                        "name": "Name",
                        "attrIds": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getAttributes": {
                    "Parameter": {
                        "name": "String",
                        "attrIds": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "modifyAttributes": {
                    "Parameter": {
                        "name": "Name",
                        "modop": "int",
                        "attrs": "Attributes"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "modifyAttributes": {
                    "Parameter": {
                        "name": "String",
                        "modop": "int",
                        "attrs": "Attributes"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "modifyAttributes": {
                    "Parameter": {
                        "name": "Name",
                        "mods": "ModificationItem"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "modifyAttributes": {
                    "Parameter": {
                        "name": "String",
                        "mods": "ModificationItem"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "bind": {
                    "Parameter": {
                        "name": "Name",
                        "obj": "Object",
                        "attrs": "Attributes"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "bind": {
                    "Parameter": {
                        "name": "String",
                        "obj": "Object",
                        "attrs": "Attributes"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "rebind": {
                    "Parameter": {
                        "name": "Name",
                        "obj": "Object",
                        "attrs": "Attributes"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "rebind": {
                    "Parameter": {
                        "name": "String",
                        "obj": "Object",
                        "attrs": "Attributes"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "createSubcontext": {
                    "Parameter": {
                        "name": "Name",
                        "attrs": "Attributes"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "createSubcontext": {
                    "Parameter": {
                        "name": "String",
                        "attrs": "Attributes"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getSchema": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getSchema": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getSchemaClassDefinition": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getSchemaClassDefinition": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "search": {
                    "Parameter": {
                        "name": "Name",
                        "matchingAttributes": "Attributes",
                        "attributesToReturn": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "search": {
                    "Parameter": {
                        "name": "String",
                        "matchingAttributes": "Attributes",
                        "attributesToReturn": "String"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "search": {
                    "Parameter": {
                        "name": "Name",
                        "matchingAttributes": "Attributes"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "search": {
                    "Parameter": {
                        "name": "String",
                        "matchingAttributes": "Attributes"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "search": {
                    "Parameter": {
                        "name": "Name",
                        "filter": "String",
                        "cons": "SearchControls"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "search": {
                    "Parameter": {
                        "name": "String",
                        "filter": "String",
                        "cons": "SearchControls"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "search": {
                    "Parameter": {
                        "name": "Name",
                        "filterExpr": "String",
                        "filterArgs": "Object",
                        "cons": "SearchControls"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "search": {
                    "Parameter": {
                        "name": "String",
                        "filterExpr": "String",
                        "filterArgs": "Object",
                        "cons": "SearchControls"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "685": {
        "Package": "javax.naming.event",
        "Interface": "EventContext",
        "Superinterface": [
            "javax.naming.Context"
        ],
        "Implementing Class": [
            "javax.naming.event.EventDirContext"
        ],
        "Subinterface": null,
        "Method": [
            {
                "addNamingListener": {
                    "Parameter": {
                        "target": "Name",
                        "scope": "int",
                        "l": "NamingListener"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "addNamingListener": {
                    "Parameter": {
                        "target": "String",
                        "scope": "int",
                        "l": "NamingListener"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "removeNamingListener": {
                    "Parameter": {
                        "l": "NamingListener"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "targetMustExist": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "686": {
        "Package": "javax.naming.event",
        "Interface": "EventDirContext",
        "Superinterface": [
            "javax.naming.Context",
            "javax.naming.directory.DirContext",
            "javax.naming.event.EventContext"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addNamingListener": {
                    "Parameter": {
                        "target": "Name",
                        "filter": "String",
                        "ctls": "SearchControls",
                        "l": "NamingListener"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "addNamingListener": {
                    "Parameter": {
                        "target": "String",
                        "filter": "String",
                        "ctls": "SearchControls",
                        "l": "NamingListener"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "addNamingListener": {
                    "Parameter": {
                        "target": "Name",
                        "filter": "String",
                        "filterArgs": "Object",
                        "ctls": "SearchControls",
                        "l": "NamingListener"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "addNamingListener": {
                    "Parameter": {
                        "target": "String",
                        "filter": "String",
                        "filterArgs": "Object",
                        "ctls": "SearchControls",
                        "l": "NamingListener"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "687": {
        "Package": "javax.naming.event",
        "Interface": "NamespaceChangeListener",
        "Superinterface": [
            "java.util.EventListener",
            "javax.naming.event.NamingListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "objectAdded": {
                    "Parameter": {
                        "evt": "NamingEvent"
                    },
                    "Throw": []
                }
            },
            {
                "objectRemoved": {
                    "Parameter": {
                        "evt": "NamingEvent"
                    },
                    "Throw": []
                }
            },
            {
                "objectRenamed": {
                    "Parameter": {
                        "evt": "NamingEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "688": {
        "Package": "javax.naming.event",
        "Interface": "NamingListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": [
            "javax.naming.event.NamespaceChangeListener",
            "javax.naming.event.ObjectChangeListener",
            "javax.naming.ldap.UnsolicitedNotificationListener"
        ],
        "Subinterface": null,
        "Method": [
            {
                "namingExceptionThrown": {
                    "Parameter": {
                        "evt": "NamingExceptionEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "689": {
        "Package": "javax.naming.event",
        "Interface": "ObjectChangeListener",
        "Superinterface": [
            "java.util.EventListener",
            "javax.naming.event.NamingListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "objectChanged": {
                    "Parameter": {
                        "evt": "NamingEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "690": {
        "Package": "javax.naming.ldap",
        "Interface": "Control",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.naming.ldap.BasicControl",
            "javax.naming.ldap.ManageReferralControl",
            "javax.naming.ldap.PagedResultsControl",
            "javax.naming.ldap.PagedResultsResponseControl",
            "javax.naming.ldap.SortControl",
            "javax.naming.ldap.SortResponseControl"
        ],
        "Method": [
            {
                "getID": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCritical": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEncodedValue": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "691": {
        "Package": "javax.naming.ldap",
        "Interface": "ExtendedRequest",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.naming.ldap.StartTlsRequest"
        ],
        "Method": [
            {
                "getID": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEncodedValue": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "createExtendedResponse": {
                    "Parameter": {
                        "id": "String",
                        "berValue": "byte",
                        "offset": "int",
                        "length": "int"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "692": {
        "Package": "javax.naming.ldap",
        "Interface": "ExtendedResponse",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "javax.naming.ldap.UnsolicitedNotification"
        ],
        "Subinterface": [
            "javax.naming.ldap.StartTlsResponse"
        ],
        "Method": [
            {
                "getID": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEncodedValue": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "693": {
        "Package": "javax.naming.ldap",
        "Interface": "HasControls",
        "Superinterface": null,
        "Implementing Class": [
            "javax.naming.ldap.UnsolicitedNotification"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getControls": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "694": {
        "Package": "javax.naming.ldap",
        "Interface": "LdapContext",
        "Superinterface": [
            "javax.naming.Context",
            "javax.naming.directory.DirContext"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.naming.ldap.InitialLdapContext"
        ],
        "Method": [
            {
                "extendedOperation": {
                    "Parameter": {
                        "request": "ExtendedRequest"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "newInstance": {
                    "Parameter": {
                        "requestControls": "Control"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "reconnect": {
                    "Parameter": {
                        "connCtls": "Control"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getConnectControls": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "setRequestControls": {
                    "Parameter": {
                        "requestControls": "Control"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getRequestControls": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "getResponseControls": {
                    "Parameter": {},
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "695": {
        "Package": "javax.naming.ldap",
        "Interface": "UnsolicitedNotification",
        "Superinterface": [
            "javax.naming.ldap.ExtendedResponse",
            "javax.naming.ldap.HasControls",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getReferrals": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getException": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "696": {
        "Package": "javax.naming.ldap",
        "Interface": "UnsolicitedNotificationListener",
        "Superinterface": [
            "java.util.EventListener",
            "javax.naming.event.NamingListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "notificationReceived": {
                    "Parameter": {
                        "evt": "UnsolicitedNotificationEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "697": {
        "Package": "javax.naming.spi",
        "Interface": "DirObjectFactory",
        "Superinterface": [
            "javax.naming.spi.ObjectFactory"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getObjectInstance": {
                    "Parameter": {
                        "obj": "Object",
                        "name": "Name",
                        "nameCtx": "Context",
                        "": "Hashtable",
                        "attrs": "Attributes"
                    },
                    "Throw": "java.lang.Exception"
                }
            }
        ]
    },
    "698": {
        "Package": "javax.naming.spi",
        "Interface": "DirStateFactory",
        "Superinterface": [
            "javax.naming.spi.StateFactory"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getStateToBind": {
                    "Parameter": {
                        "obj": "Object",
                        "name": "Name",
                        "nameCtx": "Context",
                        "": "Hashtable",
                        "inAttrs": "Attributes"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "699": {
        "Package": "javax.naming.spi",
        "Interface": "InitialContextFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getInitialContext": {
                    "Parameter": {
                        "": "Hashtable"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "700": {
        "Package": "javax.naming.spi",
        "Interface": "InitialContextFactoryBuilder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createInitialContextFactory": {
                    "Parameter": {
                        "": "Hashtable"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "701": {
        "Package": "javax.naming.spi",
        "Interface": "ObjectFactory",
        "Superinterface": null,
        "Implementing Class": [
            "javax.naming.spi.DirObjectFactory"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getObjectInstance": {
                    "Parameter": {
                        "obj": "Object",
                        "name": "Name",
                        "nameCtx": "Context",
                        "": "Hashtable"
                    },
                    "Throw": "java.lang.Exception"
                }
            }
        ]
    },
    "702": {
        "Package": "javax.naming.spi",
        "Interface": "ObjectFactoryBuilder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createObjectFactory": {
                    "Parameter": {
                        "obj": "Object",
                        "": "Hashtable"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "703": {
        "Package": "javax.naming.spi",
        "Interface": "Resolver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "resolveToClass": {
                    "Parameter": {
                        "name": "Name",
                        "extends": "Class"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            },
            {
                "resolveToClass": {
                    "Parameter": {
                        "name": "String",
                        "extends": "Class"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "704": {
        "Package": "javax.naming.spi",
        "Interface": "StateFactory",
        "Superinterface": null,
        "Implementing Class": [
            "javax.naming.spi.DirStateFactory"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getStateToBind": {
                    "Parameter": {
                        "obj": "Object",
                        "name": "Name",
                        "nameCtx": "Context",
                        "": "Hashtable"
                    },
                    "Throw": "javax.naming.NamingException"
                }
            }
        ]
    },
    "705": {
        "Package": "java.net.http",
        "Interface": "HttpClient.Builder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "cookieHandler": {
                    "Parameter": {
                        "cookieHandler": "CookieHandler"
                    },
                    "Throw": []
                }
            },
            {
                "connectTimeout": {
                    "Parameter": {
                        "duration": "Duration"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "sslContext": {
                    "Parameter": {
                        "sslContext": "SSLContext"
                    },
                    "Throw": []
                }
            },
            {
                "sslParameters": {
                    "Parameter": {
                        "sslParameters": "SSLParameters"
                    },
                    "Throw": []
                }
            },
            {
                "executor": {
                    "Parameter": {
                        "executor": "Executor"
                    },
                    "Throw": []
                }
            },
            {
                "followRedirects": {
                    "Parameter": {
                        "policy": "HttpClient.Redirect"
                    },
                    "Throw": []
                }
            },
            {
                "version": {
                    "Parameter": {
                        "version": "HttpClient.Version"
                    },
                    "Throw": []
                }
            },
            {
                "priority": {
                    "Parameter": {
                        "priority": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "proxy": {
                    "Parameter": {
                        "proxySelector": "ProxySelector"
                    },
                    "Throw": []
                }
            },
            {
                "authenticator": {
                    "Parameter": {
                        "authenticator": "Authenticator"
                    },
                    "Throw": []
                }
            },
            {
                "build": {
                    "Parameter": {},
                    "Throw": "java.io.UncheckedIOException"
                }
            }
        ]
    },
    "706": {
        "Package": "java.net.http",
        "Interface": "HttpRequest.BodyPublisher",
        "Superinterface": [
            "java.util.concurrent.Flow.Publisher"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "contentLength": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "707": {
        "Package": "java.net.http",
        "Interface": "HttpRequest.Builder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "uri": {
                    "Parameter": {
                        "uri": "URI"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "expectContinue": {
                    "Parameter": {
                        "enable": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "version": {
                    "Parameter": {
                        "version": "HttpClient.Version"
                    },
                    "Throw": []
                }
            },
            {
                "header": {
                    "Parameter": {
                        "name": "String",
                        "value": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "headers": {
                    "Parameter": {
                        "headers": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "timeout": {
                    "Parameter": {
                        "duration": "Duration"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "setHeader": {
                    "Parameter": {
                        "name": "String",
                        "value": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "GET": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "POST": {
                    "Parameter": {
                        "bodyPublisher": "HttpRequest.BodyPublisher"
                    },
                    "Throw": []
                }
            },
            {
                "PUT": {
                    "Parameter": {
                        "bodyPublisher": "HttpRequest.BodyPublisher"
                    },
                    "Throw": []
                }
            },
            {
                "DELETE": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "HEAD": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "method": {
                    "Parameter": {
                        "method": "String",
                        "bodyPublisher": "HttpRequest.BodyPublisher"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "build": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "copy": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "708": {
        "Package": "java.net.http",
        "Interface": "HttpResponse.BodyHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "apply": {
                    "Parameter": {
                        "responseInfo": "HttpResponse.ResponseInfo"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "709": {
        "Package": "java.net.http",
        "Interface": "HttpResponse.BodySubscriber",
        "Superinterface": [
            "java.util.concurrent.Flow.Subscriber",
            "java.util.List"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "710": {
        "Package": "java.net.http",
        "Interface": "HttpResponse",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "statusCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "request": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "previousResponse": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "headers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "body": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "sslSession": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "uri": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "version": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "711": {
        "Package": "java.net.http",
        "Interface": "HttpResponse.PushPromiseHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "applyPushPromise": {
                    "Parameter": {
                        "initiatingRequest": "HttpRequest",
                        "pushPromiseRequest": "HttpRequest",
                        "": "Function"
                    },
                    "Throw": []
                }
            },
            {
                "of": {
                    "Parameter": {
                        "": "ConcurrentMap"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "712": {
        "Package": "java.net.http",
        "Interface": "HttpResponse.ResponseInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "statusCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "headers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "version": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "713": {
        "Package": "java.net.http",
        "Interface": "WebSocket.Builder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "header": {
                    "Parameter": {
                        "name": "String",
                        "value": "String"
                    },
                    "Throw": []
                }
            },
            {
                "connectTimeout": {
                    "Parameter": {
                        "timeout": "Duration"
                    },
                    "Throw": []
                }
            },
            {
                "subprotocols": {
                    "Parameter": {
                        "mostPreferred": "String",
                        "lesserPreferred": "String"
                    },
                    "Throw": []
                }
            },
            {
                "buildAsync": {
                    "Parameter": {
                        "uri": "URI",
                        "listener": "WebSocket.Listener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "714": {
        "Package": "java.net.http",
        "Interface": "WebSocket",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "sendText": {
                    "Parameter": {
                        "data": "CharSequence",
                        "last": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "sendBinary": {
                    "Parameter": {
                        "data": "ByteBuffer",
                        "last": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "sendPing": {
                    "Parameter": {
                        "message": "ByteBuffer"
                    },
                    "Throw": []
                }
            },
            {
                "sendPong": {
                    "Parameter": {
                        "message": "ByteBuffer"
                    },
                    "Throw": []
                }
            },
            {
                "sendClose": {
                    "Parameter": {
                        "statusCode": "int",
                        "reason": "String"
                    },
                    "Throw": []
                }
            },
            {
                "request": {
                    "Parameter": {
                        "n": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getSubprotocol": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isOutputClosed": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isInputClosed": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "abort": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "715": {
        "Package": "java.net.http",
        "Interface": "WebSocket.Listener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "onOpen": {
                    "Parameter": {
                        "webSocket": "WebSocket"
                    },
                    "Throw": []
                }
            },
            {
                "onText": {
                    "Parameter": {
                        "webSocket": "WebSocket",
                        "data": "CharSequence",
                        "last": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "onBinary": {
                    "Parameter": {
                        "webSocket": "WebSocket",
                        "data": "ByteBuffer",
                        "last": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "onPing": {
                    "Parameter": {
                        "webSocket": "WebSocket",
                        "message": "ByteBuffer"
                    },
                    "Throw": []
                }
            },
            {
                "onPong": {
                    "Parameter": {
                        "webSocket": "WebSocket",
                        "message": "ByteBuffer"
                    },
                    "Throw": []
                }
            },
            {
                "onClose": {
                    "Parameter": {
                        "webSocket": "WebSocket",
                        "statusCode": "int",
                        "reason": "String"
                    },
                    "Throw": []
                }
            },
            {
                "onError": {
                    "Parameter": {
                        "webSocket": "WebSocket",
                        "error": "Throwable"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "716": {
        "Package": "java.util.prefs",
        "Interface": "NodeChangeListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "childAdded": {
                    "Parameter": {
                        "evt": "NodeChangeEvent"
                    },
                    "Throw": []
                }
            },
            {
                "childRemoved": {
                    "Parameter": {
                        "evt": "NodeChangeEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "717": {
        "Package": "java.util.prefs",
        "Interface": "PreferenceChangeListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "preferenceChange": {
                    "Parameter": {
                        "evt": "PreferenceChangeEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "718": {
        "Package": "java.util.prefs",
        "Interface": "PreferencesFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "systemRoot": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "userRoot": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "719": {
        "Package": "java.rmi.dgc",
        "Interface": "DGC",
        "Superinterface": [
            "java.rmi.Remote"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "dirty": {
                    "Parameter": {
                        "ids": "ObjID",
                        "sequenceNum": "long",
                        "lease": "Lease"
                    },
                    "Throw": "java.rmi.RemoteException"
                }
            },
            {
                "clean": {
                    "Parameter": {
                        "ids": "ObjID",
                        "sequenceNum": "long",
                        "vmid": "VMID",
                        "strong": "boolean"
                    },
                    "Throw": "java.rmi.RemoteException"
                }
            }
        ]
    },
    "720": {
        "Package": "java.rmi.registry",
        "Interface": "Registry",
        "Superinterface": [
            "java.rmi.Remote"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "lookup": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "bind": {
                    "Parameter": {
                        "name": "String",
                        "obj": "Remote"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "unbind": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "rebind": {
                    "Parameter": {
                        "name": "String",
                        "obj": "Remote"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "list": {
                    "Parameter": {},
                    "Throw": "java.rmi.AccessException"
                }
            }
        ]
    },
    "721": {
        "Package": "java.rmi.registry",
        "Interface": "RegistryHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "registryStub": {
                    "Parameter": {
                        "host": "String",
                        "port": "int"
                    },
                    "Throw": "java.rmi.UnknownHostException"
                }
            },
            {
                "registryImpl": {
                    "Parameter": {
                        "port": "int"
                    },
                    "Throw": "java.rmi.RemoteException"
                }
            }
        ]
    },
    "722": {
        "Package": "java.rmi.server",
        "Interface": "LoaderHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "loadClass": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.ClassNotFoundException"
                }
            },
            {
                "loadClass": {
                    "Parameter": {
                        "codebase": "URL",
                        "name": "String"
                    },
                    "Throw": "java.lang.ClassNotFoundException"
                }
            },
            {
                "getSecurityContext": {
                    "Parameter": {
                        "loader": "ClassLoader"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "723": {
        "Package": "java.rmi.server",
        "Interface": "RemoteCall",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getOutputStream": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "releaseOutputStream": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getInputStream": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "releaseInputStream": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            },
            {
                "getResultStream": {
                    "Parameter": {
                        "success": "boolean"
                    },
                    "Throw": "java.io.StreamCorruptedException"
                }
            },
            {
                "executeCall": {
                    "Parameter": {},
                    "Throw": "java.lang.Exception"
                }
            },
            {
                "done": {
                    "Parameter": {},
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "724": {
        "Package": "java.rmi.server",
        "Interface": "RemoteRef",
        "Superinterface": [
            "java.io.Externalizable",
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "java.rmi.server.ServerRef"
        ],
        "Subinterface": null,
        "Method": [
            {
                "invoke": {
                    "Parameter": {
                        "obj": "Remote",
                        "method": "Method",
                        "params": "Object",
                        "opnum": "long"
                    },
                    "Throw": "java.lang.Exception"
                }
            },
            {
                "newCall": {
                    "Parameter": {
                        "obj": "RemoteObject",
                        "op": "Operation",
                        "opnum": "int",
                        "hash": "long"
                    },
                    "Throw": "java.rmi.RemoteException"
                }
            },
            {
                "invoke": {
                    "Parameter": {
                        "call": "RemoteCall"
                    },
                    "Throw": "java.lang.Exception"
                }
            },
            {
                "done": {
                    "Parameter": {
                        "call": "RemoteCall"
                    },
                    "Throw": "java.rmi.RemoteException"
                }
            },
            {
                "getRefClass": {
                    "Parameter": {
                        "out": "ObjectOutput"
                    },
                    "Throw": []
                }
            },
            {
                "remoteHashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "remoteEquals": {
                    "Parameter": {
                        "obj": "RemoteRef"
                    },
                    "Throw": []
                }
            },
            {
                "remoteToString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "725": {
        "Package": "java.rmi.server",
        "Interface": "RMIClientSocketFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.rmi.server.RMISocketFactory",
            "javax.rmi.ssl.SslRMIClientSocketFactory"
        ],
        "Method": [
            {
                "createSocket": {
                    "Parameter": {
                        "host": "String",
                        "port": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "726": {
        "Package": "java.rmi.server",
        "Interface": "RMIFailureHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "failure": {
                    "Parameter": {
                        "ex": "Exception"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "727": {
        "Package": "java.rmi.server",
        "Interface": "RMIServerSocketFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "java.rmi.server.RMISocketFactory",
            "javax.rmi.ssl.SslRMIServerSocketFactory"
        ],
        "Method": [
            {
                "createServerSocket": {
                    "Parameter": {
                        "port": "int"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "728": {
        "Package": "java.rmi.server",
        "Interface": "ServerRef",
        "Superinterface": [
            "java.io.Externalizable",
            "java.rmi.server.RemoteRef",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "exportObject": {
                    "Parameter": {
                        "obj": "Remote",
                        "data": "Object"
                    },
                    "Throw": "java.rmi.RemoteException"
                }
            },
            {
                "getClientHost": {
                    "Parameter": {},
                    "Throw": "java.rmi.server.ServerNotActiveException"
                }
            }
        ]
    },
    "729": {
        "Package": "java.rmi.server",
        "Interface": "Skeleton",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "dispatch": {
                    "Parameter": {
                        "obj": "Remote",
                        "theCall": "RemoteCall",
                        "opnum": "int",
                        "hash": "long"
                    },
                    "Throw": "java.lang.Exception"
                }
            },
            {
                "getOperations": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "730": {
        "Package": "java.rmi.server",
        "Interface": "Unreferenced",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.management.remote.rmi.RMIConnectionImpl"
        ],
        "Method": [
            {
                "unreferenced": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "731": {
        "Package": "javax.script",
        "Interface": "Bindings",
        "Superinterface": [
            "java.util.Map"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.script.SimpleBindings"
        ],
        "Method": [
            {
                "put": {
                    "Parameter": {
                        "name": "String",
                        "value": "Object"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "putAll": {
                    "Parameter": {
                        "extends": "Map"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "containsKey": {
                    "Parameter": {
                        "key": "Object"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "key": "Object"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "key": "Object"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "732": {
        "Package": "javax.script",
        "Interface": "Compilable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "compile": {
                    "Parameter": {
                        "script": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "compile": {
                    "Parameter": {
                        "script": "Reader"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "733": {
        "Package": "javax.script",
        "Interface": "Invocable",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "invokeMethod": {
                    "Parameter": {
                        "thiz": "Object",
                        "name": "String",
                        "args": "Object"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "invokeFunction": {
                    "Parameter": {
                        "name": "String",
                        "args": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getInterface": {
                    "Parameter": {
                        "Tclasz": "Class"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getInterface": {
                    "Parameter": {
                        "thiz": "Object",
                        "Tclasz": "Class"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "734": {
        "Package": "javax.script",
        "Interface": "ScriptContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.script.SimpleScriptContext"
        ],
        "Method": [
            {
                "setBindings": {
                    "Parameter": {
                        "bindings": "Bindings",
                        "scope": "int"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getBindings": {
                    "Parameter": {
                        "scope": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "setAttribute": {
                    "Parameter": {
                        "name": "String",
                        "value": "Object",
                        "scope": "int"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getAttribute": {
                    "Parameter": {
                        "name": "String",
                        "scope": "int"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "removeAttribute": {
                    "Parameter": {
                        "name": "String",
                        "scope": "int"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getAttribute": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getAttributesScope": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getWriter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getErrorWriter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWriter": {
                    "Parameter": {
                        "writer": "Writer"
                    },
                    "Throw": []
                }
            },
            {
                "setErrorWriter": {
                    "Parameter": {
                        "writer": "Writer"
                    },
                    "Throw": []
                }
            },
            {
                "getReader": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setReader": {
                    "Parameter": {
                        "reader": "Reader"
                    },
                    "Throw": []
                }
            },
            {
                "getScopes": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "735": {
        "Package": "javax.script",
        "Interface": "ScriptEngine",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.script.AbstractScriptEngine"
        ],
        "Method": [
            {
                "eval": {
                    "Parameter": {
                        "script": "String",
                        "context": "ScriptContext"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "eval": {
                    "Parameter": {
                        "reader": "Reader",
                        "context": "ScriptContext"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "eval": {
                    "Parameter": {
                        "script": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "eval": {
                    "Parameter": {
                        "reader": "Reader"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "eval": {
                    "Parameter": {
                        "script": "String",
                        "n": "Bindings"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "eval": {
                    "Parameter": {
                        "reader": "Reader",
                        "n": "Bindings"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "put": {
                    "Parameter": {
                        "key": "String",
                        "value": "Object"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "key": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getBindings": {
                    "Parameter": {
                        "scope": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "setBindings": {
                    "Parameter": {
                        "bindings": "Bindings",
                        "scope": "int"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "createBindings": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getContext": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setContext": {
                    "Parameter": {
                        "context": "ScriptContext"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getFactory": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "736": {
        "Package": "javax.script",
        "Interface": "ScriptEngineFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getEngineName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEngineVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExtensions": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMimeTypes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLanguageName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLanguageVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParameter": {
                    "Parameter": {
                        "key": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getMethodCallSyntax": {
                    "Parameter": {
                        "obj": "String",
                        "m": "String",
                        "args": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getOutputStatement": {
                    "Parameter": {
                        "toDisplay": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getProgram": {
                    "Parameter": {
                        "statements": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getScriptEngine": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "737": {
        "Package": "org.ietf.jgss",
        "Interface": "GSSContext",
        "Superinterface": null,
        "Implementing Class": [
            "com.sun.security.jgss.ExtendedGSSContext"
        ],
        "Subinterface": null,
        "Method": [
            {
                "initSecContext": {
                    "Parameter": {
                        "inputBuf": "byte",
                        "offset": "int",
                        "len": "int"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "initSecContext": {
                    "Parameter": {
                        "inStream": "InputStream",
                        "outStream": "OutputStream"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "acceptSecContext": {
                    "Parameter": {
                        "inToken": "byte",
                        "offset": "int",
                        "len": "int"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "acceptSecContext": {
                    "Parameter": {
                        "inStream": "InputStream",
                        "outStream": "OutputStream"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "isEstablished": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "dispose": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getWrapSizeLimit": {
                    "Parameter": {
                        "qop": "int",
                        "confReq": "boolean",
                        "maxTokenSize": "int"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "wrap": {
                    "Parameter": {
                        "inBuf": "byte",
                        "offset": "int",
                        "len": "int",
                        "msgProp": "MessageProp"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "wrap": {
                    "Parameter": {
                        "inStream": "InputStream",
                        "outStream": "OutputStream",
                        "msgProp": "MessageProp"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "unwrap": {
                    "Parameter": {
                        "inBuf": "byte",
                        "offset": "int",
                        "len": "int",
                        "msgProp": "MessageProp"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "unwrap": {
                    "Parameter": {
                        "inStream": "InputStream",
                        "outStream": "OutputStream",
                        "msgProp": "MessageProp"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getMIC": {
                    "Parameter": {
                        "inMsg": "byte",
                        "offset": "int",
                        "len": "int",
                        "msgProp": "MessageProp"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getMIC": {
                    "Parameter": {
                        "inStream": "InputStream",
                        "outStream": "OutputStream",
                        "msgProp": "MessageProp"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "verifyMIC": {
                    "Parameter": {
                        "inToken": "byte",
                        "tokOffset": "int",
                        "tokLen": "int",
                        "inMsg": "byte",
                        "msgOffset": "int",
                        "msgLen": "int",
                        "msgProp": "MessageProp"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "verifyMIC": {
                    "Parameter": {
                        "tokStream": "InputStream",
                        "msgStream": "InputStream",
                        "msgProp": "MessageProp"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "export": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "requestMutualAuth": {
                    "Parameter": {
                        "state": "boolean"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "requestReplayDet": {
                    "Parameter": {
                        "state": "boolean"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "requestSequenceDet": {
                    "Parameter": {
                        "state": "boolean"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "requestCredDeleg": {
                    "Parameter": {
                        "state": "boolean"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "requestAnonymity": {
                    "Parameter": {
                        "state": "boolean"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "requestConf": {
                    "Parameter": {
                        "state": "boolean"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "requestInteg": {
                    "Parameter": {
                        "state": "boolean"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "requestLifetime": {
                    "Parameter": {
                        "lifetime": "int"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "setChannelBinding": {
                    "Parameter": {
                        "cb": "ChannelBinding"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getCredDelegState": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMutualAuthState": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReplayDetState": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSequenceDetState": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnonymityState": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isTransferable": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "isProtReady": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getConfState": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIntegState": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLifetime": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSrcName": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getTargName": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getMech": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getDelegCred": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "isInitiator": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            }
        ]
    },
    "738": {
        "Package": "org.ietf.jgss",
        "Interface": "GSSCredential",
        "Superinterface": [
            "java.lang.Cloneable"
        ],
        "Implementing Class": [
            "com.sun.security.jgss.ExtendedGSSCredential"
        ],
        "Subinterface": null,
        "Method": [
            {
                "dispose": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getName": {
                    "Parameter": {
                        "mech": "Oid"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getRemainingLifetime": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getRemainingInitLifetime": {
                    "Parameter": {
                        "mech": "Oid"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getRemainingAcceptLifetime": {
                    "Parameter": {
                        "mech": "Oid"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getUsage": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getUsage": {
                    "Parameter": {
                        "mech": "Oid"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getMechs": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "add": {
                    "Parameter": {
                        "name": "GSSName",
                        "initLifetime": "int",
                        "acceptLifetime": "int",
                        "mech": "Oid",
                        "usage": "int"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "another": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "739": {
        "Package": "org.ietf.jgss",
        "Interface": "GSSName",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "equals": {
                    "Parameter": {
                        "another": "GSSName"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "another": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canonicalize": {
                    "Parameter": {
                        "mech": "Oid"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "export": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getStringNameType": {
                    "Parameter": {},
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "isAnonymous": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isMN": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "740": {
        "Package": "javax.security.sasl",
        "Interface": "SaslClient",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getMechanismName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hasInitialResponse": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "evaluateChallenge": {
                    "Parameter": {
                        "challenge": "byte"
                    },
                    "Throw": "javax.security.sasl.SaslException"
                }
            },
            {
                "isComplete": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "unwrap": {
                    "Parameter": {
                        "incoming": "byte",
                        "offset": "int",
                        "len": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "wrap": {
                    "Parameter": {
                        "outgoing": "byte",
                        "offset": "int",
                        "len": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getNegotiatedProperty": {
                    "Parameter": {
                        "propName": "String"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "dispose": {
                    "Parameter": {},
                    "Throw": "javax.security.sasl.SaslException"
                }
            }
        ]
    },
    "741": {
        "Package": "javax.security.sasl",
        "Interface": "SaslClientFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createSaslClient": {
                    "Parameter": {
                        "mechanisms": "String",
                        "authorizationId": "String",
                        "protocol": "String",
                        "serverName": "String",
                        "": "Map",
                        "cbh": "CallbackHandler"
                    },
                    "Throw": "javax.security.sasl.SaslException"
                }
            },
            {
                "getMechanismNames": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "742": {
        "Package": "javax.security.sasl",
        "Interface": "SaslServer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getMechanismName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "evaluateResponse": {
                    "Parameter": {
                        "response": "byte"
                    },
                    "Throw": "javax.security.sasl.SaslException"
                }
            },
            {
                "isComplete": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAuthorizationID": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "unwrap": {
                    "Parameter": {
                        "incoming": "byte",
                        "offset": "int",
                        "len": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "wrap": {
                    "Parameter": {
                        "outgoing": "byte",
                        "offset": "int",
                        "len": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getNegotiatedProperty": {
                    "Parameter": {
                        "propName": "String"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "dispose": {
                    "Parameter": {},
                    "Throw": "javax.security.sasl.SaslException"
                }
            }
        ]
    },
    "743": {
        "Package": "javax.security.sasl",
        "Interface": "SaslServerFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createSaslServer": {
                    "Parameter": {
                        "mechanism": "String",
                        "protocol": "String",
                        "serverName": "String",
                        "": "Map",
                        "cbh": "CallbackHandler"
                    },
                    "Throw": "javax.security.sasl.SaslException"
                }
            },
            {
                "getMechanismNames": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "744": {
        "Package": "java.sql",
        "Interface": "Array",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.serial.SerialArray"
        ],
        "Method": [
            {
                "getBaseTypeName": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBaseType": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getArray": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getArray": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getArray": {
                    "Parameter": {
                        "index": "long",
                        "count": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getArray": {
                    "Parameter": {
                        "index": "long",
                        "count": "int",
                        "": "Map"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getResultSet": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getResultSet": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getResultSet": {
                    "Parameter": {
                        "index": "long",
                        "count": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getResultSet": {
                    "Parameter": {
                        "index": "long",
                        "count": "int",
                        "": "Map"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "free": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "745": {
        "Package": "java.sql",
        "Interface": "Blob",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.serial.SerialBlob"
        ],
        "Method": [
            {
                "length": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBytes": {
                    "Parameter": {
                        "pos": "long",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBinaryStream": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "position": {
                    "Parameter": {
                        "pattern": "byte",
                        "start": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "position": {
                    "Parameter": {
                        "pattern": "Blob",
                        "start": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBytes": {
                    "Parameter": {
                        "pos": "long",
                        "bytes": "byte"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBytes": {
                    "Parameter": {
                        "pos": "long",
                        "bytes": "byte",
                        "offset": "int",
                        "len": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBinaryStream": {
                    "Parameter": {
                        "pos": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "truncate": {
                    "Parameter": {
                        "len": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "free": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBinaryStream": {
                    "Parameter": {
                        "pos": "long",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "746": {
        "Package": "java.sql",
        "Interface": "CallableStatement",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.PreparedStatement",
            "java.sql.Statement",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "registerOutParameter": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "sqlType": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "registerOutParameter": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "sqlType": "int",
                        "scale": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "wasNull": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getString": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getBoolean": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getByte": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getShort": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getInt": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getLong": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getFloat": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDouble": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getBigDecimal": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "scale": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBytes": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDate": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTime": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTimestamp": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getObject": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getBigDecimal": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getObject": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "": "Map"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getRef": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBlob": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getClob": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getArray": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getDate": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTime": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTimestamp": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "registerOutParameter": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "sqlType": "int",
                        "typeName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "registerOutParameter": {
                    "Parameter": {
                        "parameterName": "String",
                        "sqlType": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "registerOutParameter": {
                    "Parameter": {
                        "parameterName": "String",
                        "sqlType": "int",
                        "scale": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "registerOutParameter": {
                    "Parameter": {
                        "parameterName": "String",
                        "sqlType": "int",
                        "typeName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getURL": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setURL": {
                    "Parameter": {
                        "parameterName": "String",
                        "val": "URL"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNull": {
                    "Parameter": {
                        "parameterName": "String",
                        "sqlType": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBoolean": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "boolean"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setByte": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setShort": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "short"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setInt": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setLong": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setFloat": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "float"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setDouble": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "double"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBigDecimal": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "BigDecimal"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setString": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBytes": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setDate": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Date"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setTime": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Time"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setTimestamp": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Timestamp"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setAsciiStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "InputStream",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBinaryStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "InputStream",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Object",
                        "targetSqlType": "int",
                        "scale": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Object",
                        "targetSqlType": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Object"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "reader": "Reader",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setDate": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Date",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setTime": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Time",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setTimestamp": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Timestamp",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNull": {
                    "Parameter": {
                        "parameterName": "String",
                        "sqlType": "int",
                        "typeName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getString": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBoolean": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getByte": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getShort": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getInt": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getLong": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getFloat": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getDouble": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBytes": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getDate": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getTime": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getTimestamp": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getObject": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBigDecimal": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getObject": {
                    "Parameter": {
                        "parameterName": "String",
                        "": "Map"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getRef": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBlob": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getClob": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getArray": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getDate": {
                    "Parameter": {
                        "parameterName": "String",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getTime": {
                    "Parameter": {
                        "parameterName": "String",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getTimestamp": {
                    "Parameter": {
                        "parameterName": "String",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getURL": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getRowId": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getRowId": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setRowId": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "RowId"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNString": {
                    "Parameter": {
                        "parameterName": "String",
                        "value": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNCharacterStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "value": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNClob": {
                    "Parameter": {
                        "parameterName": "String",
                        "value": "NClob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setClob": {
                    "Parameter": {
                        "parameterName": "String",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBlob": {
                    "Parameter": {
                        "parameterName": "String",
                        "inputStream": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNClob": {
                    "Parameter": {
                        "parameterName": "String",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getNClob": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getNClob": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setSQLXML": {
                    "Parameter": {
                        "parameterName": "String",
                        "xmlObject": "SQLXML"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getSQLXML": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getSQLXML": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getNString": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getNString": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getNCharacterStream": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getNCharacterStream": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getCharacterStream": {
                    "Parameter": {
                        "parameterIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getCharacterStream": {
                    "Parameter": {
                        "parameterName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBlob": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Blob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setClob": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Clob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setAsciiStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBinaryStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setAsciiStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBinaryStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNCharacterStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "value": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setClob": {
                    "Parameter": {
                        "parameterName": "String",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBlob": {
                    "Parameter": {
                        "parameterName": "String",
                        "inputStream": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNClob": {
                    "Parameter": {
                        "parameterName": "String",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getObject": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "Ttype": "Class"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getObject": {
                    "Parameter": {
                        "parameterName": "String",
                        "Ttype": "Class"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Object",
                        "targetSqlType": "SQLType",
                        "scaleOrLength": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Object",
                        "targetSqlType": "SQLType"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "registerOutParameter": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "sqlType": "SQLType"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "registerOutParameter": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "sqlType": "SQLType",
                        "scale": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "registerOutParameter": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "sqlType": "SQLType",
                        "typeName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "registerOutParameter": {
                    "Parameter": {
                        "parameterName": "String",
                        "sqlType": "SQLType"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "registerOutParameter": {
                    "Parameter": {
                        "parameterName": "String",
                        "sqlType": "SQLType",
                        "scale": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "registerOutParameter": {
                    "Parameter": {
                        "parameterName": "String",
                        "sqlType": "SQLType",
                        "typeName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "747": {
        "Package": "java.sql",
        "Interface": "Clob",
        "Superinterface": null,
        "Implementing Class": [
            "java.sql.NClob"
        ],
        "Subinterface": [
            "javax.sql.rowset.serial.SerialClob"
        ],
        "Method": [
            {
                "length": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getSubString": {
                    "Parameter": {
                        "pos": "long",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getCharacterStream": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getAsciiStream": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "position": {
                    "Parameter": {
                        "searchstr": "String",
                        "start": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "position": {
                    "Parameter": {
                        "searchstr": "Clob",
                        "start": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setString": {
                    "Parameter": {
                        "pos": "long",
                        "str": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setString": {
                    "Parameter": {
                        "pos": "long",
                        "str": "String",
                        "offset": "int",
                        "len": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setAsciiStream": {
                    "Parameter": {
                        "pos": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {
                        "pos": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "truncate": {
                    "Parameter": {
                        "len": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "free": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getCharacterStream": {
                    "Parameter": {
                        "pos": "long",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "748": {
        "Package": "java.sql",
        "Interface": "Connection",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createStatement": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "prepareStatement": {
                    "Parameter": {
                        "sql": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "prepareCall": {
                    "Parameter": {
                        "sql": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "nativeSQL": {
                    "Parameter": {
                        "sql": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setAutoCommit": {
                    "Parameter": {
                        "autoCommit": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getAutoCommit": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "commit": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "rollback": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isClosed": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMetaData": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setReadOnly": {
                    "Parameter": {
                        "readOnly": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isReadOnly": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setCatalog": {
                    "Parameter": {
                        "catalog": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getCatalog": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setTransactionIsolation": {
                    "Parameter": {
                        "level": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTransactionIsolation": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getWarnings": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "clearWarnings": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "createStatement": {
                    "Parameter": {
                        "resultSetType": "int",
                        "resultSetConcurrency": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "prepareStatement": {
                    "Parameter": {
                        "sql": "String",
                        "resultSetType": "int",
                        "resultSetConcurrency": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "prepareCall": {
                    "Parameter": {
                        "sql": "String",
                        "resultSetType": "int",
                        "resultSetConcurrency": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getTypeMap": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setTypeMap": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setHoldability": {
                    "Parameter": {
                        "holdability": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getHoldability": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setSavepoint": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setSavepoint": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "rollback": {
                    "Parameter": {
                        "savepoint": "Savepoint"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "releaseSavepoint": {
                    "Parameter": {
                        "savepoint": "Savepoint"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "createStatement": {
                    "Parameter": {
                        "resultSetType": "int",
                        "resultSetConcurrency": "int",
                        "resultSetHoldability": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "prepareStatement": {
                    "Parameter": {
                        "sql": "String",
                        "resultSetType": "int",
                        "resultSetConcurrency": "int",
                        "resultSetHoldability": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "prepareCall": {
                    "Parameter": {
                        "sql": "String",
                        "resultSetType": "int",
                        "resultSetConcurrency": "int",
                        "resultSetHoldability": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "prepareStatement": {
                    "Parameter": {
                        "sql": "String",
                        "autoGeneratedKeys": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "prepareStatement": {
                    "Parameter": {
                        "sql": "String",
                        "columnIndexes": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "prepareStatement": {
                    "Parameter": {
                        "sql": "String",
                        "columnNames": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "createClob": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "createBlob": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "createNClob": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "createSQLXML": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "isValid": {
                    "Parameter": {
                        "timeout": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setClientInfo": {
                    "Parameter": {
                        "name": "String",
                        "value": "String"
                    },
                    "Throw": "java.sql.SQLClientInfoException"
                }
            },
            {
                "setClientInfo": {
                    "Parameter": {
                        "properties": "Properties"
                    },
                    "Throw": "java.sql.SQLClientInfoException"
                }
            },
            {
                "getClientInfo": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getClientInfo": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "createArrayOf": {
                    "Parameter": {
                        "typeName": "String",
                        "elements": "Object"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "createStruct": {
                    "Parameter": {
                        "typeName": "String",
                        "attributes": "Object"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setSchema": {
                    "Parameter": {
                        "schema": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getSchema": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "abort": {
                    "Parameter": {
                        "executor": "Executor"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setNetworkTimeout": {
                    "Parameter": {
                        "executor": "Executor",
                        "milliseconds": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getNetworkTimeout": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "beginRequest": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "endRequest": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setShardingKeyIfValid": {
                    "Parameter": {
                        "shardingKey": "ShardingKey",
                        "superShardingKey": "ShardingKey",
                        "timeout": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setShardingKeyIfValid": {
                    "Parameter": {
                        "shardingKey": "ShardingKey",
                        "timeout": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setShardingKey": {
                    "Parameter": {
                        "shardingKey": "ShardingKey",
                        "superShardingKey": "ShardingKey"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setShardingKey": {
                    "Parameter": {
                        "shardingKey": "ShardingKey"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "749": {
        "Package": "java.sql",
        "Interface": "ConnectionBuilder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "user": {
                    "Parameter": {
                        "username": "String"
                    },
                    "Throw": []
                }
            },
            {
                "password": {
                    "Parameter": {
                        "password": "String"
                    },
                    "Throw": []
                }
            },
            {
                "shardingKey": {
                    "Parameter": {
                        "shardingKey": "ShardingKey"
                    },
                    "Throw": []
                }
            },
            {
                "superShardingKey": {
                    "Parameter": {
                        "superShardingKey": "ShardingKey"
                    },
                    "Throw": []
                }
            },
            {
                "build": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "750": {
        "Package": "java.sql",
        "Interface": "DatabaseMetaData",
        "Superinterface": [
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "allProceduresAreCallable": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "allTablesAreSelectable": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getURL": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getUserName": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isReadOnly": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "nullsAreSortedHigh": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "nullsAreSortedLow": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "nullsAreSortedAtStart": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "nullsAreSortedAtEnd": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDatabaseProductName": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDatabaseProductVersion": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDriverName": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDriverVersion": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDriverMajorVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDriverMinorVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "usesLocalFiles": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "usesLocalFilePerTable": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsMixedCaseIdentifiers": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "storesUpperCaseIdentifiers": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "storesLowerCaseIdentifiers": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "storesMixedCaseIdentifiers": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsMixedCaseQuotedIdentifiers": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "storesUpperCaseQuotedIdentifiers": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "storesLowerCaseQuotedIdentifiers": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "storesMixedCaseQuotedIdentifiers": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getIdentifierQuoteString": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getSQLKeywords": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getNumericFunctions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getStringFunctions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getSystemFunctions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTimeDateFunctions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getSearchStringEscape": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getExtraNameCharacters": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsAlterTableWithAddColumn": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsAlterTableWithDropColumn": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsColumnAliasing": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "nullPlusNonNullIsNull": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsConvert": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsConvert": {
                    "Parameter": {
                        "fromType": "int",
                        "toType": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsTableCorrelationNames": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsDifferentTableCorrelationNames": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsExpressionsInOrderBy": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsOrderByUnrelated": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsGroupBy": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsGroupByUnrelated": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsGroupByBeyondSelect": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsLikeEscapeClause": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsMultipleResultSets": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsMultipleTransactions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsNonNullableColumns": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsMinimumSQLGrammar": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsCoreSQLGrammar": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsExtendedSQLGrammar": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsANSI92EntryLevelSQL": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsANSI92IntermediateSQL": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsANSI92FullSQL": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsIntegrityEnhancementFacility": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsOuterJoins": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsFullOuterJoins": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsLimitedOuterJoins": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getSchemaTerm": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getProcedureTerm": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getCatalogTerm": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isCatalogAtStart": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getCatalogSeparator": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsSchemasInDataManipulation": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsSchemasInProcedureCalls": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsSchemasInTableDefinitions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsSchemasInIndexDefinitions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsSchemasInPrivilegeDefinitions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsCatalogsInDataManipulation": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsCatalogsInProcedureCalls": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsCatalogsInTableDefinitions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsCatalogsInIndexDefinitions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsCatalogsInPrivilegeDefinitions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsPositionedDelete": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsPositionedUpdate": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsSelectForUpdate": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsStoredProcedures": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsSubqueriesInComparisons": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsSubqueriesInExists": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsSubqueriesInIns": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsSubqueriesInQuantifieds": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsCorrelatedSubqueries": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsUnion": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsUnionAll": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsOpenCursorsAcrossCommit": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsOpenCursorsAcrossRollback": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsOpenStatementsAcrossCommit": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsOpenStatementsAcrossRollback": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxBinaryLiteralLength": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxCharLiteralLength": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxColumnNameLength": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxColumnsInGroupBy": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxColumnsInIndex": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxColumnsInOrderBy": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxColumnsInSelect": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxColumnsInTable": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxConnections": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxCursorNameLength": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxIndexLength": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxSchemaNameLength": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxProcedureNameLength": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxCatalogNameLength": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxRowSize": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "doesMaxRowSizeIncludeBlobs": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxStatementLength": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxStatements": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxTableNameLength": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxTablesInSelect": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxUserNameLength": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDefaultTransactionIsolation": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsTransactions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsTransactionIsolationLevel": {
                    "Parameter": {
                        "level": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsDataDefinitionAndDataManipulationTransactions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsDataManipulationTransactionsOnly": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "dataDefinitionCausesTransactionCommit": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "dataDefinitionIgnoredInTransactions": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getProcedures": {
                    "Parameter": {
                        "catalog": "String",
                        "schemaPattern": "String",
                        "procedureNamePattern": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getProcedureColumns": {
                    "Parameter": {
                        "catalog": "String",
                        "schemaPattern": "String",
                        "procedureNamePattern": "String",
                        "columnNamePattern": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTables": {
                    "Parameter": {
                        "catalog": "String",
                        "schemaPattern": "String",
                        "tableNamePattern": "String",
                        "types": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getSchemas": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getCatalogs": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTableTypes": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getColumns": {
                    "Parameter": {
                        "catalog": "String",
                        "schemaPattern": "String",
                        "tableNamePattern": "String",
                        "columnNamePattern": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getColumnPrivileges": {
                    "Parameter": {
                        "catalog": "String",
                        "schema": "String",
                        "table": "String",
                        "columnNamePattern": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTablePrivileges": {
                    "Parameter": {
                        "catalog": "String",
                        "schemaPattern": "String",
                        "tableNamePattern": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getBestRowIdentifier": {
                    "Parameter": {
                        "catalog": "String",
                        "schema": "String",
                        "table": "String",
                        "scope": "int",
                        "nullable": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getVersionColumns": {
                    "Parameter": {
                        "catalog": "String",
                        "schema": "String",
                        "table": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getPrimaryKeys": {
                    "Parameter": {
                        "catalog": "String",
                        "schema": "String",
                        "table": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getImportedKeys": {
                    "Parameter": {
                        "catalog": "String",
                        "schema": "String",
                        "table": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getExportedKeys": {
                    "Parameter": {
                        "catalog": "String",
                        "schema": "String",
                        "table": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getCrossReference": {
                    "Parameter": {
                        "parentCatalog": "String",
                        "parentSchema": "String",
                        "parentTable": "String",
                        "foreignCatalog": "String",
                        "foreignSchema": "String",
                        "foreignTable": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTypeInfo": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getIndexInfo": {
                    "Parameter": {
                        "catalog": "String",
                        "schema": "String",
                        "table": "String",
                        "unique": "boolean",
                        "approximate": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsResultSetType": {
                    "Parameter": {
                        "type": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsResultSetConcurrency": {
                    "Parameter": {
                        "type": "int",
                        "concurrency": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "ownUpdatesAreVisible": {
                    "Parameter": {
                        "type": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "ownDeletesAreVisible": {
                    "Parameter": {
                        "type": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "ownInsertsAreVisible": {
                    "Parameter": {
                        "type": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "othersUpdatesAreVisible": {
                    "Parameter": {
                        "type": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "othersDeletesAreVisible": {
                    "Parameter": {
                        "type": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "othersInsertsAreVisible": {
                    "Parameter": {
                        "type": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "updatesAreDetected": {
                    "Parameter": {
                        "type": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "deletesAreDetected": {
                    "Parameter": {
                        "type": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "insertsAreDetected": {
                    "Parameter": {
                        "type": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsBatchUpdates": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getUDTs": {
                    "Parameter": {
                        "catalog": "String",
                        "schemaPattern": "String",
                        "typeNamePattern": "String",
                        "types": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getConnection": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsSavepoints": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsNamedParameters": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsMultipleOpenResults": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsGetGeneratedKeys": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getSuperTypes": {
                    "Parameter": {
                        "catalog": "String",
                        "schemaPattern": "String",
                        "typeNamePattern": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getSuperTables": {
                    "Parameter": {
                        "catalog": "String",
                        "schemaPattern": "String",
                        "tableNamePattern": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getAttributes": {
                    "Parameter": {
                        "catalog": "String",
                        "schemaPattern": "String",
                        "typeNamePattern": "String",
                        "attributeNamePattern": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsResultSetHoldability": {
                    "Parameter": {
                        "holdability": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getResultSetHoldability": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDatabaseMajorVersion": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDatabaseMinorVersion": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getJDBCMajorVersion": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getJDBCMinorVersion": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getSQLStateType": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "locatorsUpdateCopy": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsStatementPooling": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getRowIdLifetime": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getSchemas": {
                    "Parameter": {
                        "catalog": "String",
                        "schemaPattern": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsStoredFunctionsUsingCallSyntax": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "autoCommitFailureClosesAllResultSets": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getClientInfoProperties": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getFunctions": {
                    "Parameter": {
                        "catalog": "String",
                        "schemaPattern": "String",
                        "functionNamePattern": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getFunctionColumns": {
                    "Parameter": {
                        "catalog": "String",
                        "schemaPattern": "String",
                        "functionNamePattern": "String",
                        "columnNamePattern": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getPseudoColumns": {
                    "Parameter": {
                        "catalog": "String",
                        "schemaPattern": "String",
                        "tableNamePattern": "String",
                        "columnNamePattern": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "generatedKeyAlwaysReturned": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxLogicalLobSize": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsRefCursors": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsSharding": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "751": {
        "Package": "java.sql",
        "Interface": "Driver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "connect": {
                    "Parameter": {
                        "url": "String",
                        "info": "Properties"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "acceptsURL": {
                    "Parameter": {
                        "url": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getPropertyInfo": {
                    "Parameter": {
                        "url": "String",
                        "info": "Properties"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMajorVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMinorVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "jdbcCompliant": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParentLogger": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "752": {
        "Package": "java.sql",
        "Interface": "DriverAction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "deregister": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "753": {
        "Package": "java.sql",
        "Interface": "NClob",
        "Superinterface": [
            "java.sql.Clob"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "754": {
        "Package": "java.sql",
        "Interface": "ParameterMetaData",
        "Superinterface": [
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getParameterCount": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isNullable": {
                    "Parameter": {
                        "param": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isSigned": {
                    "Parameter": {
                        "param": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getPrecision": {
                    "Parameter": {
                        "param": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getScale": {
                    "Parameter": {
                        "param": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getParameterType": {
                    "Parameter": {
                        "param": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getParameterTypeName": {
                    "Parameter": {
                        "param": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getParameterClassName": {
                    "Parameter": {
                        "param": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getParameterMode": {
                    "Parameter": {
                        "param": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "755": {
        "Package": "java.sql",
        "Interface": "PreparedStatement",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.Statement",
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "java.sql.CallableStatement"
        ],
        "Subinterface": null,
        "Method": [
            {
                "executeQuery": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "executeUpdate": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "setNull": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "sqlType": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBoolean": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setByte": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setShort": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "short"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setInt": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setLong": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "long"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setFloat": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "float"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setDouble": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "double"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setBigDecimal": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "BigDecimal"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setString": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setBytes": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setDate": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Date"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setTime": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Time"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setTimestamp": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Timestamp"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setAsciiStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "InputStream",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setUnicodeStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "InputStream",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBinaryStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "InputStream",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "clearParameters": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Object",
                        "targetSqlType": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Object"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "execute": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "addBatch": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "reader": "Reader",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setRef": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Ref"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBlob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Blob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setClob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Clob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setArray": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Array"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getMetaData": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setDate": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Date",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setTime": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Time",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setTimestamp": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Timestamp",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setNull": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "sqlType": "int",
                        "typeName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setURL": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "URL"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getParameterMetaData": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setRowId": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "RowId"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNString": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "value": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNCharacterStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "value": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNClob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "value": "NClob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setClob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBlob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "inputStream": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNClob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setSQLXML": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "xmlObject": "SQLXML"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Object",
                        "targetSqlType": "int",
                        "scaleOrLength": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setAsciiStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setBinaryStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setAsciiStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBinaryStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNCharacterStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "value": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setClob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBlob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "inputStream": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNClob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Object",
                        "targetSqlType": "SQLType",
                        "scaleOrLength": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Object",
                        "targetSqlType": "SQLType"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "executeLargeUpdate": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLTimeoutException"
                }
            }
        ]
    },
    "756": {
        "Package": "java.sql",
        "Interface": "Ref",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.serial.SerialRef"
        ],
        "Method": [
            {
                "getBaseTypeName": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getObject": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getObject": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "value": "Object"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "757": {
        "Package": "java.sql",
        "Interface": "ResultSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "javax.sql.rowset.CachedRowSet",
            "javax.sql.rowset.FilteredRowSet",
            "javax.sql.rowset.JdbcRowSet",
            "javax.sql.rowset.JoinRowSet",
            "javax.sql.RowSet",
            "javax.sql.rowset.spi.SyncResolver",
            "javax.sql.rowset.WebRowSet"
        ],
        "Subinterface": null,
        "Method": [
            {
                "next": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "wasNull": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getString": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getBoolean": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getByte": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getShort": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getInt": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getLong": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getFloat": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDouble": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getBigDecimal": {
                    "Parameter": {
                        "columnIndex": "int",
                        "scale": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBytes": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDate": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTime": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTimestamp": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getAsciiStream": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getUnicodeStream": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBinaryStream": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getString": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getBoolean": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getByte": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getShort": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getInt": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getLong": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getFloat": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDouble": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getBigDecimal": {
                    "Parameter": {
                        "columnLabel": "String",
                        "scale": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBytes": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDate": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTime": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTimestamp": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getAsciiStream": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getUnicodeStream": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBinaryStream": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getWarnings": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "clearWarnings": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getCursorName": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getMetaData": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getObject": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getObject": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "findColumn": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getCharacterStream": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getCharacterStream": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getBigDecimal": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getBigDecimal": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isBeforeFirst": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "isAfterLast": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "isFirst": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "isLast": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "beforeFirst": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "afterLast": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "first": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "last": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getRow": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "absolute": {
                    "Parameter": {
                        "row": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "relative": {
                    "Parameter": {
                        "rows": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "previous": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setFetchDirection": {
                    "Parameter": {
                        "direction": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getFetchDirection": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setFetchSize": {
                    "Parameter": {
                        "rows": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getFetchSize": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getConcurrency": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "rowUpdated": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "rowInserted": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "rowDeleted": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateNull": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBoolean": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "boolean"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateByte": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateShort": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "short"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateInt": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateLong": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateFloat": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "float"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateDouble": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "double"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBigDecimal": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "BigDecimal"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateString": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBytes": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateDate": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Date"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateTime": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Time"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateTimestamp": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Timestamp"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateAsciiStream": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "InputStream",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBinaryStream": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "InputStream",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateCharacterStream": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Reader",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateObject": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Object",
                        "scaleOrLength": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateObject": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Object"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateNull": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBoolean": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "boolean"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateByte": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateShort": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "short"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateInt": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateLong": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateFloat": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "float"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateDouble": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "double"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBigDecimal": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "BigDecimal"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateString": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBytes": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateDate": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "Date"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateTime": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "Time"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateTimestamp": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "Timestamp"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateAsciiStream": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "InputStream",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBinaryStream": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "InputStream",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateCharacterStream": {
                    "Parameter": {
                        "columnLabel": "String",
                        "reader": "Reader",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateObject": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "Object",
                        "scaleOrLength": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateObject": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "Object"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "insertRow": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateRow": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "deleteRow": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "refreshRow": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "cancelRowUpdates": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "moveToInsertRow": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "moveToCurrentRow": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getStatement": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getObject": {
                    "Parameter": {
                        "columnIndex": "int",
                        "": "Map"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getRef": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBlob": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getClob": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getArray": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getObject": {
                    "Parameter": {
                        "columnLabel": "String",
                        "": "Map"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getRef": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBlob": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getClob": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getArray": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getDate": {
                    "Parameter": {
                        "columnIndex": "int",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDate": {
                    "Parameter": {
                        "columnLabel": "String",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTime": {
                    "Parameter": {
                        "columnIndex": "int",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTime": {
                    "Parameter": {
                        "columnLabel": "String",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTimestamp": {
                    "Parameter": {
                        "columnIndex": "int",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTimestamp": {
                    "Parameter": {
                        "columnLabel": "String",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getURL": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getURL": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateRef": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Ref"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateRef": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "Ref"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBlob": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Blob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBlob": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "Blob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateClob": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Clob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateClob": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "Clob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateArray": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Array"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateArray": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "Array"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getRowId": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getRowId": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateRowId": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "RowId"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateRowId": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "RowId"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getHoldability": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isClosed": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "updateNString": {
                    "Parameter": {
                        "columnIndex": "int",
                        "nString": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateNString": {
                    "Parameter": {
                        "columnLabel": "String",
                        "nString": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateNClob": {
                    "Parameter": {
                        "columnIndex": "int",
                        "nClob": "NClob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateNClob": {
                    "Parameter": {
                        "columnLabel": "String",
                        "nClob": "NClob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getNClob": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getNClob": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getSQLXML": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getSQLXML": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateSQLXML": {
                    "Parameter": {
                        "columnIndex": "int",
                        "xmlObject": "SQLXML"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateSQLXML": {
                    "Parameter": {
                        "columnLabel": "String",
                        "xmlObject": "SQLXML"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getNString": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getNString": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getNCharacterStream": {
                    "Parameter": {
                        "columnIndex": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getNCharacterStream": {
                    "Parameter": {
                        "columnLabel": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateNCharacterStream": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateNCharacterStream": {
                    "Parameter": {
                        "columnLabel": "String",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateAsciiStream": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBinaryStream": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateCharacterStream": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateAsciiStream": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBinaryStream": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateCharacterStream": {
                    "Parameter": {
                        "columnLabel": "String",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBlob": {
                    "Parameter": {
                        "columnIndex": "int",
                        "inputStream": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBlob": {
                    "Parameter": {
                        "columnLabel": "String",
                        "inputStream": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateClob": {
                    "Parameter": {
                        "columnIndex": "int",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateClob": {
                    "Parameter": {
                        "columnLabel": "String",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateNClob": {
                    "Parameter": {
                        "columnIndex": "int",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateNClob": {
                    "Parameter": {
                        "columnLabel": "String",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateNCharacterStream": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateNCharacterStream": {
                    "Parameter": {
                        "columnLabel": "String",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateAsciiStream": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBinaryStream": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateCharacterStream": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateAsciiStream": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBinaryStream": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateCharacterStream": {
                    "Parameter": {
                        "columnLabel": "String",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBlob": {
                    "Parameter": {
                        "columnIndex": "int",
                        "inputStream": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateBlob": {
                    "Parameter": {
                        "columnLabel": "String",
                        "inputStream": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateClob": {
                    "Parameter": {
                        "columnIndex": "int",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateClob": {
                    "Parameter": {
                        "columnLabel": "String",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateNClob": {
                    "Parameter": {
                        "columnIndex": "int",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateNClob": {
                    "Parameter": {
                        "columnLabel": "String",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getObject": {
                    "Parameter": {
                        "columnIndex": "int",
                        "Ttype": "Class"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getObject": {
                    "Parameter": {
                        "columnLabel": "String",
                        "Ttype": "Class"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateObject": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Object",
                        "targetSqlType": "SQLType",
                        "scaleOrLength": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateObject": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "Object",
                        "targetSqlType": "SQLType",
                        "scaleOrLength": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateObject": {
                    "Parameter": {
                        "columnIndex": "int",
                        "x": "Object",
                        "targetSqlType": "SQLType"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "updateObject": {
                    "Parameter": {
                        "columnLabel": "String",
                        "x": "Object",
                        "targetSqlType": "SQLType"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "758": {
        "Package": "java.sql",
        "Interface": "ResultSetMetaData",
        "Superinterface": [
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "javax.sql.RowSetMetaData"
        ],
        "Subinterface": [
            "javax.sql.rowset.RowSetMetaDataImpl"
        ],
        "Method": [
            {
                "getColumnCount": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isAutoIncrement": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isCaseSensitive": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isSearchable": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isCurrency": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isNullable": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isSigned": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getColumnDisplaySize": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getColumnLabel": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getColumnName": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getSchemaName": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getPrecision": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getScale": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTableName": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getCatalogName": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getColumnType": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getColumnTypeName": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isReadOnly": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isWritable": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isDefinitelyWritable": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getColumnClassName": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "759": {
        "Package": "java.sql",
        "Interface": "RowId",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "getBytes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "760": {
        "Package": "java.sql",
        "Interface": "Savepoint",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getSavepointId": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getSavepointName": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "761": {
        "Package": "java.sql",
        "Interface": "ShardingKeyBuilder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "subkey": {
                    "Parameter": {
                        "subkey": "Object",
                        "subkeyType": "SQLType"
                    },
                    "Throw": []
                }
            },
            {
                "build": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "762": {
        "Package": "java.sql",
        "Interface": "SQLData",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getSQLTypeName": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readSQL": {
                    "Parameter": {
                        "stream": "SQLInput",
                        "typeName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeSQL": {
                    "Parameter": {
                        "stream": "SQLOutput"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "763": {
        "Package": "java.sql",
        "Interface": "SQLInput",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.serial.SQLInputImpl"
        ],
        "Method": [
            {
                "readString": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readBoolean": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readByte": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readShort": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readInt": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readLong": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readFloat": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readDouble": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readBigDecimal": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readBytes": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readDate": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readTime": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readTimestamp": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readCharacterStream": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readAsciiStream": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readBinaryStream": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readObject": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readRef": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readBlob": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readClob": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readArray": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "wasNull": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readURL": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readNClob": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readNString": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readSQLXML": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readRowId": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "readObject": {
                    "Parameter": {
                        "Ttype": "Class"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "764": {
        "Package": "java.sql",
        "Interface": "SQLOutput",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.serial.SQLOutputImpl"
        ],
        "Method": [
            {
                "writeString": {
                    "Parameter": {
                        "x": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeBoolean": {
                    "Parameter": {
                        "x": "boolean"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeByte": {
                    "Parameter": {
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeShort": {
                    "Parameter": {
                        "x": "short"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeInt": {
                    "Parameter": {
                        "x": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeLong": {
                    "Parameter": {
                        "x": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeFloat": {
                    "Parameter": {
                        "x": "float"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeDouble": {
                    "Parameter": {
                        "x": "double"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeBigDecimal": {
                    "Parameter": {
                        "x": "BigDecimal"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeBytes": {
                    "Parameter": {
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeDate": {
                    "Parameter": {
                        "x": "Date"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeTime": {
                    "Parameter": {
                        "x": "Time"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeTimestamp": {
                    "Parameter": {
                        "x": "Timestamp"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeCharacterStream": {
                    "Parameter": {
                        "x": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeAsciiStream": {
                    "Parameter": {
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeBinaryStream": {
                    "Parameter": {
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeObject": {
                    "Parameter": {
                        "x": "SQLData"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeRef": {
                    "Parameter": {
                        "x": "Ref"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeBlob": {
                    "Parameter": {
                        "x": "Blob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeClob": {
                    "Parameter": {
                        "x": "Clob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeStruct": {
                    "Parameter": {
                        "x": "Struct"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeArray": {
                    "Parameter": {
                        "x": "Array"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeURL": {
                    "Parameter": {
                        "x": "URL"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeNString": {
                    "Parameter": {
                        "x": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeNClob": {
                    "Parameter": {
                        "x": "NClob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeRowId": {
                    "Parameter": {
                        "x": "RowId"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeSQLXML": {
                    "Parameter": {
                        "x": "SQLXML"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "writeObject": {
                    "Parameter": {
                        "x": "Object",
                        "targetSqlType": "SQLType"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "765": {
        "Package": "java.sql",
        "Interface": "SQLType",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getVendor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getVendorTypeNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "766": {
        "Package": "java.sql",
        "Interface": "SQLXML",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "free": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getBinaryStream": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBinaryStream": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getCharacterStream": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getString": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setString": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getSource": {
                    "Parameter": {
                        "TsourceClass": "Class"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setResult": {
                    "Parameter": {
                        "TresultClass": "Class"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "767": {
        "Package": "java.sql",
        "Interface": "Statement",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "java.sql.CallableStatement",
            "java.sql.PreparedStatement"
        ],
        "Subinterface": null,
        "Method": [
            {
                "executeQuery": {
                    "Parameter": {
                        "sql": "String"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "executeUpdate": {
                    "Parameter": {
                        "sql": "String"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxFieldSize": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setMaxFieldSize": {
                    "Parameter": {
                        "max": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxRows": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setMaxRows": {
                    "Parameter": {
                        "max": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setEscapeProcessing": {
                    "Parameter": {
                        "enable": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getQueryTimeout": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setQueryTimeout": {
                    "Parameter": {
                        "seconds": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "cancel": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getWarnings": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "clearWarnings": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setCursorName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "execute": {
                    "Parameter": {
                        "sql": "String"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "getResultSet": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getUpdateCount": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMoreResults": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setFetchDirection": {
                    "Parameter": {
                        "direction": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getFetchDirection": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setFetchSize": {
                    "Parameter": {
                        "rows": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getFetchSize": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getResultSetConcurrency": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getResultSetType": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "addBatch": {
                    "Parameter": {
                        "sql": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "clearBatch": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "executeBatch": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "getConnection": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMoreResults": {
                    "Parameter": {
                        "current": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getGeneratedKeys": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "executeUpdate": {
                    "Parameter": {
                        "sql": "String",
                        "autoGeneratedKeys": "int"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "executeUpdate": {
                    "Parameter": {
                        "sql": "String",
                        "columnIndexes": "int"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "executeUpdate": {
                    "Parameter": {
                        "sql": "String",
                        "columnNames": "String"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "execute": {
                    "Parameter": {
                        "sql": "String",
                        "autoGeneratedKeys": "int"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "execute": {
                    "Parameter": {
                        "sql": "String",
                        "columnIndexes": "int"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "execute": {
                    "Parameter": {
                        "sql": "String",
                        "columnNames": "String"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "getResultSetHoldability": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isClosed": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setPoolable": {
                    "Parameter": {
                        "poolable": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isPoolable": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "closeOnCompletion": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isCloseOnCompletion": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getLargeUpdateCount": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setLargeMaxRows": {
                    "Parameter": {
                        "max": "long"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getLargeMaxRows": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "executeLargeBatch": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "executeLargeUpdate": {
                    "Parameter": {
                        "sql": "String"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "executeLargeUpdate": {
                    "Parameter": {
                        "sql": "String",
                        "autoGeneratedKeys": "int"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "executeLargeUpdate": {
                    "Parameter": {
                        "sql": "String",
                        "columnIndexes": "int"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "executeLargeUpdate": {
                    "Parameter": {
                        "sql": "String",
                        "columnNames": "String"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "enquoteLiteral": {
                    "Parameter": {
                        "val": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "enquoteIdentifier": {
                    "Parameter": {
                        "identifier": "String",
                        "alwaysQuote": "boolean"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "isSimpleIdentifier": {
                    "Parameter": {
                        "identifier": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "enquoteNCharLiteral": {
                    "Parameter": {
                        "val": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "768": {
        "Package": "java.sql",
        "Interface": "Struct",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.serial.SerialStruct"
        ],
        "Method": [
            {
                "getSQLTypeName": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getAttributes": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "769": {
        "Package": "java.sql",
        "Interface": "Wrapper",
        "Superinterface": null,
        "Implementing Class": [
            "javax.sql.rowset.CachedRowSet",
            "java.sql.CallableStatement",
            "java.sql.Connection",
            "java.sql.DatabaseMetaData",
            "javax.sql.DataSource",
            "javax.sql.rowset.FilteredRowSet",
            "javax.sql.rowset.JdbcRowSet",
            "javax.sql.rowset.JoinRowSet",
            "java.sql.ParameterMetaData",
            "java.sql.PreparedStatement",
            "java.sql.ResultSet",
            "java.sql.ResultSetMetaData",
            "javax.sql.RowSet",
            "javax.sql.RowSetMetaData",
            "java.sql.Statement",
            "javax.sql.rowset.spi.SyncResolver",
            "javax.sql.rowset.WebRowSet"
        ],
        "Subinterface": [
            "javax.sql.rowset.RowSetMetaDataImpl"
        ],
        "Method": [
            {
                "unwrap": {
                    "Parameter": {
                        "Tiface": "Class"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isWrapperFor": {
                    "Parameter": {
                        "iface": "Class"
                    },
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "770": {
        "Package": "javax.sql",
        "Interface": "CommonDataSource",
        "Superinterface": null,
        "Implementing Class": [
            "javax.sql.ConnectionPoolDataSource",
            "javax.sql.DataSource",
            "javax.sql.XADataSource"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getLogWriter": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setLogWriter": {
                    "Parameter": {
                        "out": "PrintWriter"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setLoginTimeout": {
                    "Parameter": {
                        "seconds": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getLoginTimeout": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getParentLogger": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "createShardingKeyBuilder": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "771": {
        "Package": "javax.sql",
        "Interface": "ConnectionEventListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "connectionClosed": {
                    "Parameter": {
                        "event": "ConnectionEvent"
                    },
                    "Throw": []
                }
            },
            {
                "connectionErrorOccurred": {
                    "Parameter": {
                        "event": "ConnectionEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "772": {
        "Package": "javax.sql",
        "Interface": "ConnectionPoolDataSource",
        "Superinterface": [
            "javax.sql.CommonDataSource"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPooledConnection": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getPooledConnection": {
                    "Parameter": {
                        "user": "String",
                        "password": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "getLogWriter": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setLogWriter": {
                    "Parameter": {
                        "out": "PrintWriter"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setLoginTimeout": {
                    "Parameter": {
                        "seconds": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getLoginTimeout": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "createPooledConnectionBuilder": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "773": {
        "Package": "javax.sql",
        "Interface": "DataSource",
        "Superinterface": [
            "javax.sql.CommonDataSource",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getConnection": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "getConnection": {
                    "Parameter": {
                        "username": "String",
                        "password": "String"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "getLogWriter": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setLogWriter": {
                    "Parameter": {
                        "out": "PrintWriter"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setLoginTimeout": {
                    "Parameter": {
                        "seconds": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getLoginTimeout": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "createConnectionBuilder": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "774": {
        "Package": "javax.sql",
        "Interface": "PooledConnection",
        "Superinterface": null,
        "Implementing Class": [
            "javax.sql.XAConnection"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getConnection": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "addConnectionEventListener": {
                    "Parameter": {
                        "listener": "ConnectionEventListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeConnectionEventListener": {
                    "Parameter": {
                        "listener": "ConnectionEventListener"
                    },
                    "Throw": []
                }
            },
            {
                "addStatementEventListener": {
                    "Parameter": {
                        "listener": "StatementEventListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeStatementEventListener": {
                    "Parameter": {
                        "listener": "StatementEventListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "775": {
        "Package": "javax.sql",
        "Interface": "PooledConnectionBuilder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "user": {
                    "Parameter": {
                        "username": "String"
                    },
                    "Throw": []
                }
            },
            {
                "password": {
                    "Parameter": {
                        "password": "String"
                    },
                    "Throw": []
                }
            },
            {
                "shardingKey": {
                    "Parameter": {
                        "shardingKey": "ShardingKey"
                    },
                    "Throw": []
                }
            },
            {
                "superShardingKey": {
                    "Parameter": {
                        "superShardingKey": "ShardingKey"
                    },
                    "Throw": []
                }
            },
            {
                "build": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "776": {
        "Package": "javax.sql",
        "Interface": "RowSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.ResultSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "javax.sql.rowset.CachedRowSet",
            "javax.sql.rowset.FilteredRowSet",
            "javax.sql.rowset.JdbcRowSet",
            "javax.sql.rowset.JoinRowSet",
            "javax.sql.rowset.spi.SyncResolver",
            "javax.sql.rowset.WebRowSet"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getUrl": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setUrl": {
                    "Parameter": {
                        "url": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getDataSourceName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDataSourceName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getUsername": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setUsername": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getPassword": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPassword": {
                    "Parameter": {
                        "password": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTransactionIsolation": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTransactionIsolation": {
                    "Parameter": {
                        "level": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTypeMap": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setTypeMap": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getCommand": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCommand": {
                    "Parameter": {
                        "cmd": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "isReadOnly": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setReadOnly": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxFieldSize": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setMaxFieldSize": {
                    "Parameter": {
                        "max": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMaxRows": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setMaxRows": {
                    "Parameter": {
                        "max": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getEscapeProcessing": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setEscapeProcessing": {
                    "Parameter": {
                        "enable": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getQueryTimeout": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setQueryTimeout": {
                    "Parameter": {
                        "seconds": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setType": {
                    "Parameter": {
                        "type": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setConcurrency": {
                    "Parameter": {
                        "concurrency": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setNull": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "sqlType": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setNull": {
                    "Parameter": {
                        "parameterName": "String",
                        "sqlType": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNull": {
                    "Parameter": {
                        "paramIndex": "int",
                        "sqlType": "int",
                        "typeName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setNull": {
                    "Parameter": {
                        "parameterName": "String",
                        "sqlType": "int",
                        "typeName": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBoolean": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setBoolean": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "boolean"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setByte": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setByte": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setShort": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "short"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setShort": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "short"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setInt": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setInt": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setLong": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "long"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setLong": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setFloat": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "float"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setFloat": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "float"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setDouble": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "double"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setDouble": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "double"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBigDecimal": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "BigDecimal"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setBigDecimal": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "BigDecimal"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setString": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setString": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "String"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBytes": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setBytes": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "byte"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setDate": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Date"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setTime": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Time"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setTimestamp": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Timestamp"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setTimestamp": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Timestamp"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setAsciiStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "InputStream",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setAsciiStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "InputStream",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBinaryStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "InputStream",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setBinaryStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "InputStream",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "reader": "Reader",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "reader": "Reader",
                        "length": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setAsciiStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setAsciiStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBinaryStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBinaryStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNCharacterStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "value": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Object",
                        "targetSqlType": "int",
                        "scaleOrLength": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Object",
                        "targetSqlType": "int",
                        "scale": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Object",
                        "targetSqlType": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Object",
                        "targetSqlType": "int"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Object"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Object"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setRef": {
                    "Parameter": {
                        "i": "int",
                        "x": "Ref"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setBlob": {
                    "Parameter": {
                        "i": "int",
                        "x": "Blob"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setBlob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "inputStream": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBlob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "inputStream": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBlob": {
                    "Parameter": {
                        "parameterName": "String",
                        "inputStream": "InputStream",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBlob": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Blob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setBlob": {
                    "Parameter": {
                        "parameterName": "String",
                        "inputStream": "InputStream"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setClob": {
                    "Parameter": {
                        "i": "int",
                        "x": "Clob"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setClob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setClob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setClob": {
                    "Parameter": {
                        "parameterName": "String",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setClob": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Clob"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setClob": {
                    "Parameter": {
                        "parameterName": "String",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setArray": {
                    "Parameter": {
                        "i": "int",
                        "x": "Array"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setDate": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Date",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setDate": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Date"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setDate": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Date",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setTime": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Time",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setTime": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Time"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setTime": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Time",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setTimestamp": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "Timestamp",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setTimestamp": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "Timestamp",
                        "cal": "Calendar"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "clearParameters": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "execute": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "addRowSetListener": {
                    "Parameter": {
                        "listener": "RowSetListener"
                    },
                    "Throw": []
                }
            },
            {
                "removeRowSetListener": {
                    "Parameter": {
                        "listener": "RowSetListener"
                    },
                    "Throw": []
                }
            },
            {
                "setSQLXML": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "xmlObject": "SQLXML"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setSQLXML": {
                    "Parameter": {
                        "parameterName": "String",
                        "xmlObject": "SQLXML"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setRowId": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "RowId"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setRowId": {
                    "Parameter": {
                        "parameterName": "String",
                        "x": "RowId"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setNString": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "value": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setNString": {
                    "Parameter": {
                        "parameterName": "String",
                        "value": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setNCharacterStream": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "value": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setNCharacterStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "value": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setNCharacterStream": {
                    "Parameter": {
                        "parameterName": "String",
                        "value": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNClob": {
                    "Parameter": {
                        "parameterName": "String",
                        "value": "NClob"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setNClob": {
                    "Parameter": {
                        "parameterName": "String",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNClob": {
                    "Parameter": {
                        "parameterName": "String",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNClob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "reader": "Reader",
                        "length": "long"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setNClob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "value": "NClob"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setNClob": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            },
            {
                "setURL": {
                    "Parameter": {
                        "parameterIndex": "int",
                        "x": "URL"
                    },
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "777": {
        "Package": "javax.sql",
        "Interface": "RowSetInternal",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getParams": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getConnection": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setMetaData": {
                    "Parameter": {
                        "md": "RowSetMetaData"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getOriginal": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getOriginalRow": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "778": {
        "Package": "javax.sql",
        "Interface": "RowSetListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "rowSetChanged": {
                    "Parameter": {
                        "event": "RowSetEvent"
                    },
                    "Throw": []
                }
            },
            {
                "rowChanged": {
                    "Parameter": {
                        "event": "RowSetEvent"
                    },
                    "Throw": []
                }
            },
            {
                "cursorMoved": {
                    "Parameter": {
                        "event": "RowSetEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "779": {
        "Package": "javax.sql",
        "Interface": "RowSetMetaData",
        "Superinterface": [
            "java.sql.ResultSetMetaData",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.sql.rowset.RowSetMetaDataImpl"
        ],
        "Method": [
            {
                "setColumnCount": {
                    "Parameter": {
                        "columnCount": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setAutoIncrement": {
                    "Parameter": {
                        "columnIndex": "int",
                        "property": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setCaseSensitive": {
                    "Parameter": {
                        "columnIndex": "int",
                        "property": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setSearchable": {
                    "Parameter": {
                        "columnIndex": "int",
                        "property": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setCurrency": {
                    "Parameter": {
                        "columnIndex": "int",
                        "property": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setNullable": {
                    "Parameter": {
                        "columnIndex": "int",
                        "property": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setSigned": {
                    "Parameter": {
                        "columnIndex": "int",
                        "property": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setColumnDisplaySize": {
                    "Parameter": {
                        "columnIndex": "int",
                        "size": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setColumnLabel": {
                    "Parameter": {
                        "columnIndex": "int",
                        "label": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setColumnName": {
                    "Parameter": {
                        "columnIndex": "int",
                        "columnName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setSchemaName": {
                    "Parameter": {
                        "columnIndex": "int",
                        "schemaName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setPrecision": {
                    "Parameter": {
                        "columnIndex": "int",
                        "precision": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setScale": {
                    "Parameter": {
                        "columnIndex": "int",
                        "scale": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setTableName": {
                    "Parameter": {
                        "columnIndex": "int",
                        "tableName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setCatalogName": {
                    "Parameter": {
                        "columnIndex": "int",
                        "catalogName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setColumnType": {
                    "Parameter": {
                        "columnIndex": "int",
                        "SQLType": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setColumnTypeName": {
                    "Parameter": {
                        "columnIndex": "int",
                        "typeName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "780": {
        "Package": "javax.sql",
        "Interface": "RowSetReader",
        "Superinterface": null,
        "Implementing Class": [
            "javax.sql.rowset.spi.XmlReader"
        ],
        "Subinterface": null,
        "Method": [
            {
                "readData": {
                    "Parameter": {
                        "caller": "RowSetInternal"
                    },
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "781": {
        "Package": "javax.sql",
        "Interface": "RowSetWriter",
        "Superinterface": null,
        "Implementing Class": [
            "javax.sql.rowset.spi.TransactionalWriter",
            "javax.sql.rowset.spi.XmlWriter"
        ],
        "Subinterface": null,
        "Method": [
            {
                "writeData": {
                    "Parameter": {
                        "caller": "RowSetInternal"
                    },
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "782": {
        "Package": "javax.sql",
        "Interface": "StatementEventListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "statementClosed": {
                    "Parameter": {
                        "event": "StatementEvent"
                    },
                    "Throw": []
                }
            },
            {
                "statementErrorOccurred": {
                    "Parameter": {
                        "event": "StatementEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "783": {
        "Package": "javax.sql",
        "Interface": "XAConnection",
        "Superinterface": [
            "javax.sql.PooledConnection"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getXAResource": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "784": {
        "Package": "javax.sql",
        "Interface": "XAConnectionBuilder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "user": {
                    "Parameter": {
                        "username": "String"
                    },
                    "Throw": []
                }
            },
            {
                "password": {
                    "Parameter": {
                        "password": "String"
                    },
                    "Throw": []
                }
            },
            {
                "shardingKey": {
                    "Parameter": {
                        "shardingKey": "ShardingKey"
                    },
                    "Throw": []
                }
            },
            {
                "superShardingKey": {
                    "Parameter": {
                        "superShardingKey": "ShardingKey"
                    },
                    "Throw": []
                }
            },
            {
                "build": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "785": {
        "Package": "javax.sql",
        "Interface": "XADataSource",
        "Superinterface": [
            "javax.sql.CommonDataSource"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getXAConnection": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "getXAConnection": {
                    "Parameter": {
                        "user": "String",
                        "password": "String"
                    },
                    "Throw": "java.sql.SQLTimeoutException"
                }
            },
            {
                "getLogWriter": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setLogWriter": {
                    "Parameter": {
                        "out": "PrintWriter"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setLoginTimeout": {
                    "Parameter": {
                        "seconds": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getLoginTimeout": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "createXAConnectionBuilder": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLFeatureNotSupportedException"
                }
            }
        ]
    },
    "786": {
        "Package": "javax.sql.rowset",
        "Interface": "CachedRowSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sql.rowset.Joinable",
            "java.sql.ResultSet",
            "javax.sql.RowSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "javax.sql.rowset.FilteredRowSet",
            "javax.sql.rowset.JoinRowSet",
            "javax.sql.rowset.WebRowSet"
        ],
        "Subinterface": null,
        "Method": [
            {
                "populate": {
                    "Parameter": {
                        "data": "ResultSet"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "execute": {
                    "Parameter": {
                        "conn": "Connection"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "acceptChanges": {
                    "Parameter": {},
                    "Throw": "javax.sql.rowset.spi.SyncProviderException"
                }
            },
            {
                "acceptChanges": {
                    "Parameter": {
                        "con": "Connection"
                    },
                    "Throw": "javax.sql.rowset.spi.SyncProviderException"
                }
            },
            {
                "restoreOriginal": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "release": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "undoDelete": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "undoInsert": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "undoUpdate": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "columnUpdated": {
                    "Parameter": {
                        "idx": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "columnUpdated": {
                    "Parameter": {
                        "columnName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "toCollection": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "toCollection": {
                    "Parameter": {
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "toCollection": {
                    "Parameter": {
                        "column": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getSyncProvider": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setSyncProvider": {
                    "Parameter": {
                        "provider": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMetaData": {
                    "Parameter": {
                        "md": "RowSetMetaData"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getOriginal": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getOriginalRow": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setOriginalRow": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getTableName": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setTableName": {
                    "Parameter": {
                        "tabName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getKeyColumns": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setKeyColumns": {
                    "Parameter": {
                        "keys": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "createShared": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "createCopy": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "createCopySchema": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "createCopyNoConstraints": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getRowSetWarnings": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getShowDeleted": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setShowDeleted": {
                    "Parameter": {
                        "b": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "commit": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "rollback": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "rollback": {
                    "Parameter": {
                        "s": "Savepoint"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "rowSetPopulated": {
                    "Parameter": {
                        "event": "RowSetEvent",
                        "numRows": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "populate": {
                    "Parameter": {
                        "rs": "ResultSet",
                        "startRow": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setPageSize": {
                    "Parameter": {
                        "size": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getPageSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "nextPage": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "previousPage": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "787": {
        "Package": "javax.sql.rowset",
        "Interface": "FilteredRowSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sql.rowset.CachedRowSet",
            "javax.sql.rowset.Joinable",
            "java.sql.ResultSet",
            "javax.sql.RowSet",
            "javax.sql.rowset.WebRowSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "setFilter": {
                    "Parameter": {
                        "p": "Predicate"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getFilter": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "788": {
        "Package": "javax.sql.rowset",
        "Interface": "JdbcRowSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sql.rowset.Joinable",
            "java.sql.ResultSet",
            "javax.sql.RowSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getShowDeleted": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setShowDeleted": {
                    "Parameter": {
                        "b": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getRowSetWarnings": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "commit": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getAutoCommit": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setAutoCommit": {
                    "Parameter": {
                        "autoCommit": "boolean"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "rollback": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "rollback": {
                    "Parameter": {
                        "s": "Savepoint"
                    },
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "789": {
        "Package": "javax.sql.rowset",
        "Interface": "Joinable",
        "Superinterface": null,
        "Implementing Class": [
            "javax.sql.rowset.CachedRowSet",
            "javax.sql.rowset.FilteredRowSet",
            "javax.sql.rowset.JdbcRowSet",
            "javax.sql.rowset.JoinRowSet",
            "javax.sql.rowset.WebRowSet"
        ],
        "Subinterface": null,
        "Method": [
            {
                "setMatchColumn": {
                    "Parameter": {
                        "columnIdx": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setMatchColumn": {
                    "Parameter": {
                        "columnIdxes": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setMatchColumn": {
                    "Parameter": {
                        "columnName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setMatchColumn": {
                    "Parameter": {
                        "columnNames": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMatchColumnIndexes": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getMatchColumnNames": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "unsetMatchColumn": {
                    "Parameter": {
                        "columnIdx": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "unsetMatchColumn": {
                    "Parameter": {
                        "columnIdxes": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "unsetMatchColumn": {
                    "Parameter": {
                        "columnName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "unsetMatchColumn": {
                    "Parameter": {
                        "columnName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "790": {
        "Package": "javax.sql.rowset",
        "Interface": "JoinRowSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sql.rowset.CachedRowSet",
            "javax.sql.rowset.Joinable",
            "java.sql.ResultSet",
            "javax.sql.RowSet",
            "javax.sql.rowset.WebRowSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addRowSet": {
                    "Parameter": {
                        "rowset": "Joinable"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "addRowSet": {
                    "Parameter": {
                        "rowset": "RowSet",
                        "columnIdx": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "addRowSet": {
                    "Parameter": {
                        "rowset": "RowSet",
                        "columnName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "addRowSet": {
                    "Parameter": {
                        "rowset": "RowSet",
                        "columnIdx": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "addRowSet": {
                    "Parameter": {
                        "rowset": "RowSet",
                        "columnName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getRowSets": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getRowSetNames": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "toCachedRowSet": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "supportsCrossJoin": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "supportsInnerJoin": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "supportsLeftOuterJoin": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "supportsRightOuterJoin": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "supportsFullJoin": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setJoinType": {
                    "Parameter": {
                        "joinType": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getWhereClause": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getJoinType": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "791": {
        "Package": "javax.sql.rowset",
        "Interface": "Predicate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "evaluate": {
                    "Parameter": {
                        "rs": "RowSet"
                    },
                    "Throw": []
                }
            },
            {
                "evaluate": {
                    "Parameter": {
                        "value": "Object",
                        "column": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "evaluate": {
                    "Parameter": {
                        "value": "Object",
                        "columnName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "792": {
        "Package": "javax.sql.rowset",
        "Interface": "RowSetFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createCachedRowSet": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "createFilteredRowSet": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "createJdbcRowSet": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "createJoinRowSet": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "createWebRowSet": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "793": {
        "Package": "javax.sql.rowset",
        "Interface": "WebRowSet",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "javax.sql.rowset.CachedRowSet",
            "javax.sql.rowset.Joinable",
            "java.sql.ResultSet",
            "javax.sql.RowSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": [
            "javax.sql.rowset.FilteredRowSet",
            "javax.sql.rowset.JoinRowSet"
        ],
        "Subinterface": null,
        "Method": [
            {
                "readXml": {
                    "Parameter": {
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "readXml": {
                    "Parameter": {
                        "iStream": "InputStream"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeXml": {
                    "Parameter": {
                        "rs": "ResultSet",
                        "writer": "Writer"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "writeXml": {
                    "Parameter": {
                        "rs": "ResultSet",
                        "oStream": "OutputStream"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "writeXml": {
                    "Parameter": {
                        "writer": "Writer"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "writeXml": {
                    "Parameter": {
                        "oStream": "OutputStream"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "794": {
        "Package": "javax.sql.rowset.spi",
        "Interface": "SyncResolver",
        "Superinterface": [
            "java.lang.AutoCloseable",
            "java.sql.ResultSet",
            "javax.sql.RowSet",
            "java.sql.Wrapper"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getStatus": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getConflictValue": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "getConflictValue": {
                    "Parameter": {
                        "columnName": "String"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setResolvedValue": {
                    "Parameter": {
                        "index": "int",
                        "obj": "Object"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "setResolvedValue": {
                    "Parameter": {
                        "columnName": "String",
                        "obj": "Object"
                    },
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "nextConflict": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "previousConflict": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "795": {
        "Package": "javax.sql.rowset.spi",
        "Interface": "TransactionalWriter",
        "Superinterface": [
            "javax.sql.RowSetWriter"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "commit": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "rollback": {
                    "Parameter": {},
                    "Throw": "java.sql.SQLException"
                }
            },
            {
                "rollback": {
                    "Parameter": {
                        "s": "Savepoint"
                    },
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "796": {
        "Package": "javax.sql.rowset.spi",
        "Interface": "XmlReader",
        "Superinterface": [
            "javax.sql.RowSetReader"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "readXML": {
                    "Parameter": {
                        "caller": "WebRowSet",
                        "reader": "Reader"
                    },
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "797": {
        "Package": "javax.sql.rowset.spi",
        "Interface": "XmlWriter",
        "Superinterface": [
            "javax.sql.RowSetWriter"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "writeXML": {
                    "Parameter": {
                        "caller": "WebRowSet",
                        "writer": "Writer"
                    },
                    "Throw": "java.sql.SQLException"
                }
            }
        ]
    },
    "798": {
        "Package": "javax.transaction.xa",
        "Interface": "XAResource",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "commit": {
                    "Parameter": {
                        "xid": "Xid",
                        "onePhase": "boolean"
                    },
                    "Throw": "javax.transaction.xa.XAException"
                }
            },
            {
                "end": {
                    "Parameter": {
                        "xid": "Xid",
                        "flags": "int"
                    },
                    "Throw": "javax.transaction.xa.XAException"
                }
            },
            {
                "forget": {
                    "Parameter": {
                        "xid": "Xid"
                    },
                    "Throw": "javax.transaction.xa.XAException"
                }
            },
            {
                "getTransactionTimeout": {
                    "Parameter": {},
                    "Throw": "javax.transaction.xa.XAException"
                }
            },
            {
                "isSameRM": {
                    "Parameter": {
                        "xares": "XAResource"
                    },
                    "Throw": "javax.transaction.xa.XAException"
                }
            },
            {
                "prepare": {
                    "Parameter": {
                        "xid": "Xid"
                    },
                    "Throw": "javax.transaction.xa.XAException"
                }
            },
            {
                "recover": {
                    "Parameter": {
                        "flag": "int"
                    },
                    "Throw": "javax.transaction.xa.XAException"
                }
            },
            {
                "rollback": {
                    "Parameter": {
                        "xid": "Xid"
                    },
                    "Throw": "javax.transaction.xa.XAException"
                }
            },
            {
                "setTransactionTimeout": {
                    "Parameter": {
                        "seconds": "int"
                    },
                    "Throw": "javax.transaction.xa.XAException"
                }
            },
            {
                "start": {
                    "Parameter": {
                        "xid": "Xid",
                        "flags": "int"
                    },
                    "Throw": "javax.transaction.xa.XAException"
                }
            }
        ]
    },
    "799": {
        "Package": "javax.transaction.xa",
        "Interface": "Xid",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getFormatId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getGlobalTransactionId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBranchQualifier": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "800": {
        "Package": "javax.xml.catalog",
        "Interface": "Catalog",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "matchSystem": {
                    "Parameter": {
                        "systemId": "String"
                    },
                    "Throw": []
                }
            },
            {
                "matchPublic": {
                    "Parameter": {
                        "publicId": "String"
                    },
                    "Throw": []
                }
            },
            {
                "matchURI": {
                    "Parameter": {
                        "uri": "String"
                    },
                    "Throw": []
                }
            },
            {
                "catalogs": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "801": {
        "Package": "javax.xml.catalog",
        "Interface": "CatalogResolver",
        "Superinterface": [
            "org.xml.sax.EntityResolver",
            "org.w3c.dom.ls.LSResourceResolver",
            "javax.xml.transform.URIResolver",
            "javax.xml.stream.XMLResolver"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "resolveEntity": {
                    "Parameter": {
                        "publicId": "String",
                        "systemId": "String"
                    },
                    "Throw": "javax.xml.catalog.CatalogException"
                }
            },
            {
                "resolve": {
                    "Parameter": {
                        "href": "String",
                        "base": "String"
                    },
                    "Throw": "javax.xml.catalog.CatalogException"
                }
            },
            {
                "resolveEntity": {
                    "Parameter": {
                        "publicId": "String",
                        "systemId": "String",
                        "baseUri": "String",
                        "namespace": "String"
                    },
                    "Throw": "javax.xml.catalog.CatalogException"
                }
            },
            {
                "resolveResource": {
                    "Parameter": {
                        "type": "String",
                        "namespaceUri": "String",
                        "publicId": "String",
                        "systemId": "String",
                        "baseUri": "String"
                    },
                    "Throw": "javax.xml.catalog.CatalogException"
                }
            }
        ]
    },
    "802": {
        "Package": "javax.xml.namespace",
        "Interface": "NamespaceContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getNamespaceURI": {
                    "Parameter": {
                        "prefix": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getPrefix": {
                    "Parameter": {
                        "namespaceURI": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getPrefixes": {
                    "Parameter": {
                        "namespaceURI": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "803": {
        "Package": "javax.xml.stream",
        "Interface": "EventFilter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "accept": {
                    "Parameter": {
                        "event": "XMLEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "804": {
        "Package": "javax.xml.stream",
        "Interface": "Location",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLineNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getColumnNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCharacterOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPublicId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "805": {
        "Package": "javax.xml.stream",
        "Interface": "StreamFilter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "accept": {
                    "Parameter": {
                        "reader": "XMLStreamReader"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "806": {
        "Package": "javax.xml.stream",
        "Interface": "XMLEventReader",
        "Superinterface": [
            "java.util.Iterator"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.stream.util.EventReaderDelegate"
        ],
        "Method": [
            {
                "nextEvent": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "hasNext": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "peek": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "getElementText": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "nextTag": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "getProperty": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            }
        ]
    },
    "807": {
        "Package": "javax.xml.stream",
        "Interface": "XMLEventWriter",
        "Superinterface": [
            "javax.xml.stream.util.XMLEventConsumer"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "flush": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "add": {
                    "Parameter": {
                        "event": "XMLEvent"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "add": {
                    "Parameter": {
                        "reader": "XMLEventReader"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "getPrefix": {
                    "Parameter": {
                        "uri": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "setPrefix": {
                    "Parameter": {
                        "prefix": "String",
                        "uri": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "setDefaultNamespace": {
                    "Parameter": {
                        "uri": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "setNamespaceContext": {
                    "Parameter": {
                        "context": "NamespaceContext"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "getNamespaceContext": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "808": {
        "Package": "javax.xml.stream",
        "Interface": "XMLReporter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "report": {
                    "Parameter": {
                        "message": "String",
                        "errorType": "String",
                        "relatedInformation": "Object",
                        "location": "Location"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            }
        ]
    },
    "809": {
        "Package": "javax.xml.stream",
        "Interface": "XMLResolver",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.catalog.CatalogResolver"
        ],
        "Subinterface": null,
        "Method": [
            {
                "resolveEntity": {
                    "Parameter": {
                        "publicID": "String",
                        "systemID": "String",
                        "baseURI": "String",
                        "namespace": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            }
        ]
    },
    "810": {
        "Package": "javax.xml.stream",
        "Interface": "XMLStreamReader",
        "Superinterface": [
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.stream.util.StreamReaderDelegate"
        ],
        "Method": [
            {
                "getProperty": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "next": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "require": {
                    "Parameter": {
                        "type": "int",
                        "namespaceURI": "String",
                        "localName": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "getElementText": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "nextTag": {
                    "Parameter": {},
                    "Throw": "java.util.NoSuchElementException"
                }
            },
            {
                "hasNext": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "getNamespaceURI": {
                    "Parameter": {
                        "prefix": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "isStartElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEndElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCharacters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isWhiteSpace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttributeValue": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "localName": "String"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getAttributeCount": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getAttributeName": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getAttributeNamespace": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getAttributeLocalName": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getAttributePrefix": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getAttributeType": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getAttributeValue": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "isAttributeSpecified": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getNamespaceCount": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getNamespacePrefix": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getNamespaceURI": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getNamespaceContext": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEventType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getText": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getTextCharacters": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getTextCharacters": {
                    "Parameter": {
                        "sourceStart": "int",
                        "target": "char",
                        "targetStart": "int",
                        "length": "int"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getTextStart": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getTextLength": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getEncoding": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hasText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLocation": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getLocalName": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "hasName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNamespaceURI": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrefix": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isStandalone": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "standaloneSet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCharacterEncodingScheme": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPITarget": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPIData": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "811": {
        "Package": "javax.xml.stream",
        "Interface": "XMLStreamWriter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "writeStartElement": {
                    "Parameter": {
                        "localName": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeStartElement": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "localName": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeStartElement": {
                    "Parameter": {
                        "prefix": "String",
                        "localName": "String",
                        "namespaceURI": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeEmptyElement": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "localName": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeEmptyElement": {
                    "Parameter": {
                        "prefix": "String",
                        "localName": "String",
                        "namespaceURI": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeEmptyElement": {
                    "Parameter": {
                        "localName": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeEndElement": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeEndDocument": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "flush": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeAttribute": {
                    "Parameter": {
                        "localName": "String",
                        "value": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeAttribute": {
                    "Parameter": {
                        "prefix": "String",
                        "namespaceURI": "String",
                        "localName": "String",
                        "value": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeAttribute": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "localName": "String",
                        "value": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeNamespace": {
                    "Parameter": {
                        "prefix": "String",
                        "namespaceURI": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeDefaultNamespace": {
                    "Parameter": {
                        "namespaceURI": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeComment": {
                    "Parameter": {
                        "data": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeProcessingInstruction": {
                    "Parameter": {
                        "target": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeProcessingInstruction": {
                    "Parameter": {
                        "target": "String",
                        "data": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeCData": {
                    "Parameter": {
                        "data": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeDTD": {
                    "Parameter": {
                        "dtd": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeEntityRef": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeStartDocument": {
                    "Parameter": {},
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeStartDocument": {
                    "Parameter": {
                        "version": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeStartDocument": {
                    "Parameter": {
                        "encoding": "String",
                        "version": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeCharacters": {
                    "Parameter": {
                        "text": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "writeCharacters": {
                    "Parameter": {
                        "text": "char",
                        "start": "int",
                        "len": "int"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "getPrefix": {
                    "Parameter": {
                        "uri": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "setPrefix": {
                    "Parameter": {
                        "prefix": "String",
                        "uri": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "setDefaultNamespace": {
                    "Parameter": {
                        "uri": "String"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "setNamespaceContext": {
                    "Parameter": {
                        "context": "NamespaceContext"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "getNamespaceContext": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getProperty": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "812": {
        "Package": "javax.xml.stream.events",
        "Interface": "Attribute",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": [
            "javax.xml.stream.events.Namespace"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDTDType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSpecified": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "813": {
        "Package": "javax.xml.stream.events",
        "Interface": "Characters",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getData": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isWhiteSpace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCData": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isIgnorableWhiteSpace": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "814": {
        "Package": "javax.xml.stream.events",
        "Interface": "Comment",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getText": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "815": {
        "Package": "javax.xml.stream.events",
        "Interface": "DTD",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDocumentTypeDeclaration": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getProcessedDTD": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNotations": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEntities": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "816": {
        "Package": "javax.xml.stream.events",
        "Interface": "EndDocument",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "817": {
        "Package": "javax.xml.stream.events",
        "Interface": "EndElement",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNamespaces": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "818": {
        "Package": "javax.xml.stream.events",
        "Interface": "EntityDeclaration",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPublicId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNotationName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReplacementText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBaseURI": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "819": {
        "Package": "javax.xml.stream.events",
        "Interface": "EntityReference",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDeclaration": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "820": {
        "Package": "javax.xml.stream.events",
        "Interface": "Namespace",
        "Superinterface": [
            "javax.xml.stream.events.Attribute",
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPrefix": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNamespaceURI": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDefaultNamespaceDeclaration": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "821": {
        "Package": "javax.xml.stream.events",
        "Interface": "NotationDeclaration",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPublicId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "822": {
        "Package": "javax.xml.stream.events",
        "Interface": "ProcessingInstruction",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTarget": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getData": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "823": {
        "Package": "javax.xml.stream.events",
        "Interface": "StartDocument",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCharacterEncodingScheme": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "encodingSet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isStandalone": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "standaloneSet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "824": {
        "Package": "javax.xml.stream.events",
        "Interface": "StartElement",
        "Superinterface": [
            "javax.xml.stream.events.XMLEvent",
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNamespaces": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttributeByName": {
                    "Parameter": {
                        "name": "QName"
                    },
                    "Throw": []
                }
            },
            {
                "getNamespaceContext": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNamespaceURI": {
                    "Parameter": {
                        "prefix": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "825": {
        "Package": "javax.xml.stream.events",
        "Interface": "XMLEvent",
        "Superinterface": [
            "javax.xml.stream.XMLStreamConstants"
        ],
        "Implementing Class": [
            "javax.xml.stream.events.Attribute",
            "javax.xml.stream.events.Characters",
            "javax.xml.stream.events.Comment",
            "javax.xml.stream.events.DTD",
            "javax.xml.stream.events.EndDocument",
            "javax.xml.stream.events.EndElement",
            "javax.xml.stream.events.EntityDeclaration",
            "javax.xml.stream.events.EntityReference",
            "javax.xml.stream.events.Namespace",
            "javax.xml.stream.events.NotationDeclaration",
            "javax.xml.stream.events.ProcessingInstruction",
            "javax.xml.stream.events.StartDocument",
            "javax.xml.stream.events.StartElement"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getEventType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLocation": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isStartElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isAttribute": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isNamespace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEndElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEntityReference": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isProcessingInstruction": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCharacters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isStartDocument": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEndDocument": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "asStartElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "asEndElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "asCharacters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSchemaType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "writeAsEncodedUnicode": {
                    "Parameter": {
                        "writer": "Writer"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            }
        ]
    },
    "826": {
        "Package": "javax.xml.stream.util",
        "Interface": "XMLEventAllocator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "newInstance": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "allocate": {
                    "Parameter": {
                        "reader": "XMLStreamReader"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            },
            {
                "allocate": {
                    "Parameter": {
                        "reader": "XMLStreamReader",
                        "consumer": "XMLEventConsumer"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            }
        ]
    },
    "827": {
        "Package": "javax.xml.stream.util",
        "Interface": "XMLEventConsumer",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.stream.XMLEventWriter"
        ],
        "Subinterface": null,
        "Method": [
            {
                "add": {
                    "Parameter": {
                        "event": "XMLEvent"
                    },
                    "Throw": "javax.xml.stream.XMLStreamException"
                }
            }
        ]
    },
    "828": {
        "Package": "javax.xml.transform",
        "Interface": "ErrorListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "warning": {
                    "Parameter": {
                        "exception": "TransformerException"
                    },
                    "Throw": "javax.xml.transform.TransformerException"
                }
            },
            {
                "error": {
                    "Parameter": {
                        "exception": "TransformerException"
                    },
                    "Throw": "javax.xml.transform.TransformerException"
                }
            },
            {
                "fatalError": {
                    "Parameter": {
                        "exception": "TransformerException"
                    },
                    "Throw": "javax.xml.transform.TransformerException"
                }
            }
        ]
    },
    "829": {
        "Package": "javax.xml.transform",
        "Interface": "Result",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.transform.dom.DOMResult",
            "javax.xml.transform.sax.SAXResult",
            "javax.xml.transform.stax.StAXResult",
            "javax.xml.transform.stream.StreamResult"
        ],
        "Method": [
            {
                "setSystemId": {
                    "Parameter": {
                        "systemId": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "830": {
        "Package": "javax.xml.transform",
        "Interface": "Source",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.transform.dom.DOMSource",
            "javax.xml.transform.sax.SAXSource",
            "javax.xml.transform.stax.StAXSource",
            "javax.xml.transform.stream.StreamSource"
        ],
        "Method": [
            {
                "setSystemId": {
                    "Parameter": {
                        "systemId": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEmpty": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "831": {
        "Package": "javax.xml.transform",
        "Interface": "SourceLocator",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.transform.dom.DOMLocator"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getPublicId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLineNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getColumnNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "832": {
        "Package": "javax.xml.transform",
        "Interface": "Templates",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "newTransformer": {
                    "Parameter": {},
                    "Throw": "javax.xml.transform.TransformerConfigurationException"
                }
            },
            {
                "getOutputProperties": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "833": {
        "Package": "javax.xml.transform",
        "Interface": "URIResolver",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.catalog.CatalogResolver"
        ],
        "Subinterface": null,
        "Method": [
            {
                "resolve": {
                    "Parameter": {
                        "href": "String",
                        "base": "String"
                    },
                    "Throw": "javax.xml.transform.TransformerException"
                }
            }
        ]
    },
    "834": {
        "Package": "javax.xml.transform.dom",
        "Interface": "DOMLocator",
        "Superinterface": [
            "javax.xml.transform.SourceLocator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getOriginatingNode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "835": {
        "Package": "javax.xml.transform.sax",
        "Interface": "TemplatesHandler",
        "Superinterface": [
            "org.xml.sax.ContentHandler"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTemplates": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSystemId": {
                    "Parameter": {
                        "systemID": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "836": {
        "Package": "javax.xml.transform.sax",
        "Interface": "TransformerHandler",
        "Superinterface": [
            "org.xml.sax.ContentHandler",
            "org.xml.sax.DTDHandler",
            "org.xml.sax.ext.LexicalHandler"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "setResult": {
                    "Parameter": {
                        "result": "Result"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "setSystemId": {
                    "Parameter": {
                        "systemID": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTransformer": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "837": {
        "Package": "javax.xml.xpath",
        "Interface": "XPath",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "reset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setXPathVariableResolver": {
                    "Parameter": {
                        "resolver": "XPathVariableResolver"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getXPathVariableResolver": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setXPathFunctionResolver": {
                    "Parameter": {
                        "resolver": "XPathFunctionResolver"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getXPathFunctionResolver": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setNamespaceContext": {
                    "Parameter": {
                        "nsContext": "NamespaceContext"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getNamespaceContext": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "compile": {
                    "Parameter": {
                        "expression": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "evaluate": {
                    "Parameter": {
                        "expression": "String",
                        "item": "Object",
                        "returnType": "QName"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "evaluate": {
                    "Parameter": {
                        "expression": "String",
                        "item": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "evaluate": {
                    "Parameter": {
                        "expression": "String",
                        "source": "InputSource",
                        "returnType": "QName"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "evaluate": {
                    "Parameter": {
                        "expression": "String",
                        "source": "InputSource"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "evaluateExpression": {
                    "Parameter": {
                        "expression": "String",
                        "item": "Object",
                        "Ttype": "Class"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "evaluateExpression": {
                    "Parameter": {
                        "expression": "String",
                        "item": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "evaluateExpression": {
                    "Parameter": {
                        "expression": "String",
                        "source": "InputSource",
                        "Ttype": "Class"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "evaluateExpression": {
                    "Parameter": {
                        "expression": "String",
                        "source": "InputSource"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "838": {
        "Package": "javax.xml.xpath",
        "Interface": "XPathEvaluationResult",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "type": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "value": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "839": {
        "Package": "javax.xml.xpath",
        "Interface": "XPathExpression",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "evaluate": {
                    "Parameter": {
                        "item": "Object",
                        "returnType": "QName"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "evaluate": {
                    "Parameter": {
                        "item": "Object"
                    },
                    "Throw": "javax.xml.xpath.XPathExpressionException"
                }
            },
            {
                "evaluate": {
                    "Parameter": {
                        "source": "InputSource",
                        "returnType": "QName"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "evaluate": {
                    "Parameter": {
                        "source": "InputSource"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "evaluateExpression": {
                    "Parameter": {
                        "item": "Object",
                        "Ttype": "Class"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "evaluateExpression": {
                    "Parameter": {
                        "item": "Object"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "evaluateExpression": {
                    "Parameter": {
                        "source": "InputSource",
                        "Ttype": "Class"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "evaluateExpression": {
                    "Parameter": {
                        "source": "InputSource"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "840": {
        "Package": "javax.xml.xpath",
        "Interface": "XPathFunction",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "evaluate": {
                    "Parameter": {
                        "args": "List"
                    },
                    "Throw": "javax.xml.xpath.XPathFunctionException"
                }
            }
        ]
    },
    "841": {
        "Package": "javax.xml.xpath",
        "Interface": "XPathFunctionResolver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "resolveFunction": {
                    "Parameter": {
                        "functionName": "QName",
                        "arity": "int"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "842": {
        "Package": "javax.xml.xpath",
        "Interface": "XPathNodes",
        "Superinterface": [
            "java.lang.Iterable",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "iterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "get": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "javax.xml.xpath.XPathException"
                }
            }
        ]
    },
    "843": {
        "Package": "javax.xml.xpath",
        "Interface": "XPathVariableResolver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "resolveVariable": {
                    "Parameter": {
                        "variableName": "QName"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "844": {
        "Package": "org.w3c.dom",
        "Interface": "Attr",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSpecified": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getOwnerElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSchemaTypeInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isId": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "845": {
        "Package": "org.w3c.dom",
        "Interface": "CDATASection",
        "Superinterface": [
            "org.w3c.dom.CharacterData",
            "org.w3c.dom.Node",
            "org.w3c.dom.Text"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "846": {
        "Package": "org.w3c.dom",
        "Interface": "CharacterData",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": [
            "org.w3c.dom.CDATASection",
            "org.w3c.dom.Comment",
            "org.w3c.dom.Text"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getData": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setData": {
                    "Parameter": {
                        "data": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "substringData": {
                    "Parameter": {
                        "offset": "int",
                        "count": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "appendData": {
                    "Parameter": {
                        "arg": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "insertData": {
                    "Parameter": {
                        "offset": "int",
                        "arg": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "deleteData": {
                    "Parameter": {
                        "offset": "int",
                        "count": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "replaceData": {
                    "Parameter": {
                        "offset": "int",
                        "count": "int",
                        "arg": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "847": {
        "Package": "org.w3c.dom",
        "Interface": "Comment",
        "Superinterface": [
            "org.w3c.dom.CharacterData",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "848": {
        "Package": "org.w3c.dom",
        "Interface": "Document",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": [
            "org.w3c.dom.html.HTMLDocument"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getDoctype": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getImplementation": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDocumentElement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createElement": {
                    "Parameter": {
                        "tagName": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "createDocumentFragment": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createTextNode": {
                    "Parameter": {
                        "data": "String"
                    },
                    "Throw": []
                }
            },
            {
                "createComment": {
                    "Parameter": {
                        "data": "String"
                    },
                    "Throw": []
                }
            },
            {
                "createCDATASection": {
                    "Parameter": {
                        "data": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "createProcessingInstruction": {
                    "Parameter": {
                        "target": "String",
                        "data": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "createAttribute": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "createEntityReference": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getElementsByTagName": {
                    "Parameter": {
                        "tagname": "String"
                    },
                    "Throw": []
                }
            },
            {
                "importNode": {
                    "Parameter": {
                        "importedNode": "Node",
                        "deep": "boolean"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "createElementNS": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "qualifiedName": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "createAttributeNS": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "qualifiedName": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getElementsByTagNameNS": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "localName": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getElementById": {
                    "Parameter": {
                        "elementId": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getInputEncoding": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getXmlEncoding": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getXmlStandalone": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setXmlStandalone": {
                    "Parameter": {
                        "xmlStandalone": "boolean"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getXmlVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setXmlVersion": {
                    "Parameter": {
                        "xmlVersion": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getStrictErrorChecking": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setStrictErrorChecking": {
                    "Parameter": {
                        "strictErrorChecking": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getDocumentURI": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDocumentURI": {
                    "Parameter": {
                        "documentURI": "String"
                    },
                    "Throw": []
                }
            },
            {
                "adoptNode": {
                    "Parameter": {
                        "source": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getDomConfig": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "normalizeDocument": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "renameNode": {
                    "Parameter": {
                        "n": "Node",
                        "namespaceURI": "String",
                        "qualifiedName": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "849": {
        "Package": "org.w3c.dom",
        "Interface": "DocumentFragment",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "850": {
        "Package": "org.w3c.dom",
        "Interface": "DocumentType",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEntities": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNotations": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPublicId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getInternalSubset": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "851": {
        "Package": "org.w3c.dom",
        "Interface": "DOMConfiguration",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "setParameter": {
                    "Parameter": {
                        "name": "String",
                        "value": "Object"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getParameter": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "canSetParameter": {
                    "Parameter": {
                        "name": "String",
                        "value": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "getParameterNames": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "852": {
        "Package": "org.w3c.dom",
        "Interface": "DOMError",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getSeverity": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMessage": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRelatedException": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRelatedData": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLocation": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "853": {
        "Package": "org.w3c.dom",
        "Interface": "DOMErrorHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "handleError": {
                    "Parameter": {
                        "error": "DOMError"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "854": {
        "Package": "org.w3c.dom",
        "Interface": "DOMImplementation",
        "Superinterface": null,
        "Implementing Class": [
            "org.w3c.dom.css.DOMImplementationCSS",
            "org.w3c.dom.html.HTMLDOMImplementation"
        ],
        "Subinterface": null,
        "Method": [
            {
                "hasFeature": {
                    "Parameter": {
                        "feature": "String",
                        "version": "String"
                    },
                    "Throw": []
                }
            },
            {
                "createDocumentType": {
                    "Parameter": {
                        "qualifiedName": "String",
                        "publicId": "String",
                        "systemId": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "createDocument": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "qualifiedName": "String",
                        "doctype": "DocumentType"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getFeature": {
                    "Parameter": {
                        "feature": "String",
                        "version": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "855": {
        "Package": "org.w3c.dom",
        "Interface": "DOMImplementationList",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "item": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "856": {
        "Package": "org.w3c.dom",
        "Interface": "DOMImplementationSource",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDOMImplementation": {
                    "Parameter": {
                        "features": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getDOMImplementationList": {
                    "Parameter": {
                        "features": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "857": {
        "Package": "org.w3c.dom",
        "Interface": "DOMLocator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLineNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getColumnNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getByteOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getUtf16Offset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRelatedNode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getUri": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "858": {
        "Package": "org.w3c.dom",
        "Interface": "DOMStringList",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "item": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "str": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "859": {
        "Package": "org.w3c.dom",
        "Interface": "Element",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": [
            "org.w3c.dom.html.HTMLAnchorElement",
            "org.w3c.dom.html.HTMLAppletElement",
            "org.w3c.dom.html.HTMLAreaElement",
            "org.w3c.dom.html.HTMLBaseElement",
            "org.w3c.dom.html.HTMLBaseFontElement",
            "org.w3c.dom.html.HTMLBodyElement",
            "org.w3c.dom.html.HTMLBRElement",
            "org.w3c.dom.html.HTMLButtonElement",
            "org.w3c.dom.html.HTMLDirectoryElement",
            "org.w3c.dom.html.HTMLDivElement",
            "org.w3c.dom.html.HTMLDListElement",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.html.HTMLFieldSetElement",
            "org.w3c.dom.html.HTMLFontElement",
            "org.w3c.dom.html.HTMLFormElement",
            "org.w3c.dom.html.HTMLFrameElement",
            "org.w3c.dom.html.HTMLFrameSetElement",
            "org.w3c.dom.html.HTMLHeadElement",
            "org.w3c.dom.html.HTMLHeadingElement",
            "org.w3c.dom.html.HTMLHRElement",
            "org.w3c.dom.html.HTMLHtmlElement",
            "org.w3c.dom.html.HTMLIFrameElement",
            "org.w3c.dom.html.HTMLImageElement",
            "org.w3c.dom.html.HTMLInputElement",
            "org.w3c.dom.html.HTMLIsIndexElement",
            "org.w3c.dom.html.HTMLLabelElement",
            "org.w3c.dom.html.HTMLLegendElement",
            "org.w3c.dom.html.HTMLLIElement",
            "org.w3c.dom.html.HTMLLinkElement",
            "org.w3c.dom.html.HTMLMapElement",
            "org.w3c.dom.html.HTMLMenuElement",
            "org.w3c.dom.html.HTMLMetaElement",
            "org.w3c.dom.html.HTMLModElement",
            "org.w3c.dom.html.HTMLObjectElement",
            "org.w3c.dom.html.HTMLOListElement",
            "org.w3c.dom.html.HTMLOptGroupElement",
            "org.w3c.dom.html.HTMLOptionElement",
            "org.w3c.dom.html.HTMLParagraphElement",
            "org.w3c.dom.html.HTMLParamElement",
            "org.w3c.dom.html.HTMLPreElement",
            "org.w3c.dom.html.HTMLQuoteElement",
            "org.w3c.dom.html.HTMLScriptElement",
            "org.w3c.dom.html.HTMLSelectElement",
            "org.w3c.dom.html.HTMLStyleElement",
            "org.w3c.dom.html.HTMLTableCaptionElement",
            "org.w3c.dom.html.HTMLTableCellElement",
            "org.w3c.dom.html.HTMLTableColElement",
            "org.w3c.dom.html.HTMLTableElement",
            "org.w3c.dom.html.HTMLTableRowElement",
            "org.w3c.dom.html.HTMLTableSectionElement",
            "org.w3c.dom.html.HTMLTextAreaElement",
            "org.w3c.dom.html.HTMLTitleElement",
            "org.w3c.dom.html.HTMLUListElement"
        ],
        "Subinterface": [
            "javax.imageio.metadata.IIOMetadataNode"
        ],
        "Method": [
            {
                "getTagName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttribute": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "setAttribute": {
                    "Parameter": {
                        "name": "String",
                        "value": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "removeAttribute": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getAttributeNode": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "setAttributeNode": {
                    "Parameter": {
                        "newAttr": "Attr"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "removeAttributeNode": {
                    "Parameter": {
                        "oldAttr": "Attr"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getElementsByTagName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAttributeNS": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "localName": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setAttributeNS": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "qualifiedName": "String",
                        "value": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "removeAttributeNS": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "localName": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getAttributeNodeNS": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "localName": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setAttributeNodeNS": {
                    "Parameter": {
                        "newAttr": "Attr"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getElementsByTagNameNS": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "localName": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "hasAttribute": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "hasAttributeNS": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "localName": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getSchemaTypeInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setIdAttribute": {
                    "Parameter": {
                        "name": "String",
                        "isId": "boolean"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setIdAttributeNS": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "localName": "String",
                        "isId": "boolean"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setIdAttributeNode": {
                    "Parameter": {
                        "idAttr": "Attr",
                        "isId": "boolean"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "860": {
        "Package": "org.w3c.dom",
        "Interface": "ElementTraversal",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getFirstElementChild": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLastElementChild": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPreviousElementSibling": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNextElementSibling": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getChildElementCount": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "861": {
        "Package": "org.w3c.dom",
        "Interface": "Entity",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPublicId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNotationName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getInputEncoding": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getXmlEncoding": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getXmlVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "862": {
        "Package": "org.w3c.dom",
        "Interface": "EntityReference",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "863": {
        "Package": "org.w3c.dom",
        "Interface": "NamedNodeMap",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getNamedItem": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "setNamedItem": {
                    "Parameter": {
                        "arg": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "removeNamedItem": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "item": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNamedItemNS": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "localName": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setNamedItemNS": {
                    "Parameter": {
                        "arg": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "removeNamedItemNS": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "localName": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "864": {
        "Package": "org.w3c.dom",
        "Interface": "NameList",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getNamespaceURI": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "contains": {
                    "Parameter": {
                        "str": "String"
                    },
                    "Throw": []
                }
            },
            {
                "containsNS": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "name": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "865": {
        "Package": "org.w3c.dom",
        "Interface": "Node",
        "Superinterface": null,
        "Implementing Class": [
            "org.w3c.dom.Attr",
            "org.w3c.dom.CDATASection",
            "org.w3c.dom.CharacterData",
            "org.w3c.dom.Comment",
            "org.w3c.dom.Document",
            "org.w3c.dom.DocumentFragment",
            "org.w3c.dom.DocumentType",
            "org.w3c.dom.Element",
            "org.w3c.dom.Entity",
            "org.w3c.dom.EntityReference",
            "org.w3c.dom.html.HTMLAnchorElement",
            "org.w3c.dom.html.HTMLAppletElement",
            "org.w3c.dom.html.HTMLAreaElement",
            "org.w3c.dom.html.HTMLBaseElement",
            "org.w3c.dom.html.HTMLBaseFontElement",
            "org.w3c.dom.html.HTMLBodyElement",
            "org.w3c.dom.html.HTMLBRElement",
            "org.w3c.dom.html.HTMLButtonElement",
            "org.w3c.dom.html.HTMLDirectoryElement",
            "org.w3c.dom.html.HTMLDivElement",
            "org.w3c.dom.html.HTMLDListElement",
            "org.w3c.dom.html.HTMLDocument",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.html.HTMLFieldSetElement",
            "org.w3c.dom.html.HTMLFontElement",
            "org.w3c.dom.html.HTMLFormElement",
            "org.w3c.dom.html.HTMLFrameElement",
            "org.w3c.dom.html.HTMLFrameSetElement",
            "org.w3c.dom.html.HTMLHeadElement",
            "org.w3c.dom.html.HTMLHeadingElement",
            "org.w3c.dom.html.HTMLHRElement",
            "org.w3c.dom.html.HTMLHtmlElement",
            "org.w3c.dom.html.HTMLIFrameElement",
            "org.w3c.dom.html.HTMLImageElement",
            "org.w3c.dom.html.HTMLInputElement",
            "org.w3c.dom.html.HTMLIsIndexElement",
            "org.w3c.dom.html.HTMLLabelElement",
            "org.w3c.dom.html.HTMLLegendElement",
            "org.w3c.dom.html.HTMLLIElement",
            "org.w3c.dom.html.HTMLLinkElement",
            "org.w3c.dom.html.HTMLMapElement",
            "org.w3c.dom.html.HTMLMenuElement",
            "org.w3c.dom.html.HTMLMetaElement",
            "org.w3c.dom.html.HTMLModElement",
            "org.w3c.dom.html.HTMLObjectElement",
            "org.w3c.dom.html.HTMLOListElement",
            "org.w3c.dom.html.HTMLOptGroupElement",
            "org.w3c.dom.html.HTMLOptionElement",
            "org.w3c.dom.html.HTMLParagraphElement",
            "org.w3c.dom.html.HTMLParamElement",
            "org.w3c.dom.html.HTMLPreElement",
            "org.w3c.dom.html.HTMLQuoteElement",
            "org.w3c.dom.html.HTMLScriptElement",
            "org.w3c.dom.html.HTMLSelectElement",
            "org.w3c.dom.html.HTMLStyleElement",
            "org.w3c.dom.html.HTMLTableCaptionElement",
            "org.w3c.dom.html.HTMLTableCellElement",
            "org.w3c.dom.html.HTMLTableColElement",
            "org.w3c.dom.html.HTMLTableElement",
            "org.w3c.dom.html.HTMLTableRowElement",
            "org.w3c.dom.html.HTMLTableSectionElement",
            "org.w3c.dom.html.HTMLTextAreaElement",
            "org.w3c.dom.html.HTMLTitleElement",
            "org.w3c.dom.html.HTMLUListElement",
            "org.w3c.dom.Notation",
            "org.w3c.dom.ProcessingInstruction",
            "org.w3c.dom.Text",
            "org.w3c.dom.xpath.XPathNamespace"
        ],
        "Subinterface": [
            "javax.imageio.metadata.IIOMetadataNode"
        ],
        "Method": [
            {
                "getNodeName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNodeValue": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setNodeValue": {
                    "Parameter": {
                        "nodeValue": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getNodeType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParentNode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getChildNodes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFirstChild": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLastChild": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPreviousSibling": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNextSibling": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getOwnerDocument": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "insertBefore": {
                    "Parameter": {
                        "newChild": "Node",
                        "refChild": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "replaceChild": {
                    "Parameter": {
                        "newChild": "Node",
                        "oldChild": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "removeChild": {
                    "Parameter": {
                        "oldChild": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "appendChild": {
                    "Parameter": {
                        "newChild": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "hasChildNodes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "cloneNode": {
                    "Parameter": {
                        "deep": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "normalize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSupported": {
                    "Parameter": {
                        "feature": "String",
                        "version": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getNamespaceURI": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrefix": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPrefix": {
                    "Parameter": {
                        "prefix": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getLocalName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hasAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBaseURI": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "compareDocumentPosition": {
                    "Parameter": {
                        "other": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getTextContent": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setTextContent": {
                    "Parameter": {
                        "textContent": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "isSameNode": {
                    "Parameter": {
                        "other": "Node"
                    },
                    "Throw": []
                }
            },
            {
                "lookupPrefix": {
                    "Parameter": {
                        "namespaceURI": "String"
                    },
                    "Throw": []
                }
            },
            {
                "isDefaultNamespace": {
                    "Parameter": {
                        "namespaceURI": "String"
                    },
                    "Throw": []
                }
            },
            {
                "lookupNamespaceURI": {
                    "Parameter": {
                        "prefix": "String"
                    },
                    "Throw": []
                }
            },
            {
                "isEqualNode": {
                    "Parameter": {
                        "arg": "Node"
                    },
                    "Throw": []
                }
            },
            {
                "getFeature": {
                    "Parameter": {
                        "feature": "String",
                        "version": "String"
                    },
                    "Throw": []
                }
            },
            {
                "setUserData": {
                    "Parameter": {
                        "key": "String",
                        "data": "Object",
                        "handler": "UserDataHandler"
                    },
                    "Throw": []
                }
            },
            {
                "getUserData": {
                    "Parameter": {
                        "key": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "866": {
        "Package": "org.w3c.dom",
        "Interface": "NodeList",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "javax.imageio.metadata.IIOMetadataNode"
        ],
        "Method": [
            {
                "item": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "867": {
        "Package": "org.w3c.dom",
        "Interface": "Notation",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPublicId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "868": {
        "Package": "org.w3c.dom",
        "Interface": "ProcessingInstruction",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTarget": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getData": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setData": {
                    "Parameter": {
                        "data": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "869": {
        "Package": "org.w3c.dom",
        "Interface": "Text",
        "Superinterface": [
            "org.w3c.dom.CharacterData",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": [
            "org.w3c.dom.CDATASection"
        ],
        "Subinterface": null,
        "Method": [
            {
                "splitText": {
                    "Parameter": {
                        "offset": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "isElementContentWhitespace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getWholeText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "replaceWholeText": {
                    "Parameter": {
                        "content": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "870": {
        "Package": "org.w3c.dom",
        "Interface": "TypeInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTypeName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTypeNamespace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDerivedFrom": {
                    "Parameter": {
                        "typeNamespaceArg": "String",
                        "typeNameArg": "String",
                        "derivationMethod": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "871": {
        "Package": "org.w3c.dom",
        "Interface": "UserDataHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "handle": {
                    "Parameter": {
                        "operation": "short",
                        "key": "String",
                        "data": "Object",
                        "src": "Node",
                        "dst": "Node"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "872": {
        "Package": "org.w3c.dom.events",
        "Interface": "DocumentEvent",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createEvent": {
                    "Parameter": {
                        "eventType": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "873": {
        "Package": "org.w3c.dom.events",
        "Interface": "Event",
        "Superinterface": null,
        "Implementing Class": [
            "org.w3c.dom.ls.LSLoadEvent",
            "org.w3c.dom.ls.LSProgressEvent",
            "org.w3c.dom.events.MouseEvent",
            "org.w3c.dom.events.MutationEvent",
            "org.w3c.dom.events.UIEvent"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTarget": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCurrentTarget": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEventPhase": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBubbles": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCancelable": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTimeStamp": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "stopPropagation": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "preventDefault": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "initEvent": {
                    "Parameter": {
                        "eventTypeArg": "String",
                        "canBubbleArg": "boolean",
                        "cancelableArg": "boolean"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "874": {
        "Package": "org.w3c.dom.events",
        "Interface": "EventListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "handleEvent": {
                    "Parameter": {
                        "evt": "Event"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "875": {
        "Package": "org.w3c.dom.events",
        "Interface": "EventTarget",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addEventListener": {
                    "Parameter": {
                        "type": "String",
                        "listener": "EventListener",
                        "useCapture": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "removeEventListener": {
                    "Parameter": {
                        "type": "String",
                        "listener": "EventListener",
                        "useCapture": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "dispatchEvent": {
                    "Parameter": {
                        "evt": "Event"
                    },
                    "Throw": "org.w3c.dom.events.EventException"
                }
            }
        ]
    },
    "876": {
        "Package": "org.w3c.dom.events",
        "Interface": "MouseEvent",
        "Superinterface": [
            "org.w3c.dom.events.Event",
            "org.w3c.dom.events.UIEvent"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getScreenX": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getScreenY": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getClientX": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getClientY": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCtrlKey": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getShiftKey": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAltKey": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMetaKey": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getButton": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRelatedTarget": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "initMouseEvent": {
                    "Parameter": {
                        "typeArg": "String",
                        "canBubbleArg": "boolean",
                        "cancelableArg": "boolean",
                        "viewArg": "AbstractView",
                        "detailArg": "int",
                        "screenXArg": "int",
                        "screenYArg": "int",
                        "clientXArg": "int",
                        "clientYArg": "int",
                        "ctrlKeyArg": "boolean",
                        "altKeyArg": "boolean",
                        "shiftKeyArg": "boolean",
                        "metaKeyArg": "boolean",
                        "buttonArg": "short",
                        "relatedTargetArg": "EventTarget"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "877": {
        "Package": "org.w3c.dom.events",
        "Interface": "MutationEvent",
        "Superinterface": [
            "org.w3c.dom.events.Event"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getRelatedNode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrevValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNewValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttrName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttrChange": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "initMutationEvent": {
                    "Parameter": {
                        "typeArg": "String",
                        "canBubbleArg": "boolean",
                        "cancelableArg": "boolean",
                        "relatedNodeArg": "Node",
                        "prevValueArg": "String",
                        "newValueArg": "String",
                        "attrNameArg": "String",
                        "attrChangeArg": "short"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "878": {
        "Package": "org.w3c.dom.events",
        "Interface": "UIEvent",
        "Superinterface": [
            "org.w3c.dom.events.Event"
        ],
        "Implementing Class": [
            "org.w3c.dom.events.MouseEvent"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getView": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDetail": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "initUIEvent": {
                    "Parameter": {
                        "typeArg": "String",
                        "canBubbleArg": "boolean",
                        "cancelableArg": "boolean",
                        "viewArg": "AbstractView",
                        "detailArg": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "879": {
        "Package": "org.w3c.dom.ls",
        "Interface": "DOMImplementationLS",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createLSParser": {
                    "Parameter": {
                        "mode": "short",
                        "schemaType": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "createLSSerializer": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createLSInput": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createLSOutput": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "880": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSInput",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCharacterStream": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {
                        "characterStream": "Reader"
                    },
                    "Throw": []
                }
            },
            {
                "getByteStream": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setByteStream": {
                    "Parameter": {
                        "byteStream": "InputStream"
                    },
                    "Throw": []
                }
            },
            {
                "getStringData": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setStringData": {
                    "Parameter": {
                        "stringData": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSystemId": {
                    "Parameter": {
                        "systemId": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getPublicId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPublicId": {
                    "Parameter": {
                        "publicId": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getBaseURI": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBaseURI": {
                    "Parameter": {
                        "baseURI": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getEncoding": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setEncoding": {
                    "Parameter": {
                        "encoding": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCertifiedText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCertifiedText": {
                    "Parameter": {
                        "certifiedText": "boolean"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "881": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSLoadEvent",
        "Superinterface": [
            "org.w3c.dom.events.Event"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getNewDocument": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getInput": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "882": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSOutput",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCharacterStream": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCharacterStream": {
                    "Parameter": {
                        "characterStream": "Writer"
                    },
                    "Throw": []
                }
            },
            {
                "getByteStream": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setByteStream": {
                    "Parameter": {
                        "byteStream": "OutputStream"
                    },
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSystemId": {
                    "Parameter": {
                        "systemId": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getEncoding": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setEncoding": {
                    "Parameter": {
                        "encoding": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "883": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSParser",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDomConfig": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFilter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFilter": {
                    "Parameter": {
                        "filter": "LSParserFilter"
                    },
                    "Throw": []
                }
            },
            {
                "getAsync": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBusy": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "parse": {
                    "Parameter": {
                        "input": "LSInput"
                    },
                    "Throw": "org.w3c.dom.ls.LSException"
                }
            },
            {
                "parseURI": {
                    "Parameter": {
                        "uri": "String"
                    },
                    "Throw": "org.w3c.dom.ls.LSException"
                }
            },
            {
                "parseWithContext": {
                    "Parameter": {
                        "input": "LSInput",
                        "contextArg": "Node",
                        "action": "short"
                    },
                    "Throw": "org.w3c.dom.ls.LSException"
                }
            },
            {
                "abort": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "884": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSParserFilter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "startElement": {
                    "Parameter": {
                        "elementArg": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "acceptNode": {
                    "Parameter": {
                        "nodeArg": "Node"
                    },
                    "Throw": []
                }
            },
            {
                "getWhatToShow": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "885": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSProgressEvent",
        "Superinterface": [
            "org.w3c.dom.events.Event"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getInput": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTotalSize": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "886": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSResourceResolver",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.catalog.CatalogResolver"
        ],
        "Subinterface": null,
        "Method": [
            {
                "resolveResource": {
                    "Parameter": {
                        "type": "String",
                        "namespaceURI": "String",
                        "publicId": "String",
                        "systemId": "String",
                        "baseURI": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "887": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSSerializer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDomConfig": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNewLine": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setNewLine": {
                    "Parameter": {
                        "newLine": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getFilter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFilter": {
                    "Parameter": {
                        "filter": "LSSerializerFilter"
                    },
                    "Throw": []
                }
            },
            {
                "write": {
                    "Parameter": {
                        "nodeArg": "Node",
                        "destination": "LSOutput"
                    },
                    "Throw": "org.w3c.dom.ls.LSException"
                }
            },
            {
                "writeToURI": {
                    "Parameter": {
                        "nodeArg": "Node",
                        "uri": "String"
                    },
                    "Throw": "org.w3c.dom.ls.LSException"
                }
            },
            {
                "writeToString": {
                    "Parameter": {
                        "nodeArg": "Node"
                    },
                    "Throw": "org.w3c.dom.ls.LSException"
                }
            }
        ]
    },
    "888": {
        "Package": "org.w3c.dom.ls",
        "Interface": "LSSerializerFilter",
        "Superinterface": [
            "org.w3c.dom.traversal.NodeFilter"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getWhatToShow": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "889": {
        "Package": "org.w3c.dom.ranges",
        "Interface": "DocumentRange",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createRange": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "890": {
        "Package": "org.w3c.dom.ranges",
        "Interface": "Range",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getStartContainer": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getStartOffset": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getEndContainer": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getEndOffset": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getCollapsed": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getCommonAncestorContainer": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setStart": {
                    "Parameter": {
                        "refNode": "Node",
                        "offset": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setEnd": {
                    "Parameter": {
                        "refNode": "Node",
                        "offset": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setStartBefore": {
                    "Parameter": {
                        "refNode": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setStartAfter": {
                    "Parameter": {
                        "refNode": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setEndBefore": {
                    "Parameter": {
                        "refNode": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setEndAfter": {
                    "Parameter": {
                        "refNode": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "collapse": {
                    "Parameter": {
                        "toStart": "boolean"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "selectNode": {
                    "Parameter": {
                        "refNode": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "selectNodeContents": {
                    "Parameter": {
                        "refNode": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "compareBoundaryPoints": {
                    "Parameter": {
                        "how": "short",
                        "sourceRange": "Range"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "deleteContents": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "extractContents": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "cloneContents": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "insertNode": {
                    "Parameter": {
                        "newNode": "Node"
                    },
                    "Throw": "org.w3c.dom.ranges.RangeException"
                }
            },
            {
                "surroundContents": {
                    "Parameter": {
                        "newParent": "Node"
                    },
                    "Throw": "org.w3c.dom.ranges.RangeException"
                }
            },
            {
                "cloneRange": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "detach": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "891": {
        "Package": "org.w3c.dom.traversal",
        "Interface": "DocumentTraversal",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createNodeIterator": {
                    "Parameter": {
                        "root": "Node",
                        "whatToShow": "int",
                        "filter": "NodeFilter",
                        "entityReferenceExpansion": "boolean"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "createTreeWalker": {
                    "Parameter": {
                        "root": "Node",
                        "whatToShow": "int",
                        "filter": "NodeFilter",
                        "entityReferenceExpansion": "boolean"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "892": {
        "Package": "org.w3c.dom.traversal",
        "Interface": "NodeFilter",
        "Superinterface": null,
        "Implementing Class": [
            "org.w3c.dom.ls.LSSerializerFilter"
        ],
        "Subinterface": null,
        "Method": [
            {
                "acceptNode": {
                    "Parameter": {
                        "n": "Node"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "893": {
        "Package": "org.w3c.dom.traversal",
        "Interface": "NodeIterator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getRoot": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getWhatToShow": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFilter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExpandEntityReferences": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "nextNode": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "previousNode": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "detach": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "894": {
        "Package": "org.w3c.dom.traversal",
        "Interface": "TreeWalker",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getRoot": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getWhatToShow": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFilter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExpandEntityReferences": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCurrentNode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCurrentNode": {
                    "Parameter": {
                        "currentNode": "Node"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "parentNode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "firstChild": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "lastChild": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "previousSibling": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "nextSibling": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "previousNode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "nextNode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "895": {
        "Package": "org.w3c.dom.views",
        "Interface": "AbstractView",
        "Superinterface": null,
        "Implementing Class": [
            "org.w3c.dom.css.ViewCSS"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getDocument": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "896": {
        "Package": "org.w3c.dom.views",
        "Interface": "DocumentView",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDefaultView": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "897": {
        "Package": "org.xml.sax",
        "Interface": "AttributeList",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.helpers.AttributeListImpl"
        ],
        "Method": [
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {
                        "i": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {
                        "i": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {
                        "i": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "898": {
        "Package": "org.xml.sax",
        "Interface": "Attributes",
        "Superinterface": null,
        "Implementing Class": [
            "org.xml.sax.ext.Attributes2"
        ],
        "Subinterface": [
            "org.xml.sax.ext.Attributes2Impl",
            "org.xml.sax.helpers.AttributesImpl"
        ],
        "Method": [
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getURI": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getLocalName": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getQName": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getIndex": {
                    "Parameter": {
                        "uri": "String",
                        "localName": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getIndex": {
                    "Parameter": {
                        "qName": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {
                        "uri": "String",
                        "localName": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {
                        "qName": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {
                        "uri": "String",
                        "localName": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {
                        "qName": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "899": {
        "Package": "org.xml.sax",
        "Interface": "ContentHandler",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.transform.sax.TemplatesHandler",
            "javax.xml.transform.sax.TransformerHandler"
        ],
        "Subinterface": [
            "org.xml.sax.helpers.DefaultHandler",
            "org.xml.sax.ext.DefaultHandler2",
            "javax.xml.validation.ValidatorHandler",
            "org.xml.sax.helpers.XMLFilterImpl",
            "org.xml.sax.helpers.XMLReaderAdapter"
        ],
        "Method": [
            {
                "setDocumentLocator": {
                    "Parameter": {
                        "locator": "Locator"
                    },
                    "Throw": []
                }
            },
            {
                "startDocument": {
                    "Parameter": {},
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "declaration": {
                    "Parameter": {
                        "version": "String",
                        "encoding": "String",
                        "standalone": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "endDocument": {
                    "Parameter": {},
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "startPrefixMapping": {
                    "Parameter": {
                        "prefix": "String",
                        "uri": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "endPrefixMapping": {
                    "Parameter": {
                        "prefix": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "startElement": {
                    "Parameter": {
                        "uri": "String",
                        "localName": "String",
                        "qName": "String",
                        "atts": "Attributes"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "endElement": {
                    "Parameter": {
                        "uri": "String",
                        "localName": "String",
                        "qName": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "characters": {
                    "Parameter": {
                        "ch": "char",
                        "start": "int",
                        "length": "int"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "ignorableWhitespace": {
                    "Parameter": {
                        "ch": "char",
                        "start": "int",
                        "length": "int"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "processingInstruction": {
                    "Parameter": {
                        "target": "String",
                        "data": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "skippedEntity": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            }
        ]
    },
    "900": {
        "Package": "org.xml.sax",
        "Interface": "DocumentHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.HandlerBase",
            "org.xml.sax.helpers.ParserAdapter"
        ],
        "Method": [
            {
                "setDocumentLocator": {
                    "Parameter": {
                        "locator": "Locator"
                    },
                    "Throw": []
                }
            },
            {
                "startDocument": {
                    "Parameter": {},
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "endDocument": {
                    "Parameter": {},
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "startElement": {
                    "Parameter": {
                        "name": "String",
                        "atts": "AttributeList"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "endElement": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "characters": {
                    "Parameter": {
                        "ch": "char",
                        "start": "int",
                        "length": "int"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "ignorableWhitespace": {
                    "Parameter": {
                        "ch": "char",
                        "start": "int",
                        "length": "int"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "processingInstruction": {
                    "Parameter": {
                        "target": "String",
                        "data": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            }
        ]
    },
    "901": {
        "Package": "org.xml.sax",
        "Interface": "DTDHandler",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.transform.sax.TransformerHandler"
        ],
        "Subinterface": [
            "org.xml.sax.helpers.DefaultHandler",
            "org.xml.sax.ext.DefaultHandler2",
            "org.xml.sax.HandlerBase",
            "org.xml.sax.helpers.XMLFilterImpl"
        ],
        "Method": [
            {
                "notationDecl": {
                    "Parameter": {
                        "name": "String",
                        "publicId": "String",
                        "systemId": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "unparsedEntityDecl": {
                    "Parameter": {
                        "name": "String",
                        "publicId": "String",
                        "systemId": "String",
                        "notationName": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            }
        ]
    },
    "902": {
        "Package": "org.xml.sax",
        "Interface": "EntityResolver",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.catalog.CatalogResolver",
            "org.xml.sax.ext.EntityResolver2"
        ],
        "Subinterface": [
            "org.xml.sax.helpers.DefaultHandler",
            "org.xml.sax.ext.DefaultHandler2",
            "org.xml.sax.HandlerBase",
            "org.xml.sax.helpers.XMLFilterImpl"
        ],
        "Method": [
            {
                "resolveEntity": {
                    "Parameter": {
                        "publicId": "String",
                        "systemId": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "903": {
        "Package": "org.xml.sax",
        "Interface": "ErrorHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.helpers.DefaultHandler",
            "org.xml.sax.ext.DefaultHandler2",
            "org.xml.sax.HandlerBase",
            "org.xml.sax.helpers.XMLFilterImpl"
        ],
        "Method": [
            {
                "warning": {
                    "Parameter": {
                        "exception": "SAXParseException"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "error": {
                    "Parameter": {
                        "exception": "SAXParseException"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "fatalError": {
                    "Parameter": {
                        "exception": "SAXParseException"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            }
        ]
    },
    "904": {
        "Package": "org.xml.sax",
        "Interface": "Locator",
        "Superinterface": null,
        "Implementing Class": [
            "org.xml.sax.ext.Locator2"
        ],
        "Subinterface": [
            "org.xml.sax.ext.Locator2Impl",
            "org.xml.sax.helpers.LocatorImpl"
        ],
        "Method": [
            {
                "getPublicId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSystemId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLineNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getColumnNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "905": {
        "Package": "org.xml.sax",
        "Interface": "Parser",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.helpers.XMLReaderAdapter"
        ],
        "Method": [
            {
                "setLocale": {
                    "Parameter": {
                        "locale": "Locale"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "setEntityResolver": {
                    "Parameter": {
                        "resolver": "EntityResolver"
                    },
                    "Throw": []
                }
            },
            {
                "setDTDHandler": {
                    "Parameter": {
                        "handler": "DTDHandler"
                    },
                    "Throw": []
                }
            },
            {
                "setDocumentHandler": {
                    "Parameter": {
                        "handler": "DocumentHandler"
                    },
                    "Throw": []
                }
            },
            {
                "setErrorHandler": {
                    "Parameter": {
                        "handler": "ErrorHandler"
                    },
                    "Throw": []
                }
            },
            {
                "parse": {
                    "Parameter": {
                        "source": "InputSource"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "parse": {
                    "Parameter": {
                        "systemId": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "906": {
        "Package": "org.xml.sax",
        "Interface": "XMLFilter",
        "Superinterface": [
            "org.xml.sax.XMLReader"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.helpers.XMLFilterImpl"
        ],
        "Method": [
            {
                "setParent": {
                    "Parameter": {
                        "parent": "XMLReader"
                    },
                    "Throw": []
                }
            },
            {
                "getParent": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "907": {
        "Package": "org.xml.sax",
        "Interface": "XMLReader",
        "Superinterface": null,
        "Implementing Class": [
            "org.xml.sax.XMLFilter"
        ],
        "Subinterface": [
            "org.xml.sax.helpers.ParserAdapter",
            "org.xml.sax.helpers.XMLFilterImpl"
        ],
        "Method": [
            {
                "getFeature": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "org.xml.sax.SAXNotSupportedException"
                }
            },
            {
                "setFeature": {
                    "Parameter": {
                        "name": "String",
                        "value": "boolean"
                    },
                    "Throw": "org.xml.sax.SAXNotSupportedException"
                }
            },
            {
                "getProperty": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "org.xml.sax.SAXNotSupportedException"
                }
            },
            {
                "setProperty": {
                    "Parameter": {
                        "name": "String",
                        "value": "Object"
                    },
                    "Throw": "org.xml.sax.SAXNotSupportedException"
                }
            },
            {
                "setEntityResolver": {
                    "Parameter": {
                        "resolver": "EntityResolver"
                    },
                    "Throw": []
                }
            },
            {
                "getEntityResolver": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDTDHandler": {
                    "Parameter": {
                        "handler": "DTDHandler"
                    },
                    "Throw": []
                }
            },
            {
                "getDTDHandler": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setContentHandler": {
                    "Parameter": {
                        "handler": "ContentHandler"
                    },
                    "Throw": []
                }
            },
            {
                "getContentHandler": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setErrorHandler": {
                    "Parameter": {
                        "handler": "ErrorHandler"
                    },
                    "Throw": []
                }
            },
            {
                "getErrorHandler": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "parse": {
                    "Parameter": {
                        "input": "InputSource"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "parse": {
                    "Parameter": {
                        "systemId": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "908": {
        "Package": "org.xml.sax.ext",
        "Interface": "Attributes2",
        "Superinterface": [
            "org.xml.sax.Attributes"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.ext.Attributes2Impl"
        ],
        "Method": [
            {
                "isDeclared": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.ArrayIndexOutOfBoundsException"
                }
            },
            {
                "isDeclared": {
                    "Parameter": {
                        "qName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "isDeclared": {
                    "Parameter": {
                        "uri": "String",
                        "localName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "isSpecified": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.ArrayIndexOutOfBoundsException"
                }
            },
            {
                "isSpecified": {
                    "Parameter": {
                        "uri": "String",
                        "localName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "isSpecified": {
                    "Parameter": {
                        "qName": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "909": {
        "Package": "org.xml.sax.ext",
        "Interface": "DeclHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.ext.DefaultHandler2"
        ],
        "Method": [
            {
                "elementDecl": {
                    "Parameter": {
                        "name": "String",
                        "model": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "attributeDecl": {
                    "Parameter": {
                        "eName": "String",
                        "aName": "String",
                        "type": "String",
                        "mode": "String",
                        "value": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "internalEntityDecl": {
                    "Parameter": {
                        "name": "String",
                        "value": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "externalEntityDecl": {
                    "Parameter": {
                        "name": "String",
                        "publicId": "String",
                        "systemId": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            }
        ]
    },
    "910": {
        "Package": "org.xml.sax.ext",
        "Interface": "EntityResolver2",
        "Superinterface": [
            "org.xml.sax.EntityResolver"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.ext.DefaultHandler2"
        ],
        "Method": [
            {
                "getExternalSubset": {
                    "Parameter": {
                        "name": "String",
                        "baseURI": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "resolveEntity": {
                    "Parameter": {
                        "name": "String",
                        "publicId": "String",
                        "baseURI": "String",
                        "systemId": "String"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "911": {
        "Package": "org.xml.sax.ext",
        "Interface": "LexicalHandler",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.transform.sax.TransformerHandler"
        ],
        "Subinterface": [
            "org.xml.sax.ext.DefaultHandler2"
        ],
        "Method": [
            {
                "startDTD": {
                    "Parameter": {
                        "name": "String",
                        "publicId": "String",
                        "systemId": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "endDTD": {
                    "Parameter": {},
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "startEntity": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "endEntity": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "startCDATA": {
                    "Parameter": {},
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "endCDATA": {
                    "Parameter": {},
                    "Throw": "org.xml.sax.SAXException"
                }
            },
            {
                "comment": {
                    "Parameter": {
                        "ch": "char",
                        "start": "int",
                        "length": "int"
                    },
                    "Throw": "org.xml.sax.SAXException"
                }
            }
        ]
    },
    "912": {
        "Package": "org.xml.sax.ext",
        "Interface": "Locator2",
        "Superinterface": [
            "org.xml.sax.Locator"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "org.xml.sax.ext.Locator2Impl"
        ],
        "Method": [
            {
                "getXMLVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEncoding": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "913": {
        "Package": "javax.xml.crypto",
        "Interface": "AlgorithmMethod",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.crypto.dsig.CanonicalizationMethod",
            "javax.xml.crypto.dsig.DigestMethod",
            "javax.xml.crypto.dsig.SignatureMethod",
            "javax.xml.crypto.dsig.Transform"
        ],
        "Subinterface": [
            "javax.xml.crypto.dsig.TransformService"
        ],
        "Method": [
            {
                "getAlgorithm": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParameterSpec": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "914": {
        "Package": "javax.xml.crypto",
        "Interface": "KeySelectorResult",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getKey": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "915": {
        "Package": "javax.xml.crypto",
        "Interface": "NodeSetData",
        "Superinterface": [
            "javax.xml.crypto.Data",
            "java.lang.Iterable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "iterator": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "916": {
        "Package": "javax.xml.crypto",
        "Interface": "URIDereferencer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "dereference": {
                    "Parameter": {
                        "uriReference": "URIReference",
                        "context": "XMLCryptoContext"
                    },
                    "Throw": "javax.xml.crypto.URIReferenceException"
                }
            }
        ]
    },
    "917": {
        "Package": "javax.xml.crypto",
        "Interface": "URIReference",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.crypto.dom.DOMURIReference",
            "javax.xml.crypto.dsig.Reference",
            "javax.xml.crypto.dsig.keyinfo.RetrievalMethod"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getURI": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "918": {
        "Package": "javax.xml.crypto",
        "Interface": "XMLCryptoContext",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.crypto.dsig.XMLSignContext",
            "javax.xml.crypto.dsig.XMLValidateContext"
        ],
        "Subinterface": [
            "javax.xml.crypto.dom.DOMCryptoContext",
            "javax.xml.crypto.dsig.dom.DOMSignContext",
            "javax.xml.crypto.dsig.dom.DOMValidateContext"
        ],
        "Method": [
            {
                "getBaseURI": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBaseURI": {
                    "Parameter": {
                        "baseURI": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getKeySelector": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setKeySelector": {
                    "Parameter": {
                        "ks": "KeySelector"
                    },
                    "Throw": []
                }
            },
            {
                "getURIDereferencer": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setURIDereferencer": {
                    "Parameter": {
                        "dereferencer": "URIDereferencer"
                    },
                    "Throw": []
                }
            },
            {
                "getNamespacePrefix": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "defaultPrefix": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "putNamespacePrefix": {
                    "Parameter": {
                        "namespaceURI": "String",
                        "prefix": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getDefaultNamespacePrefix": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDefaultNamespacePrefix": {
                    "Parameter": {
                        "defaultPrefix": "String"
                    },
                    "Throw": []
                }
            },
            {
                "setProperty": {
                    "Parameter": {
                        "name": "String",
                        "value": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "getProperty": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "key": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "put": {
                    "Parameter": {
                        "key": "Object",
                        "value": "Object"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "919": {
        "Package": "javax.xml.crypto",
        "Interface": "XMLStructure",
        "Superinterface": null,
        "Implementing Class": [
            "javax.xml.crypto.dsig.CanonicalizationMethod",
            "javax.xml.crypto.dsig.DigestMethod",
            "javax.xml.crypto.dsig.keyinfo.KeyInfo",
            "javax.xml.crypto.dsig.keyinfo.KeyName",
            "javax.xml.crypto.dsig.keyinfo.KeyValue",
            "javax.xml.crypto.dsig.Manifest",
            "javax.xml.crypto.dsig.keyinfo.PGPData",
            "javax.xml.crypto.dsig.Reference",
            "javax.xml.crypto.dsig.keyinfo.RetrievalMethod",
            "javax.xml.crypto.dsig.SignatureMethod",
            "javax.xml.crypto.dsig.SignatureProperties",
            "javax.xml.crypto.dsig.SignatureProperty",
            "javax.xml.crypto.dsig.SignedInfo",
            "javax.xml.crypto.dsig.Transform",
            "javax.xml.crypto.dsig.keyinfo.X509Data",
            "javax.xml.crypto.dsig.keyinfo.X509IssuerSerial",
            "javax.xml.crypto.dsig.XMLObject",
            "javax.xml.crypto.dsig.XMLSignature",
            "javax.xml.crypto.dsig.XMLSignature.SignatureValue"
        ],
        "Subinterface": [
            "javax.xml.crypto.dom.DOMStructure",
            "javax.xml.crypto.dsig.TransformService"
        ],
        "Method": [
            {
                "isFeatureSupported": {
                    "Parameter": {
                        "feature": "String"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "920": {
        "Package": "javax.xml.crypto.dom",
        "Interface": "DOMURIReference",
        "Superinterface": [
            "javax.xml.crypto.URIReference"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getHere": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "921": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "CanonicalizationMethod",
        "Superinterface": [
            "javax.xml.crypto.AlgorithmMethod",
            "javax.xml.crypto.dsig.Transform",
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getParameterSpec": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "922": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "DigestMethod",
        "Superinterface": [
            "javax.xml.crypto.AlgorithmMethod",
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getParameterSpec": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "923": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "Manifest",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReferences": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "924": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "Reference",
        "Superinterface": [
            "javax.xml.crypto.URIReference",
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTransforms": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDigestMethod": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDigestValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCalculatedDigestValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "validate": {
                    "Parameter": {
                        "validateContext": "XMLValidateContext"
                    },
                    "Throw": "javax.xml.crypto.dsig.XMLSignatureException"
                }
            },
            {
                "getDereferencedData": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDigestInputStream": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "925": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "SignatureMethod",
        "Superinterface": [
            "javax.xml.crypto.AlgorithmMethod",
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getParameterSpec": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "926": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "SignatureProperties",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getProperties": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "927": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "SignatureProperty",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTarget": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getContent": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "928": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "SignedInfo",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCanonicalizationMethod": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSignatureMethod": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReferences": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCanonicalizedData": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "929": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "Transform",
        "Superinterface": [
            "javax.xml.crypto.AlgorithmMethod",
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": [
            "javax.xml.crypto.dsig.CanonicalizationMethod"
        ],
        "Subinterface": [
            "javax.xml.crypto.dsig.TransformService"
        ],
        "Method": [
            {
                "getParameterSpec": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "transform": {
                    "Parameter": {
                        "data": "Data",
                        "context": "XMLCryptoContext"
                    },
                    "Throw": "javax.xml.crypto.dsig.TransformException"
                }
            },
            {
                "transform": {
                    "Parameter": {
                        "data": "Data",
                        "context": "XMLCryptoContext",
                        "os": "OutputStream"
                    },
                    "Throw": "javax.xml.crypto.dsig.TransformException"
                }
            }
        ]
    },
    "930": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "XMLObject",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getContent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMimeType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEncoding": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "931": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "XMLSignature",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "validate": {
                    "Parameter": {
                        "validateContext": "XMLValidateContext"
                    },
                    "Throw": "javax.xml.crypto.dsig.XMLSignatureException"
                }
            },
            {
                "getKeyInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSignedInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getObjects": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSignatureValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "sign": {
                    "Parameter": {
                        "signContext": "XMLSignContext"
                    },
                    "Throw": "javax.xml.crypto.dsig.XMLSignatureException"
                }
            },
            {
                "getKeySelectorResult": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "932": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "XMLSignature.SignatureValue",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "validate": {
                    "Parameter": {
                        "validateContext": "XMLValidateContext"
                    },
                    "Throw": "javax.xml.crypto.dsig.XMLSignatureException"
                }
            }
        ]
    },
    "933": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "XMLSignContext",
        "Superinterface": [
            "javax.xml.crypto.XMLCryptoContext"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.crypto.dsig.dom.DOMSignContext"
        ],
        "Method": []
    },
    "934": {
        "Package": "javax.xml.crypto.dsig",
        "Interface": "XMLValidateContext",
        "Superinterface": [
            "javax.xml.crypto.XMLCryptoContext"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "javax.xml.crypto.dsig.dom.DOMValidateContext"
        ],
        "Method": []
    },
    "935": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "KeyInfo",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getContent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "marshal": {
                    "Parameter": {
                        "parent": "XMLStructure",
                        "context": "XMLCryptoContext"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "936": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "KeyName",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "937": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "KeyValue",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPublicKey": {
                    "Parameter": {},
                    "Throw": "java.security.KeyException"
                }
            }
        ]
    },
    "938": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "PGPData",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getKeyId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getKeyPacket": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExternalElements": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "939": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "RetrievalMethod",
        "Superinterface": [
            "javax.xml.crypto.URIReference",
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTransforms": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getURI": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "dereference": {
                    "Parameter": {
                        "context": "XMLCryptoContext"
                    },
                    "Throw": "javax.xml.crypto.URIReferenceException"
                }
            }
        ]
    },
    "940": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "X509Data",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getContent": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "941": {
        "Package": "javax.xml.crypto.dsig.keyinfo",
        "Interface": "X509IssuerSerial",
        "Superinterface": [
            "javax.xml.crypto.XMLStructure"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getIssuerName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSerialNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "942": {
        "Package": "com.sun.java.accessibility.util",
        "Interface": "GUIInitializedListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "guiInitialized": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "943": {
        "Package": "com.sun.java.accessibility.util",
        "Interface": "TopLevelWindowListener",
        "Superinterface": [
            "java.util.EventListener"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "topLevelWindowCreated": {
                    "Parameter": {
                        "w": "Window"
                    },
                    "Throw": []
                }
            },
            {
                "topLevelWindowDestroyed": {
                    "Parameter": {
                        "w": "Window"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "944": {
        "Package": "com.sun.source.doctree",
        "Interface": "AttributeTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValueKind": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "945": {
        "Package": "com.sun.source.doctree",
        "Interface": "AuthorTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "946": {
        "Package": "com.sun.source.doctree",
        "Interface": "BlockTagTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": [
            "com.sun.source.doctree.AuthorTree",
            "com.sun.source.doctree.DeprecatedTree",
            "com.sun.source.doctree.HiddenTree",
            "com.sun.source.doctree.ParamTree",
            "com.sun.source.doctree.ProvidesTree",
            "com.sun.source.doctree.ReturnTree",
            "com.sun.source.doctree.SeeTree",
            "com.sun.source.doctree.SerialDataTree",
            "com.sun.source.doctree.SerialFieldTree",
            "com.sun.source.doctree.SerialTree",
            "com.sun.source.doctree.SinceTree",
            "com.sun.source.doctree.ThrowsTree",
            "com.sun.source.doctree.UnknownBlockTagTree",
            "com.sun.source.doctree.UsesTree",
            "com.sun.source.doctree.VersionTree"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getTagName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "947": {
        "Package": "com.sun.source.doctree",
        "Interface": "CommentTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "948": {
        "Package": "com.sun.source.doctree",
        "Interface": "DeprecatedTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "949": {
        "Package": "com.sun.source.doctree",
        "Interface": "DocCommentTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getFirstSentence": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFullBody": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBlockTags": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPreamble": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPostamble": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "950": {
        "Package": "com.sun.source.doctree",
        "Interface": "DocRootTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree",
            "com.sun.source.doctree.InlineTagTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "951": {
        "Package": "com.sun.source.doctree",
        "Interface": "DocTree",
        "Superinterface": null,
        "Implementing Class": [
            "com.sun.source.doctree.AttributeTree",
            "com.sun.source.doctree.AuthorTree",
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.CommentTree",
            "com.sun.source.doctree.DeprecatedTree",
            "com.sun.source.doctree.DocCommentTree",
            "com.sun.source.doctree.DocRootTree",
            "com.sun.source.doctree.DocTypeTree",
            "com.sun.source.doctree.EndElementTree",
            "com.sun.source.doctree.EntityTree",
            "com.sun.source.doctree.ErroneousTree",
            "com.sun.source.doctree.HiddenTree",
            "com.sun.source.doctree.IdentifierTree",
            "com.sun.source.doctree.IndexTree",
            "com.sun.source.doctree.InheritDocTree",
            "com.sun.source.doctree.InlineTagTree",
            "com.sun.source.doctree.LinkTree",
            "com.sun.source.doctree.LiteralTree",
            "com.sun.source.doctree.ParamTree",
            "com.sun.source.doctree.ProvidesTree",
            "com.sun.source.doctree.ReferenceTree",
            "com.sun.source.doctree.ReturnTree",
            "com.sun.source.doctree.SeeTree",
            "com.sun.source.doctree.SerialDataTree",
            "com.sun.source.doctree.SerialFieldTree",
            "com.sun.source.doctree.SerialTree",
            "com.sun.source.doctree.SinceTree",
            "com.sun.source.doctree.SnippetTree",
            "com.sun.source.doctree.StartElementTree",
            "com.sun.source.doctree.SummaryTree",
            "com.sun.source.doctree.SystemPropertyTree",
            "com.sun.source.doctree.TextTree",
            "com.sun.source.doctree.ThrowsTree",
            "com.sun.source.doctree.UnknownBlockTagTree",
            "com.sun.source.doctree.UnknownInlineTagTree",
            "com.sun.source.doctree.UsesTree",
            "com.sun.source.doctree.ValueTree",
            "com.sun.source.doctree.VersionTree"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getKind": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "952": {
        "Package": "com.sun.source.doctree",
        "Interface": "DocTreeVisitor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "com.sun.source.util.DocTreePathScanner",
            "com.sun.source.util.DocTreeScanner",
            "com.sun.source.util.SimpleDocTreeVisitor"
        ],
        "Method": []
    },
    "953": {
        "Package": "com.sun.source.doctree",
        "Interface": "DocTypeTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getText": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "954": {
        "Package": "com.sun.source.doctree",
        "Interface": "EndElementTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "955": {
        "Package": "com.sun.source.doctree",
        "Interface": "EntityTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "956": {
        "Package": "com.sun.source.doctree",
        "Interface": "ErroneousTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree",
            "com.sun.source.doctree.TextTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDiagnostic": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "957": {
        "Package": "com.sun.source.doctree",
        "Interface": "HiddenTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "958": {
        "Package": "com.sun.source.doctree",
        "Interface": "IdentifierTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "959": {
        "Package": "com.sun.source.doctree",
        "Interface": "IndexTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree",
            "com.sun.source.doctree.InlineTagTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getSearchTerm": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "960": {
        "Package": "com.sun.source.doctree",
        "Interface": "InheritDocTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree",
            "com.sun.source.doctree.InlineTagTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "961": {
        "Package": "com.sun.source.doctree",
        "Interface": "InlineTagTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": [
            "com.sun.source.doctree.DocRootTree",
            "com.sun.source.doctree.IndexTree",
            "com.sun.source.doctree.InheritDocTree",
            "com.sun.source.doctree.LinkTree",
            "com.sun.source.doctree.LiteralTree",
            "com.sun.source.doctree.ReturnTree",
            "com.sun.source.doctree.SnippetTree",
            "com.sun.source.doctree.SummaryTree",
            "com.sun.source.doctree.SystemPropertyTree",
            "com.sun.source.doctree.UnknownInlineTagTree",
            "com.sun.source.doctree.ValueTree"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getTagName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "962": {
        "Package": "com.sun.source.doctree",
        "Interface": "LinkTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree",
            "com.sun.source.doctree.InlineTagTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getReference": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLabel": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "963": {
        "Package": "com.sun.source.doctree",
        "Interface": "LiteralTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree",
            "com.sun.source.doctree.InlineTagTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "964": {
        "Package": "com.sun.source.doctree",
        "Interface": "ParamTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isTypeParameter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "965": {
        "Package": "com.sun.source.doctree",
        "Interface": "ProvidesTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getServiceType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "966": {
        "Package": "com.sun.source.doctree",
        "Interface": "ReferenceTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getSignature": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "967": {
        "Package": "com.sun.source.doctree",
        "Interface": "ReturnTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree",
            "com.sun.source.doctree.InlineTagTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isInline": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "968": {
        "Package": "com.sun.source.doctree",
        "Interface": "SeeTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getReference": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "969": {
        "Package": "com.sun.source.doctree",
        "Interface": "SerialDataTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "970": {
        "Package": "com.sun.source.doctree",
        "Interface": "SerialFieldTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "971": {
        "Package": "com.sun.source.doctree",
        "Interface": "SerialTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "972": {
        "Package": "com.sun.source.doctree",
        "Interface": "SinceTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "973": {
        "Package": "com.sun.source.doctree",
        "Interface": "SnippetTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree",
            "com.sun.source.doctree.InlineTagTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "974": {
        "Package": "com.sun.source.doctree",
        "Interface": "StartElementTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAttributes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSelfClosing": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "975": {
        "Package": "com.sun.source.doctree",
        "Interface": "SummaryTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree",
            "com.sun.source.doctree.InlineTagTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getSummary": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "976": {
        "Package": "com.sun.source.doctree",
        "Interface": "SystemPropertyTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree",
            "com.sun.source.doctree.InlineTagTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPropertyName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "977": {
        "Package": "com.sun.source.doctree",
        "Interface": "TextTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": [
            "com.sun.source.doctree.ErroneousTree"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "978": {
        "Package": "com.sun.source.doctree",
        "Interface": "ThrowsTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExceptionName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "979": {
        "Package": "com.sun.source.doctree",
        "Interface": "UnknownBlockTagTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getContent": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "980": {
        "Package": "com.sun.source.doctree",
        "Interface": "UnknownInlineTagTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree",
            "com.sun.source.doctree.InlineTagTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getContent": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "981": {
        "Package": "com.sun.source.doctree",
        "Interface": "UsesTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getServiceType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "982": {
        "Package": "com.sun.source.doctree",
        "Interface": "ValueTree",
        "Superinterface": [
            "com.sun.source.doctree.DocTree",
            "com.sun.source.doctree.InlineTagTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getReference": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "983": {
        "Package": "com.sun.source.doctree",
        "Interface": "VersionTree",
        "Superinterface": [
            "com.sun.source.doctree.BlockTagTree",
            "com.sun.source.doctree.DocTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "984": {
        "Package": "com.sun.source.tree",
        "Interface": "AnnotatedTypeTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAnnotations": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getUnderlyingType": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "985": {
        "Package": "com.sun.source.tree",
        "Interface": "AnnotationTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAnnotationType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getArguments": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "986": {
        "Package": "com.sun.source.tree",
        "Interface": "ArrayAccessTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "987": {
        "Package": "com.sun.source.tree",
        "Interface": "ArrayTypeTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "988": {
        "Package": "com.sun.source.tree",
        "Interface": "AssertTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCondition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDetail": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "989": {
        "Package": "com.sun.source.tree",
        "Interface": "AssignmentTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getVariable": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "990": {
        "Package": "com.sun.source.tree",
        "Interface": "BinaryTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLeftOperand": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRightOperand": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "991": {
        "Package": "com.sun.source.tree",
        "Interface": "BindingPatternTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.PatternTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getVariable": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "992": {
        "Package": "com.sun.source.tree",
        "Interface": "BlockTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isStatic": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getStatements": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "993": {
        "Package": "com.sun.source.tree",
        "Interface": "BreakTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLabel": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "994": {
        "Package": "com.sun.source.tree",
        "Interface": "CaseLabelTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": [
            "com.sun.source.tree.AnnotatedTypeTree",
            "com.sun.source.tree.AnnotationTree",
            "com.sun.source.tree.ArrayAccessTree",
            "com.sun.source.tree.AssignmentTree",
            "com.sun.source.tree.BinaryTree",
            "com.sun.source.tree.BindingPatternTree",
            "com.sun.source.tree.CompoundAssignmentTree",
            "com.sun.source.tree.ConditionalExpressionTree",
            "com.sun.source.tree.DefaultCaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ErroneousTree",
            "com.sun.source.tree.ExpressionTree",
            "com.sun.source.tree.GuardedPatternTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.IdentifierTree",
            "com.sun.source.tree.InstanceOfTree",
            "com.sun.source.tree.LambdaExpressionTree",
            "com.sun.source.tree.LiteralTree",
            "com.sun.source.tree.MemberReferenceTree",
            "com.sun.source.tree.MemberSelectTree",
            "com.sun.source.tree.MethodInvocationTree",
            "com.sun.source.tree.NewArrayTree",
            "com.sun.source.tree.NewClassTree",
            "com.sun.source.tree.ParenthesizedPatternTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ParenthesizedTree",
            "com.sun.source.tree.PatternTree"
        ],
        "Subinterface": null,
        "Method": []
    },
    "995": {
        "Package": "com.sun.source.tree",
        "Interface": "CaseTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExpressions": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLabels": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getStatements": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCaseKind": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "996": {
        "Package": "com.sun.source.tree",
        "Interface": "CatchTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getParameter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBlock": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "997": {
        "Package": "com.sun.source.tree",
        "Interface": "ClassTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getModifiers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSimpleName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTypeParameters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExtendsClause": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getImplementsClause": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPermitsClause": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMembers": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "998": {
        "Package": "com.sun.source.tree",
        "Interface": "CompilationUnitTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getModule": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPackageAnnotations": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPackageName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPackage": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getImports": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTypeDecls": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSourceFile": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLineMap": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "999": {
        "Package": "com.sun.source.tree",
        "Interface": "CompoundAssignmentTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getVariable": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1000": {
        "Package": "com.sun.source.tree",
        "Interface": "ConditionalExpressionTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCondition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTrueExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFalseExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1001": {
        "Package": "com.sun.source.tree",
        "Interface": "ContinueTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLabel": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1002": {
        "Package": "com.sun.source.tree",
        "Interface": "DefaultCaseLabelTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1003": {
        "Package": "com.sun.source.tree",
        "Interface": "DirectiveTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": [
            "com.sun.source.tree.ExportsTree",
            "com.sun.source.tree.OpensTree",
            "com.sun.source.tree.ProvidesTree",
            "com.sun.source.tree.RequiresTree",
            "com.sun.source.tree.UsesTree"
        ],
        "Subinterface": null,
        "Method": []
    },
    "1004": {
        "Package": "com.sun.source.tree",
        "Interface": "DoWhileLoopTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCondition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getStatement": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1005": {
        "Package": "com.sun.source.tree",
        "Interface": "EmptyStatementTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1006": {
        "Package": "com.sun.source.tree",
        "Interface": "EnhancedForLoopTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getVariable": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getStatement": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1007": {
        "Package": "com.sun.source.tree",
        "Interface": "ErroneousTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getErrorTrees": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1008": {
        "Package": "com.sun.source.tree",
        "Interface": "ExportsTree",
        "Superinterface": [
            "com.sun.source.tree.DirectiveTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPackageName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getModuleNames": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1009": {
        "Package": "com.sun.source.tree",
        "Interface": "ExpressionStatementTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1010": {
        "Package": "com.sun.source.tree",
        "Interface": "ExpressionTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW"
        ],
        "Implementing Class": [
            "com.sun.source.tree.AnnotatedTypeTree",
            "com.sun.source.tree.AnnotationTree",
            "com.sun.source.tree.ArrayAccessTree",
            "com.sun.source.tree.AssignmentTree",
            "com.sun.source.tree.BinaryTree",
            "com.sun.source.tree.CompoundAssignmentTree",
            "com.sun.source.tree.ConditionalExpressionTree",
            "com.sun.source.tree.ErroneousTree",
            "com.sun.source.tree.IdentifierTree",
            "com.sun.source.tree.InstanceOfTree",
            "com.sun.source.tree.LambdaExpressionTree",
            "com.sun.source.tree.LiteralTree",
            "com.sun.source.tree.MemberReferenceTree",
            "com.sun.source.tree.MemberSelectTree",
            "com.sun.source.tree.MethodInvocationTree",
            "com.sun.source.tree.NewArrayTree",
            "com.sun.source.tree.NewClassTree",
            "com.sun.source.tree.ParenthesizedTree",
            "com.sun.source.tree.SwitchExpressionTree",
            "com.sun.source.tree.TypeCastTree",
            "com.sun.source.tree.UnaryTree"
        ],
        "Subinterface": null,
        "Method": []
    },
    "1011": {
        "Package": "com.sun.source.tree",
        "Interface": "ForLoopTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getInitializer": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCondition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getUpdate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getStatement": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1012": {
        "Package": "com.sun.source.tree",
        "Interface": "GuardedPatternTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.PatternTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPattern": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1013": {
        "Package": "com.sun.source.tree",
        "Interface": "IdentifierTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1014": {
        "Package": "com.sun.source.tree",
        "Interface": "IfTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCondition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getThenStatement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getElseStatement": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1015": {
        "Package": "com.sun.source.tree",
        "Interface": "ImportTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isStatic": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getQualifiedIdentifier": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1016": {
        "Package": "com.sun.source.tree",
        "Interface": "InstanceOfTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPattern": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1017": {
        "Package": "com.sun.source.tree",
        "Interface": "IntersectionTypeTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBounds": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1018": {
        "Package": "com.sun.source.tree",
        "Interface": "LabeledStatementTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLabel": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getStatement": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1019": {
        "Package": "com.sun.source.tree",
        "Interface": "LambdaExpressionTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getParameters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBodyKind": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1020": {
        "Package": "com.sun.source.tree",
        "Interface": "LineMap",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getStartPosition": {
                    "Parameter": {
                        "line": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "getPosition": {
                    "Parameter": {
                        "line": "long",
                        "column": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "getLineNumber": {
                    "Parameter": {
                        "pos": "long"
                    },
                    "Throw": []
                }
            },
            {
                "getColumnNumber": {
                    "Parameter": {
                        "pos": "long"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1021": {
        "Package": "com.sun.source.tree",
        "Interface": "LiteralTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1022": {
        "Package": "com.sun.source.tree",
        "Interface": "MemberReferenceTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getMode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getQualifierExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTypeArguments": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1023": {
        "Package": "com.sun.source.tree",
        "Interface": "MemberSelectTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIdentifier": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1024": {
        "Package": "com.sun.source.tree",
        "Interface": "MethodInvocationTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTypeArguments": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMethodSelect": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getArguments": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1025": {
        "Package": "com.sun.source.tree",
        "Interface": "MethodTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getModifiers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReturnType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTypeParameters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParameters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReceiverParameter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getThrows": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDefaultValue": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1026": {
        "Package": "com.sun.source.tree",
        "Interface": "ModifiersTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getFlags": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotations": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1027": {
        "Package": "com.sun.source.tree",
        "Interface": "ModuleTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAnnotations": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getModuleType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDirectives": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1028": {
        "Package": "com.sun.source.tree",
        "Interface": "NewArrayTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDimensions": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getInitializers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotations": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDimAnnotations": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1029": {
        "Package": "com.sun.source.tree",
        "Interface": "NewClassTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getEnclosingExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTypeArguments": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIdentifier": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getArguments": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getClassBody": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1030": {
        "Package": "com.sun.source.tree",
        "Interface": "OpensTree",
        "Superinterface": [
            "com.sun.source.tree.DirectiveTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPackageName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getModuleNames": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1031": {
        "Package": "com.sun.source.tree",
        "Interface": "PackageTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAnnotations": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPackageName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1032": {
        "Package": "com.sun.source.tree",
        "Interface": "ParameterizedTypeTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTypeArguments": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1033": {
        "Package": "com.sun.source.tree",
        "Interface": "ParenthesizedPatternTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.PatternTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPattern": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1034": {
        "Package": "com.sun.source.tree",
        "Interface": "ParenthesizedTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1035": {
        "Package": "com.sun.source.tree",
        "Interface": "PatternTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW"
        ],
        "Implementing Class": [
            "com.sun.source.tree.BindingPatternTree",
            "com.sun.source.tree.GuardedPatternTree",
            "com.sun.source.tree.PREVIEW"
        ],
        "Subinterface": null,
        "Method": []
    },
    "1036": {
        "Package": "com.sun.source.tree",
        "Interface": "PrimitiveTypeTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPrimitiveTypeKind": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1037": {
        "Package": "com.sun.source.tree",
        "Interface": "ProvidesTree",
        "Superinterface": [
            "com.sun.source.tree.DirectiveTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getServiceName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getImplementationNames": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1038": {
        "Package": "com.sun.source.tree",
        "Interface": "RequiresTree",
        "Superinterface": [
            "com.sun.source.tree.DirectiveTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isStatic": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isTransitive": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getModuleName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1039": {
        "Package": "com.sun.source.tree",
        "Interface": "ReturnTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1040": {
        "Package": "com.sun.source.tree",
        "Interface": "Scope",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getEnclosingScope": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosingClass": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getEnclosingMethod": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLocalElements": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1041": {
        "Package": "com.sun.source.tree",
        "Interface": "StatementTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": [
            "com.sun.source.tree.AssertTree",
            "com.sun.source.tree.BlockTree",
            "com.sun.source.tree.BreakTree",
            "com.sun.source.tree.ClassTree",
            "com.sun.source.tree.ContinueTree",
            "com.sun.source.tree.DoWhileLoopTree",
            "com.sun.source.tree.EmptyStatementTree",
            "com.sun.source.tree.EnhancedForLoopTree",
            "com.sun.source.tree.ExpressionStatementTree",
            "com.sun.source.tree.ForLoopTree",
            "com.sun.source.tree.IfTree",
            "com.sun.source.tree.LabeledStatementTree",
            "com.sun.source.tree.ReturnTree",
            "com.sun.source.tree.SwitchTree",
            "com.sun.source.tree.SynchronizedTree",
            "com.sun.source.tree.ThrowTree",
            "com.sun.source.tree.TryTree",
            "com.sun.source.tree.VariableTree",
            "com.sun.source.tree.WhileLoopTree",
            "com.sun.source.tree.YieldTree"
        ],
        "Subinterface": null,
        "Method": []
    },
    "1042": {
        "Package": "com.sun.source.tree",
        "Interface": "SwitchExpressionTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCases": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1043": {
        "Package": "com.sun.source.tree",
        "Interface": "SwitchTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCases": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1044": {
        "Package": "com.sun.source.tree",
        "Interface": "SynchronizedTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBlock": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1045": {
        "Package": "com.sun.source.tree",
        "Interface": "ThrowTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1046": {
        "Package": "com.sun.source.tree",
        "Interface": "Tree",
        "Superinterface": null,
        "Implementing Class": [
            "com.sun.source.tree.AnnotatedTypeTree",
            "com.sun.source.tree.AnnotationTree",
            "com.sun.source.tree.ArrayAccessTree",
            "com.sun.source.tree.ArrayTypeTree",
            "com.sun.source.tree.AssertTree",
            "com.sun.source.tree.AssignmentTree",
            "com.sun.source.tree.BinaryTree",
            "com.sun.source.tree.BindingPatternTree",
            "com.sun.source.tree.BlockTree",
            "com.sun.source.tree.BreakTree",
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.CaseTree",
            "com.sun.source.tree.CatchTree",
            "com.sun.source.tree.ClassTree",
            "com.sun.source.tree.CompilationUnitTree",
            "com.sun.source.tree.CompoundAssignmentTree",
            "com.sun.source.tree.ConditionalExpressionTree",
            "com.sun.source.tree.ContinueTree",
            "com.sun.source.tree.DefaultCaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.DirectiveTree",
            "com.sun.source.tree.DoWhileLoopTree",
            "com.sun.source.tree.EmptyStatementTree",
            "com.sun.source.tree.EnhancedForLoopTree",
            "com.sun.source.tree.ErroneousTree",
            "com.sun.source.tree.ExportsTree",
            "com.sun.source.tree.ExpressionStatementTree",
            "com.sun.source.tree.ExpressionTree",
            "com.sun.source.tree.ForLoopTree",
            "com.sun.source.tree.GuardedPatternTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.IdentifierTree",
            "com.sun.source.tree.IfTree",
            "com.sun.source.tree.ImportTree",
            "com.sun.source.tree.InstanceOfTree",
            "com.sun.source.tree.IntersectionTypeTree",
            "com.sun.source.tree.LabeledStatementTree",
            "com.sun.source.tree.LambdaExpressionTree",
            "com.sun.source.tree.LiteralTree",
            "com.sun.source.tree.MemberReferenceTree",
            "com.sun.source.tree.MemberSelectTree",
            "com.sun.source.tree.MethodInvocationTree",
            "com.sun.source.tree.MethodTree",
            "com.sun.source.tree.ModifiersTree",
            "com.sun.source.tree.ModuleTree",
            "com.sun.source.tree.NewArrayTree",
            "com.sun.source.tree.NewClassTree",
            "com.sun.source.tree.OpensTree",
            "com.sun.source.tree.PackageTree",
            "com.sun.source.tree.ParameterizedTypeTree",
            "com.sun.source.tree.ParenthesizedPatternTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ParenthesizedTree",
            "com.sun.source.tree.PatternTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.PrimitiveTypeTree",
            "com.sun.source.tree.ProvidesTree",
            "com.sun.source.tree.RequiresTree",
            "com.sun.source.tree.ReturnTree",
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.SwitchExpressionTree",
            "com.sun.source.tree.SwitchTree",
            "com.sun.source.tree.SynchronizedTree",
            "com.sun.source.tree.ThrowTree",
            "com.sun.source.tree.TryTree",
            "com.sun.source.tree.TypeCastTree",
            "com.sun.source.tree.TypeParameterTree",
            "com.sun.source.tree.UnaryTree",
            "com.sun.source.tree.UnionTypeTree"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getKind": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1047": {
        "Package": "com.sun.source.tree",
        "Interface": "TreeVisitor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "com.sun.source.util.SimpleTreeVisitor",
            "com.sun.source.util.TreePathScanner",
            "com.sun.source.util.TreeScanner"
        ],
        "Method": []
    },
    "1048": {
        "Package": "com.sun.source.tree",
        "Interface": "TryTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBlock": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCatches": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFinallyBlock": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getResources": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1049": {
        "Package": "com.sun.source.tree",
        "Interface": "TypeCastTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1050": {
        "Package": "com.sun.source.tree",
        "Interface": "TypeParameterTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBounds": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnnotations": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1051": {
        "Package": "com.sun.source.tree",
        "Interface": "UnaryTree",
        "Superinterface": [
            "com.sun.source.tree.CaseLabelTree",
            "com.sun.source.tree.PREVIEW",
            "com.sun.source.tree.ExpressionTree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1052": {
        "Package": "com.sun.source.tree",
        "Interface": "UnionTypeTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTypeAlternatives": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1053": {
        "Package": "com.sun.source.tree",
        "Interface": "UsesTree",
        "Superinterface": [
            "com.sun.source.tree.DirectiveTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getServiceName": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1054": {
        "Package": "com.sun.source.tree",
        "Interface": "VariableTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getModifiers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNameExpression": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getInitializer": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1055": {
        "Package": "com.sun.source.tree",
        "Interface": "WhileLoopTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCondition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getStatement": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1056": {
        "Package": "com.sun.source.tree",
        "Interface": "WildcardTree",
        "Superinterface": [
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getBound": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1057": {
        "Package": "com.sun.source.tree",
        "Interface": "YieldTree",
        "Superinterface": [
            "com.sun.source.tree.StatementTree",
            "com.sun.source.tree.Tree"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1058": {
        "Package": "com.sun.source.util",
        "Interface": "DocSourcePositions",
        "Superinterface": [
            "com.sun.source.util.SourcePositions"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getStartPosition": {
                    "Parameter": {
                        "file": "CompilationUnitTree",
                        "comment": "DocCommentTree",
                        "tree": "DocTree"
                    },
                    "Throw": []
                }
            },
            {
                "getEndPosition": {
                    "Parameter": {
                        "file": "CompilationUnitTree",
                        "comment": "DocCommentTree",
                        "tree": "DocTree"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1059": {
        "Package": "com.sun.source.util",
        "Interface": "DocTreeFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "newAttributeTree": {
                    "Parameter": {
                        "name": "Name",
                        "vkind": "AttributeTree.ValueKind",
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newAuthorTree": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newCodeTree": {
                    "Parameter": {
                        "text": "TextTree"
                    },
                    "Throw": []
                }
            },
            {
                "newCommentTree": {
                    "Parameter": {
                        "text": "String"
                    },
                    "Throw": []
                }
            },
            {
                "newDeprecatedTree": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newDocCommentTree": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newDocCommentTree": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newDocRootTree": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "newDocTypeTree": {
                    "Parameter": {
                        "text": "String"
                    },
                    "Throw": []
                }
            },
            {
                "newEndElementTree": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": []
                }
            },
            {
                "newEntityTree": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": []
                }
            },
            {
                "newErroneousTree": {
                    "Parameter": {
                        "text": "String",
                        "": "Diagnostic"
                    },
                    "Throw": []
                }
            },
            {
                "newExceptionTree": {
                    "Parameter": {
                        "name": "ReferenceTree",
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newHiddenTree": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newIdentifierTree": {
                    "Parameter": {
                        "name": "Name"
                    },
                    "Throw": []
                }
            },
            {
                "newIndexTree": {
                    "Parameter": {
                        "term": "DocTree",
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newInheritDocTree": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "newLinkTree": {
                    "Parameter": {
                        "ref": "ReferenceTree",
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newLinkPlainTree": {
                    "Parameter": {
                        "ref": "ReferenceTree",
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newLiteralTree": {
                    "Parameter": {
                        "text": "TextTree"
                    },
                    "Throw": []
                }
            },
            {
                "newParamTree": {
                    "Parameter": {
                        "isTypeParameter": "boolean",
                        "name": "IdentifierTree",
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newProvidesTree": {
                    "Parameter": {
                        "name": "ReferenceTree",
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newReferenceTree": {
                    "Parameter": {
                        "signature": "String"
                    },
                    "Throw": []
                }
            },
            {
                "newReturnTree": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newReturnTree": {
                    "Parameter": {
                        "isInline": "boolean",
                        "extends": "List"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "newSeeTree": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newSerialTree": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newSerialDataTree": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newSerialFieldTree": {
                    "Parameter": {
                        "name": "IdentifierTree",
                        "type": "ReferenceTree",
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newSinceTree": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newSnippetTree": {
                    "Parameter": {
                        "extends": "List",
                        "text": "TextTree"
                    },
                    "Throw": []
                }
            },
            {
                "newStartElementTree": {
                    "Parameter": {
                        "name": "Name",
                        "extends": "List",
                        "selfClosing": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "newSummaryTree": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newSystemPropertyTree": {
                    "Parameter": {
                        "propertyName": "Name"
                    },
                    "Throw": []
                }
            },
            {
                "newTextTree": {
                    "Parameter": {
                        "text": "String"
                    },
                    "Throw": []
                }
            },
            {
                "newThrowsTree": {
                    "Parameter": {
                        "name": "ReferenceTree",
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newUnknownBlockTagTree": {
                    "Parameter": {
                        "name": "Name",
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newUnknownInlineTagTree": {
                    "Parameter": {
                        "name": "Name",
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newUsesTree": {
                    "Parameter": {
                        "name": "ReferenceTree",
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "newValueTree": {
                    "Parameter": {
                        "ref": "ReferenceTree"
                    },
                    "Throw": []
                }
            },
            {
                "newVersionTree": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "at": {
                    "Parameter": {
                        "pos": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getFirstSentence": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1060": {
        "Package": "com.sun.source.util",
        "Interface": "ParameterNameProvider",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getParameterName": {
                    "Parameter": {
                        "parameter": "VariableElement"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1061": {
        "Package": "com.sun.source.util",
        "Interface": "Plugin",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "init": {
                    "Parameter": {
                        "task": "JavacTask",
                        "args": "String"
                    },
                    "Throw": []
                }
            },
            {
                "autoStart": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1062": {
        "Package": "com.sun.source.util",
        "Interface": "SourcePositions",
        "Superinterface": null,
        "Implementing Class": [
            "com.sun.source.util.DocSourcePositions"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getStartPosition": {
                    "Parameter": {
                        "file": "CompilationUnitTree",
                        "tree": "Tree"
                    },
                    "Throw": []
                }
            },
            {
                "getEndPosition": {
                    "Parameter": {
                        "file": "CompilationUnitTree",
                        "tree": "Tree"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1063": {
        "Package": "com.sun.source.util",
        "Interface": "TaskListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "started": {
                    "Parameter": {
                        "e": "TaskEvent"
                    },
                    "Throw": []
                }
            },
            {
                "finished": {
                    "Parameter": {
                        "e": "TaskEvent"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1064": {
        "Package": "jdk.dynalink",
        "Interface": "Operation",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "jdk.dynalink.NamedOperation",
            "jdk.dynalink.NamespaceOperation"
        ],
        "Method": [
            {
                "withNamespace": {
                    "Parameter": {
                        "namespace": "Namespace"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "withNamespaces": {
                    "Parameter": {
                        "namespaces": "Namespace"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "named": {
                    "Parameter": {
                        "name": "Object"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "1065": {
        "Package": "jdk.dynalink",
        "Interface": "RelinkableCallSite",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "jdk.dynalink.support.AbstractRelinkableCallSite",
            "jdk.dynalink.support.ChainedCallSite",
            "jdk.dynalink.support.SimpleRelinkableCallSite"
        ],
        "Method": [
            {
                "initialize": {
                    "Parameter": {
                        "relinkAndInvoke": "MethodHandle"
                    },
                    "Throw": []
                }
            },
            {
                "getDescriptor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "relink": {
                    "Parameter": {
                        "guardedInvocation": "GuardedInvocation",
                        "relinkAndInvoke": "MethodHandle"
                    },
                    "Throw": []
                }
            },
            {
                "resetAndRelink": {
                    "Parameter": {
                        "guardedInvocation": "GuardedInvocation",
                        "relinkAndInvoke": "MethodHandle"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1066": {
        "Package": "jdk.dynalink.beans",
        "Interface": "MissingMemberHandlerFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createMissingMemberHandler": {
                    "Parameter": {
                        "linkRequest": "LinkRequest",
                        "linkerServices": "LinkerServices"
                    },
                    "Throw": "java.lang.Exception"
                }
            }
        ]
    },
    "1067": {
        "Package": "jdk.dynalink.linker",
        "Interface": "ConversionComparator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "compareConversion": {
                    "Parameter": {
                        "sourceType": "Class",
                        "targetType": "Class"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1068": {
        "Package": "jdk.dynalink.linker",
        "Interface": "GuardedInvocationTransformer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "filter": {
                    "Parameter": {
                        "inv": "GuardedInvocation",
                        "linkRequest": "LinkRequest",
                        "linkerServices": "LinkerServices"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "1069": {
        "Package": "jdk.dynalink.linker",
        "Interface": "GuardingDynamicLinker",
        "Superinterface": null,
        "Implementing Class": [
            "jdk.dynalink.linker.TypeBasedGuardingDynamicLinker"
        ],
        "Subinterface": [
            "jdk.dynalink.beans.BeansLinker",
            "jdk.dynalink.linker.support.CompositeGuardingDynamicLinker",
            "jdk.dynalink.linker.support.CompositeTypeBasedGuardingDynamicLinker"
        ],
        "Method": [
            {
                "getGuardedInvocation": {
                    "Parameter": {
                        "linkRequest": "LinkRequest",
                        "linkerServices": "LinkerServices"
                    },
                    "Throw": "java.lang.Exception"
                }
            }
        ]
    },
    "1070": {
        "Package": "jdk.dynalink.linker",
        "Interface": "GuardingTypeConverterFactory",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "convertToType": {
                    "Parameter": {
                        "sourceType": "Class",
                        "targetType": "Class",
                        "": "Supplier"
                    },
                    "Throw": "java.lang.Exception"
                }
            }
        ]
    },
    "1071": {
        "Package": "jdk.dynalink.linker",
        "Interface": "LinkerServices",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "asType": {
                    "Parameter": {
                        "handle": "MethodHandle",
                        "fromType": "MethodType"
                    },
                    "Throw": []
                }
            },
            {
                "asTypeLosslessReturn": {
                    "Parameter": {
                        "handle": "MethodHandle",
                        "fromType": "MethodType"
                    },
                    "Throw": []
                }
            },
            {
                "getTypeConverter": {
                    "Parameter": {
                        "sourceType": "Class",
                        "targetType": "Class"
                    },
                    "Throw": []
                }
            },
            {
                "canConvert": {
                    "Parameter": {
                        "from": "Class",
                        "to": "Class"
                    },
                    "Throw": []
                }
            },
            {
                "getGuardedInvocation": {
                    "Parameter": {
                        "linkRequest": "LinkRequest"
                    },
                    "Throw": "java.lang.Exception"
                }
            },
            {
                "compareConversion": {
                    "Parameter": {
                        "sourceType": "Class",
                        "targetType": "Class"
                    },
                    "Throw": []
                }
            },
            {
                "filterInternalObjects": {
                    "Parameter": {
                        "target": "MethodHandle"
                    },
                    "Throw": []
                }
            },
            {
                "getWithLookup": {
                    "Parameter": {
                        "Toperation": "Supplier",
                        "lookupSupplier": "SecureLookupSupplier"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "1072": {
        "Package": "jdk.dynalink.linker",
        "Interface": "LinkRequest",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "jdk.dynalink.linker.support.SimpleLinkRequest"
        ],
        "Method": [
            {
                "getCallSiteDescriptor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getArguments": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getReceiver": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isCallSiteUnstable": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "replaceArguments": {
                    "Parameter": {
                        "callSiteDescriptor": "CallSiteDescriptor",
                        "arguments": "Object"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1073": {
        "Package": "jdk.dynalink.linker",
        "Interface": "MethodHandleTransformer",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "jdk.dynalink.linker.support.DefaultInternalObjectFilter"
        ],
        "Method": [
            {
                "transform": {
                    "Parameter": {
                        "target": "MethodHandle"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1074": {
        "Package": "jdk.dynalink.linker",
        "Interface": "MethodTypeConversionStrategy",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "asType": {
                    "Parameter": {
                        "target": "MethodHandle",
                        "newType": "MethodType"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1075": {
        "Package": "jdk.dynalink.linker",
        "Interface": "TypeBasedGuardingDynamicLinker",
        "Superinterface": [
            "jdk.dynalink.linker.GuardingDynamicLinker"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "jdk.dynalink.linker.support.CompositeTypeBasedGuardingDynamicLinker"
        ],
        "Method": [
            {
                "canLinkType": {
                    "Parameter": {
                        "type": "Class"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1076": {
        "Package": "com.sun.net.httpserver",
        "Interface": "HttpHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "handle": {
                    "Parameter": {
                        "exchange": "HttpExchange"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "1077": {
        "Package": "com.sun.net.httpserver",
        "Interface": "Request",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "com.sun.net.httpserver.HttpExchange",
            "com.sun.net.httpserver.HttpsExchange"
        ],
        "Method": [
            {
                "getRequestURI": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRequestMethod": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRequestHeaders": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "with": {
                    "Parameter": {
                        "headerName": "String",
                        "": "List"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            }
        ]
    },
    "1078": {
        "Package": "jdk.incubator.foreign",
        "Interface": "Addressable",
        "Superinterface": null,
        "Implementing Class": [
            "jdk.incubator.foreign.MemoryAddress",
            "jdk.incubator.foreign.MemorySegment",
            "jdk.incubator.foreign.NativeSymbol",
            "jdk.incubator.foreign.VaList"
        ],
        "Subinterface": null,
        "Method": [
            {
                "address": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1079": {
        "Package": "jdk.incubator.foreign",
        "Interface": "CLinker",
        "Superinterface": [
            "jdk.incubator.foreign.SymbolLookup"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "systemCLinker": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "lookup": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "downcallHandle": {
                    "Parameter": {
                        "symbol": "NativeSymbol",
                        "function": "FunctionDescriptor"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "downcallHandle": {
                    "Parameter": {
                        "function": "FunctionDescriptor"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "upcallStub": {
                    "Parameter": {
                        "target": "MethodHandle",
                        "function": "FunctionDescriptor",
                        "scope": "ResourceScope"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "downcallType": {
                    "Parameter": {
                        "functionDescriptor": "FunctionDescriptor"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "upcallType": {
                    "Parameter": {
                        "functionDescriptor": "FunctionDescriptor"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "1080": {
        "Package": "jdk.incubator.foreign",
        "Interface": "MemoryAddress",
        "Superinterface": [
            "jdk.incubator.foreign.Addressable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "toRawLongValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addOffset": {
                    "Parameter": {
                        "offset": "long"
                    },
                    "Throw": []
                }
            },
            {
                "getUtf8String": {
                    "Parameter": {
                        "offset": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "setUtf8String": {
                    "Parameter": {
                        "offset": "long",
                        "str": "String"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "that": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "ofLong": {
                    "Parameter": {
                        "value": "long"
                    },
                    "Throw": []
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfByte",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfByte",
                        "offset": "long",
                        "value": "byte"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfBoolean",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfBoolean",
                        "offset": "long",
                        "value": "boolean"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfChar",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfChar",
                        "offset": "long",
                        "value": "char"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfShort",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfShort",
                        "offset": "long",
                        "value": "short"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfInt",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfInt",
                        "offset": "long",
                        "value": "int"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfFloat",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfFloat",
                        "offset": "long",
                        "value": "float"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfLong",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfLong",
                        "offset": "long",
                        "value": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfDouble",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfDouble",
                        "offset": "long",
                        "value": "double"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfAddress",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfAddress",
                        "offset": "long",
                        "value": "Addressable"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfChar",
                        "index": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfChar",
                        "index": "long",
                        "value": "char"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfShort",
                        "index": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfShort",
                        "index": "long",
                        "value": "short"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfInt",
                        "index": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfInt",
                        "index": "long",
                        "value": "int"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfFloat",
                        "index": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfFloat",
                        "index": "long",
                        "value": "float"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfLong",
                        "index": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfLong",
                        "index": "long",
                        "value": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfDouble",
                        "index": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfDouble",
                        "index": "long",
                        "value": "double"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfAddress",
                        "index": "long"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfAddress",
                        "index": "long",
                        "value": "Addressable"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            }
        ]
    },
    "1081": {
        "Package": "jdk.incubator.foreign",
        "Interface": "MemoryLayout",
        "Superinterface": [
            "java.lang.constant.Constable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "jdk.incubator.foreign.GroupLayout",
            "jdk.incubator.foreign.SequenceLayout",
            "jdk.incubator.foreign.ValueLayout",
            "jdk.incubator.foreign.ValueLayout.OfAddress",
            "jdk.incubator.foreign.ValueLayout.OfBoolean",
            "jdk.incubator.foreign.ValueLayout.OfByte",
            "jdk.incubator.foreign.ValueLayout.OfChar",
            "jdk.incubator.foreign.ValueLayout.OfDouble",
            "jdk.incubator.foreign.ValueLayout.OfFloat",
            "jdk.incubator.foreign.ValueLayout.OfInt",
            "jdk.incubator.foreign.ValueLayout.OfLong",
            "jdk.incubator.foreign.ValueLayout.OfShort"
        ],
        "Method": [
            {
                "describeConstable": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "hasSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "bitSize": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "byteSize": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "withName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "bitAlignment": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "byteAlignment": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "withBitAlignment": {
                    "Parameter": {
                        "bitAlignment": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "bitOffset": {
                    "Parameter": {
                        "elements": "MemoryLayout.PathElement"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "bitOffsetHandle": {
                    "Parameter": {
                        "elements": "MemoryLayout.PathElement"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "byteOffset": {
                    "Parameter": {
                        "elements": "MemoryLayout.PathElement"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "byteOffsetHandle": {
                    "Parameter": {
                        "elements": "MemoryLayout.PathElement"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "varHandle": {
                    "Parameter": {
                        "elements": "MemoryLayout.PathElement"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "sliceHandle": {
                    "Parameter": {
                        "elements": "MemoryLayout.PathElement"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "select": {
                    "Parameter": {
                        "elements": "MemoryLayout.PathElement"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "map": {
                    "Parameter": {
                        "": "UnaryOperator",
                        "elements": "MemoryLayout.PathElement"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "isPadding": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "that": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "paddingLayout": {
                    "Parameter": {
                        "size": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "valueLayout": {
                    "Parameter": {
                        "carrier": "Class",
                        "order": "ByteOrder"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "sequenceLayout": {
                    "Parameter": {
                        "elementCount": "long",
                        "elementLayout": "MemoryLayout"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "sequenceLayout": {
                    "Parameter": {
                        "elementLayout": "MemoryLayout"
                    },
                    "Throw": []
                }
            },
            {
                "structLayout": {
                    "Parameter": {
                        "elements": "MemoryLayout"
                    },
                    "Throw": []
                }
            },
            {
                "unionLayout": {
                    "Parameter": {
                        "elements": "MemoryLayout"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1082": {
        "Package": "jdk.incubator.foreign",
        "Interface": "MemoryLayout.PathElement",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "groupElement": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "sequenceElement": {
                    "Parameter": {
                        "index": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "sequenceElement": {
                    "Parameter": {
                        "start": "long",
                        "step": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "sequenceElement": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1083": {
        "Package": "jdk.incubator.foreign",
        "Interface": "MemorySegment",
        "Superinterface": [
            "jdk.incubator.foreign.Addressable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "address": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "spliterator": {
                    "Parameter": {
                        "elementLayout": "MemoryLayout"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "elements": {
                    "Parameter": {
                        "elementLayout": "MemoryLayout"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "scope": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "byteSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "asSlice": {
                    "Parameter": {
                        "offset": "long",
                        "newSize": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "asSlice": {
                    "Parameter": {
                        "offset": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "isReadOnly": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "asReadOnly": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isNative": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isMapped": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "asOverlappingSlice": {
                    "Parameter": {
                        "other": "MemorySegment"
                    },
                    "Throw": []
                }
            },
            {
                "segmentOffset": {
                    "Parameter": {
                        "other": "MemorySegment"
                    },
                    "Throw": []
                }
            },
            {
                "fill": {
                    "Parameter": {
                        "value": "byte"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "copyFrom": {
                    "Parameter": {
                        "src": "MemorySegment"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "mismatch": {
                    "Parameter": {
                        "other": "MemorySegment"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "isLoaded": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "load": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "unload": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "force": {
                    "Parameter": {},
                    "Throw": "java.io.UncheckedIOException"
                }
            },
            {
                "asByteBuffer": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "toArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfByte"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "toArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfShort"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "toArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfChar"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "toArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfInt"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "toArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfFloat"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "toArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfLong"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "toArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfDouble"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "getUtf8String": {
                    "Parameter": {
                        "offset": "long"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "setUtf8String": {
                    "Parameter": {
                        "offset": "long",
                        "str": "String"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "ofByteBuffer": {
                    "Parameter": {
                        "bb": "ByteBuffer"
                    },
                    "Throw": []
                }
            },
            {
                "ofArray": {
                    "Parameter": {
                        "arr": "byte"
                    },
                    "Throw": []
                }
            },
            {
                "ofArray": {
                    "Parameter": {
                        "arr": "char"
                    },
                    "Throw": []
                }
            },
            {
                "ofArray": {
                    "Parameter": {
                        "arr": "short"
                    },
                    "Throw": []
                }
            },
            {
                "ofArray": {
                    "Parameter": {
                        "arr": "int"
                    },
                    "Throw": []
                }
            },
            {
                "ofArray": {
                    "Parameter": {
                        "arr": "float"
                    },
                    "Throw": []
                }
            },
            {
                "ofArray": {
                    "Parameter": {
                        "arr": "long"
                    },
                    "Throw": []
                }
            },
            {
                "ofArray": {
                    "Parameter": {
                        "arr": "double"
                    },
                    "Throw": []
                }
            },
            {
                "ofAddress": {
                    "Parameter": {
                        "address": "MemoryAddress",
                        "bytesSize": "long",
                        "scope": "ResourceScope"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "allocateNative": {
                    "Parameter": {
                        "layout": "MemoryLayout",
                        "scope": "ResourceScope"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "allocateNative": {
                    "Parameter": {
                        "bytesSize": "long",
                        "scope": "ResourceScope"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "allocateNative": {
                    "Parameter": {
                        "bytesSize": "long",
                        "alignmentBytes": "long",
                        "scope": "ResourceScope"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "mapFile": {
                    "Parameter": {
                        "path": "Path",
                        "bytesOffset": "long",
                        "bytesSize": "long",
                        "mapMode": "FileChannel.MapMode",
                        "scope": "ResourceScope"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "copy": {
                    "Parameter": {
                        "srcSegment": "MemorySegment",
                        "srcOffset": "long",
                        "dstSegment": "MemorySegment",
                        "dstOffset": "long",
                        "bytes": "long"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "copy": {
                    "Parameter": {
                        "srcSegment": "MemorySegment",
                        "srcElementLayout": "ValueLayout",
                        "srcOffset": "long",
                        "dstSegment": "MemorySegment",
                        "dstElementLayout": "ValueLayout",
                        "dstOffset": "long",
                        "elementCount": "long"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfByte",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfByte",
                        "offset": "long",
                        "value": "byte"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfBoolean",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfBoolean",
                        "offset": "long",
                        "value": "boolean"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfChar",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfChar",
                        "offset": "long",
                        "value": "char"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfShort",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfShort",
                        "offset": "long",
                        "value": "short"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfInt",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfInt",
                        "offset": "long",
                        "value": "int"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfFloat",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfFloat",
                        "offset": "long",
                        "value": "float"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfLong",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfLong",
                        "offset": "long",
                        "value": "long"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfDouble",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfDouble",
                        "offset": "long",
                        "value": "double"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "get": {
                    "Parameter": {
                        "layout": "ValueLayout.OfAddress",
                        "offset": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "set": {
                    "Parameter": {
                        "layout": "ValueLayout.OfAddress",
                        "offset": "long",
                        "value": "Addressable"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfChar",
                        "index": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfChar",
                        "index": "long",
                        "value": "char"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfShort",
                        "index": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfShort",
                        "index": "long",
                        "value": "short"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfInt",
                        "index": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfInt",
                        "index": "long",
                        "value": "int"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfFloat",
                        "index": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfFloat",
                        "index": "long",
                        "value": "float"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfLong",
                        "index": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfLong",
                        "index": "long",
                        "value": "long"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfDouble",
                        "index": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfDouble",
                        "index": "long",
                        "value": "double"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfAddress",
                        "index": "long"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "setAtIndex": {
                    "Parameter": {
                        "layout": "ValueLayout.OfAddress",
                        "index": "long",
                        "value": "Addressable"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "copy": {
                    "Parameter": {
                        "srcSegment": "MemorySegment",
                        "srcLayout": "ValueLayout",
                        "srcOffset": "long",
                        "dstArray": "Object",
                        "dstIndex": "int",
                        "elementCount": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "copy": {
                    "Parameter": {
                        "srcArray": "Object",
                        "srcIndex": "int",
                        "dstSegment": "MemorySegment",
                        "dstLayout": "ValueLayout",
                        "dstOffset": "long",
                        "elementCount": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "1084": {
        "Package": "jdk.incubator.foreign",
        "Interface": "NativeSymbol",
        "Superinterface": [
            "jdk.incubator.foreign.Addressable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "scope": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "address": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "ofAddress": {
                    "Parameter": {
                        "name": "String",
                        "address": "MemoryAddress",
                        "scope": "ResourceScope"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            }
        ]
    },
    "1085": {
        "Package": "jdk.incubator.foreign",
        "Interface": "ResourceScope",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isAlive": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "ownerThread": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "addCloseAction": {
                    "Parameter": {
                        "runnable": "Runnable"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "keepAlive": {
                    "Parameter": {
                        "target": "ResourceScope"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "newConfinedScope": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "newConfinedScope": {
                    "Parameter": {
                        "cleaner": "Cleaner"
                    },
                    "Throw": []
                }
            },
            {
                "newSharedScope": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "newSharedScope": {
                    "Parameter": {
                        "cleaner": "Cleaner"
                    },
                    "Throw": []
                }
            },
            {
                "newImplicitScope": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "globalScope": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1086": {
        "Package": "jdk.incubator.foreign",
        "Interface": "SegmentAllocator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "allocateUtf8String": {
                    "Parameter": {
                        "str": "String"
                    },
                    "Throw": []
                }
            },
            {
                "allocate": {
                    "Parameter": {
                        "layout": "ValueLayout.OfByte",
                        "value": "byte"
                    },
                    "Throw": []
                }
            },
            {
                "allocate": {
                    "Parameter": {
                        "layout": "ValueLayout.OfChar",
                        "value": "char"
                    },
                    "Throw": []
                }
            },
            {
                "allocate": {
                    "Parameter": {
                        "layout": "ValueLayout.OfShort",
                        "value": "short"
                    },
                    "Throw": []
                }
            },
            {
                "allocate": {
                    "Parameter": {
                        "layout": "ValueLayout.OfInt",
                        "value": "int"
                    },
                    "Throw": []
                }
            },
            {
                "allocate": {
                    "Parameter": {
                        "layout": "ValueLayout.OfFloat",
                        "value": "float"
                    },
                    "Throw": []
                }
            },
            {
                "allocate": {
                    "Parameter": {
                        "layout": "ValueLayout.OfLong",
                        "value": "long"
                    },
                    "Throw": []
                }
            },
            {
                "allocate": {
                    "Parameter": {
                        "layout": "ValueLayout.OfDouble",
                        "value": "double"
                    },
                    "Throw": []
                }
            },
            {
                "allocate": {
                    "Parameter": {
                        "layout": "ValueLayout.OfAddress",
                        "value": "Addressable"
                    },
                    "Throw": []
                }
            },
            {
                "allocateArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfByte",
                        "array": "byte"
                    },
                    "Throw": []
                }
            },
            {
                "allocateArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfShort",
                        "array": "short"
                    },
                    "Throw": []
                }
            },
            {
                "allocateArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfChar",
                        "array": "char"
                    },
                    "Throw": []
                }
            },
            {
                "allocateArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfInt",
                        "array": "int"
                    },
                    "Throw": []
                }
            },
            {
                "allocateArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfFloat",
                        "array": "float"
                    },
                    "Throw": []
                }
            },
            {
                "allocateArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfLong",
                        "array": "long"
                    },
                    "Throw": []
                }
            },
            {
                "allocateArray": {
                    "Parameter": {
                        "elementLayout": "ValueLayout.OfDouble",
                        "array": "double"
                    },
                    "Throw": []
                }
            },
            {
                "allocate": {
                    "Parameter": {
                        "layout": "MemoryLayout"
                    },
                    "Throw": []
                }
            },
            {
                "allocateArray": {
                    "Parameter": {
                        "elementLayout": "MemoryLayout",
                        "count": "long"
                    },
                    "Throw": []
                }
            },
            {
                "allocate": {
                    "Parameter": {
                        "bytesSize": "long"
                    },
                    "Throw": []
                }
            },
            {
                "allocate": {
                    "Parameter": {
                        "bytesSize": "long",
                        "bytesAlignment": "long"
                    },
                    "Throw": []
                }
            },
            {
                "newNativeArena": {
                    "Parameter": {
                        "scope": "ResourceScope"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "newNativeArena": {
                    "Parameter": {
                        "arenaSize": "long",
                        "scope": "ResourceScope"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "newNativeArena": {
                    "Parameter": {
                        "arenaSize": "long",
                        "blockSize": "long",
                        "scope": "ResourceScope"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "prefixAllocator": {
                    "Parameter": {
                        "segment": "MemorySegment"
                    },
                    "Throw": []
                }
            },
            {
                "nativeAllocator": {
                    "Parameter": {
                        "scope": "ResourceScope"
                    },
                    "Throw": []
                }
            },
            {
                "implicitAllocator": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1087": {
        "Package": "jdk.incubator.foreign",
        "Interface": "SymbolLookup",
        "Superinterface": null,
        "Implementing Class": [
            "jdk.incubator.foreign.CLinker"
        ],
        "Subinterface": null,
        "Method": [
            {
                "lookup": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "loaderLookup": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalCallerException"
                }
            }
        ]
    },
    "1088": {
        "Package": "jdk.incubator.foreign",
        "Interface": "VaList.Builder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addVarg": {
                    "Parameter": {
                        "layout": "ValueLayout.OfInt",
                        "value": "int"
                    },
                    "Throw": []
                }
            },
            {
                "addVarg": {
                    "Parameter": {
                        "layout": "ValueLayout.OfLong",
                        "value": "long"
                    },
                    "Throw": []
                }
            },
            {
                "addVarg": {
                    "Parameter": {
                        "layout": "ValueLayout.OfDouble",
                        "value": "double"
                    },
                    "Throw": []
                }
            },
            {
                "addVarg": {
                    "Parameter": {
                        "layout": "ValueLayout.OfAddress",
                        "value": "Addressable"
                    },
                    "Throw": []
                }
            },
            {
                "addVarg": {
                    "Parameter": {
                        "layout": "GroupLayout",
                        "value": "MemorySegment"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1089": {
        "Package": "jdk.incubator.foreign",
        "Interface": "VaList",
        "Superinterface": [
            "jdk.incubator.foreign.Addressable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "nextVarg": {
                    "Parameter": {
                        "layout": "ValueLayout.OfInt"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "nextVarg": {
                    "Parameter": {
                        "layout": "ValueLayout.OfLong"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "nextVarg": {
                    "Parameter": {
                        "layout": "ValueLayout.OfDouble"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "nextVarg": {
                    "Parameter": {
                        "layout": "ValueLayout.OfAddress"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "nextVarg": {
                    "Parameter": {
                        "layout": "GroupLayout",
                        "allocator": "SegmentAllocator"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "skip": {
                    "Parameter": {
                        "layouts": "MemoryLayout"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "scope": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "copy": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "address": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "ofAddress": {
                    "Parameter": {
                        "address": "MemoryAddress",
                        "scope": "ResourceScope"
                    },
                    "Throw": "java.lang.IllegalCallerException"
                }
            },
            {
                "make": {
                    "Parameter": {
                        "": "Consumer",
                        "scope": "ResourceScope"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "empty": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1090": {
        "Package": "jdk.incubator.vector",
        "Interface": "VectorOperators.Associative",
        "Superinterface": [
            "jdk.incubator.vector.VectorOperators.Binary",
            "jdk.incubator.vector.VectorOperators.Operator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1091": {
        "Package": "jdk.incubator.vector",
        "Interface": "VectorOperators.Binary",
        "Superinterface": [
            "jdk.incubator.vector.VectorOperators.Operator"
        ],
        "Implementing Class": [
            "jdk.incubator.vector.VectorOperators.Associative"
        ],
        "Subinterface": null,
        "Method": []
    },
    "1092": {
        "Package": "jdk.incubator.vector",
        "Interface": "VectorOperators.Comparison",
        "Superinterface": [
            "jdk.incubator.vector.VectorOperators.Operator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1093": {
        "Package": "jdk.incubator.vector",
        "Interface": "VectorOperators.Conversion",
        "Superinterface": [
            "jdk.incubator.vector.VectorOperators.Operator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "domainType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "rangeType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "check": {
                    "Parameter": {
                        "Efrom": "Class",
                        "Fto": "Class"
                    },
                    "Throw": []
                }
            },
            {
                "ofCast": {
                    "Parameter": {
                        "Efrom": "Class",
                        "Fto": "Class"
                    },
                    "Throw": []
                }
            },
            {
                "ofReinterpret": {
                    "Parameter": {
                        "Efrom": "Class",
                        "Fto": "Class"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1094": {
        "Package": "jdk.incubator.vector",
        "Interface": "VectorOperators.Operator",
        "Superinterface": null,
        "Implementing Class": [
            "jdk.incubator.vector.VectorOperators.Associative",
            "jdk.incubator.vector.VectorOperators.Binary",
            "jdk.incubator.vector.VectorOperators.Comparison",
            "jdk.incubator.vector.VectorOperators.Conversion",
            "jdk.incubator.vector.VectorOperators.Ternary",
            "jdk.incubator.vector.VectorOperators.Test",
            "jdk.incubator.vector.VectorOperators.Unary"
        ],
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "operatorName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "arity": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isBoolean": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "rangeType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isAssociative": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "compatibleWith": {
                    "Parameter": {
                        "elementType": "Class"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1095": {
        "Package": "jdk.incubator.vector",
        "Interface": "VectorOperators.Ternary",
        "Superinterface": [
            "jdk.incubator.vector.VectorOperators.Operator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1096": {
        "Package": "jdk.incubator.vector",
        "Interface": "VectorOperators.Test",
        "Superinterface": [
            "jdk.incubator.vector.VectorOperators.Operator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1097": {
        "Package": "jdk.incubator.vector",
        "Interface": "VectorOperators.Unary",
        "Superinterface": [
            "jdk.incubator.vector.VectorOperators.Operator"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1098": {
        "Package": "jdk.incubator.vector",
        "Interface": "VectorSpecies",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "elementType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "vectorType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "maskType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "elementSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "vectorShape": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "length": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "vectorBitSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "vectorByteSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "loopBound": {
                    "Parameter": {
                        "length": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "indexInRange": {
                    "Parameter": {
                        "offset": "int",
                        "limit": "int"
                    },
                    "Throw": []
                }
            },
            {
                "check": {
                    "Parameter": {
                        "FelementType": "Class"
                    },
                    "Throw": "java.lang.ClassCastException"
                }
            },
            {
                "partLimit": {
                    "Parameter": {
                        "outputSpecies": "VectorSpecies",
                        "lanewise": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "withLanes": {
                    "Parameter": {
                        "FnewType": "Class"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "withShape": {
                    "Parameter": {
                        "newShape": "VectorShape"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "of": {
                    "Parameter": {
                        "EelementType": "Class",
                        "shape": "VectorShape"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "ofLargestShape": {
                    "Parameter": {
                        "Eetype": "Class"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "ofPreferred": {
                    "Parameter": {
                        "Eetype": "Class"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "elementSize": {
                    "Parameter": {
                        "elementType": "Class"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "zero": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "fromArray": {
                    "Parameter": {
                        "a": "Object",
                        "offset": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "fromByteArray": {
                    "Parameter": {
                        "a": "byte",
                        "offset": "int",
                        "bo": "ByteOrder"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "loadMask": {
                    "Parameter": {
                        "bits": "boolean",
                        "offset": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "maskAll": {
                    "Parameter": {
                        "bit": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "broadcast": {
                    "Parameter": {
                        "e": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "checkValue": {
                    "Parameter": {
                        "e": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "shuffleFromValues": {
                    "Parameter": {
                        "sourceIndexes": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "shuffleFromArray": {
                    "Parameter": {
                        "sourceIndexes": "int",
                        "offset": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "shuffleFromOp": {
                    "Parameter": {
                        "fn": "IntUnaryOperator"
                    },
                    "Throw": []
                }
            },
            {
                "iotaShuffle": {
                    "Parameter": {
                        "start": "int",
                        "step": "int",
                        "wrap": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1099": {
        "Package": "com.sun.jarsigner",
        "Interface": "ContentSignerParameters",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCommandLine": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTimestampingAuthority": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTimestampingAuthorityCertificate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTSAPolicyID": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTSADigestAlg": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSignature": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSignatureAlgorithm": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSignerCertificateChain": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getContent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSource": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1100": {
        "Package": "jdk.javadoc.doclet",
        "Interface": "Doclet",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "jdk.javadoc.doclet.StandardDoclet"
        ],
        "Method": [
            {
                "init": {
                    "Parameter": {
                        "locale": "Locale",
                        "reporter": "Reporter"
                    },
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSupportedOptions": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSupportedSourceVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "run": {
                    "Parameter": {
                        "environment": "DocletEnvironment"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1101": {
        "Package": "jdk.javadoc.doclet",
        "Interface": "Doclet.Option",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getArgumentCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDescription": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getKind": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParameters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "process": {
                    "Parameter": {
                        "option": "String",
                        "": "List"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1102": {
        "Package": "jdk.javadoc.doclet",
        "Interface": "DocletEnvironment",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getSpecifiedElements": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIncludedElements": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDocTrees": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getElementUtils": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTypeUtils": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isIncluded": {
                    "Parameter": {
                        "e": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "isSelected": {
                    "Parameter": {
                        "e": "Element"
                    },
                    "Throw": []
                }
            },
            {
                "getJavaFileManager": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSourceVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getModuleMode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFileKind": {
                    "Parameter": {
                        "type": "TypeElement"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1103": {
        "Package": "jdk.javadoc.doclet",
        "Interface": "Reporter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "print": {
                    "Parameter": {
                        "kind": "Diagnostic.Kind",
                        "message": "String"
                    },
                    "Throw": []
                }
            },
            {
                "print": {
                    "Parameter": {
                        "kind": "Diagnostic.Kind",
                        "path": "DocTreePath",
                        "message": "String"
                    },
                    "Throw": []
                }
            },
            {
                "print": {
                    "Parameter": {
                        "kind": "Diagnostic.Kind",
                        "path": "DocTreePath",
                        "start": "int",
                        "pos": "int",
                        "end": "int",
                        "message": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "print": {
                    "Parameter": {
                        "kind": "Diagnostic.Kind",
                        "element": "Element",
                        "message": "String"
                    },
                    "Throw": []
                }
            },
            {
                "print": {
                    "Parameter": {
                        "kind": "Diagnostic.Kind",
                        "file": "FileObject",
                        "start": "int",
                        "pos": "int",
                        "end": "int",
                        "message": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getStandardWriter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDiagnosticWriter": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1104": {
        "Package": "jdk.javadoc.doclet",
        "Interface": "Taglet",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAllowedLocations": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isInlineTag": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isBlockTag": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "init": {
                    "Parameter": {
                        "env": "DocletEnvironment",
                        "doclet": "Doclet"
                    },
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {
                        "extends": "List",
                        "element": "Element"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1105": {
        "Package": "com.sun.tools.jconsole",
        "Interface": "JConsoleContext",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getMBeanServerConnection": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getConnectionState": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addPropertyChangeListener": {
                    "Parameter": {
                        "listener": "PropertyChangeListener"
                    },
                    "Throw": []
                }
            },
            {
                "removePropertyChangeListener": {
                    "Parameter": {
                        "listener": "PropertyChangeListener"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1106": {
        "Package": "com.sun.jdi",
        "Interface": "Accessible",
        "Superinterface": null,
        "Implementing Class": [
            "com.sun.jdi.ArrayType",
            "com.sun.jdi.ClassType",
            "com.sun.jdi.Field",
            "com.sun.jdi.InterfaceType",
            "com.sun.jdi.Method",
            "com.sun.jdi.ReferenceType",
            "com.sun.jdi.TypeComponent"
        ],
        "Subinterface": null,
        "Method": [
            {
                "modifiers": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isPrivate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isPackagePrivate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isProtected": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isPublic": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1107": {
        "Package": "com.sun.jdi",
        "Interface": "ArrayReference",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.ObjectReference",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "length": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "getValues": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValues": {
                    "Parameter": {
                        "index": "int",
                        "length": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "index": "int",
                        "value": "Value"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "setValues": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "setValues": {
                    "Parameter": {
                        "index": "int",
                        "extends": "List",
                        "srcIndex": "int",
                        "length": "int"
                    },
                    "Throw": "com.sun.jdi.ClassNotLoadedException"
                }
            }
        ]
    },
    "1108": {
        "Package": "com.sun.jdi",
        "Interface": "ArrayType",
        "Superinterface": [
            "com.sun.jdi.Accessible",
            "java.lang.Comparable",
            "com.sun.jdi.ReferenceType",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.ReferenceType",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "newInstance": {
                    "Parameter": {
                        "length": "int"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "componentSignature": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "componentTypeName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "componentType": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotLoadedException"
                }
            }
        ]
    },
    "1109": {
        "Package": "com.sun.jdi",
        "Interface": "BooleanType",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveType",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1110": {
        "Package": "com.sun.jdi",
        "Interface": "BooleanValue",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveValue",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "value": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1111": {
        "Package": "com.sun.jdi",
        "Interface": "ByteType",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveType",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1112": {
        "Package": "com.sun.jdi",
        "Interface": "ByteValue",
        "Superinterface": [
            "java.lang.Comparable",
            "com.sun.jdi.ByteValue",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveValue",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "value": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1113": {
        "Package": "com.sun.jdi",
        "Interface": "CharType",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveType",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1114": {
        "Package": "com.sun.jdi",
        "Interface": "CharValue",
        "Superinterface": [
            "java.lang.Comparable",
            "com.sun.jdi.CharValue",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveValue",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "value": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1115": {
        "Package": "com.sun.jdi",
        "Interface": "ClassLoaderReference",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.ObjectReference",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "definedClasses": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "visibleClasses": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1116": {
        "Package": "com.sun.jdi",
        "Interface": "ClassObjectReference",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.ObjectReference",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "reflectedType": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1117": {
        "Package": "com.sun.jdi",
        "Interface": "ClassType",
        "Superinterface": [
            "com.sun.jdi.Accessible",
            "java.lang.Comparable",
            "com.sun.jdi.ReferenceType",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.ReferenceType",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "superclass": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "interfaces": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "allInterfaces": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "subclasses": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEnum": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "field": "Field",
                        "value": "Value"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "invokeMethod": {
                    "Parameter": {
                        "thread": "ThreadReference",
                        "method": "Method",
                        "extends": "List",
                        "options": "int"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "newInstance": {
                    "Parameter": {
                        "thread": "ThreadReference",
                        "method": "Method",
                        "extends": "List",
                        "options": "int"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "concreteMethodByName": {
                    "Parameter": {
                        "name": "String",
                        "signature": "String"
                    },
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            }
        ]
    },
    "1118": {
        "Package": "com.sun.jdi",
        "Interface": "DoubleType",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveType",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1119": {
        "Package": "com.sun.jdi",
        "Interface": "DoubleValue",
        "Superinterface": [
            "java.lang.Comparable",
            "com.sun.jdi.DoubleValue",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveValue",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "value": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1120": {
        "Package": "com.sun.jdi",
        "Interface": "Field",
        "Superinterface": [
            "com.sun.jdi.Accessible",
            "java.lang.Comparable",
            "com.sun.jdi.Field",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.TypeComponent"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "typeName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "type": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotLoadedException"
                }
            },
            {
                "isTransient": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isVolatile": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isEnumConstant": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1121": {
        "Package": "com.sun.jdi",
        "Interface": "FloatType",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveType",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1122": {
        "Package": "com.sun.jdi",
        "Interface": "FloatValue",
        "Superinterface": [
            "java.lang.Comparable",
            "com.sun.jdi.FloatValue",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveValue",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "value": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1123": {
        "Package": "com.sun.jdi",
        "Interface": "IntegerType",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveType",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1124": {
        "Package": "com.sun.jdi",
        "Interface": "IntegerValue",
        "Superinterface": [
            "java.lang.Comparable",
            "com.sun.jdi.IntegerValue",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveValue",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "value": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1125": {
        "Package": "com.sun.jdi",
        "Interface": "InterfaceType",
        "Superinterface": [
            "com.sun.jdi.Accessible",
            "java.lang.Comparable",
            "com.sun.jdi.ReferenceType",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.ReferenceType",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "superinterfaces": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "subinterfaces": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "implementors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "invokeMethod": {
                    "Parameter": {
                        "thread": "ThreadReference",
                        "method": "Method",
                        "extends": "List",
                        "options": "int"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            }
        ]
    },
    "1126": {
        "Package": "com.sun.jdi",
        "Interface": "LocalVariable",
        "Superinterface": [
            "java.lang.Comparable",
            "com.sun.jdi.LocalVariable",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "typeName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "type": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotLoadedException"
                }
            },
            {
                "signature": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "genericSignature": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isVisible": {
                    "Parameter": {
                        "frame": "StackFrame"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "isArgument": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1127": {
        "Package": "com.sun.jdi",
        "Interface": "Locatable",
        "Superinterface": null,
        "Implementing Class": [
            "com.sun.jdi.event.AccessWatchpointEvent",
            "com.sun.jdi.event.BreakpointEvent",
            "com.sun.jdi.request.BreakpointRequest",
            "com.sun.jdi.event.ExceptionEvent",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Method",
            "com.sun.jdi.event.MethodEntryEvent",
            "com.sun.jdi.event.MethodExitEvent",
            "com.sun.jdi.event.ModificationWatchpointEvent",
            "com.sun.jdi.event.MonitorContendedEnteredEvent",
            "com.sun.jdi.event.MonitorContendedEnterEvent",
            "com.sun.jdi.event.MonitorWaitedEvent",
            "com.sun.jdi.event.MonitorWaitEvent",
            "com.sun.jdi.StackFrame",
            "com.sun.jdi.event.StepEvent",
            "com.sun.jdi.event.WatchpointEvent"
        ],
        "Subinterface": null,
        "Method": [
            {
                "location": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1128": {
        "Package": "com.sun.jdi",
        "Interface": "Location",
        "Superinterface": [
            "java.lang.Comparable",
            "com.sun.jdi.Location",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "declaringType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "method": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "codeIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "sourceName": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "sourceName": {
                    "Parameter": {
                        "stratum": "String"
                    },
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "sourcePath": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "sourcePath": {
                    "Parameter": {
                        "stratum": "String"
                    },
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "lineNumber": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "lineNumber": {
                    "Parameter": {
                        "stratum": "String"
                    },
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1129": {
        "Package": "com.sun.jdi",
        "Interface": "LongType",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveType",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1130": {
        "Package": "com.sun.jdi",
        "Interface": "LongValue",
        "Superinterface": [
            "java.lang.Comparable",
            "com.sun.jdi.LongValue",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveValue",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "value": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1131": {
        "Package": "com.sun.jdi",
        "Interface": "Method",
        "Superinterface": [
            "com.sun.jdi.Accessible",
            "java.lang.Comparable",
            "com.sun.jdi.Method",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.TypeComponent"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "returnTypeName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "returnType": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotLoadedException"
                }
            },
            {
                "argumentTypeNames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "argumentTypes": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotLoadedException"
                }
            },
            {
                "isAbstract": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isDefault": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSynchronized": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isNative": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isVarArgs": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isBridge": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isConstructor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isStaticInitializer": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isObsolete": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "allLineLocations": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "allLineLocations": {
                    "Parameter": {
                        "stratum": "String",
                        "sourceName": "String"
                    },
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "locationsOfLine": {
                    "Parameter": {
                        "lineNumber": "int"
                    },
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "locationsOfLine": {
                    "Parameter": {
                        "stratum": "String",
                        "sourceName": "String",
                        "lineNumber": "int"
                    },
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "locationOfCodeIndex": {
                    "Parameter": {
                        "codeIndex": "long"
                    },
                    "Throw": []
                }
            },
            {
                "variables": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "variablesByName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "arguments": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "bytecodes": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "location": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1132": {
        "Package": "com.sun.jdi",
        "Interface": "Mirror",
        "Superinterface": null,
        "Implementing Class": [
            "com.sun.jdi.event.AccessWatchpointEvent",
            "com.sun.jdi.request.AccessWatchpointRequest",
            "com.sun.jdi.ArrayReference",
            "com.sun.jdi.ArrayType",
            "com.sun.jdi.BooleanType",
            "com.sun.jdi.BooleanValue",
            "com.sun.jdi.event.BreakpointEvent",
            "com.sun.jdi.request.BreakpointRequest",
            "com.sun.jdi.ByteType",
            "com.sun.jdi.ByteValue",
            "com.sun.jdi.CharType",
            "com.sun.jdi.CharValue",
            "com.sun.jdi.ClassLoaderReference",
            "com.sun.jdi.ClassObjectReference",
            "com.sun.jdi.event.ClassPrepareEvent",
            "com.sun.jdi.request.ClassPrepareRequest",
            "com.sun.jdi.ClassType",
            "com.sun.jdi.event.ClassUnloadEvent",
            "com.sun.jdi.request.ClassUnloadRequest",
            "com.sun.jdi.DoubleType",
            "com.sun.jdi.DoubleValue",
            "com.sun.jdi.event.Event",
            "com.sun.jdi.event.EventQueue",
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.request.EventRequestManager",
            "com.sun.jdi.event.EventSet",
            "com.sun.jdi.event.ExceptionEvent",
            "com.sun.jdi.request.ExceptionRequest",
            "com.sun.jdi.Field",
            "com.sun.jdi.FloatType",
            "com.sun.jdi.FloatValue",
            "com.sun.jdi.IntegerType",
            "com.sun.jdi.IntegerValue",
            "com.sun.jdi.InterfaceType",
            "com.sun.jdi.LocalVariable",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Location",
            "com.sun.jdi.LongType",
            "com.sun.jdi.LongValue",
            "com.sun.jdi.Method",
            "com.sun.jdi.event.MethodEntryEvent",
            "com.sun.jdi.request.MethodEntryRequest",
            "com.sun.jdi.event.MethodExitEvent",
            "com.sun.jdi.request.MethodExitRequest",
            "com.sun.jdi.event.ModificationWatchpointEvent",
            "com.sun.jdi.request.ModificationWatchpointRequest",
            "com.sun.jdi.ModuleReference",
            "com.sun.jdi.event.MonitorContendedEnteredEvent",
            "com.sun.jdi.request.MonitorContendedEnteredRequest",
            "com.sun.jdi.event.MonitorContendedEnterEvent",
            "com.sun.jdi.request.MonitorContendedEnterRequest",
            "com.sun.jdi.MonitorInfo",
            "com.sun.jdi.event.MonitorWaitedEvent",
            "com.sun.jdi.request.MonitorWaitedRequest",
            "com.sun.jdi.event.MonitorWaitEvent",
            "com.sun.jdi.request.MonitorWaitRequest",
            "com.sun.jdi.ObjectReference",
            "com.sun.jdi.PathSearchingVirtualMachine",
            "com.sun.jdi.PrimitiveType",
            "com.sun.jdi.PrimitiveValue",
            "com.sun.jdi.ReferenceType",
            "com.sun.jdi.ShortType",
            "com.sun.jdi.ShortValue",
            "com.sun.jdi.StackFrame",
            "com.sun.jdi.event.StepEvent",
            "com.sun.jdi.request.StepRequest",
            "com.sun.jdi.StringReference",
            "com.sun.jdi.event.ThreadDeathEvent",
            "com.sun.jdi.request.ThreadDeathRequest",
            "com.sun.jdi.ThreadGroupReference",
            "com.sun.jdi.ThreadReference",
            "com.sun.jdi.event.ThreadStartEvent",
            "com.sun.jdi.request.ThreadStartRequest",
            "com.sun.jdi.Type",
            "com.sun.jdi.TypeComponent",
            "com.sun.jdi.Value",
            "com.sun.jdi.VirtualMachine",
            "com.sun.jdi.event.VMDeathEvent",
            "com.sun.jdi.request.VMDeathRequest",
            "com.sun.jdi.event.VMDisconnectEvent",
            "com.sun.jdi.event.VMStartEvent",
            "com.sun.jdi.VoidType",
            "com.sun.jdi.VoidValue",
            "com.sun.jdi.event.WatchpointEvent",
            "com.sun.jdi.request.WatchpointRequest"
        ],
        "Subinterface": null,
        "Method": [
            {
                "virtualMachine": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "toString": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1133": {
        "Package": "com.sun.jdi",
        "Interface": "ModuleReference",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.ObjectReference",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "classLoader": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1134": {
        "Package": "com.sun.jdi",
        "Interface": "MonitorInfo",
        "Superinterface": [
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "monitor": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.InvalidStackFrameException"
                }
            },
            {
                "stackDepth": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.InvalidStackFrameException"
                }
            },
            {
                "thread": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.InvalidStackFrameException"
                }
            }
        ]
    },
    "1135": {
        "Package": "com.sun.jdi",
        "Interface": "ObjectReference",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": [
            "com.sun.jdi.ArrayReference",
            "com.sun.jdi.ClassLoaderReference",
            "com.sun.jdi.ClassObjectReference",
            "com.sun.jdi.ModuleReference",
            "com.sun.jdi.StringReference",
            "com.sun.jdi.ThreadGroupReference",
            "com.sun.jdi.ThreadReference"
        ],
        "Subinterface": null,
        "Method": [
            {
                "referenceType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {
                        "sig": "Field"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getValues": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "field": "Field",
                        "value": "Value"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "invokeMethod": {
                    "Parameter": {
                        "thread": "ThreadReference",
                        "method": "Method",
                        "extends": "List",
                        "options": "int"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "disableCollection": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "enableCollection": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "isCollected": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "uniqueID": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "waitingThreads": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.IncompatibleThreadStateException"
                }
            },
            {
                "owningThread": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.IncompatibleThreadStateException"
                }
            },
            {
                "entryCount": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.IncompatibleThreadStateException"
                }
            },
            {
                "referringObjects": {
                    "Parameter": {
                        "maxReferrers": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1136": {
        "Package": "com.sun.jdi",
        "Interface": "PathSearchingVirtualMachine",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.VirtualMachine"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "classPath": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "bootClassPath": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "baseDirectory": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1137": {
        "Package": "com.sun.jdi",
        "Interface": "PrimitiveType",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": [
            "com.sun.jdi.BooleanType",
            "com.sun.jdi.ByteType",
            "com.sun.jdi.CharType",
            "com.sun.jdi.DoubleType",
            "com.sun.jdi.FloatType",
            "com.sun.jdi.IntegerType",
            "com.sun.jdi.LongType",
            "com.sun.jdi.ShortType"
        ],
        "Subinterface": null,
        "Method": []
    },
    "1138": {
        "Package": "com.sun.jdi",
        "Interface": "PrimitiveValue",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": [
            "com.sun.jdi.BooleanValue",
            "com.sun.jdi.ByteValue",
            "com.sun.jdi.CharValue",
            "com.sun.jdi.DoubleValue",
            "com.sun.jdi.FloatValue",
            "com.sun.jdi.IntegerValue",
            "com.sun.jdi.LongValue",
            "com.sun.jdi.ShortValue"
        ],
        "Subinterface": null,
        "Method": [
            {
                "booleanValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "byteValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "charValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "shortValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "intValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "longValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "floatValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "doubleValue": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1139": {
        "Package": "com.sun.jdi",
        "Interface": "ReferenceType",
        "Superinterface": [
            "com.sun.jdi.Accessible",
            "java.lang.Comparable",
            "com.sun.jdi.ReferenceType",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": [
            "com.sun.jdi.ArrayType",
            "com.sun.jdi.ClassType",
            "com.sun.jdi.InterfaceType"
        ],
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "genericSignature": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "classLoader": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "module": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "sourceName": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "sourceNames": {
                    "Parameter": {
                        "stratum": "String"
                    },
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "sourcePaths": {
                    "Parameter": {
                        "stratum": "String"
                    },
                    "Throw": "com.sun.jdi.AbsentInformationException"
                }
            },
            {
                "sourceDebugExtension": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "isStatic": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isAbstract": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isFinal": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isPrepared": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isVerified": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isInitialized": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "failedToInitialize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "fields": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "visibleFields": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "allFields": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "fieldByName": {
                    "Parameter": {
                        "fieldName": "String"
                    },
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "methods": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "visibleMethods": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "allMethods": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "methodsByName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "methodsByName": {
                    "Parameter": {
                        "name": "String",
                        "signature": "String"
                    },
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "nestedTypes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {
                        "field": "Field"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "getValues": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": "com.sun.jdi.VMMismatchException"
                }
            },
            {
                "classObject": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "allLineLocations": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "allLineLocations": {
                    "Parameter": {
                        "stratum": "String",
                        "sourceName": "String"
                    },
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "locationsOfLine": {
                    "Parameter": {
                        "lineNumber": "int"
                    },
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "locationsOfLine": {
                    "Parameter": {
                        "stratum": "String",
                        "sourceName": "String",
                        "lineNumber": "int"
                    },
                    "Throw": "com.sun.jdi.ClassNotPreparedException"
                }
            },
            {
                "availableStrata": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "defaultStratum": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "instances": {
                    "Parameter": {
                        "maxInstances": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "majorVersion": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "minorVersion": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "constantPoolCount": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "constantPool": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            }
        ]
    },
    "1140": {
        "Package": "com.sun.jdi",
        "Interface": "ShortType",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveType",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1141": {
        "Package": "com.sun.jdi",
        "Interface": "ShortValue",
        "Superinterface": [
            "java.lang.Comparable",
            "com.sun.jdi.ShortValue",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.PrimitiveValue",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "value": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1142": {
        "Package": "com.sun.jdi",
        "Interface": "StackFrame",
        "Superinterface": [
            "com.sun.jdi.Locatable",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "location": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.InvalidStackFrameException"
                }
            },
            {
                "thread": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.InvalidStackFrameException"
                }
            },
            {
                "thisObject": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.InvalidStackFrameException"
                }
            },
            {
                "visibleVariables": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.NativeMethodException"
                }
            },
            {
                "visibleVariableByName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "com.sun.jdi.NativeMethodException"
                }
            },
            {
                "getValue": {
                    "Parameter": {
                        "variable": "LocalVariable"
                    },
                    "Throw": "com.sun.jdi.InvalidStackFrameException"
                }
            },
            {
                "getValues": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": "com.sun.jdi.InvalidStackFrameException"
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "variable": "LocalVariable",
                        "value": "Value"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "getArgumentValues": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.InvalidStackFrameException"
                }
            }
        ]
    },
    "1143": {
        "Package": "com.sun.jdi",
        "Interface": "StringReference",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.ObjectReference",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "value": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1144": {
        "Package": "com.sun.jdi",
        "Interface": "ThreadGroupReference",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.ObjectReference",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "parent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "suspend": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "resume": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "threads": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "threadGroups": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1145": {
        "Package": "com.sun.jdi",
        "Interface": "ThreadReference",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.ObjectReference",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "suspend": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "resume": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "suspendCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "stop": {
                    "Parameter": {
                        "throwable": "ObjectReference"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "interrupt": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "status": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSuspended": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isAtBreakpoint": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "threadGroup": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "frameCount": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.IncompatibleThreadStateException"
                }
            },
            {
                "frames": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.IncompatibleThreadStateException"
                }
            },
            {
                "frame": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "frames": {
                    "Parameter": {
                        "start": "int",
                        "length": "int"
                    },
                    "Throw": "java.lang.IndexOutOfBoundsException"
                }
            },
            {
                "ownedMonitors": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.IncompatibleThreadStateException"
                }
            },
            {
                "ownedMonitorsAndFrames": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.IncompatibleThreadStateException"
                }
            },
            {
                "currentContendedMonitor": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.IncompatibleThreadStateException"
                }
            },
            {
                "popFrames": {
                    "Parameter": {
                        "frame": "StackFrame"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "forceEarlyReturn": {
                    "Parameter": {
                        "value": "Value"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            }
        ]
    },
    "1146": {
        "Package": "com.sun.jdi",
        "Interface": "Type",
        "Superinterface": [
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": [
            "com.sun.jdi.ArrayType",
            "com.sun.jdi.BooleanType",
            "com.sun.jdi.ByteType",
            "com.sun.jdi.CharType",
            "com.sun.jdi.ClassType",
            "com.sun.jdi.DoubleType",
            "com.sun.jdi.FloatType",
            "com.sun.jdi.IntegerType",
            "com.sun.jdi.InterfaceType",
            "com.sun.jdi.LongType",
            "com.sun.jdi.PrimitiveType",
            "com.sun.jdi.ReferenceType",
            "com.sun.jdi.ShortType",
            "com.sun.jdi.VoidType"
        ],
        "Subinterface": null,
        "Method": [
            {
                "signature": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1147": {
        "Package": "com.sun.jdi",
        "Interface": "TypeComponent",
        "Superinterface": [
            "com.sun.jdi.Accessible",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": [
            "com.sun.jdi.Field",
            "com.sun.jdi.Method"
        ],
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "signature": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "genericSignature": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "declaringType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isStatic": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isFinal": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isSynthetic": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            }
        ]
    },
    "1148": {
        "Package": "com.sun.jdi",
        "Interface": "Value",
        "Superinterface": [
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": [
            "com.sun.jdi.ArrayReference",
            "com.sun.jdi.BooleanValue",
            "com.sun.jdi.ByteValue",
            "com.sun.jdi.CharValue",
            "com.sun.jdi.ClassLoaderReference",
            "com.sun.jdi.ClassObjectReference",
            "com.sun.jdi.DoubleValue",
            "com.sun.jdi.FloatValue",
            "com.sun.jdi.IntegerValue",
            "com.sun.jdi.LongValue",
            "com.sun.jdi.ModuleReference",
            "com.sun.jdi.ObjectReference",
            "com.sun.jdi.PrimitiveValue",
            "com.sun.jdi.ShortValue",
            "com.sun.jdi.StringReference",
            "com.sun.jdi.ThreadGroupReference",
            "com.sun.jdi.ThreadReference",
            "com.sun.jdi.VoidValue"
        ],
        "Subinterface": null,
        "Method": [
            {
                "type": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1149": {
        "Package": "com.sun.jdi",
        "Interface": "VirtualMachine",
        "Superinterface": [
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": [
            "com.sun.jdi.PathSearchingVirtualMachine"
        ],
        "Subinterface": null,
        "Method": [
            {
                "allModules": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "classesByName": {
                    "Parameter": {
                        "className": "String"
                    },
                    "Throw": []
                }
            },
            {
                "allClasses": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "redefineClasses": {
                    "Parameter": {
                        "extends": "Map"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "allThreads": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "suspend": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "resume": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "topLevelThreadGroups": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "eventQueue": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "eventRequestManager": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "mirrorOf": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "mirrorOf": {
                    "Parameter": {
                        "value": "byte"
                    },
                    "Throw": []
                }
            },
            {
                "mirrorOf": {
                    "Parameter": {
                        "value": "char"
                    },
                    "Throw": []
                }
            },
            {
                "mirrorOf": {
                    "Parameter": {
                        "value": "short"
                    },
                    "Throw": []
                }
            },
            {
                "mirrorOf": {
                    "Parameter": {
                        "value": "int"
                    },
                    "Throw": []
                }
            },
            {
                "mirrorOf": {
                    "Parameter": {
                        "value": "long"
                    },
                    "Throw": []
                }
            },
            {
                "mirrorOf": {
                    "Parameter": {
                        "value": "float"
                    },
                    "Throw": []
                }
            },
            {
                "mirrorOf": {
                    "Parameter": {
                        "value": "double"
                    },
                    "Throw": []
                }
            },
            {
                "mirrorOf": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "mirrorOfVoid": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "process": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "dispose": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "exit": {
                    "Parameter": {
                        "exitCode": "int"
                    },
                    "Throw": "com.sun.jdi.VMCannotBeModifiedException"
                }
            },
            {
                "canWatchFieldModification": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canWatchFieldAccess": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canGetBytecodes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canGetSyntheticAttribute": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canGetOwnedMonitorInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canGetCurrentContendedMonitor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canGetMonitorInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canUseInstanceFilters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canRedefineClasses": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canAddMethod": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canUnrestrictedlyRedefineClasses": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canPopFrames": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canGetSourceDebugExtension": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canRequestVMDeathEvent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canGetMethodReturnValues": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canGetInstanceInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canUseSourceNameFilters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canForceEarlyReturn": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canBeModified": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canRequestMonitorEvents": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canGetMonitorFrameInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canGetClassFileVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canGetConstantPool": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "canGetModuleInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDefaultStratum": {
                    "Parameter": {
                        "stratum": "String"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getDefaultStratum": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "instanceCounts": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": "java.lang.NullPointerException"
                }
            },
            {
                "description": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "version": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDebugTraceMode": {
                    "Parameter": {
                        "traceFlags": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1150": {
        "Package": "com.sun.jdi",
        "Interface": "VirtualMachineManager",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "defaultConnector": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "launchingConnectors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "attachingConnectors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "listeningConnectors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "allConnectors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "connectedVirtualMachines": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "majorInterfaceVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "minorInterfaceVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createVirtualMachine": {
                    "Parameter": {
                        "connection": "Connection",
                        "process": "Process"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "createVirtualMachine": {
                    "Parameter": {
                        "connection": "Connection"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            }
        ]
    },
    "1151": {
        "Package": "com.sun.jdi",
        "Interface": "VoidType",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.Type"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1152": {
        "Package": "com.sun.jdi",
        "Interface": "VoidValue",
        "Superinterface": [
            "com.sun.jdi.Mirror",
            "com.sun.jdi.Value"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "equals": {
                    "Parameter": {
                        "obj": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "hashCode": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1153": {
        "Package": "com.sun.jdi.connect",
        "Interface": "AttachingConnector",
        "Superinterface": [
            "com.sun.jdi.connect.Connector"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "attach": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": "com.sun.jdi.connect.IllegalConnectorArgumentsException"
                }
            }
        ]
    },
    "1154": {
        "Package": "com.sun.jdi.connect",
        "Interface": "Connector.Argument",
        "Superinterface": [
            "java.io.Serializable"
        ],
        "Implementing Class": [
            "com.sun.jdi.connect.Connector.BooleanArgument",
            "com.sun.jdi.connect.Connector.IntegerArgument",
            "com.sun.jdi.connect.Connector.SelectedArgument",
            "com.sun.jdi.connect.Connector.StringArgument"
        ],
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "label": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "description": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "value": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": []
                }
            },
            {
                "isValid": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": []
                }
            },
            {
                "mustSpecify": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1155": {
        "Package": "com.sun.jdi.connect",
        "Interface": "Connector.BooleanArgument",
        "Superinterface": [
            "com.sun.jdi.connect.Connector.Argument",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "setValue": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "isValid": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": []
                }
            },
            {
                "stringValueOf": {
                    "Parameter": {
                        "value": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "booleanValue": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1156": {
        "Package": "com.sun.jdi.connect",
        "Interface": "Connector",
        "Superinterface": null,
        "Implementing Class": [
            "com.sun.jdi.connect.AttachingConnector",
            "com.sun.jdi.connect.LaunchingConnector",
            "com.sun.jdi.connect.ListeningConnector"
        ],
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "description": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "transport": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "defaultArguments": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1157": {
        "Package": "com.sun.jdi.connect",
        "Interface": "Connector.IntegerArgument",
        "Superinterface": [
            "com.sun.jdi.connect.Connector.Argument",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "setValue": {
                    "Parameter": {
                        "value": "int"
                    },
                    "Throw": []
                }
            },
            {
                "isValid": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": []
                }
            },
            {
                "isValid": {
                    "Parameter": {
                        "value": "int"
                    },
                    "Throw": []
                }
            },
            {
                "stringValueOf": {
                    "Parameter": {
                        "value": "int"
                    },
                    "Throw": []
                }
            },
            {
                "intValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "max": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "min": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1158": {
        "Package": "com.sun.jdi.connect",
        "Interface": "Connector.SelectedArgument",
        "Superinterface": [
            "com.sun.jdi.connect.Connector.Argument",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "choices": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isValid": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1159": {
        "Package": "com.sun.jdi.connect",
        "Interface": "Connector.StringArgument",
        "Superinterface": [
            "com.sun.jdi.connect.Connector.Argument",
            "java.io.Serializable"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "isValid": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1160": {
        "Package": "com.sun.jdi.connect",
        "Interface": "LaunchingConnector",
        "Superinterface": [
            "com.sun.jdi.connect.Connector"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "launch": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": "com.sun.jdi.connect.VMStartException"
                }
            }
        ]
    },
    "1161": {
        "Package": "com.sun.jdi.connect",
        "Interface": "ListeningConnector",
        "Superinterface": [
            "com.sun.jdi.connect.Connector"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "supportsMultipleConnections": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "startListening": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": "com.sun.jdi.connect.IllegalConnectorArgumentsException"
                }
            },
            {
                "stopListening": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": "com.sun.jdi.connect.IllegalConnectorArgumentsException"
                }
            },
            {
                "accept": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": "com.sun.jdi.connect.IllegalConnectorArgumentsException"
                }
            }
        ]
    },
    "1162": {
        "Package": "com.sun.jdi.connect",
        "Interface": "Transport",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1163": {
        "Package": "com.sun.jdi.event",
        "Interface": "AccessWatchpointEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.event.WatchpointEvent"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1164": {
        "Package": "com.sun.jdi.event",
        "Interface": "BreakpointEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1165": {
        "Package": "com.sun.jdi.event",
        "Interface": "ClassPrepareEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "thread": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "referenceType": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1166": {
        "Package": "com.sun.jdi.event",
        "Interface": "ClassUnloadEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "className": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "classSignature": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1167": {
        "Package": "com.sun.jdi.event",
        "Interface": "Event",
        "Superinterface": [
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": [
            "com.sun.jdi.event.AccessWatchpointEvent",
            "com.sun.jdi.event.BreakpointEvent",
            "com.sun.jdi.event.ClassPrepareEvent",
            "com.sun.jdi.event.ClassUnloadEvent",
            "com.sun.jdi.event.ExceptionEvent",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.event.MethodEntryEvent",
            "com.sun.jdi.event.MethodExitEvent",
            "com.sun.jdi.event.ModificationWatchpointEvent",
            "com.sun.jdi.event.MonitorContendedEnteredEvent",
            "com.sun.jdi.event.MonitorContendedEnterEvent",
            "com.sun.jdi.event.MonitorWaitedEvent",
            "com.sun.jdi.event.MonitorWaitEvent",
            "com.sun.jdi.event.StepEvent",
            "com.sun.jdi.event.ThreadDeathEvent",
            "com.sun.jdi.event.ThreadStartEvent",
            "com.sun.jdi.event.VMDeathEvent",
            "com.sun.jdi.event.VMDisconnectEvent",
            "com.sun.jdi.event.VMStartEvent",
            "com.sun.jdi.event.WatchpointEvent"
        ],
        "Subinterface": null,
        "Method": [
            {
                "request": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1168": {
        "Package": "com.sun.jdi.event",
        "Interface": "EventIterator",
        "Superinterface": [
            "java.util.Iterator",
            "com.sun.jdi.event.Event"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "nextEvent": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1169": {
        "Package": "com.sun.jdi.event",
        "Interface": "EventQueue",
        "Superinterface": [
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "remove": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.VMDisconnectedException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "timeout": "long"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "1170": {
        "Package": "com.sun.jdi.event",
        "Interface": "EventSet",
        "Superinterface": [
            "java.util.Collection",
            "com.sun.jdi.event.Event",
            "java.lang.Iterable",
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Mirror",
            "java.util.Set",
            "com.sun.jdi.event.Event"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "suspendPolicy": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "eventIterator": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "resume": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1171": {
        "Package": "com.sun.jdi.event",
        "Interface": "ExceptionEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "exception": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "catchLocation": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1172": {
        "Package": "com.sun.jdi.event",
        "Interface": "LocatableEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": [
            "com.sun.jdi.event.AccessWatchpointEvent",
            "com.sun.jdi.event.BreakpointEvent",
            "com.sun.jdi.event.ExceptionEvent",
            "com.sun.jdi.event.MethodEntryEvent",
            "com.sun.jdi.event.MethodExitEvent",
            "com.sun.jdi.event.ModificationWatchpointEvent",
            "com.sun.jdi.event.MonitorContendedEnteredEvent",
            "com.sun.jdi.event.MonitorContendedEnterEvent",
            "com.sun.jdi.event.MonitorWaitedEvent",
            "com.sun.jdi.event.MonitorWaitEvent",
            "com.sun.jdi.event.StepEvent",
            "com.sun.jdi.event.WatchpointEvent"
        ],
        "Subinterface": null,
        "Method": [
            {
                "thread": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1173": {
        "Package": "com.sun.jdi.event",
        "Interface": "MethodEntryEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "method": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1174": {
        "Package": "com.sun.jdi.event",
        "Interface": "MethodExitEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "method": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ObjectCollectedException"
                }
            },
            {
                "returnValue": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            }
        ]
    },
    "1175": {
        "Package": "com.sun.jdi.event",
        "Interface": "ModificationWatchpointEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.event.WatchpointEvent"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "valueToBe": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1176": {
        "Package": "com.sun.jdi.event",
        "Interface": "MonitorContendedEnteredEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "thread": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "monitor": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1177": {
        "Package": "com.sun.jdi.event",
        "Interface": "MonitorContendedEnterEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "thread": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "monitor": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1178": {
        "Package": "com.sun.jdi.event",
        "Interface": "MonitorWaitedEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "thread": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "monitor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "timedout": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1179": {
        "Package": "com.sun.jdi.event",
        "Interface": "MonitorWaitEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "thread": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "monitor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "timeout": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1180": {
        "Package": "com.sun.jdi.event",
        "Interface": "StepEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1181": {
        "Package": "com.sun.jdi.event",
        "Interface": "ThreadDeathEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "thread": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1182": {
        "Package": "com.sun.jdi.event",
        "Interface": "ThreadStartEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "thread": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1183": {
        "Package": "com.sun.jdi.event",
        "Interface": "VMDeathEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1184": {
        "Package": "com.sun.jdi.event",
        "Interface": "VMDisconnectEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1185": {
        "Package": "com.sun.jdi.event",
        "Interface": "VMStartEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "thread": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1186": {
        "Package": "com.sun.jdi.event",
        "Interface": "WatchpointEvent",
        "Superinterface": [
            "com.sun.jdi.event.Event",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.event.LocatableEvent",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": [
            "com.sun.jdi.event.AccessWatchpointEvent",
            "com.sun.jdi.event.ModificationWatchpointEvent"
        ],
        "Subinterface": null,
        "Method": [
            {
                "field": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ObjectCollectedException"
                }
            },
            {
                "object": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "valueCurrent": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.ObjectCollectedException"
                }
            }
        ]
    },
    "1187": {
        "Package": "com.sun.jdi.request",
        "Interface": "AccessWatchpointRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.request.WatchpointRequest"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1188": {
        "Package": "com.sun.jdi.request",
        "Interface": "BreakpointRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Locatable",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "location": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addThreadFilter": {
                    "Parameter": {
                        "thread": "ThreadReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addInstanceFilter": {
                    "Parameter": {
                        "instance": "ObjectReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1189": {
        "Package": "com.sun.jdi.request",
        "Interface": "ClassPrepareRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addClassFilter": {
                    "Parameter": {
                        "refType": "ReferenceType"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassExclusionFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addSourceNameFilter": {
                    "Parameter": {
                        "sourceNamePattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1190": {
        "Package": "com.sun.jdi.request",
        "Interface": "ClassUnloadRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addClassFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassExclusionFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1191": {
        "Package": "com.sun.jdi.request",
        "Interface": "EventRequest",
        "Superinterface": [
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": [
            "com.sun.jdi.request.AccessWatchpointRequest",
            "com.sun.jdi.request.BreakpointRequest",
            "com.sun.jdi.request.ClassPrepareRequest",
            "com.sun.jdi.request.ClassUnloadRequest",
            "com.sun.jdi.request.ExceptionRequest",
            "com.sun.jdi.request.MethodEntryRequest",
            "com.sun.jdi.request.MethodExitRequest",
            "com.sun.jdi.request.ModificationWatchpointRequest",
            "com.sun.jdi.request.MonitorContendedEnteredRequest",
            "com.sun.jdi.request.MonitorContendedEnterRequest",
            "com.sun.jdi.request.MonitorWaitedRequest",
            "com.sun.jdi.request.MonitorWaitRequest",
            "com.sun.jdi.request.StepRequest",
            "com.sun.jdi.request.ThreadDeathRequest",
            "com.sun.jdi.request.ThreadStartRequest",
            "com.sun.jdi.request.VMDeathRequest",
            "com.sun.jdi.request.WatchpointRequest"
        ],
        "Subinterface": null,
        "Method": [
            {
                "isEnabled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setEnabled": {
                    "Parameter": {
                        "val": "boolean"
                    },
                    "Throw": "java.lang.IllegalThreadStateException"
                }
            },
            {
                "enable": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalThreadStateException"
                }
            },
            {
                "disable": {
                    "Parameter": {},
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addCountFilter": {
                    "Parameter": {
                        "count": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "setSuspendPolicy": {
                    "Parameter": {
                        "policy": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "suspendPolicy": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "putProperty": {
                    "Parameter": {
                        "key": "Object",
                        "value": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "getProperty": {
                    "Parameter": {
                        "key": "Object"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1192": {
        "Package": "com.sun.jdi.request",
        "Interface": "EventRequestManager",
        "Superinterface": [
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createClassPrepareRequest": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createClassUnloadRequest": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createThreadStartRequest": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createThreadDeathRequest": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createExceptionRequest": {
                    "Parameter": {
                        "refType": "ReferenceType",
                        "notifyCaught": "boolean",
                        "notifyUncaught": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "createMethodEntryRequest": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createMethodExitRequest": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createMonitorContendedEnterRequest": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "createMonitorContendedEnteredRequest": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "createMonitorWaitRequest": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "createMonitorWaitedRequest": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "createStepRequest": {
                    "Parameter": {
                        "thread": "ThreadReference",
                        "size": "int",
                        "depth": "int"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "createBreakpointRequest": {
                    "Parameter": {
                        "location": "Location"
                    },
                    "Throw": "com.sun.jdi.NativeMethodException"
                }
            },
            {
                "createAccessWatchpointRequest": {
                    "Parameter": {
                        "field": "Field"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "createModificationWatchpointRequest": {
                    "Parameter": {
                        "field": "Field"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "createVMDeathRequest": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "deleteEventRequest": {
                    "Parameter": {
                        "eventRequest": "EventRequest"
                    },
                    "Throw": []
                }
            },
            {
                "deleteEventRequests": {
                    "Parameter": {
                        "extends": "List"
                    },
                    "Throw": []
                }
            },
            {
                "deleteAllBreakpoints": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "stepRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "classPrepareRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "classUnloadRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "threadStartRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "threadDeathRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "exceptionRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "breakpointRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "accessWatchpointRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "modificationWatchpointRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "methodEntryRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "methodExitRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "monitorContendedEnterRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "monitorContendedEnteredRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "monitorWaitRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "monitorWaitedRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "vmDeathRequests": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1193": {
        "Package": "com.sun.jdi.request",
        "Interface": "ExceptionRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "exception": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "notifyCaught": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "notifyUncaught": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addThreadFilter": {
                    "Parameter": {
                        "thread": "ThreadReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "refType": "ReferenceType"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassExclusionFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addInstanceFilter": {
                    "Parameter": {
                        "instance": "ObjectReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1194": {
        "Package": "com.sun.jdi.request",
        "Interface": "MethodEntryRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addThreadFilter": {
                    "Parameter": {
                        "thread": "ThreadReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "refType": "ReferenceType"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassExclusionFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addInstanceFilter": {
                    "Parameter": {
                        "instance": "ObjectReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1195": {
        "Package": "com.sun.jdi.request",
        "Interface": "MethodExitRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addThreadFilter": {
                    "Parameter": {
                        "thread": "ThreadReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "refType": "ReferenceType"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassExclusionFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addInstanceFilter": {
                    "Parameter": {
                        "instance": "ObjectReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1196": {
        "Package": "com.sun.jdi.request",
        "Interface": "ModificationWatchpointRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror",
            "com.sun.jdi.request.WatchpointRequest"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1197": {
        "Package": "com.sun.jdi.request",
        "Interface": "MonitorContendedEnteredRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addThreadFilter": {
                    "Parameter": {
                        "thread": "ThreadReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "refType": "ReferenceType"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassExclusionFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addInstanceFilter": {
                    "Parameter": {
                        "instance": "ObjectReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1198": {
        "Package": "com.sun.jdi.request",
        "Interface": "MonitorContendedEnterRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addThreadFilter": {
                    "Parameter": {
                        "thread": "ThreadReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "refType": "ReferenceType"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassExclusionFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addInstanceFilter": {
                    "Parameter": {
                        "instance": "ObjectReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1199": {
        "Package": "com.sun.jdi.request",
        "Interface": "MonitorWaitedRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addThreadFilter": {
                    "Parameter": {
                        "thread": "ThreadReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "refType": "ReferenceType"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassExclusionFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addInstanceFilter": {
                    "Parameter": {
                        "instance": "ObjectReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1200": {
        "Package": "com.sun.jdi.request",
        "Interface": "MonitorWaitRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addThreadFilter": {
                    "Parameter": {
                        "thread": "ThreadReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "refType": "ReferenceType"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassExclusionFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addInstanceFilter": {
                    "Parameter": {
                        "instance": "ObjectReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1201": {
        "Package": "com.sun.jdi.request",
        "Interface": "StepRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "thread": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "size": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "depth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "refType": "ReferenceType"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassExclusionFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addInstanceFilter": {
                    "Parameter": {
                        "instance": "ObjectReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1202": {
        "Package": "com.sun.jdi.request",
        "Interface": "ThreadDeathRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addThreadFilter": {
                    "Parameter": {
                        "thread": "ThreadReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1203": {
        "Package": "com.sun.jdi.request",
        "Interface": "ThreadStartRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "addThreadFilter": {
                    "Parameter": {
                        "thread": "ThreadReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1204": {
        "Package": "com.sun.jdi.request",
        "Interface": "VMDeathRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1205": {
        "Package": "com.sun.jdi.request",
        "Interface": "WatchpointRequest",
        "Superinterface": [
            "com.sun.jdi.request.EventRequest",
            "com.sun.jdi.Mirror"
        ],
        "Implementing Class": [
            "com.sun.jdi.request.AccessWatchpointRequest",
            "com.sun.jdi.request.ModificationWatchpointRequest"
        ],
        "Subinterface": null,
        "Method": [
            {
                "field": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "addThreadFilter": {
                    "Parameter": {
                        "thread": "ThreadReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "refType": "ReferenceType"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addClassExclusionFilter": {
                    "Parameter": {
                        "classPattern": "String"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            },
            {
                "addInstanceFilter": {
                    "Parameter": {
                        "instance": "ObjectReference"
                    },
                    "Throw": "com.sun.jdi.request.InvalidRequestStateException"
                }
            }
        ]
    },
    "1206": {
        "Package": "jdk.jfr",
        "Interface": "FlightRecorderListener",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "recorderInitialized": {
                    "Parameter": {
                        "recorder": "FlightRecorder"
                    },
                    "Throw": []
                }
            },
            {
                "recordingStateChanged": {
                    "Parameter": {
                        "recording": "Recording"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1207": {
        "Package": "jdk.jfr.consumer",
        "Interface": "EventStream",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "jdk.jfr.consumer.RecordingStream",
            "jdk.management.jfr.RemoteRecordingStream"
        ],
        "Method": [
            {
                "openRepository": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "openRepository": {
                    "Parameter": {
                        "directory": "Path"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "openFile": {
                    "Parameter": {
                        "file": "Path"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "onMetadata": {
                    "Parameter": {
                        "": "Consumer"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "onEvent": {
                    "Parameter": {
                        "": "Consumer"
                    },
                    "Throw": []
                }
            },
            {
                "onEvent": {
                    "Parameter": {
                        "eventName": "String",
                        "": "Consumer"
                    },
                    "Throw": []
                }
            },
            {
                "onFlush": {
                    "Parameter": {
                        "action": "Runnable"
                    },
                    "Throw": []
                }
            },
            {
                "onError": {
                    "Parameter": {
                        "": "Consumer"
                    },
                    "Throw": []
                }
            },
            {
                "onClose": {
                    "Parameter": {
                        "action": "Runnable"
                    },
                    "Throw": []
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "action": "Object"
                    },
                    "Throw": []
                }
            },
            {
                "setReuse": {
                    "Parameter": {
                        "reuse": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "setOrdered": {
                    "Parameter": {
                        "ordered": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "setStartTime": {
                    "Parameter": {
                        "startTime": "Instant"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "setEndTime": {
                    "Parameter": {
                        "endTime": "Instant"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "start": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "startAsync": {
                    "Parameter": {},
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "awaitTermination": {
                    "Parameter": {
                        "timeout": "Duration"
                    },
                    "Throw": "java.lang.InterruptedException"
                }
            },
            {
                "awaitTermination": {
                    "Parameter": {},
                    "Throw": "java.lang.InterruptedException"
                }
            }
        ]
    },
    "1208": {
        "Package": "jdk.jshell",
        "Interface": "SourceCodeAnalysis.CompletionInfo",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "completeness": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "remaining": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "source": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1209": {
        "Package": "jdk.jshell",
        "Interface": "SourceCodeAnalysis.Documentation",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "signature": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "javadoc": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1210": {
        "Package": "jdk.jshell",
        "Interface": "SourceCodeAnalysis.SnippetWrapper",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "source": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "wrapped": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "fullClassName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "kind": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "sourceToWrappedPosition": {
                    "Parameter": {
                        "pos": "int"
                    },
                    "Throw": []
                }
            },
            {
                "wrappedToSourcePosition": {
                    "Parameter": {
                        "pos": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1211": {
        "Package": "jdk.jshell",
        "Interface": "SourceCodeAnalysis.Suggestion",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "continuation": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "matchesType": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1212": {
        "Package": "jdk.jshell.execution",
        "Interface": "LoaderDelegate",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "load": {
                    "Parameter": {
                        "cbcs": "ExecutionControl.ClassBytecodes"
                    },
                    "Throw": "jdk.jshell.spi.ExecutionControl.EngineTerminationException"
                }
            },
            {
                "classesRedefined": {
                    "Parameter": {
                        "cbcs": "ExecutionControl.ClassBytecodes"
                    },
                    "Throw": []
                }
            },
            {
                "addToClasspath": {
                    "Parameter": {
                        "path": "String"
                    },
                    "Throw": "jdk.jshell.spi.ExecutionControl.InternalException"
                }
            },
            {
                "findClass": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.ClassNotFoundException"
                }
            }
        ]
    },
    "1213": {
        "Package": "jdk.jshell.spi",
        "Interface": "ExecutionControl",
        "Superinterface": [
            "java.lang.AutoCloseable"
        ],
        "Implementing Class": null,
        "Subinterface": [
            "jdk.jshell.execution.DirectExecutionControl",
            "jdk.jshell.execution.JdiDefaultExecutionControl",
            "jdk.jshell.execution.JdiExecutionControl",
            "jdk.jshell.execution.LocalExecutionControl",
            "jdk.jshell.execution.RemoteExecutionControl",
            "jdk.jshell.execution.StreamingExecutionControl"
        ],
        "Method": [
            {
                "load": {
                    "Parameter": {
                        "cbcs": "ExecutionControl.ClassBytecodes"
                    },
                    "Throw": "jdk.jshell.spi.ExecutionControl.EngineTerminationException"
                }
            },
            {
                "redefine": {
                    "Parameter": {
                        "cbcs": "ExecutionControl.ClassBytecodes"
                    },
                    "Throw": "jdk.jshell.spi.ExecutionControl.EngineTerminationException"
                }
            },
            {
                "invoke": {
                    "Parameter": {
                        "className": "String",
                        "methodName": "String"
                    },
                    "Throw": "jdk.jshell.spi.ExecutionControl.RunException"
                }
            },
            {
                "varValue": {
                    "Parameter": {
                        "className": "String",
                        "varName": "String"
                    },
                    "Throw": "jdk.jshell.spi.ExecutionControl.RunException"
                }
            },
            {
                "addToClasspath": {
                    "Parameter": {
                        "path": "String"
                    },
                    "Throw": "jdk.jshell.spi.ExecutionControl.InternalException"
                }
            },
            {
                "stop": {
                    "Parameter": {},
                    "Throw": "jdk.jshell.spi.ExecutionControl.InternalException"
                }
            },
            {
                "extensionCommand": {
                    "Parameter": {
                        "command": "String",
                        "arg": "Object"
                    },
                    "Throw": "jdk.jshell.spi.ExecutionControl.RunException"
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "generate": {
                    "Parameter": {
                        "env": "ExecutionEnv",
                        "name": "String",
                        "": "Map"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "generate": {
                    "Parameter": {
                        "env": "ExecutionEnv",
                        "spec": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            }
        ]
    },
    "1214": {
        "Package": "jdk.jshell.spi",
        "Interface": "ExecutionControlProvider",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "jdk.jshell.execution.FailOverExecutionControlProvider",
            "jdk.jshell.execution.JdiExecutionControlProvider",
            "jdk.jshell.execution.LocalExecutionControlProvider"
        ],
        "Method": [
            {
                "name": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "defaultParameters": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "generate": {
                    "Parameter": {
                        "env": "ExecutionEnv",
                        "": "Map"
                    },
                    "Throw": "java.lang.Throwable"
                }
            }
        ]
    },
    "1215": {
        "Package": "jdk.jshell.spi",
        "Interface": "ExecutionEnv",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "userIn": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "userOut": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "userErr": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "extraRemoteVMOptions": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "closeDown": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1216": {
        "Package": "jdk.jshell.tool",
        "Interface": "JavaShellToolBuilder",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "builder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "in": {
                    "Parameter": {
                        "cmdIn": "InputStream",
                        "userIn": "InputStream"
                    },
                    "Throw": []
                }
            },
            {
                "out": {
                    "Parameter": {
                        "output": "PrintStream"
                    },
                    "Throw": []
                }
            },
            {
                "out": {
                    "Parameter": {
                        "cmdOut": "PrintStream",
                        "console": "PrintStream",
                        "userOut": "PrintStream"
                    },
                    "Throw": []
                }
            },
            {
                "err": {
                    "Parameter": {
                        "error": "PrintStream"
                    },
                    "Throw": []
                }
            },
            {
                "err": {
                    "Parameter": {
                        "cmdErr": "PrintStream",
                        "userErr": "PrintStream"
                    },
                    "Throw": []
                }
            },
            {
                "persistence": {
                    "Parameter": {
                        "prefs": "Preferences"
                    },
                    "Throw": []
                }
            },
            {
                "persistence": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": []
                }
            },
            {
                "env": {
                    "Parameter": {
                        "": "Map"
                    },
                    "Throw": []
                }
            },
            {
                "locale": {
                    "Parameter": {
                        "locale": "Locale"
                    },
                    "Throw": []
                }
            },
            {
                "promptCapture": {
                    "Parameter": {
                        "capture": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "interactiveTerminal": {
                    "Parameter": {
                        "terminal": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "run": {
                    "Parameter": {
                        "arguments": "String"
                    },
                    "Throw": "java.lang.Exception"
                }
            },
            {
                "start": {
                    "Parameter": {
                        "arguments": "String"
                    },
                    "Throw": "java.lang.Exception"
                }
            }
        ]
    },
    "1217": {
        "Package": "com.sun.management",
        "Interface": "DiagnosticCommandMBean",
        "Superinterface": [
            "javax.management.DynamicMBean"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1218": {
        "Package": "com.sun.management",
        "Interface": "GarbageCollectorMXBean",
        "Superinterface": [
            "java.lang.management.GarbageCollectorMXBean",
            "java.lang.management.MemoryManagerMXBean",
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLastGcInfo": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1219": {
        "Package": "com.sun.management",
        "Interface": "HotSpotDiagnosticMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "dumpHeap": {
                    "Parameter": {
                        "outputFile": "String",
                        "live": "boolean"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getDiagnosticOptions": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getVMOption": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": "java.lang.IllegalArgumentException"
                }
            },
            {
                "setVMOption": {
                    "Parameter": {
                        "name": "String",
                        "value": "String"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "1220": {
        "Package": "com.sun.management",
        "Interface": "OperatingSystemMXBean",
        "Superinterface": [
            "java.lang.management.OperatingSystemMXBean",
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": [
            "com.sun.management.UnixOperatingSystemMXBean"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getCommittedVirtualMemorySize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTotalSwapSpaceSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFreeSwapSpaceSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getProcessCpuTime": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFreePhysicalMemorySize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getFreeMemorySize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTotalPhysicalMemorySize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTotalMemorySize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSystemCpuLoad": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCpuLoad": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getProcessCpuLoad": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1221": {
        "Package": "com.sun.management",
        "Interface": "ThreadMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject",
            "java.lang.management.ThreadMXBean"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getThreadCpuTime": {
                    "Parameter": {
                        "ids": "long"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getThreadUserTime": {
                    "Parameter": {
                        "ids": "long"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getCurrentThreadAllocatedBytes": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getThreadAllocatedBytes": {
                    "Parameter": {
                        "id": "long"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "getThreadAllocatedBytes": {
                    "Parameter": {
                        "ids": "long"
                    },
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "isThreadAllocatedMemorySupported": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "isThreadAllocatedMemoryEnabled": {
                    "Parameter": {},
                    "Throw": "java.lang.UnsupportedOperationException"
                }
            },
            {
                "setThreadAllocatedMemoryEnabled": {
                    "Parameter": {
                        "enable": "boolean"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "1222": {
        "Package": "com.sun.management",
        "Interface": "UnixOperatingSystemMXBean",
        "Superinterface": [
            "com.sun.management.OperatingSystemMXBean",
            "java.lang.management.OperatingSystemMXBean",
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getOpenFileDescriptorCount": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMaxFileDescriptorCount": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1223": {
        "Package": "jdk.management.jfr",
        "Interface": "FlightRecorderMXBean",
        "Superinterface": [
            "java.lang.management.PlatformManagedObject"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "newRecording": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "takeSnapshot": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "cloneRecording": {
                    "Parameter": {
                        "recordingId": "long",
                        "stop": "boolean"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "startRecording": {
                    "Parameter": {
                        "recordingId": "long"
                    },
                    "Throw": "java.lang.IllegalStateException"
                }
            },
            {
                "stopRecording": {
                    "Parameter": {
                        "recordingId": "long"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "closeRecording": {
                    "Parameter": {
                        "recordingId": "long"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "openStream": {
                    "Parameter": {
                        "recordingId": "long",
                        "": "Map"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "closeStream": {
                    "Parameter": {
                        "streamId": "long"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "readStream": {
                    "Parameter": {
                        "streamId": "long"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getRecordingOptions": {
                    "Parameter": {
                        "recordingId": "long"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getRecordingSettings": {
                    "Parameter": {
                        "recordingId": "long"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setConfiguration": {
                    "Parameter": {
                        "recordingId": "long",
                        "contents": "String"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setPredefinedConfiguration": {
                    "Parameter": {
                        "recordingId": "long",
                        "configurationName": "String"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setRecordingSettings": {
                    "Parameter": {
                        "recordingId": "long",
                        "": "Map"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "setRecordingOptions": {
                    "Parameter": {
                        "recordingId": "long",
                        "": "Map"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getRecordings": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getConfigurations": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "getEventTypes": {
                    "Parameter": {},
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "copyTo": {
                    "Parameter": {
                        "recordingId": "long",
                        "outputFile": "String"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            }
        ]
    },
    "1224": {
        "Package": "jdk.nio",
        "Interface": "Channels.SelectableChannelCloser",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "implCloseChannel": {
                    "Parameter": {
                        "sc": "SelectableChannel"
                    },
                    "Throw": "java.io.IOException"
                }
            },
            {
                "implReleaseChannel": {
                    "Parameter": {
                        "sc": "SelectableChannel"
                    },
                    "Throw": "java.io.IOException"
                }
            }
        ]
    },
    "1225": {
        "Package": "com.sun.nio.sctp",
        "Interface": "Notification",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "com.sun.nio.sctp.AssociationChangeNotification",
            "com.sun.nio.sctp.PeerAddressChangeNotification",
            "com.sun.nio.sctp.SendFailedNotification",
            "com.sun.nio.sctp.ShutdownNotification"
        ],
        "Method": [
            {
                "association": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1226": {
        "Package": "com.sun.nio.sctp",
        "Interface": "NotificationHandler",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": [
            "com.sun.nio.sctp.AbstractNotificationHandler"
        ],
        "Method": []
    },
    "1227": {
        "Package": "com.sun.nio.sctp",
        "Interface": "SctpSocketOption",
        "Superinterface": [
            "java.net.SocketOption"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1228": {
        "Package": "com.sun.security.auth",
        "Interface": "PrincipalComparator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "implies": {
                    "Parameter": {
                        "subject": "Subject"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1229": {
        "Package": "com.sun.security.jgss",
        "Interface": "ExtendedGSSContext",
        "Superinterface": [
            "org.ietf.jgss.GSSContext"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "inquireSecContext": {
                    "Parameter": {
                        "type": "InquireType"
                    },
                    "Throw": "java.lang.SecurityException"
                }
            },
            {
                "requestDelegPolicy": {
                    "Parameter": {
                        "state": "boolean"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            },
            {
                "getDelegPolicyState": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1230": {
        "Package": "com.sun.security.jgss",
        "Interface": "ExtendedGSSCredential",
        "Superinterface": [
            "java.lang.Cloneable",
            "org.ietf.jgss.GSSCredential"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "impersonate": {
                    "Parameter": {
                        "name": "GSSName"
                    },
                    "Throw": "org.ietf.jgss.GSSException"
                }
            }
        ]
    },
    "1231": {
        "Package": "org.w3c.dom.css",
        "Interface": "Counter",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getIdentifier": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getListStyle": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSeparator": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1232": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSS2Properties",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAzimuth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAzimuth": {
                    "Parameter": {
                        "azimuth": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBackground": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBackground": {
                    "Parameter": {
                        "background": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBackgroundAttachment": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBackgroundAttachment": {
                    "Parameter": {
                        "backgroundAttachment": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBackgroundColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBackgroundColor": {
                    "Parameter": {
                        "backgroundColor": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBackgroundImage": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBackgroundImage": {
                    "Parameter": {
                        "backgroundImage": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBackgroundPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBackgroundPosition": {
                    "Parameter": {
                        "backgroundPosition": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBackgroundRepeat": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBackgroundRepeat": {
                    "Parameter": {
                        "backgroundRepeat": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorder": {
                    "Parameter": {
                        "border": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderCollapse": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderCollapse": {
                    "Parameter": {
                        "borderCollapse": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderColor": {
                    "Parameter": {
                        "borderColor": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderSpacing": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderSpacing": {
                    "Parameter": {
                        "borderSpacing": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderStyle": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderStyle": {
                    "Parameter": {
                        "borderStyle": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderTop": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderTop": {
                    "Parameter": {
                        "borderTop": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderRight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderRight": {
                    "Parameter": {
                        "borderRight": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderBottom": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderBottom": {
                    "Parameter": {
                        "borderBottom": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderLeft": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderLeft": {
                    "Parameter": {
                        "borderLeft": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderTopColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderTopColor": {
                    "Parameter": {
                        "borderTopColor": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderRightColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderRightColor": {
                    "Parameter": {
                        "borderRightColor": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderBottomColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderBottomColor": {
                    "Parameter": {
                        "borderBottomColor": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderLeftColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderLeftColor": {
                    "Parameter": {
                        "borderLeftColor": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderTopStyle": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderTopStyle": {
                    "Parameter": {
                        "borderTopStyle": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderRightStyle": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderRightStyle": {
                    "Parameter": {
                        "borderRightStyle": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderBottomStyle": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderBottomStyle": {
                    "Parameter": {
                        "borderBottomStyle": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderLeftStyle": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderLeftStyle": {
                    "Parameter": {
                        "borderLeftStyle": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderTopWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderTopWidth": {
                    "Parameter": {
                        "borderTopWidth": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderRightWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderRightWidth": {
                    "Parameter": {
                        "borderRightWidth": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderBottomWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderBottomWidth": {
                    "Parameter": {
                        "borderBottomWidth": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderLeftWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderLeftWidth": {
                    "Parameter": {
                        "borderLeftWidth": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBorderWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorderWidth": {
                    "Parameter": {
                        "borderWidth": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getBottom": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBottom": {
                    "Parameter": {
                        "bottom": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getCaptionSide": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCaptionSide": {
                    "Parameter": {
                        "captionSide": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getClear": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setClear": {
                    "Parameter": {
                        "clear": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getClip": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setClip": {
                    "Parameter": {
                        "clip": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setColor": {
                    "Parameter": {
                        "color": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getContent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setContent": {
                    "Parameter": {
                        "content": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getCounterIncrement": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCounterIncrement": {
                    "Parameter": {
                        "counterIncrement": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getCounterReset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCounterReset": {
                    "Parameter": {
                        "counterReset": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getCue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCue": {
                    "Parameter": {
                        "cue": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getCueAfter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCueAfter": {
                    "Parameter": {
                        "cueAfter": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getCueBefore": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCueBefore": {
                    "Parameter": {
                        "cueBefore": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getCursor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCursor": {
                    "Parameter": {
                        "cursor": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getDirection": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDirection": {
                    "Parameter": {
                        "direction": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getDisplay": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDisplay": {
                    "Parameter": {
                        "display": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getElevation": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setElevation": {
                    "Parameter": {
                        "elevation": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getEmptyCells": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setEmptyCells": {
                    "Parameter": {
                        "emptyCells": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getCssFloat": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCssFloat": {
                    "Parameter": {
                        "cssFloat": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getFont": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFont": {
                    "Parameter": {
                        "font": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getFontFamily": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFontFamily": {
                    "Parameter": {
                        "fontFamily": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getFontSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFontSize": {
                    "Parameter": {
                        "fontSize": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getFontSizeAdjust": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFontSizeAdjust": {
                    "Parameter": {
                        "fontSizeAdjust": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getFontStretch": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFontStretch": {
                    "Parameter": {
                        "fontStretch": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getFontStyle": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFontStyle": {
                    "Parameter": {
                        "fontStyle": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getFontVariant": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFontVariant": {
                    "Parameter": {
                        "fontVariant": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getFontWeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFontWeight": {
                    "Parameter": {
                        "fontWeight": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHeight": {
                    "Parameter": {
                        "height": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getLeft": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLeft": {
                    "Parameter": {
                        "left": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getLetterSpacing": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLetterSpacing": {
                    "Parameter": {
                        "letterSpacing": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getLineHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLineHeight": {
                    "Parameter": {
                        "lineHeight": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getListStyle": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setListStyle": {
                    "Parameter": {
                        "listStyle": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getListStyleImage": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setListStyleImage": {
                    "Parameter": {
                        "listStyleImage": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getListStylePosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setListStylePosition": {
                    "Parameter": {
                        "listStylePosition": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getListStyleType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setListStyleType": {
                    "Parameter": {
                        "listStyleType": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getMargin": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMargin": {
                    "Parameter": {
                        "margin": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getMarginTop": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMarginTop": {
                    "Parameter": {
                        "marginTop": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getMarginRight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMarginRight": {
                    "Parameter": {
                        "marginRight": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getMarginBottom": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMarginBottom": {
                    "Parameter": {
                        "marginBottom": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getMarginLeft": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMarginLeft": {
                    "Parameter": {
                        "marginLeft": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getMarkerOffset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMarkerOffset": {
                    "Parameter": {
                        "markerOffset": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getMarks": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMarks": {
                    "Parameter": {
                        "marks": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getMaxHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMaxHeight": {
                    "Parameter": {
                        "maxHeight": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getMaxWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMaxWidth": {
                    "Parameter": {
                        "maxWidth": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getMinHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMinHeight": {
                    "Parameter": {
                        "minHeight": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getMinWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMinWidth": {
                    "Parameter": {
                        "minWidth": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getOrphans": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setOrphans": {
                    "Parameter": {
                        "orphans": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getOutline": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setOutline": {
                    "Parameter": {
                        "outline": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getOutlineColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setOutlineColor": {
                    "Parameter": {
                        "outlineColor": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getOutlineStyle": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setOutlineStyle": {
                    "Parameter": {
                        "outlineStyle": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getOutlineWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setOutlineWidth": {
                    "Parameter": {
                        "outlineWidth": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getOverflow": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setOverflow": {
                    "Parameter": {
                        "overflow": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPadding": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPadding": {
                    "Parameter": {
                        "padding": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPaddingTop": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPaddingTop": {
                    "Parameter": {
                        "paddingTop": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPaddingRight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPaddingRight": {
                    "Parameter": {
                        "paddingRight": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPaddingBottom": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPaddingBottom": {
                    "Parameter": {
                        "paddingBottom": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPaddingLeft": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPaddingLeft": {
                    "Parameter": {
                        "paddingLeft": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPage": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPage": {
                    "Parameter": {
                        "page": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPageBreakAfter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPageBreakAfter": {
                    "Parameter": {
                        "pageBreakAfter": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPageBreakBefore": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPageBreakBefore": {
                    "Parameter": {
                        "pageBreakBefore": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPageBreakInside": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPageBreakInside": {
                    "Parameter": {
                        "pageBreakInside": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPause": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPause": {
                    "Parameter": {
                        "pause": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPauseAfter": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPauseAfter": {
                    "Parameter": {
                        "pauseAfter": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPauseBefore": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPauseBefore": {
                    "Parameter": {
                        "pauseBefore": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPitch": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPitch": {
                    "Parameter": {
                        "pitch": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPitchRange": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPitchRange": {
                    "Parameter": {
                        "pitchRange": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPlayDuring": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPlayDuring": {
                    "Parameter": {
                        "playDuring": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPosition": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPosition": {
                    "Parameter": {
                        "position": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getQuotes": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setQuotes": {
                    "Parameter": {
                        "quotes": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getRichness": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setRichness": {
                    "Parameter": {
                        "richness": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getRight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setRight": {
                    "Parameter": {
                        "right": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSize": {
                    "Parameter": {
                        "size": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getSpeak": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSpeak": {
                    "Parameter": {
                        "speak": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getSpeakHeader": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSpeakHeader": {
                    "Parameter": {
                        "speakHeader": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getSpeakNumeral": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSpeakNumeral": {
                    "Parameter": {
                        "speakNumeral": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getSpeakPunctuation": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSpeakPunctuation": {
                    "Parameter": {
                        "speakPunctuation": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getSpeechRate": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSpeechRate": {
                    "Parameter": {
                        "speechRate": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getStress": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setStress": {
                    "Parameter": {
                        "stress": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getTableLayout": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTableLayout": {
                    "Parameter": {
                        "tableLayout": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getTextAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTextAlign": {
                    "Parameter": {
                        "textAlign": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getTextDecoration": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTextDecoration": {
                    "Parameter": {
                        "textDecoration": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getTextIndent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTextIndent": {
                    "Parameter": {
                        "textIndent": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getTextShadow": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTextShadow": {
                    "Parameter": {
                        "textShadow": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getTextTransform": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTextTransform": {
                    "Parameter": {
                        "textTransform": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getTop": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTop": {
                    "Parameter": {
                        "top": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getUnicodeBidi": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setUnicodeBidi": {
                    "Parameter": {
                        "unicodeBidi": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getVerticalAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVerticalAlign": {
                    "Parameter": {
                        "verticalAlign": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getVisibility": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVisibility": {
                    "Parameter": {
                        "visibility": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getVoiceFamily": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVoiceFamily": {
                    "Parameter": {
                        "voiceFamily": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getVolume": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVolume": {
                    "Parameter": {
                        "volume": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getWhiteSpace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWhiteSpace": {
                    "Parameter": {
                        "whiteSpace": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getWidows": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWidows": {
                    "Parameter": {
                        "widows": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWidth": {
                    "Parameter": {
                        "width": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getWordSpacing": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWordSpacing": {
                    "Parameter": {
                        "wordSpacing": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getZIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setZIndex": {
                    "Parameter": {
                        "zIndex": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "1233": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSCharsetRule",
        "Superinterface": [
            "org.w3c.dom.css.CSSRule"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getEncoding": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setEncoding": {
                    "Parameter": {
                        "encoding": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "1234": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSFontFaceRule",
        "Superinterface": [
            "org.w3c.dom.css.CSSRule"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getStyle": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1235": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSImportRule",
        "Superinterface": [
            "org.w3c.dom.css.CSSRule"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getHref": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMedia": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getStyleSheet": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1236": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSMediaRule",
        "Superinterface": [
            "org.w3c.dom.css.CSSRule"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getMedia": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCssRules": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "insertRule": {
                    "Parameter": {
                        "rule": "String",
                        "index": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "deleteRule": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "1237": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSPageRule",
        "Superinterface": [
            "org.w3c.dom.css.CSSRule"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getSelectorText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSelectorText": {
                    "Parameter": {
                        "selectorText": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getStyle": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1238": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSPrimitiveValue",
        "Superinterface": [
            "org.w3c.dom.css.CSSValue"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getPrimitiveType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFloatValue": {
                    "Parameter": {
                        "unitType": "short",
                        "floatValue": "float"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getFloatValue": {
                    "Parameter": {
                        "unitType": "short"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "setStringValue": {
                    "Parameter": {
                        "stringType": "short",
                        "stringValue": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getStringValue": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getCounterValue": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getRectValue": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getRGBColorValue": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "1239": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSRule",
        "Superinterface": null,
        "Implementing Class": [
            "org.w3c.dom.css.CSSCharsetRule",
            "org.w3c.dom.css.CSSFontFaceRule",
            "org.w3c.dom.css.CSSImportRule",
            "org.w3c.dom.css.CSSMediaRule",
            "org.w3c.dom.css.CSSPageRule",
            "org.w3c.dom.css.CSSStyleRule",
            "org.w3c.dom.css.CSSUnknownRule"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCssText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCssText": {
                    "Parameter": {
                        "cssText": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getParentStyleSheet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParentRule": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1240": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSRuleList",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "item": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1241": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSStyleDeclaration",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCssText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCssText": {
                    "Parameter": {
                        "cssText": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPropertyValue": {
                    "Parameter": {
                        "propertyName": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getPropertyCSSValue": {
                    "Parameter": {
                        "propertyName": "String"
                    },
                    "Throw": []
                }
            },
            {
                "removeProperty": {
                    "Parameter": {
                        "propertyName": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getPropertyPriority": {
                    "Parameter": {
                        "propertyName": "String"
                    },
                    "Throw": []
                }
            },
            {
                "setProperty": {
                    "Parameter": {
                        "propertyName": "String",
                        "value": "String",
                        "priority": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "item": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getParentRule": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1242": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSStyleRule",
        "Superinterface": [
            "org.w3c.dom.css.CSSRule"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getSelectorText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSelectorText": {
                    "Parameter": {
                        "selectorText": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getStyle": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1243": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSStyleSheet",
        "Superinterface": [
            "org.w3c.dom.stylesheets.StyleSheet"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getOwnerRule": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCssRules": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "insertRule": {
                    "Parameter": {
                        "rule": "String",
                        "index": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "deleteRule": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "1244": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSUnknownRule",
        "Superinterface": [
            "org.w3c.dom.css.CSSRule"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": []
    },
    "1245": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSValue",
        "Superinterface": null,
        "Implementing Class": [
            "org.w3c.dom.css.CSSPrimitiveValue",
            "org.w3c.dom.css.CSSValueList"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getCssText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCssText": {
                    "Parameter": {
                        "cssText": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getCssValueType": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1246": {
        "Package": "org.w3c.dom.css",
        "Interface": "CSSValueList",
        "Superinterface": [
            "org.w3c.dom.css.CSSValue"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "item": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1247": {
        "Package": "org.w3c.dom.css",
        "Interface": "DocumentCSS",
        "Superinterface": [
            "org.w3c.dom.stylesheets.DocumentStyle"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getOverrideStyle": {
                    "Parameter": {
                        "elt": "Element",
                        "pseudoElt": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1248": {
        "Package": "org.w3c.dom.css",
        "Interface": "DOMImplementationCSS",
        "Superinterface": [
            "org.w3c.dom.DOMImplementation"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createCSSStyleSheet": {
                    "Parameter": {
                        "title": "String",
                        "media": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "1249": {
        "Package": "org.w3c.dom.css",
        "Interface": "ElementCSSInlineStyle",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getStyle": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1250": {
        "Package": "org.w3c.dom.css",
        "Interface": "Rect",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTop": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getRight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBottom": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLeft": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1251": {
        "Package": "org.w3c.dom.css",
        "Interface": "RGBColor",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getRed": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getGreen": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBlue": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1252": {
        "Package": "org.w3c.dom.css",
        "Interface": "ViewCSS",
        "Superinterface": [
            "org.w3c.dom.views.AbstractView"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getComputedStyle": {
                    "Parameter": {
                        "elt": "Element",
                        "pseudoElt": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1253": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLAnchorElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAccessKey": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAccessKey": {
                    "Parameter": {
                        "accessKey": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCharset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCharset": {
                    "Parameter": {
                        "charset": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCoords": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCoords": {
                    "Parameter": {
                        "coords": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHref": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHref": {
                    "Parameter": {
                        "href": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHreflang": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHreflang": {
                    "Parameter": {
                        "hreflang": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getRel": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setRel": {
                    "Parameter": {
                        "rel": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getRev": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setRev": {
                    "Parameter": {
                        "rev": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getShape": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setShape": {
                    "Parameter": {
                        "shape": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getTabIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTabIndex": {
                    "Parameter": {
                        "tabIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getTarget": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTarget": {
                    "Parameter": {
                        "target": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setType": {
                    "Parameter": {
                        "type": "String"
                    },
                    "Throw": []
                }
            },
            {
                "blur": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "focus": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1254": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLAppletElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAlt": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlt": {
                    "Parameter": {
                        "alt": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getArchive": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setArchive": {
                    "Parameter": {
                        "archive": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCode": {
                    "Parameter": {
                        "code": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCodeBase": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCodeBase": {
                    "Parameter": {
                        "codeBase": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHeight": {
                    "Parameter": {
                        "height": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHspace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHspace": {
                    "Parameter": {
                        "hspace": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getObject": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setObject": {
                    "Parameter": {
                        "object": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getVspace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVspace": {
                    "Parameter": {
                        "vspace": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWidth": {
                    "Parameter": {
                        "width": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1255": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLAreaElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAccessKey": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAccessKey": {
                    "Parameter": {
                        "accessKey": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAlt": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlt": {
                    "Parameter": {
                        "alt": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCoords": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCoords": {
                    "Parameter": {
                        "coords": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHref": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHref": {
                    "Parameter": {
                        "href": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getNoHref": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setNoHref": {
                    "Parameter": {
                        "noHref": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getShape": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setShape": {
                    "Parameter": {
                        "shape": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getTabIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTabIndex": {
                    "Parameter": {
                        "tabIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getTarget": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTarget": {
                    "Parameter": {
                        "target": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1256": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLBaseElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getHref": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHref": {
                    "Parameter": {
                        "href": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getTarget": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTarget": {
                    "Parameter": {
                        "target": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1257": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLBaseFontElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setColor": {
                    "Parameter": {
                        "color": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getFace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFace": {
                    "Parameter": {
                        "face": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSize": {
                    "Parameter": {
                        "size": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1258": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLBodyElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getALink": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setALink": {
                    "Parameter": {
                        "aLink": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getBackground": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBackground": {
                    "Parameter": {
                        "background": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getBgColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBgColor": {
                    "Parameter": {
                        "bgColor": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getLink": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLink": {
                    "Parameter": {
                        "link": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setText": {
                    "Parameter": {
                        "text": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getVLink": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVLink": {
                    "Parameter": {
                        "vLink": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1259": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLBRElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getClear": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setClear": {
                    "Parameter": {
                        "clear": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1260": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLButtonElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getForm": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccessKey": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAccessKey": {
                    "Parameter": {
                        "accessKey": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getDisabled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDisabled": {
                    "Parameter": {
                        "disabled": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getTabIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTabIndex": {
                    "Parameter": {
                        "tabIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1261": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLCollection",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "item": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "namedItem": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1262": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLDirectoryElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCompact": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCompact": {
                    "Parameter": {
                        "compact": "boolean"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1263": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLDivElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1264": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLDListElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCompact": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCompact": {
                    "Parameter": {
                        "compact": "boolean"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1265": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLDocument",
        "Superinterface": [
            "org.w3c.dom.Document",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getTitle": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTitle": {
                    "Parameter": {
                        "title": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getReferrer": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDomain": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getURL": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getBody": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBody": {
                    "Parameter": {
                        "body": "HTMLElement"
                    },
                    "Throw": []
                }
            },
            {
                "getImages": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getApplets": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLinks": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getForms": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAnchors": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCookie": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCookie": {
                    "Parameter": {
                        "cookie": "String"
                    },
                    "Throw": []
                }
            },
            {
                "open": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "close": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "write": {
                    "Parameter": {
                        "text": "String"
                    },
                    "Throw": []
                }
            },
            {
                "writeln": {
                    "Parameter": {
                        "text": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getElementsByName": {
                    "Parameter": {
                        "elementName": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1266": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLDOMImplementation",
        "Superinterface": [
            "org.w3c.dom.DOMImplementation"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createHTMLDocument": {
                    "Parameter": {
                        "title": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1267": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": [
            "org.w3c.dom.html.HTMLAnchorElement",
            "org.w3c.dom.html.HTMLAppletElement",
            "org.w3c.dom.html.HTMLAreaElement",
            "org.w3c.dom.html.HTMLBaseElement",
            "org.w3c.dom.html.HTMLBaseFontElement",
            "org.w3c.dom.html.HTMLBodyElement",
            "org.w3c.dom.html.HTMLBRElement",
            "org.w3c.dom.html.HTMLButtonElement",
            "org.w3c.dom.html.HTMLDirectoryElement",
            "org.w3c.dom.html.HTMLDivElement",
            "org.w3c.dom.html.HTMLDListElement",
            "org.w3c.dom.html.HTMLFieldSetElement",
            "org.w3c.dom.html.HTMLFontElement",
            "org.w3c.dom.html.HTMLFormElement",
            "org.w3c.dom.html.HTMLFrameElement",
            "org.w3c.dom.html.HTMLFrameSetElement",
            "org.w3c.dom.html.HTMLHeadElement",
            "org.w3c.dom.html.HTMLHeadingElement",
            "org.w3c.dom.html.HTMLHRElement",
            "org.w3c.dom.html.HTMLHtmlElement",
            "org.w3c.dom.html.HTMLIFrameElement",
            "org.w3c.dom.html.HTMLImageElement",
            "org.w3c.dom.html.HTMLInputElement",
            "org.w3c.dom.html.HTMLIsIndexElement",
            "org.w3c.dom.html.HTMLLabelElement",
            "org.w3c.dom.html.HTMLLegendElement",
            "org.w3c.dom.html.HTMLLIElement",
            "org.w3c.dom.html.HTMLLinkElement",
            "org.w3c.dom.html.HTMLMapElement",
            "org.w3c.dom.html.HTMLMenuElement",
            "org.w3c.dom.html.HTMLMetaElement",
            "org.w3c.dom.html.HTMLModElement",
            "org.w3c.dom.html.HTMLObjectElement",
            "org.w3c.dom.html.HTMLOListElement",
            "org.w3c.dom.html.HTMLOptGroupElement",
            "org.w3c.dom.html.HTMLOptionElement",
            "org.w3c.dom.html.HTMLParagraphElement",
            "org.w3c.dom.html.HTMLParamElement",
            "org.w3c.dom.html.HTMLPreElement",
            "org.w3c.dom.html.HTMLQuoteElement",
            "org.w3c.dom.html.HTMLScriptElement",
            "org.w3c.dom.html.HTMLSelectElement",
            "org.w3c.dom.html.HTMLStyleElement",
            "org.w3c.dom.html.HTMLTableCaptionElement",
            "org.w3c.dom.html.HTMLTableCellElement",
            "org.w3c.dom.html.HTMLTableColElement",
            "org.w3c.dom.html.HTMLTableElement",
            "org.w3c.dom.html.HTMLTableRowElement",
            "org.w3c.dom.html.HTMLTableSectionElement",
            "org.w3c.dom.html.HTMLTextAreaElement",
            "org.w3c.dom.html.HTMLTitleElement",
            "org.w3c.dom.html.HTMLUListElement"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getId": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setId": {
                    "Parameter": {
                        "id": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getTitle": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTitle": {
                    "Parameter": {
                        "title": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getLang": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLang": {
                    "Parameter": {
                        "lang": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getDir": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDir": {
                    "Parameter": {
                        "dir": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getClassName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setClassName": {
                    "Parameter": {
                        "className": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1268": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLFieldSetElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getForm": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1269": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLFontElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setColor": {
                    "Parameter": {
                        "color": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getFace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFace": {
                    "Parameter": {
                        "face": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSize": {
                    "Parameter": {
                        "size": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1270": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLFormElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getElements": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAcceptCharset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAcceptCharset": {
                    "Parameter": {
                        "acceptCharset": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAction": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAction": {
                    "Parameter": {
                        "action": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getEnctype": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setEnctype": {
                    "Parameter": {
                        "enctype": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getMethod": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMethod": {
                    "Parameter": {
                        "method": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getTarget": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTarget": {
                    "Parameter": {
                        "target": "String"
                    },
                    "Throw": []
                }
            },
            {
                "submit": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "reset": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1271": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLFrameElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getFrameBorder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFrameBorder": {
                    "Parameter": {
                        "frameBorder": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getLongDesc": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLongDesc": {
                    "Parameter": {
                        "longDesc": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getMarginHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMarginHeight": {
                    "Parameter": {
                        "marginHeight": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getMarginWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMarginWidth": {
                    "Parameter": {
                        "marginWidth": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getNoResize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setNoResize": {
                    "Parameter": {
                        "noResize": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getScrolling": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setScrolling": {
                    "Parameter": {
                        "scrolling": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSrc": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSrc": {
                    "Parameter": {
                        "src": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getContentDocument": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1272": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLFrameSetElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCols": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCols": {
                    "Parameter": {
                        "cols": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getRows": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setRows": {
                    "Parameter": {
                        "rows": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1273": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLHeadElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getProfile": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setProfile": {
                    "Parameter": {
                        "profile": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1274": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLHeadingElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1275": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLHRElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getNoShade": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setNoShade": {
                    "Parameter": {
                        "noShade": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSize": {
                    "Parameter": {
                        "size": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWidth": {
                    "Parameter": {
                        "width": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1276": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLHtmlElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getVersion": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVersion": {
                    "Parameter": {
                        "version": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1277": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLIFrameElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getFrameBorder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFrameBorder": {
                    "Parameter": {
                        "frameBorder": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHeight": {
                    "Parameter": {
                        "height": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getLongDesc": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLongDesc": {
                    "Parameter": {
                        "longDesc": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getMarginHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMarginHeight": {
                    "Parameter": {
                        "marginHeight": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getMarginWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMarginWidth": {
                    "Parameter": {
                        "marginWidth": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getScrolling": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setScrolling": {
                    "Parameter": {
                        "scrolling": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSrc": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSrc": {
                    "Parameter": {
                        "src": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWidth": {
                    "Parameter": {
                        "width": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getContentDocument": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1278": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLImageElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLowSrc": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLowSrc": {
                    "Parameter": {
                        "lowSrc": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAlt": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlt": {
                    "Parameter": {
                        "alt": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getBorder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorder": {
                    "Parameter": {
                        "border": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHeight": {
                    "Parameter": {
                        "height": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHspace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHspace": {
                    "Parameter": {
                        "hspace": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getIsMap": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setIsMap": {
                    "Parameter": {
                        "isMap": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getLongDesc": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLongDesc": {
                    "Parameter": {
                        "longDesc": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSrc": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSrc": {
                    "Parameter": {
                        "src": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getUseMap": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setUseMap": {
                    "Parameter": {
                        "useMap": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getVspace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVspace": {
                    "Parameter": {
                        "vspace": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWidth": {
                    "Parameter": {
                        "width": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1279": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLInputElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDefaultValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDefaultValue": {
                    "Parameter": {
                        "defaultValue": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getDefaultChecked": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDefaultChecked": {
                    "Parameter": {
                        "defaultChecked": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getForm": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccept": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAccept": {
                    "Parameter": {
                        "accept": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAccessKey": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAccessKey": {
                    "Parameter": {
                        "accessKey": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAlt": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlt": {
                    "Parameter": {
                        "alt": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getChecked": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setChecked": {
                    "Parameter": {
                        "checked": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getDisabled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDisabled": {
                    "Parameter": {
                        "disabled": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getMaxLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMaxLength": {
                    "Parameter": {
                        "maxLength": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getReadOnly": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setReadOnly": {
                    "Parameter": {
                        "readOnly": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSize": {
                    "Parameter": {
                        "size": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSrc": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSrc": {
                    "Parameter": {
                        "src": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getTabIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTabIndex": {
                    "Parameter": {
                        "tabIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getUseMap": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setUseMap": {
                    "Parameter": {
                        "useMap": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": []
                }
            },
            {
                "blur": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "focus": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "select": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "click": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1280": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLIsIndexElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getForm": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getPrompt": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setPrompt": {
                    "Parameter": {
                        "prompt": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1281": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLLabelElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getForm": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccessKey": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAccessKey": {
                    "Parameter": {
                        "accessKey": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHtmlFor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHtmlFor": {
                    "Parameter": {
                        "htmlFor": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1282": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLLegendElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getForm": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccessKey": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAccessKey": {
                    "Parameter": {
                        "accessKey": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1283": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLLIElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setType": {
                    "Parameter": {
                        "type": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "value": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1284": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLLinkElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDisabled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDisabled": {
                    "Parameter": {
                        "disabled": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getCharset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCharset": {
                    "Parameter": {
                        "charset": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHref": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHref": {
                    "Parameter": {
                        "href": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHreflang": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHreflang": {
                    "Parameter": {
                        "hreflang": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getMedia": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMedia": {
                    "Parameter": {
                        "media": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getRel": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setRel": {
                    "Parameter": {
                        "rel": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getRev": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setRev": {
                    "Parameter": {
                        "rev": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getTarget": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTarget": {
                    "Parameter": {
                        "target": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setType": {
                    "Parameter": {
                        "type": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1285": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLMapElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAreas": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1286": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLMenuElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCompact": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCompact": {
                    "Parameter": {
                        "compact": "boolean"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1287": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLMetaElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getContent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setContent": {
                    "Parameter": {
                        "content": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHttpEquiv": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHttpEquiv": {
                    "Parameter": {
                        "httpEquiv": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getScheme": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setScheme": {
                    "Parameter": {
                        "scheme": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1288": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLModElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCite": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCite": {
                    "Parameter": {
                        "cite": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getDateTime": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDateTime": {
                    "Parameter": {
                        "dateTime": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1289": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLObjectElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getForm": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCode": {
                    "Parameter": {
                        "code": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getArchive": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setArchive": {
                    "Parameter": {
                        "archive": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getBorder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorder": {
                    "Parameter": {
                        "border": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCodeBase": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCodeBase": {
                    "Parameter": {
                        "codeBase": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCodeType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCodeType": {
                    "Parameter": {
                        "codeType": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getData": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setData": {
                    "Parameter": {
                        "data": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getDeclare": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDeclare": {
                    "Parameter": {
                        "declare": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHeight": {
                    "Parameter": {
                        "height": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHspace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHspace": {
                    "Parameter": {
                        "hspace": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getStandby": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setStandby": {
                    "Parameter": {
                        "standby": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getTabIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTabIndex": {
                    "Parameter": {
                        "tabIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setType": {
                    "Parameter": {
                        "type": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getUseMap": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setUseMap": {
                    "Parameter": {
                        "useMap": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getVspace": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVspace": {
                    "Parameter": {
                        "vspace": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWidth": {
                    "Parameter": {
                        "width": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getContentDocument": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1290": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLOListElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCompact": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCompact": {
                    "Parameter": {
                        "compact": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getStart": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setStart": {
                    "Parameter": {
                        "start": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setType": {
                    "Parameter": {
                        "type": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1291": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLOptGroupElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDisabled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDisabled": {
                    "Parameter": {
                        "disabled": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getLabel": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLabel": {
                    "Parameter": {
                        "label": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1292": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLOptionElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getForm": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDefaultSelected": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDefaultSelected": {
                    "Parameter": {
                        "defaultSelected": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDisabled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDisabled": {
                    "Parameter": {
                        "disabled": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getLabel": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setLabel": {
                    "Parameter": {
                        "label": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSelected": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSelected": {
                    "Parameter": {
                        "selected": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1293": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLParagraphElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1294": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLParamElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setType": {
                    "Parameter": {
                        "type": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getValueType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValueType": {
                    "Parameter": {
                        "valueType": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1295": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLPreElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWidth": {
                    "Parameter": {
                        "width": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1296": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLQuoteElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCite": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCite": {
                    "Parameter": {
                        "cite": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1297": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLScriptElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setText": {
                    "Parameter": {
                        "text": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHtmlFor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHtmlFor": {
                    "Parameter": {
                        "htmlFor": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getEvent": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setEvent": {
                    "Parameter": {
                        "event": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCharset": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCharset": {
                    "Parameter": {
                        "charset": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getDefer": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDefer": {
                    "Parameter": {
                        "defer": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getSrc": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSrc": {
                    "Parameter": {
                        "src": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setType": {
                    "Parameter": {
                        "type": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1298": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLSelectElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSelectedIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSelectedIndex": {
                    "Parameter": {
                        "selectedIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getForm": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getOptions": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDisabled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDisabled": {
                    "Parameter": {
                        "disabled": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getMultiple": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMultiple": {
                    "Parameter": {
                        "multiple": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSize": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSize": {
                    "Parameter": {
                        "size": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getTabIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTabIndex": {
                    "Parameter": {
                        "tabIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "add": {
                    "Parameter": {
                        "element": "HTMLElement",
                        "before": "HTMLElement"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "remove": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "blur": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "focus": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1299": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLStyleElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDisabled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDisabled": {
                    "Parameter": {
                        "disabled": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getMedia": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMedia": {
                    "Parameter": {
                        "media": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setType": {
                    "Parameter": {
                        "type": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1300": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLTableCaptionElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1301": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLTableCellElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCellIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAbbr": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAbbr": {
                    "Parameter": {
                        "abbr": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getAxis": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAxis": {
                    "Parameter": {
                        "axis": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getBgColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBgColor": {
                    "Parameter": {
                        "bgColor": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCh": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCh": {
                    "Parameter": {
                        "ch": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getChOff": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setChOff": {
                    "Parameter": {
                        "chOff": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getColSpan": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setColSpan": {
                    "Parameter": {
                        "colSpan": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getHeaders": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHeaders": {
                    "Parameter": {
                        "headers": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getHeight": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setHeight": {
                    "Parameter": {
                        "height": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getNoWrap": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setNoWrap": {
                    "Parameter": {
                        "noWrap": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getRowSpan": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setRowSpan": {
                    "Parameter": {
                        "rowSpan": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getScope": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setScope": {
                    "Parameter": {
                        "scope": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getVAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVAlign": {
                    "Parameter": {
                        "vAlign": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWidth": {
                    "Parameter": {
                        "width": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1302": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLTableColElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCh": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCh": {
                    "Parameter": {
                        "ch": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getChOff": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setChOff": {
                    "Parameter": {
                        "chOff": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSpan": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSpan": {
                    "Parameter": {
                        "span": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getVAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVAlign": {
                    "Parameter": {
                        "vAlign": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWidth": {
                    "Parameter": {
                        "width": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1303": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLTableElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCaption": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCaption": {
                    "Parameter": {
                        "caption": "HTMLTableCaptionElement"
                    },
                    "Throw": []
                }
            },
            {
                "getTHead": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTHead": {
                    "Parameter": {
                        "tHead": "HTMLTableSectionElement"
                    },
                    "Throw": []
                }
            },
            {
                "getTFoot": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTFoot": {
                    "Parameter": {
                        "tFoot": "HTMLTableSectionElement"
                    },
                    "Throw": []
                }
            },
            {
                "getRows": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTBodies": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getBgColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBgColor": {
                    "Parameter": {
                        "bgColor": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getBorder": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBorder": {
                    "Parameter": {
                        "border": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCellPadding": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCellPadding": {
                    "Parameter": {
                        "cellPadding": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCellSpacing": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCellSpacing": {
                    "Parameter": {
                        "cellSpacing": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getFrame": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setFrame": {
                    "Parameter": {
                        "frame": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getRules": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setRules": {
                    "Parameter": {
                        "rules": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getSummary": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setSummary": {
                    "Parameter": {
                        "summary": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getWidth": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setWidth": {
                    "Parameter": {
                        "width": "String"
                    },
                    "Throw": []
                }
            },
            {
                "createTHead": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "deleteTHead": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createTFoot": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "deleteTFoot": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "createCaption": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "deleteCaption": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "insertRow": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "deleteRow": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "1304": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLTableRowElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getRowIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSectionRowIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getCells": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getBgColor": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setBgColor": {
                    "Parameter": {
                        "bgColor": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCh": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCh": {
                    "Parameter": {
                        "ch": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getChOff": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setChOff": {
                    "Parameter": {
                        "chOff": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getVAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVAlign": {
                    "Parameter": {
                        "vAlign": "String"
                    },
                    "Throw": []
                }
            },
            {
                "insertCell": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "deleteCell": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "1305": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLTableSectionElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAlign": {
                    "Parameter": {
                        "align": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCh": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCh": {
                    "Parameter": {
                        "ch": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getChOff": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setChOff": {
                    "Parameter": {
                        "chOff": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getVAlign": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setVAlign": {
                    "Parameter": {
                        "vAlign": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getRows": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "insertRow": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "deleteRow": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "1306": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLTextAreaElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getDefaultValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDefaultValue": {
                    "Parameter": {
                        "defaultValue": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getForm": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getAccessKey": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setAccessKey": {
                    "Parameter": {
                        "accessKey": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getCols": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCols": {
                    "Parameter": {
                        "cols": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getDisabled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDisabled": {
                    "Parameter": {
                        "disabled": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getName": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setName": {
                    "Parameter": {
                        "name": "String"
                    },
                    "Throw": []
                }
            },
            {
                "getReadOnly": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setReadOnly": {
                    "Parameter": {
                        "readOnly": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getRows": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setRows": {
                    "Parameter": {
                        "rows": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getTabIndex": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setTabIndex": {
                    "Parameter": {
                        "tabIndex": "int"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getValue": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setValue": {
                    "Parameter": {
                        "value": "String"
                    },
                    "Throw": []
                }
            },
            {
                "blur": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "focus": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "select": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1307": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLTitleElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setText": {
                    "Parameter": {
                        "text": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1308": {
        "Package": "org.w3c.dom.html",
        "Interface": "HTMLUListElement",
        "Superinterface": [
            "org.w3c.dom.Element",
            "org.w3c.dom.html.HTMLElement",
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getCompact": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setCompact": {
                    "Parameter": {
                        "compact": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setType": {
                    "Parameter": {
                        "type": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1309": {
        "Package": "org.w3c.dom.stylesheets",
        "Interface": "DocumentStyle",
        "Superinterface": null,
        "Implementing Class": [
            "org.w3c.dom.css.DocumentCSS"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getStyleSheets": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1310": {
        "Package": "org.w3c.dom.stylesheets",
        "Interface": "LinkStyle",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getSheet": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1311": {
        "Package": "org.w3c.dom.stylesheets",
        "Interface": "MediaList",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getMediaText": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setMediaText": {
                    "Parameter": {
                        "mediaText": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "item": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            },
            {
                "deleteMedium": {
                    "Parameter": {
                        "oldMedium": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "appendMedium": {
                    "Parameter": {
                        "newMedium": "String"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "1312": {
        "Package": "org.w3c.dom.stylesheets",
        "Interface": "StyleSheet",
        "Superinterface": null,
        "Implementing Class": [
            "org.w3c.dom.css.CSSStyleSheet"
        ],
        "Subinterface": null,
        "Method": [
            {
                "getType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getDisabled": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "setDisabled": {
                    "Parameter": {
                        "disabled": "boolean"
                    },
                    "Throw": []
                }
            },
            {
                "getOwnerNode": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getParentStyleSheet": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getHref": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getTitle": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getMedia": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1313": {
        "Package": "org.w3c.dom.stylesheets",
        "Interface": "StyleSheetList",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getLength": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "item": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1314": {
        "Package": "org.w3c.dom.xpath",
        "Interface": "XPathEvaluator",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "createExpression": {
                    "Parameter": {
                        "expression": "String",
                        "resolver": "XPathNSResolver"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "createNSResolver": {
                    "Parameter": {
                        "nodeResolver": "Node"
                    },
                    "Throw": []
                }
            },
            {
                "evaluate": {
                    "Parameter": {
                        "expression": "String",
                        "contextNode": "Node",
                        "resolver": "XPathNSResolver",
                        "type": "short",
                        "result": "Object"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "1315": {
        "Package": "org.w3c.dom.xpath",
        "Interface": "XPathExpression",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "evaluate": {
                    "Parameter": {
                        "contextNode": "Node",
                        "type": "short",
                        "result": "Object"
                    },
                    "Throw": "org.w3c.dom.DOMException"
                }
            }
        ]
    },
    "1316": {
        "Package": "org.w3c.dom.xpath",
        "Interface": "XPathNamespace",
        "Superinterface": [
            "org.w3c.dom.Node"
        ],
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getOwnerElement": {
                    "Parameter": {},
                    "Throw": []
                }
            }
        ]
    },
    "1317": {
        "Package": "org.w3c.dom.xpath",
        "Interface": "XPathNSResolver",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "lookupNamespaceURI": {
                    "Parameter": {
                        "prefix": "String"
                    },
                    "Throw": []
                }
            }
        ]
    },
    "1318": {
        "Package": "org.w3c.dom.xpath",
        "Interface": "XPathResult",
        "Superinterface": null,
        "Implementing Class": null,
        "Subinterface": null,
        "Method": [
            {
                "getResultType": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getNumberValue": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.xpath.XPathException"
                }
            },
            {
                "getStringValue": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.xpath.XPathException"
                }
            },
            {
                "getBooleanValue": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.xpath.XPathException"
                }
            },
            {
                "getSingleNodeValue": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.xpath.XPathException"
                }
            },
            {
                "getInvalidIteratorState": {
                    "Parameter": {},
                    "Throw": []
                }
            },
            {
                "getSnapshotLength": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.xpath.XPathException"
                }
            },
            {
                "iterateNext": {
                    "Parameter": {},
                    "Throw": "org.w3c.dom.DOMException"
                }
            },
            {
                "snapshotItem": {
                    "Parameter": {
                        "index": "int"
                    },
                    "Throw": "org.w3c.dom.xpath.XPathException"
                }
            }
        ]
    }
}